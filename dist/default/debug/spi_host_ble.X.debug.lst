

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Feb 15 17:17:17 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    66                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text33,local,class=CODE,space=0,merge=1,inline,delta=2
    68                           	psect	text34,local,class=CODE,space=0,merge=1,inline,delta=2
    69                           	psect	text35,local,class=CODE,space=0,merge=1,inline,delta=2
    70                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2,group=2
    71                           	psect	text37,local,class=CODE,space=0,merge=1,inline,delta=2
    72                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text40,local,class=CODE,space=0,merge=1,inline,delta=2
    75                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text44,local,class=CODE,space=0,merge=1,inline,delta=2
    79                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text47,local,class=CODE,space=0,merge=1,inline,delta=2
    82                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2,group=2
   104                           	psect	text70,local,class=CODE,space=0,merge=1,inline,delta=2
   105                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text82,local,class=CODE,space=0,merge=1,inline,delta=2
   117                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text86,local,class=CODE,space=0,merge=1,inline,delta=2
   121                           	psect	text87,local,class=CODE,space=0,merge=1,inline,delta=2
   122                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text95,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text96,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text97,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	text98,local,class=CODE,space=0,merge=1,delta=2
   133                           	psect	text99,local,class=CODE,space=0,merge=1,delta=2
   134                           	psect	text100,local,class=CODE,space=0,merge=1,delta=2
   135                           	psect	text101,local,class=CODE,space=0,merge=1,delta=2
   136                           	psect	text102,local,class=CODE,space=0,merge=1,delta=2
   137                           	psect	text103,local,class=CODE,space=0,merge=1,delta=2
   138                           	psect	text104,local,class=CODE,space=0,merge=1,inline,delta=2
   139                           	psect	text105,local,class=CODE,space=0,merge=1,inline,delta=2
   140                           	psect	text106,local,class=CODE,space=0,merge=1,inline,delta=2
   141                           	psect	text107,local,class=CODE,space=0,merge=1,inline,delta=2
   142                           	psect	text108,local,class=CODE,space=0,merge=1,inline,delta=2
   143                           	psect	text109,local,class=CODE,space=0,merge=1,inline,delta=2
   144                           	psect	text110,local,class=CODE,space=0,merge=1,inline,delta=2
   145                           	psect	text111,local,class=CODE,space=0,merge=1,delta=2
   146                           	psect	text112,local,class=CODE,space=0,merge=1,delta=2
   147                           	psect	text113,local,class=CODE,space=0,merge=1,delta=2
   148                           	psect	text114,local,class=CODE,space=0,merge=1,delta=2
   149                           	psect	text115,local,class=CODE,space=0,merge=1,delta=2
   150                           	psect	text116,local,class=CODE,space=0,merge=1,delta=2
   151                           	psect	text117,local,class=CODE,space=0,merge=1,delta=2
   152                           	psect	text118,local,class=CODE,space=0,merge=1,delta=2
   153                           	psect	text119,local,class=CODE,space=0,merge=1,delta=2
   154                           	psect	text120,local,class=CODE,space=0,merge=1,delta=2
   155                           	psect	text121,local,class=CODE,space=0,merge=1,delta=2
   156                           	psect	text122,local,class=CODE,space=0,merge=1,delta=2
   157                           	psect	text123,local,class=CODE,space=0,merge=1,delta=2
   158                           	psect	text124,local,class=CODE,space=0,merge=1,delta=2
   159                           	psect	text125,local,class=CODE,space=0,merge=1,delta=2
   160                           	psect	text126,local,class=CODE,space=0,merge=1,inline,delta=2
   161                           	psect	text127,local,class=CODE,space=0,merge=1,inline,delta=2
   162                           	psect	text128,local,class=CODE,space=0,merge=1,inline,delta=2
   163                           	psect	text129,local,class=CODE,space=0,merge=1,delta=2
   164                           	psect	text130,local,class=CODE,space=0,merge=1,inline,delta=2
   165                           	psect	text131,local,class=CODE,space=0,merge=1,inline,delta=2
   166                           	psect	text132,local,class=CODE,space=0,merge=1,inline,delta=2
   167                           	psect	intentry,global,class=CODE,space=0,delta=2
   168                           	psect	text134,local,class=CODE,space=0,merge=1,delta=2
   169                           	psect	text135,local,class=CODE,space=0,merge=1,delta=2
   170                           	psect	text136,local,class=CODE,space=0,merge=1,delta=2
   171                           	psect	text137,local,class=CODE,space=0,merge=1,delta=2
   172                           	psect	text138,local,class=CODE,space=0,merge=1,delta=2
   173                           	psect	text139,local,class=CODE,space=0,merge=1,delta=2
   174                           	psect	text140,local,class=CODE,space=0,merge=1,delta=2
   175                           	psect	text141,local,class=CODE,space=0,merge=1,delta=2
   176                           	psect	text142,local,class=CODE,space=0,merge=1,delta=2
   177                           	psect	text143,local,class=CODE,space=0,merge=1,delta=2
   178                           	psect	text144,local,class=CODE,space=0,merge=1,delta=2
   179                           	psect	text145,local,class=CODE,space=0,merge=1,delta=2
   180                           	psect	text146,local,class=CODE,space=0,merge=1,delta=2
   181                           	psect	text147,local,class=CODE,space=0,merge=1,delta=2
   182                           	psect	text148,local,class=CODE,space=0,merge=1,delta=2
   183                           	psect	text149,local,class=CODE,space=0,merge=1,delta=2
   184                           	psect	text150,local,class=CODE,space=0,merge=1,delta=2
   185                           	psect	text151,local,class=CODE,space=0,merge=1,delta=2
   186                           	psect	text152,local,class=CODE,space=0,merge=1,delta=2
   187                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   188                           	dabs	1,0x7E,2
   189     0000                     
   190                           ; Generated 25/01/2024 GMT
   191                           ; 
   192                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   193                           ; All rights reserved.
   194                           ; 
   195                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   196                           ; 
   197                           ; Redistribution and use in source and binary forms, with or without modification, are
   198                           ; permitted provided that the following conditions are met:
   199                           ; 
   200                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   201                           ;        conditions and the following disclaimer.
   202                           ; 
   203                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   204                           ;        of conditions and the following disclaimer in the documentation and/or other
   205                           ;        materials provided with the distribution. Publication is not required when
   206                           ;        this file is used in an embedded application.
   207                           ; 
   208                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   209                           ;        software without specific prior written permission.
   210                           ; 
   211                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   212                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   213                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   214                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   215                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   216                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   217                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   218                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   219                           ; 
   220                           ; 
   221                           ; Code-generator required, PIC16LF18456 Definitions
   222                           ; 
   223                           ; SFR Addresses
   224     0008                     bsr             equ	8
   225     0005                     fsr0h           equ	5
   226     0004                     fsr0l           equ	4
   227     0007                     fsr1h           equ	7
   228     0006                     fsr1l           equ	6
   229     0000                     indf            equ	0
   230     0000                     indf0           equ	0
   231     0001                     indf1           equ	1
   232     000B                     intcon          equ	11
   233     0002                     pc              equ	2
   234     0002                     pcl             equ	2
   235     000A                     pclath          equ	10
   236     0003                     status          equ	3
   237     0009                     wreg            equ	9
   238     0000                     INDF0           equ	0	;# 
   239     0001                     INDF1           equ	1	;# 
   240     0002                     PCL             equ	2	;# 
   241     0003                     STATUS          equ	3	;# 
   242     0004                     FSR0L           equ	4	;# 
   243     0005                     FSR0H           equ	5	;# 
   244     0006                     FSR1L           equ	6	;# 
   245     0007                     FSR1H           equ	7	;# 
   246     0008                     BSR             equ	8	;# 
   247     0009                     WREG            equ	9	;# 
   248     000A                     PCLATH          equ	10	;# 
   249     000B                     INTCON          equ	11	;# 
   250     000C                     PORTA           equ	12	;# 
   251     000D                     PORTB           equ	13	;# 
   252     000E                     PORTC           equ	14	;# 
   253     0010                     PORTE           equ	16	;# 
   254     0012                     TRISA           equ	18	;# 
   255     0013                     TRISB           equ	19	;# 
   256     0014                     TRISC           equ	20	;# 
   257     0016                     TRISE           equ	22	;# 
   258     0018                     LATA            equ	24	;# 
   259     0019                     LATB            equ	25	;# 
   260     001A                     LATC            equ	26	;# 
   261     008C                     ADLTH           equ	140	;# 
   262     008C                     ADLTHL          equ	140	;# 
   263     008D                     ADLTHH          equ	141	;# 
   264     008E                     ADUTH           equ	142	;# 
   265     008E                     ADUTHL          equ	142	;# 
   266     008F                     ADUTHH          equ	143	;# 
   267     0090                     ADERR           equ	144	;# 
   268     0090                     ADERRL          equ	144	;# 
   269     0091                     ADERRH          equ	145	;# 
   270     0092                     ADSTPT          equ	146	;# 
   271     0092                     ADSTPTL         equ	146	;# 
   272     0093                     ADSTPTH         equ	147	;# 
   273     0094                     ADFLTR          equ	148	;# 
   274     0094                     ADFLTRL         equ	148	;# 
   275     0095                     ADFLTRH         equ	149	;# 
   276     0096                     ADACC           equ	150	;# 
   277     0096                     ADACCL          equ	150	;# 
   278     0097                     ADACCH          equ	151	;# 
   279     0098                     ADACCU          equ	152	;# 
   280     0099                     ADCNT           equ	153	;# 
   281     009A                     ADRPT           equ	154	;# 
   282     009B                     ADPREV          equ	155	;# 
   283     009B                     ADPREVL         equ	155	;# 
   284     009C                     ADPREVH         equ	156	;# 
   285     009D                     ADRES           equ	157	;# 
   286     009D                     ADRESL          equ	157	;# 
   287     009E                     ADRESH          equ	158	;# 
   288     009F                     ADPCH           equ	159	;# 
   289     010C                     ADACQ           equ	268	;# 
   290     010C                     ADACQL          equ	268	;# 
   291     010D                     ADACQH          equ	269	;# 
   292     010E                     ADCAP           equ	270	;# 
   293     010F                     ADPRE           equ	271	;# 
   294     010F                     ADPREL          equ	271	;# 
   295     0110                     ADPREH          equ	272	;# 
   296     0111                     ADCON0          equ	273	;# 
   297     0112                     ADCON1          equ	274	;# 
   298     0113                     ADCON2          equ	275	;# 
   299     0114                     ADCON3          equ	276	;# 
   300     0115                     ADSTAT          equ	277	;# 
   301     0116                     ADREF           equ	278	;# 
   302     0117                     ADACT           equ	279	;# 
   303     0118                     ADCLK           equ	280	;# 
   304     0119                     RC1REG          equ	281	;# 
   305     0119                     RCREG           equ	281	;# 
   306     0119                     RCREG1          equ	281	;# 
   307     011A                     TX1REG          equ	282	;# 
   308     011A                     TXREG1          equ	282	;# 
   309     011A                     TXREG           equ	282	;# 
   310     011B                     SP1BRG          equ	283	;# 
   311     011B                     SPBRG           equ	283	;# 
   312     011B                     SP1BRGL         equ	283	;# 
   313     011B                     SPBRG1          equ	283	;# 
   314     011B                     SPBRGL          equ	283	;# 
   315     011C                     SP1BRGH         equ	284	;# 
   316     011C                     SPBRGH          equ	284	;# 
   317     011C                     SPBRGH1         equ	284	;# 
   318     011D                     RC1STA          equ	285	;# 
   319     011D                     RCSTA1          equ	285	;# 
   320     011D                     RCSTA           equ	285	;# 
   321     011E                     TX1STA          equ	286	;# 
   322     011E                     TXSTA1          equ	286	;# 
   323     011E                     TXSTA           equ	286	;# 
   324     011F                     BAUD1CON        equ	287	;# 
   325     011F                     BAUDCON1        equ	287	;# 
   326     011F                     BAUDCTL1        equ	287	;# 
   327     011F                     BAUDCON         equ	287	;# 
   328     011F                     BAUDCTL         equ	287	;# 
   329     018C                     SSP1BUF         equ	396	;# 
   330     018D                     SSP1ADD         equ	397	;# 
   331     018E                     SSP1MSK         equ	398	;# 
   332     018F                     SSP1STAT        equ	399	;# 
   333     0190                     SSP1CON1        equ	400	;# 
   334     0191                     SSP1CON2        equ	401	;# 
   335     0192                     SSP1CON3        equ	402	;# 
   336     0196                     SSP2BUF         equ	406	;# 
   337     0197                     SSP2ADD         equ	407	;# 
   338     0198                     SSP2MSK         equ	408	;# 
   339     0199                     SSP2STAT        equ	409	;# 
   340     019A                     SSP2CON1        equ	410	;# 
   341     019B                     SSP2CON2        equ	411	;# 
   342     019C                     SSP2CON3        equ	412	;# 
   343     020C                     TMR1            equ	524	;# 
   344     020C                     TMR1L           equ	524	;# 
   345     020D                     TMR1H           equ	525	;# 
   346     020E                     T1CON           equ	526	;# 
   347     020E                     TMR1CON         equ	526	;# 
   348     020F                     T1GCON          equ	527	;# 
   349     020F                     TMR1GCON        equ	527	;# 
   350     0210                     T1GATE          equ	528	;# 
   351     0210                     TMR1GATE        equ	528	;# 
   352     0211                     T1CLK           equ	529	;# 
   353     0211                     TMR1CLK         equ	529	;# 
   354     0211                     PR1             equ	529	;# 
   355     0212                     TMR3            equ	530	;# 
   356     0212                     TMR3L           equ	530	;# 
   357     0213                     TMR3H           equ	531	;# 
   358     0214                     T3CON           equ	532	;# 
   359     0214                     TMR3CON         equ	532	;# 
   360     0215                     T3GCON          equ	533	;# 
   361     0215                     TMR3GCON        equ	533	;# 
   362     0216                     T3GATE          equ	534	;# 
   363     0216                     TMR3GATE        equ	534	;# 
   364     0217                     T3CLK           equ	535	;# 
   365     0217                     TMR3CLK         equ	535	;# 
   366     0217                     PR3             equ	535	;# 
   367     0218                     TMR5            equ	536	;# 
   368     0218                     TMR5L           equ	536	;# 
   369     0219                     TMR5H           equ	537	;# 
   370     021A                     T5CON           equ	538	;# 
   371     021A                     TMR5CON         equ	538	;# 
   372     021B                     T5GCON          equ	539	;# 
   373     021B                     TMR5GCON        equ	539	;# 
   374     021C                     T5GATE          equ	540	;# 
   375     021C                     TMR5GATE        equ	540	;# 
   376     021D                     T5CLK           equ	541	;# 
   377     021D                     TMR5CLK         equ	541	;# 
   378     021D                     PR5             equ	541	;# 
   379     021E                     CCPTMRS0        equ	542	;# 
   380     021F                     CCPTMRS1        equ	543	;# 
   381     028C                     T2TMR           equ	652	;# 
   382     028C                     TMR2            equ	652	;# 
   383     028D                     T2PR            equ	653	;# 
   384     028D                     PR2             equ	653	;# 
   385     028E                     T2CON           equ	654	;# 
   386     028F                     T2HLT           equ	655	;# 
   387     0290                     T2CLKCON        equ	656	;# 
   388     0291                     T2RST           equ	657	;# 
   389     0292                     T4TMR           equ	658	;# 
   390     0292                     TMR4            equ	658	;# 
   391     0293                     T4PR            equ	659	;# 
   392     0293                     PR4             equ	659	;# 
   393     0294                     T4CON           equ	660	;# 
   394     0295                     T4HLT           equ	661	;# 
   395     0296                     T4CLKCON        equ	662	;# 
   396     0297                     T4RST           equ	663	;# 
   397     0298                     T6TMR           equ	664	;# 
   398     0298                     TMR6            equ	664	;# 
   399     0299                     T6PR            equ	665	;# 
   400     0299                     PR6             equ	665	;# 
   401     029A                     T6CON           equ	666	;# 
   402     029B                     T6HLT           equ	667	;# 
   403     029C                     T6CLKCON        equ	668	;# 
   404     029D                     T6RST           equ	669	;# 
   405     029F                     ADCPCON0        equ	671	;# 
   406     030C                     CCPR1           equ	780	;# 
   407     030C                     CCPR1L          equ	780	;# 
   408     030D                     CCPR1H          equ	781	;# 
   409     030E                     CCP1CON         equ	782	;# 
   410     030F                     CCP1CAP         equ	783	;# 
   411     0310                     CCPR2           equ	784	;# 
   412     0310                     CCPR2L          equ	784	;# 
   413     0311                     CCPR2H          equ	785	;# 
   414     0312                     CCP2CON         equ	786	;# 
   415     0313                     CCP2CAP         equ	787	;# 
   416     0314                     CCPR3           equ	788	;# 
   417     0314                     CCPR3L          equ	788	;# 
   418     0315                     CCPR3H          equ	789	;# 
   419     0316                     CCP3CON         equ	790	;# 
   420     0317                     CCP3CAP         equ	791	;# 
   421     0318                     CCPR4           equ	792	;# 
   422     0318                     CCPR4L          equ	792	;# 
   423     0319                     CCPR4H          equ	793	;# 
   424     031A                     CCP4CON         equ	794	;# 
   425     031B                     CCP4CAP         equ	795	;# 
   426     031C                     CCPR5           equ	796	;# 
   427     031C                     CCPR5L          equ	796	;# 
   428     031D                     CCPR5H          equ	797	;# 
   429     031E                     CCP5CON         equ	798	;# 
   430     031F                     CCP5CAP         equ	799	;# 
   431     038C                     PWM6DC          equ	908	;# 
   432     038C                     PWM6DCL         equ	908	;# 
   433     038D                     PWM6DCH         equ	909	;# 
   434     038E                     PWM6CON         equ	910	;# 
   435     0390                     PWM7DC          equ	912	;# 
   436     0390                     PWM7DCL         equ	912	;# 
   437     0391                     PWM7DCH         equ	913	;# 
   438     0392                     PWM7CON         equ	914	;# 
   439     048C                     SMT1TMR         equ	1164	;# 
   440     048C                     SMT1TMRL        equ	1164	;# 
   441     048D                     SMT1TMRH        equ	1165	;# 
   442     048E                     SMT1TMRU        equ	1166	;# 
   443     048F                     SMT1CPR         equ	1167	;# 
   444     048F                     SMT1CPRL        equ	1167	;# 
   445     0490                     SMT1CPRH        equ	1168	;# 
   446     0491                     SMT1CPRU        equ	1169	;# 
   447     0492                     SMT1CPW         equ	1170	;# 
   448     0492                     SMT1CPWL        equ	1170	;# 
   449     0493                     SMT1CPWH        equ	1171	;# 
   450     0494                     SMT1CPWU        equ	1172	;# 
   451     0495                     SMT1PR          equ	1173	;# 
   452     0495                     SMT1PRL         equ	1173	;# 
   453     0496                     SMT1PRH         equ	1174	;# 
   454     0497                     SMT1PRU         equ	1175	;# 
   455     0498                     SMT1CON0        equ	1176	;# 
   456     0499                     SMT1CON1        equ	1177	;# 
   457     049A                     SMT1STAT        equ	1178	;# 
   458     049B                     SMT1CLK         equ	1179	;# 
   459     049C                     SMT1SIG         equ	1180	;# 
   460     049D                     SMT1WIN         equ	1181	;# 
   461     050C                     SMT2TMR         equ	1292	;# 
   462     050C                     SMT2TMRL        equ	1292	;# 
   463     050D                     SMT2TMRH        equ	1293	;# 
   464     050E                     SMT2TMRU        equ	1294	;# 
   465     050F                     SMT2CPR         equ	1295	;# 
   466     050F                     SMT2CPRL        equ	1295	;# 
   467     0510                     SMT2CPRH        equ	1296	;# 
   468     0511                     SMT2CPRU        equ	1297	;# 
   469     0512                     SMT2CPW         equ	1298	;# 
   470     0512                     SMT2CPWL        equ	1298	;# 
   471     0513                     SMT2CPWH        equ	1299	;# 
   472     0514                     SMT2CPWU        equ	1300	;# 
   473     0515                     SMT2PR          equ	1301	;# 
   474     0515                     SMT2PRL         equ	1301	;# 
   475     0516                     SMT2PRH         equ	1302	;# 
   476     0517                     SMT2PRU         equ	1303	;# 
   477     0518                     SMT2CON0        equ	1304	;# 
   478     0519                     SMT2CON1        equ	1305	;# 
   479     051A                     SMT2STAT        equ	1306	;# 
   480     051B                     SMT2CLK         equ	1307	;# 
   481     051C                     SMT2SIG         equ	1308	;# 
   482     051D                     SMT2WIN         equ	1309	;# 
   483     058C                     NCO1ACC         equ	1420	;# 
   484     058C                     NCO1ACCL        equ	1420	;# 
   485     058D                     NCO1ACCH        equ	1421	;# 
   486     058E                     NCO1ACCU        equ	1422	;# 
   487     058F                     NCO1INC         equ	1423	;# 
   488     058F                     NCO1INCL        equ	1423	;# 
   489     0590                     NCO1INCH        equ	1424	;# 
   490     0591                     NCO1INCU        equ	1425	;# 
   491     0592                     NCO1CON         equ	1426	;# 
   492     0593                     NCO1CLK         equ	1427	;# 
   493     059C                     TMR0L           equ	1436	;# 
   494     059C                     TMR0            equ	1436	;# 
   495     059D                     TMR0H           equ	1437	;# 
   496     059D                     PR0             equ	1437	;# 
   497     059E                     T0CON0          equ	1438	;# 
   498     059F                     T0CON1          equ	1439	;# 
   499     060C                     CWG1CLK         equ	1548	;# 
   500     060C                     CWG1CLKCON      equ	1548	;# 
   501     060D                     CWG1ISM         equ	1549	;# 
   502     060D                     CWG1DAT         equ	1549	;# 
   503     060E                     CWG1DBR         equ	1550	;# 
   504     060F                     CWG1DBF         equ	1551	;# 
   505     0610                     CWG1CON0        equ	1552	;# 
   506     0611                     CWG1CON1        equ	1553	;# 
   507     0612                     CWG1AS0         equ	1554	;# 
   508     0613                     CWG1AS1         equ	1555	;# 
   509     0614                     CWG1STR         equ	1556	;# 
   510     0616                     CWG2CLK         equ	1558	;# 
   511     0616                     CWG2CLKCON      equ	1558	;# 
   512     0617                     CWG2ISM         equ	1559	;# 
   513     0617                     CWG2DAT         equ	1559	;# 
   514     0618                     CWG2DBR         equ	1560	;# 
   515     0619                     CWG2DBF         equ	1561	;# 
   516     061A                     CWG2CON0        equ	1562	;# 
   517     061B                     CWG2CON1        equ	1563	;# 
   518     061C                     CWG2AS0         equ	1564	;# 
   519     061D                     CWG2AS1         equ	1565	;# 
   520     061E                     CWG2STR         equ	1566	;# 
   521     068C                     CWG3CLK         equ	1676	;# 
   522     068C                     CWG3CLKCON      equ	1676	;# 
   523     068D                     CWG3ISM         equ	1677	;# 
   524     068D                     CWG3DAT         equ	1677	;# 
   525     068E                     CWG3DBR         equ	1678	;# 
   526     068F                     CWG3DBF         equ	1679	;# 
   527     0690                     CWG3CON0        equ	1680	;# 
   528     0691                     CWG3CON1        equ	1681	;# 
   529     0692                     CWG3AS0         equ	1682	;# 
   530     0693                     CWG3AS1         equ	1683	;# 
   531     0694                     CWG3STR         equ	1684	;# 
   532     070C                     PIR0            equ	1804	;# 
   533     070D                     PIR1            equ	1805	;# 
   534     070E                     PIR2            equ	1806	;# 
   535     070F                     PIR3            equ	1807	;# 
   536     0710                     PIR4            equ	1808	;# 
   537     0711                     PIR5            equ	1809	;# 
   538     0712                     PIR6            equ	1810	;# 
   539     0713                     PIR7            equ	1811	;# 
   540     0714                     PIR8            equ	1812	;# 
   541     0716                     PIE0            equ	1814	;# 
   542     0717                     PIE1            equ	1815	;# 
   543     0718                     PIE2            equ	1816	;# 
   544     0719                     PIE3            equ	1817	;# 
   545     071A                     PIE4            equ	1818	;# 
   546     071B                     PIE5            equ	1819	;# 
   547     071C                     PIE6            equ	1820	;# 
   548     071D                     PIE7            equ	1821	;# 
   549     071E                     PIE8            equ	1822	;# 
   550     0796                     PMD0            equ	1942	;# 
   551     0797                     PMD1            equ	1943	;# 
   552     0798                     PMD2            equ	1944	;# 
   553     0799                     PMD3            equ	1945	;# 
   554     079A                     PMD4            equ	1946	;# 
   555     079B                     PMD5            equ	1947	;# 
   556     079C                     PMD6            equ	1948	;# 
   557     079D                     PMD7            equ	1949	;# 
   558     080C                     WDTCON0         equ	2060	;# 
   559     080D                     WDTCON1         equ	2061	;# 
   560     080E                     WDTPSL          equ	2062	;# 
   561     080F                     WDTPSH          equ	2063	;# 
   562     0810                     WDTTMR          equ	2064	;# 
   563     0811                     BORCON          equ	2065	;# 
   564     0813                     PCON0           equ	2067	;# 
   565     0814                     PCON1           equ	2068	;# 
   566     081A                     NVMADR          equ	2074	;# 
   567     081A                     NVMADRL         equ	2074	;# 
   568     081B                     NVMADRH         equ	2075	;# 
   569     081C                     NVMDAT          equ	2076	;# 
   570     081C                     NVMDATL         equ	2076	;# 
   571     081D                     NVMDATH         equ	2077	;# 
   572     081E                     NVMCON1         equ	2078	;# 
   573     081F                     NVMCON2         equ	2079	;# 
   574     088C                     CPUDOZE         equ	2188	;# 
   575     088D                     OSCCON1         equ	2189	;# 
   576     088E                     OSCCON2         equ	2190	;# 
   577     088F                     OSCCON3         equ	2191	;# 
   578     0890                     OSCSTAT         equ	2192	;# 
   579     0891                     OSCEN           equ	2193	;# 
   580     0892                     OSCTUNE         equ	2194	;# 
   581     0893                     OSCFRQ          equ	2195	;# 
   582     0895                     CLKRCON         equ	2197	;# 
   583     0896                     CLKRCLK         equ	2198	;# 
   584     0897                     MD1CON0         equ	2199	;# 
   585     0898                     MD1CON1         equ	2200	;# 
   586     0899                     MD1SRC          equ	2201	;# 
   587     089A                     MD1CARL         equ	2202	;# 
   588     089B                     MD1CARH         equ	2203	;# 
   589     090C                     FVRCON          equ	2316	;# 
   590     090E                     DAC1CON0        equ	2318	;# 
   591     090F                     DAC1CON1        equ	2319	;# 
   592     091F                     ZCDCON          equ	2335	;# 
   593     098F                     CMOUT           equ	2447	;# 
   594     098F                     CMSTAT          equ	2447	;# 
   595     0990                     CM1CON0         equ	2448	;# 
   596     0991                     CM1CON1         equ	2449	;# 
   597     0992                     CM1NCH          equ	2450	;# 
   598     0993                     CM1PCH          equ	2451	;# 
   599     0994                     CM2CON0         equ	2452	;# 
   600     0995                     CM2CON1         equ	2453	;# 
   601     0996                     CM2NCH          equ	2454	;# 
   602     0997                     CM2PCH          equ	2455	;# 
   603     0A19                     RC2REG          equ	2585	;# 
   604     0A19                     RCREG2          equ	2585	;# 
   605     0A1A                     TX2REG          equ	2586	;# 
   606     0A1A                     TXREG2          equ	2586	;# 
   607     0A1B                     SP2BRG          equ	2587	;# 
   608     0A1B                     SP2BRGL         equ	2587	;# 
   609     0A1B                     SPBRG2          equ	2587	;# 
   610     0A1C                     SP2BRGH         equ	2588	;# 
   611     0A1C                     SPBRGH2         equ	2588	;# 
   612     0A1D                     RC2STA          equ	2589	;# 
   613     0A1D                     RCSTA2          equ	2589	;# 
   614     0A1E                     TX2STA          equ	2590	;# 
   615     0A1E                     TXSTA2          equ	2590	;# 
   616     0A1F                     BAUD2CON        equ	2591	;# 
   617     0A1F                     BAUDCON2        equ	2591	;# 
   618     0A1F                     BAUDCTL2        equ	2591	;# 
   619     1E0F                     CLCDATA         equ	7695	;# 
   620     1E10                     CLC1CON         equ	7696	;# 
   621     1E11                     CLC1POL         equ	7697	;# 
   622     1E12                     CLC1SEL0        equ	7698	;# 
   623     1E13                     CLC1SEL1        equ	7699	;# 
   624     1E14                     CLC1SEL2        equ	7700	;# 
   625     1E15                     CLC1SEL3        equ	7701	;# 
   626     1E16                     CLC1GLS0        equ	7702	;# 
   627     1E17                     CLC1GLS1        equ	7703	;# 
   628     1E18                     CLC1GLS2        equ	7704	;# 
   629     1E19                     CLC1GLS3        equ	7705	;# 
   630     1E1A                     CLC2CON         equ	7706	;# 
   631     1E1B                     CLC2POL         equ	7707	;# 
   632     1E1C                     CLC2SEL0        equ	7708	;# 
   633     1E1D                     CLC2SEL1        equ	7709	;# 
   634     1E1E                     CLC2SEL2        equ	7710	;# 
   635     1E1F                     CLC2SEL3        equ	7711	;# 
   636     1E20                     CLC2GLS0        equ	7712	;# 
   637     1E21                     CLC2GLS1        equ	7713	;# 
   638     1E22                     CLC2GLS2        equ	7714	;# 
   639     1E23                     CLC2GLS3        equ	7715	;# 
   640     1E24                     CLC3CON         equ	7716	;# 
   641     1E25                     CLC3POL         equ	7717	;# 
   642     1E26                     CLC3SEL0        equ	7718	;# 
   643     1E27                     CLC3SEL1        equ	7719	;# 
   644     1E28                     CLC3SEL2        equ	7720	;# 
   645     1E29                     CLC3SEL3        equ	7721	;# 
   646     1E2A                     CLC3GLS0        equ	7722	;# 
   647     1E2B                     CLC3GLS1        equ	7723	;# 
   648     1E2C                     CLC3GLS2        equ	7724	;# 
   649     1E2D                     CLC3GLS3        equ	7725	;# 
   650     1E2E                     CLC4CON         equ	7726	;# 
   651     1E2F                     CLC4POL         equ	7727	;# 
   652     1E30                     CLC4SEL0        equ	7728	;# 
   653     1E31                     CLC4SEL1        equ	7729	;# 
   654     1E32                     CLC4SEL2        equ	7730	;# 
   655     1E33                     CLC4SEL3        equ	7731	;# 
   656     1E34                     CLC4GLS0        equ	7732	;# 
   657     1E35                     CLC4GLS1        equ	7733	;# 
   658     1E36                     CLC4GLS2        equ	7734	;# 
   659     1E37                     CLC4GLS3        equ	7735	;# 
   660     1E8F                     PPSLOCK         equ	7823	;# 
   661     1E90                     INTPPS          equ	7824	;# 
   662     1E91                     T0CKIPPS        equ	7825	;# 
   663     1E92                     T1CKIPPS        equ	7826	;# 
   664     1E93                     T1GPPS          equ	7827	;# 
   665     1E94                     T3CKIPPS        equ	7828	;# 
   666     1E95                     T3GPPS          equ	7829	;# 
   667     1E96                     T5CKIPPS        equ	7830	;# 
   668     1E97                     T5GPPS          equ	7831	;# 
   669     1E9C                     T2INPPS         equ	7836	;# 
   670     1E9D                     T4INPPS         equ	7837	;# 
   671     1E9E                     T6INPPS         equ	7838	;# 
   672     1EA1                     CCP1PPS         equ	7841	;# 
   673     1EA2                     CCP2PPS         equ	7842	;# 
   674     1EA3                     CCP3PPS         equ	7843	;# 
   675     1EA4                     CCP4PPS         equ	7844	;# 
   676     1EA5                     CCP5PPS         equ	7845	;# 
   677     1EA9                     SMT1WINPPS      equ	7849	;# 
   678     1EAA                     SMT1SIGPPS      equ	7850	;# 
   679     1EAB                     SMT2WINPPS      equ	7851	;# 
   680     1EAC                     SMT2SIGPPS      equ	7852	;# 
   681     1EB1                     CWG1PPS         equ	7857	;# 
   682     1EB2                     CWG2PPS         equ	7858	;# 
   683     1EB3                     CWG3PPS         equ	7859	;# 
   684     1EB8                     MDCARLPPS       equ	7864	;# 
   685     1EB9                     MDCARHPPS       equ	7865	;# 
   686     1EBA                     MDSRCPPS        equ	7866	;# 
   687     1EBB                     CLCIN0PPS       equ	7867	;# 
   688     1EBC                     CLCIN1PPS       equ	7868	;# 
   689     1EBD                     CLCIN2PPS       equ	7869	;# 
   690     1EBE                     CLCIN3PPS       equ	7870	;# 
   691     1EC3                     ADACTPPS        equ	7875	;# 
   692     1EC5                     SSP1CLKPPS      equ	7877	;# 
   693     1EC6                     SSP1DATPPS      equ	7878	;# 
   694     1EC7                     SSP1SSPPS       equ	7879	;# 
   695     1EC8                     SSP2CLKPPS      equ	7880	;# 
   696     1EC9                     SSP2DATPPS      equ	7881	;# 
   697     1ECA                     SSP2SSPPS       equ	7882	;# 
   698     1ECB                     RX1PPS          equ	7883	;# 
   699     1ECC                     CK1PPS          equ	7884	;# 
   700     1ECD                     RX2PPS          equ	7885	;# 
   701     1ECE                     CK2PPS          equ	7886	;# 
   702     1F10                     RA0PPS          equ	7952	;# 
   703     1F11                     RA1PPS          equ	7953	;# 
   704     1F12                     RA2PPS          equ	7954	;# 
   705     1F13                     RA3PPS          equ	7955	;# 
   706     1F14                     RA4PPS          equ	7956	;# 
   707     1F15                     RA5PPS          equ	7957	;# 
   708     1F16                     RA6PPS          equ	7958	;# 
   709     1F17                     RA7PPS          equ	7959	;# 
   710     1F18                     RB0PPS          equ	7960	;# 
   711     1F19                     RB1PPS          equ	7961	;# 
   712     1F1A                     RB2PPS          equ	7962	;# 
   713     1F1B                     RB3PPS          equ	7963	;# 
   714     1F1C                     RB4PPS          equ	7964	;# 
   715     1F1D                     RB5PPS          equ	7965	;# 
   716     1F1E                     RB6PPS          equ	7966	;# 
   717     1F1F                     RB7PPS          equ	7967	;# 
   718     1F20                     RC0PPS          equ	7968	;# 
   719     1F21                     RC1PPS          equ	7969	;# 
   720     1F22                     RC2PPS          equ	7970	;# 
   721     1F23                     RC3PPS          equ	7971	;# 
   722     1F24                     RC4PPS          equ	7972	;# 
   723     1F25                     RC5PPS          equ	7973	;# 
   724     1F26                     RC6PPS          equ	7974	;# 
   725     1F27                     RC7PPS          equ	7975	;# 
   726     1F38                     ANSELA          equ	7992	;# 
   727     1F39                     WPUA            equ	7993	;# 
   728     1F3A                     ODCONA          equ	7994	;# 
   729     1F3B                     SLRCONA         equ	7995	;# 
   730     1F3C                     INLVLA          equ	7996	;# 
   731     1F3D                     IOCAP           equ	7997	;# 
   732     1F3E                     IOCAN           equ	7998	;# 
   733     1F3F                     IOCAF           equ	7999	;# 
   734     1F43                     ANSELB          equ	8003	;# 
   735     1F44                     WPUB            equ	8004	;# 
   736     1F45                     ODCONB          equ	8005	;# 
   737     1F46                     SLRCONB         equ	8006	;# 
   738     1F47                     INLVLB          equ	8007	;# 
   739     1F48                     IOCBP           equ	8008	;# 
   740     1F49                     IOCBN           equ	8009	;# 
   741     1F4A                     IOCBF           equ	8010	;# 
   742     1F4E                     ANSELC          equ	8014	;# 
   743     1F4F                     WPUC            equ	8015	;# 
   744     1F50                     ODCONC          equ	8016	;# 
   745     1F51                     SLRCONC         equ	8017	;# 
   746     1F52                     INLVLC          equ	8018	;# 
   747     1F53                     IOCCP           equ	8019	;# 
   748     1F54                     IOCCN           equ	8020	;# 
   749     1F55                     IOCCF           equ	8021	;# 
   750     1F65                     WPUE            equ	8037	;# 
   751     1F66                     ODCONE          equ	8038	;# 
   752     1F67                     SLRCONE         equ	8039	;# 
   753     1F68                     INLVLE          equ	8040	;# 
   754     1F69                     IOCEP           equ	8041	;# 
   755     1F6A                     IOCEN           equ	8042	;# 
   756     1F6B                     IOCEF           equ	8043	;# 
   757     1FE4                     STATUS_SHAD     equ	8164	;# 
   758     1FE5                     WREG_SHAD       equ	8165	;# 
   759     1FE6                     BSR_SHAD        equ	8166	;# 
   760     1FE7                     PCLATH_SHAD     equ	8167	;# 
   761     1FE8                     FSR0_SHAD       equ	8168	;# 
   762     1FE8                     FSR0L_SHAD      equ	8168	;# 
   763     1FE9                     FSR0H_SHAD      equ	8169	;# 
   764     1FEA                     FSR1L_SHAD      equ	8170	;# 
   765     1FEB                     FSR1H_SHAD      equ	8171	;# 
   766     1FED                     STKPTR          equ	8173	;# 
   767     1FEE                     TOSL            equ	8174	;# 
   768     1FEF                     TOSH            equ	8175	;# 
   769     0000                     INDF0           equ	0	;# 
   770     0001                     INDF1           equ	1	;# 
   771     0002                     PCL             equ	2	;# 
   772     0003                     STATUS          equ	3	;# 
   773     0004                     FSR0L           equ	4	;# 
   774     0005                     FSR0H           equ	5	;# 
   775     0006                     FSR1L           equ	6	;# 
   776     0007                     FSR1H           equ	7	;# 
   777     0008                     BSR             equ	8	;# 
   778     0009                     WREG            equ	9	;# 
   779     000A                     PCLATH          equ	10	;# 
   780     000B                     INTCON          equ	11	;# 
   781     000C                     PORTA           equ	12	;# 
   782     000D                     PORTB           equ	13	;# 
   783     000E                     PORTC           equ	14	;# 
   784     0010                     PORTE           equ	16	;# 
   785     0012                     TRISA           equ	18	;# 
   786     0013                     TRISB           equ	19	;# 
   787     0014                     TRISC           equ	20	;# 
   788     0016                     TRISE           equ	22	;# 
   789     0018                     LATA            equ	24	;# 
   790     0019                     LATB            equ	25	;# 
   791     001A                     LATC            equ	26	;# 
   792     008C                     ADLTH           equ	140	;# 
   793     008C                     ADLTHL          equ	140	;# 
   794     008D                     ADLTHH          equ	141	;# 
   795     008E                     ADUTH           equ	142	;# 
   796     008E                     ADUTHL          equ	142	;# 
   797     008F                     ADUTHH          equ	143	;# 
   798     0090                     ADERR           equ	144	;# 
   799     0090                     ADERRL          equ	144	;# 
   800     0091                     ADERRH          equ	145	;# 
   801     0092                     ADSTPT          equ	146	;# 
   802     0092                     ADSTPTL         equ	146	;# 
   803     0093                     ADSTPTH         equ	147	;# 
   804     0094                     ADFLTR          equ	148	;# 
   805     0094                     ADFLTRL         equ	148	;# 
   806     0095                     ADFLTRH         equ	149	;# 
   807     0096                     ADACC           equ	150	;# 
   808     0096                     ADACCL          equ	150	;# 
   809     0097                     ADACCH          equ	151	;# 
   810     0098                     ADACCU          equ	152	;# 
   811     0099                     ADCNT           equ	153	;# 
   812     009A                     ADRPT           equ	154	;# 
   813     009B                     ADPREV          equ	155	;# 
   814     009B                     ADPREVL         equ	155	;# 
   815     009C                     ADPREVH         equ	156	;# 
   816     009D                     ADRES           equ	157	;# 
   817     009D                     ADRESL          equ	157	;# 
   818     009E                     ADRESH          equ	158	;# 
   819     009F                     ADPCH           equ	159	;# 
   820     010C                     ADACQ           equ	268	;# 
   821     010C                     ADACQL          equ	268	;# 
   822     010D                     ADACQH          equ	269	;# 
   823     010E                     ADCAP           equ	270	;# 
   824     010F                     ADPRE           equ	271	;# 
   825     010F                     ADPREL          equ	271	;# 
   826     0110                     ADPREH          equ	272	;# 
   827     0111                     ADCON0          equ	273	;# 
   828     0112                     ADCON1          equ	274	;# 
   829     0113                     ADCON2          equ	275	;# 
   830     0114                     ADCON3          equ	276	;# 
   831     0115                     ADSTAT          equ	277	;# 
   832     0116                     ADREF           equ	278	;# 
   833     0117                     ADACT           equ	279	;# 
   834     0118                     ADCLK           equ	280	;# 
   835     0119                     RC1REG          equ	281	;# 
   836     0119                     RCREG           equ	281	;# 
   837     0119                     RCREG1          equ	281	;# 
   838     011A                     TX1REG          equ	282	;# 
   839     011A                     TXREG1          equ	282	;# 
   840     011A                     TXREG           equ	282	;# 
   841     011B                     SP1BRG          equ	283	;# 
   842     011B                     SPBRG           equ	283	;# 
   843     011B                     SP1BRGL         equ	283	;# 
   844     011B                     SPBRG1          equ	283	;# 
   845     011B                     SPBRGL          equ	283	;# 
   846     011C                     SP1BRGH         equ	284	;# 
   847     011C                     SPBRGH          equ	284	;# 
   848     011C                     SPBRGH1         equ	284	;# 
   849     011D                     RC1STA          equ	285	;# 
   850     011D                     RCSTA1          equ	285	;# 
   851     011D                     RCSTA           equ	285	;# 
   852     011E                     TX1STA          equ	286	;# 
   853     011E                     TXSTA1          equ	286	;# 
   854     011E                     TXSTA           equ	286	;# 
   855     011F                     BAUD1CON        equ	287	;# 
   856     011F                     BAUDCON1        equ	287	;# 
   857     011F                     BAUDCTL1        equ	287	;# 
   858     011F                     BAUDCON         equ	287	;# 
   859     011F                     BAUDCTL         equ	287	;# 
   860     018C                     SSP1BUF         equ	396	;# 
   861     018D                     SSP1ADD         equ	397	;# 
   862     018E                     SSP1MSK         equ	398	;# 
   863     018F                     SSP1STAT        equ	399	;# 
   864     0190                     SSP1CON1        equ	400	;# 
   865     0191                     SSP1CON2        equ	401	;# 
   866     0192                     SSP1CON3        equ	402	;# 
   867     0196                     SSP2BUF         equ	406	;# 
   868     0197                     SSP2ADD         equ	407	;# 
   869     0198                     SSP2MSK         equ	408	;# 
   870     0199                     SSP2STAT        equ	409	;# 
   871     019A                     SSP2CON1        equ	410	;# 
   872     019B                     SSP2CON2        equ	411	;# 
   873     019C                     SSP2CON3        equ	412	;# 
   874     020C                     TMR1            equ	524	;# 
   875     020C                     TMR1L           equ	524	;# 
   876     020D                     TMR1H           equ	525	;# 
   877     020E                     T1CON           equ	526	;# 
   878     020E                     TMR1CON         equ	526	;# 
   879     020F                     T1GCON          equ	527	;# 
   880     020F                     TMR1GCON        equ	527	;# 
   881     0210                     T1GATE          equ	528	;# 
   882     0210                     TMR1GATE        equ	528	;# 
   883     0211                     T1CLK           equ	529	;# 
   884     0211                     TMR1CLK         equ	529	;# 
   885     0211                     PR1             equ	529	;# 
   886     0212                     TMR3            equ	530	;# 
   887     0212                     TMR3L           equ	530	;# 
   888     0213                     TMR3H           equ	531	;# 
   889     0214                     T3CON           equ	532	;# 
   890     0214                     TMR3CON         equ	532	;# 
   891     0215                     T3GCON          equ	533	;# 
   892     0215                     TMR3GCON        equ	533	;# 
   893     0216                     T3GATE          equ	534	;# 
   894     0216                     TMR3GATE        equ	534	;# 
   895     0217                     T3CLK           equ	535	;# 
   896     0217                     TMR3CLK         equ	535	;# 
   897     0217                     PR3             equ	535	;# 
   898     0218                     TMR5            equ	536	;# 
   899     0218                     TMR5L           equ	536	;# 
   900     0219                     TMR5H           equ	537	;# 
   901     021A                     T5CON           equ	538	;# 
   902     021A                     TMR5CON         equ	538	;# 
   903     021B                     T5GCON          equ	539	;# 
   904     021B                     TMR5GCON        equ	539	;# 
   905     021C                     T5GATE          equ	540	;# 
   906     021C                     TMR5GATE        equ	540	;# 
   907     021D                     T5CLK           equ	541	;# 
   908     021D                     TMR5CLK         equ	541	;# 
   909     021D                     PR5             equ	541	;# 
   910     021E                     CCPTMRS0        equ	542	;# 
   911     021F                     CCPTMRS1        equ	543	;# 
   912     028C                     T2TMR           equ	652	;# 
   913     028C                     TMR2            equ	652	;# 
   914     028D                     T2PR            equ	653	;# 
   915     028D                     PR2             equ	653	;# 
   916     028E                     T2CON           equ	654	;# 
   917     028F                     T2HLT           equ	655	;# 
   918     0290                     T2CLKCON        equ	656	;# 
   919     0291                     T2RST           equ	657	;# 
   920     0292                     T4TMR           equ	658	;# 
   921     0292                     TMR4            equ	658	;# 
   922     0293                     T4PR            equ	659	;# 
   923     0293                     PR4             equ	659	;# 
   924     0294                     T4CON           equ	660	;# 
   925     0295                     T4HLT           equ	661	;# 
   926     0296                     T4CLKCON        equ	662	;# 
   927     0297                     T4RST           equ	663	;# 
   928     0298                     T6TMR           equ	664	;# 
   929     0298                     TMR6            equ	664	;# 
   930     0299                     T6PR            equ	665	;# 
   931     0299                     PR6             equ	665	;# 
   932     029A                     T6CON           equ	666	;# 
   933     029B                     T6HLT           equ	667	;# 
   934     029C                     T6CLKCON        equ	668	;# 
   935     029D                     T6RST           equ	669	;# 
   936     029F                     ADCPCON0        equ	671	;# 
   937     030C                     CCPR1           equ	780	;# 
   938     030C                     CCPR1L          equ	780	;# 
   939     030D                     CCPR1H          equ	781	;# 
   940     030E                     CCP1CON         equ	782	;# 
   941     030F                     CCP1CAP         equ	783	;# 
   942     0310                     CCPR2           equ	784	;# 
   943     0310                     CCPR2L          equ	784	;# 
   944     0311                     CCPR2H          equ	785	;# 
   945     0312                     CCP2CON         equ	786	;# 
   946     0313                     CCP2CAP         equ	787	;# 
   947     0314                     CCPR3           equ	788	;# 
   948     0314                     CCPR3L          equ	788	;# 
   949     0315                     CCPR3H          equ	789	;# 
   950     0316                     CCP3CON         equ	790	;# 
   951     0317                     CCP3CAP         equ	791	;# 
   952     0318                     CCPR4           equ	792	;# 
   953     0318                     CCPR4L          equ	792	;# 
   954     0319                     CCPR4H          equ	793	;# 
   955     031A                     CCP4CON         equ	794	;# 
   956     031B                     CCP4CAP         equ	795	;# 
   957     031C                     CCPR5           equ	796	;# 
   958     031C                     CCPR5L          equ	796	;# 
   959     031D                     CCPR5H          equ	797	;# 
   960     031E                     CCP5CON         equ	798	;# 
   961     031F                     CCP5CAP         equ	799	;# 
   962     038C                     PWM6DC          equ	908	;# 
   963     038C                     PWM6DCL         equ	908	;# 
   964     038D                     PWM6DCH         equ	909	;# 
   965     038E                     PWM6CON         equ	910	;# 
   966     0390                     PWM7DC          equ	912	;# 
   967     0390                     PWM7DCL         equ	912	;# 
   968     0391                     PWM7DCH         equ	913	;# 
   969     0392                     PWM7CON         equ	914	;# 
   970     048C                     SMT1TMR         equ	1164	;# 
   971     048C                     SMT1TMRL        equ	1164	;# 
   972     048D                     SMT1TMRH        equ	1165	;# 
   973     048E                     SMT1TMRU        equ	1166	;# 
   974     048F                     SMT1CPR         equ	1167	;# 
   975     048F                     SMT1CPRL        equ	1167	;# 
   976     0490                     SMT1CPRH        equ	1168	;# 
   977     0491                     SMT1CPRU        equ	1169	;# 
   978     0492                     SMT1CPW         equ	1170	;# 
   979     0492                     SMT1CPWL        equ	1170	;# 
   980     0493                     SMT1CPWH        equ	1171	;# 
   981     0494                     SMT1CPWU        equ	1172	;# 
   982     0495                     SMT1PR          equ	1173	;# 
   983     0495                     SMT1PRL         equ	1173	;# 
   984     0496                     SMT1PRH         equ	1174	;# 
   985     0497                     SMT1PRU         equ	1175	;# 
   986     0498                     SMT1CON0        equ	1176	;# 
   987     0499                     SMT1CON1        equ	1177	;# 
   988     049A                     SMT1STAT        equ	1178	;# 
   989     049B                     SMT1CLK         equ	1179	;# 
   990     049C                     SMT1SIG         equ	1180	;# 
   991     049D                     SMT1WIN         equ	1181	;# 
   992     050C                     SMT2TMR         equ	1292	;# 
   993     050C                     SMT2TMRL        equ	1292	;# 
   994     050D                     SMT2TMRH        equ	1293	;# 
   995     050E                     SMT2TMRU        equ	1294	;# 
   996     050F                     SMT2CPR         equ	1295	;# 
   997     050F                     SMT2CPRL        equ	1295	;# 
   998     0510                     SMT2CPRH        equ	1296	;# 
   999     0511                     SMT2CPRU        equ	1297	;# 
  1000     0512                     SMT2CPW         equ	1298	;# 
  1001     0512                     SMT2CPWL        equ	1298	;# 
  1002     0513                     SMT2CPWH        equ	1299	;# 
  1003     0514                     SMT2CPWU        equ	1300	;# 
  1004     0515                     SMT2PR          equ	1301	;# 
  1005     0515                     SMT2PRL         equ	1301	;# 
  1006     0516                     SMT2PRH         equ	1302	;# 
  1007     0517                     SMT2PRU         equ	1303	;# 
  1008     0518                     SMT2CON0        equ	1304	;# 
  1009     0519                     SMT2CON1        equ	1305	;# 
  1010     051A                     SMT2STAT        equ	1306	;# 
  1011     051B                     SMT2CLK         equ	1307	;# 
  1012     051C                     SMT2SIG         equ	1308	;# 
  1013     051D                     SMT2WIN         equ	1309	;# 
  1014     058C                     NCO1ACC         equ	1420	;# 
  1015     058C                     NCO1ACCL        equ	1420	;# 
  1016     058D                     NCO1ACCH        equ	1421	;# 
  1017     058E                     NCO1ACCU        equ	1422	;# 
  1018     058F                     NCO1INC         equ	1423	;# 
  1019     058F                     NCO1INCL        equ	1423	;# 
  1020     0590                     NCO1INCH        equ	1424	;# 
  1021     0591                     NCO1INCU        equ	1425	;# 
  1022     0592                     NCO1CON         equ	1426	;# 
  1023     0593                     NCO1CLK         equ	1427	;# 
  1024     059C                     TMR0L           equ	1436	;# 
  1025     059C                     TMR0            equ	1436	;# 
  1026     059D                     TMR0H           equ	1437	;# 
  1027     059D                     PR0             equ	1437	;# 
  1028     059E                     T0CON0          equ	1438	;# 
  1029     059F                     T0CON1          equ	1439	;# 
  1030     060C                     CWG1CLK         equ	1548	;# 
  1031     060C                     CWG1CLKCON      equ	1548	;# 
  1032     060D                     CWG1ISM         equ	1549	;# 
  1033     060D                     CWG1DAT         equ	1549	;# 
  1034     060E                     CWG1DBR         equ	1550	;# 
  1035     060F                     CWG1DBF         equ	1551	;# 
  1036     0610                     CWG1CON0        equ	1552	;# 
  1037     0611                     CWG1CON1        equ	1553	;# 
  1038     0612                     CWG1AS0         equ	1554	;# 
  1039     0613                     CWG1AS1         equ	1555	;# 
  1040     0614                     CWG1STR         equ	1556	;# 
  1041     0616                     CWG2CLK         equ	1558	;# 
  1042     0616                     CWG2CLKCON      equ	1558	;# 
  1043     0617                     CWG2ISM         equ	1559	;# 
  1044     0617                     CWG2DAT         equ	1559	;# 
  1045     0618                     CWG2DBR         equ	1560	;# 
  1046     0619                     CWG2DBF         equ	1561	;# 
  1047     061A                     CWG2CON0        equ	1562	;# 
  1048     061B                     CWG2CON1        equ	1563	;# 
  1049     061C                     CWG2AS0         equ	1564	;# 
  1050     061D                     CWG2AS1         equ	1565	;# 
  1051     061E                     CWG2STR         equ	1566	;# 
  1052     068C                     CWG3CLK         equ	1676	;# 
  1053     068C                     CWG3CLKCON      equ	1676	;# 
  1054     068D                     CWG3ISM         equ	1677	;# 
  1055     068D                     CWG3DAT         equ	1677	;# 
  1056     068E                     CWG3DBR         equ	1678	;# 
  1057     068F                     CWG3DBF         equ	1679	;# 
  1058     0690                     CWG3CON0        equ	1680	;# 
  1059     0691                     CWG3CON1        equ	1681	;# 
  1060     0692                     CWG3AS0         equ	1682	;# 
  1061     0693                     CWG3AS1         equ	1683	;# 
  1062     0694                     CWG3STR         equ	1684	;# 
  1063     070C                     PIR0            equ	1804	;# 
  1064     070D                     PIR1            equ	1805	;# 
  1065     070E                     PIR2            equ	1806	;# 
  1066     070F                     PIR3            equ	1807	;# 
  1067     0710                     PIR4            equ	1808	;# 
  1068     0711                     PIR5            equ	1809	;# 
  1069     0712                     PIR6            equ	1810	;# 
  1070     0713                     PIR7            equ	1811	;# 
  1071     0714                     PIR8            equ	1812	;# 
  1072     0716                     PIE0            equ	1814	;# 
  1073     0717                     PIE1            equ	1815	;# 
  1074     0718                     PIE2            equ	1816	;# 
  1075     0719                     PIE3            equ	1817	;# 
  1076     071A                     PIE4            equ	1818	;# 
  1077     071B                     PIE5            equ	1819	;# 
  1078     071C                     PIE6            equ	1820	;# 
  1079     071D                     PIE7            equ	1821	;# 
  1080     071E                     PIE8            equ	1822	;# 
  1081     0796                     PMD0            equ	1942	;# 
  1082     0797                     PMD1            equ	1943	;# 
  1083     0798                     PMD2            equ	1944	;# 
  1084     0799                     PMD3            equ	1945	;# 
  1085     079A                     PMD4            equ	1946	;# 
  1086     079B                     PMD5            equ	1947	;# 
  1087     079C                     PMD6            equ	1948	;# 
  1088     079D                     PMD7            equ	1949	;# 
  1089     080C                     WDTCON0         equ	2060	;# 
  1090     080D                     WDTCON1         equ	2061	;# 
  1091     080E                     WDTPSL          equ	2062	;# 
  1092     080F                     WDTPSH          equ	2063	;# 
  1093     0810                     WDTTMR          equ	2064	;# 
  1094     0811                     BORCON          equ	2065	;# 
  1095     0813                     PCON0           equ	2067	;# 
  1096     0814                     PCON1           equ	2068	;# 
  1097     081A                     NVMADR          equ	2074	;# 
  1098     081A                     NVMADRL         equ	2074	;# 
  1099     081B                     NVMADRH         equ	2075	;# 
  1100     081C                     NVMDAT          equ	2076	;# 
  1101     081C                     NVMDATL         equ	2076	;# 
  1102     081D                     NVMDATH         equ	2077	;# 
  1103     081E                     NVMCON1         equ	2078	;# 
  1104     081F                     NVMCON2         equ	2079	;# 
  1105     088C                     CPUDOZE         equ	2188	;# 
  1106     088D                     OSCCON1         equ	2189	;# 
  1107     088E                     OSCCON2         equ	2190	;# 
  1108     088F                     OSCCON3         equ	2191	;# 
  1109     0890                     OSCSTAT         equ	2192	;# 
  1110     0891                     OSCEN           equ	2193	;# 
  1111     0892                     OSCTUNE         equ	2194	;# 
  1112     0893                     OSCFRQ          equ	2195	;# 
  1113     0895                     CLKRCON         equ	2197	;# 
  1114     0896                     CLKRCLK         equ	2198	;# 
  1115     0897                     MD1CON0         equ	2199	;# 
  1116     0898                     MD1CON1         equ	2200	;# 
  1117     0899                     MD1SRC          equ	2201	;# 
  1118     089A                     MD1CARL         equ	2202	;# 
  1119     089B                     MD1CARH         equ	2203	;# 
  1120     090C                     FVRCON          equ	2316	;# 
  1121     090E                     DAC1CON0        equ	2318	;# 
  1122     090F                     DAC1CON1        equ	2319	;# 
  1123     091F                     ZCDCON          equ	2335	;# 
  1124     098F                     CMOUT           equ	2447	;# 
  1125     098F                     CMSTAT          equ	2447	;# 
  1126     0990                     CM1CON0         equ	2448	;# 
  1127     0991                     CM1CON1         equ	2449	;# 
  1128     0992                     CM1NCH          equ	2450	;# 
  1129     0993                     CM1PCH          equ	2451	;# 
  1130     0994                     CM2CON0         equ	2452	;# 
  1131     0995                     CM2CON1         equ	2453	;# 
  1132     0996                     CM2NCH          equ	2454	;# 
  1133     0997                     CM2PCH          equ	2455	;# 
  1134     0A19                     RC2REG          equ	2585	;# 
  1135     0A19                     RCREG2          equ	2585	;# 
  1136     0A1A                     TX2REG          equ	2586	;# 
  1137     0A1A                     TXREG2          equ	2586	;# 
  1138     0A1B                     SP2BRG          equ	2587	;# 
  1139     0A1B                     SP2BRGL         equ	2587	;# 
  1140     0A1B                     SPBRG2          equ	2587	;# 
  1141     0A1C                     SP2BRGH         equ	2588	;# 
  1142     0A1C                     SPBRGH2         equ	2588	;# 
  1143     0A1D                     RC2STA          equ	2589	;# 
  1144     0A1D                     RCSTA2          equ	2589	;# 
  1145     0A1E                     TX2STA          equ	2590	;# 
  1146     0A1E                     TXSTA2          equ	2590	;# 
  1147     0A1F                     BAUD2CON        equ	2591	;# 
  1148     0A1F                     BAUDCON2        equ	2591	;# 
  1149     0A1F                     BAUDCTL2        equ	2591	;# 
  1150     1E0F                     CLCDATA         equ	7695	;# 
  1151     1E10                     CLC1CON         equ	7696	;# 
  1152     1E11                     CLC1POL         equ	7697	;# 
  1153     1E12                     CLC1SEL0        equ	7698	;# 
  1154     1E13                     CLC1SEL1        equ	7699	;# 
  1155     1E14                     CLC1SEL2        equ	7700	;# 
  1156     1E15                     CLC1SEL3        equ	7701	;# 
  1157     1E16                     CLC1GLS0        equ	7702	;# 
  1158     1E17                     CLC1GLS1        equ	7703	;# 
  1159     1E18                     CLC1GLS2        equ	7704	;# 
  1160     1E19                     CLC1GLS3        equ	7705	;# 
  1161     1E1A                     CLC2CON         equ	7706	;# 
  1162     1E1B                     CLC2POL         equ	7707	;# 
  1163     1E1C                     CLC2SEL0        equ	7708	;# 
  1164     1E1D                     CLC2SEL1        equ	7709	;# 
  1165     1E1E                     CLC2SEL2        equ	7710	;# 
  1166     1E1F                     CLC2SEL3        equ	7711	;# 
  1167     1E20                     CLC2GLS0        equ	7712	;# 
  1168     1E21                     CLC2GLS1        equ	7713	;# 
  1169     1E22                     CLC2GLS2        equ	7714	;# 
  1170     1E23                     CLC2GLS3        equ	7715	;# 
  1171     1E24                     CLC3CON         equ	7716	;# 
  1172     1E25                     CLC3POL         equ	7717	;# 
  1173     1E26                     CLC3SEL0        equ	7718	;# 
  1174     1E27                     CLC3SEL1        equ	7719	;# 
  1175     1E28                     CLC3SEL2        equ	7720	;# 
  1176     1E29                     CLC3SEL3        equ	7721	;# 
  1177     1E2A                     CLC3GLS0        equ	7722	;# 
  1178     1E2B                     CLC3GLS1        equ	7723	;# 
  1179     1E2C                     CLC3GLS2        equ	7724	;# 
  1180     1E2D                     CLC3GLS3        equ	7725	;# 
  1181     1E2E                     CLC4CON         equ	7726	;# 
  1182     1E2F                     CLC4POL         equ	7727	;# 
  1183     1E30                     CLC4SEL0        equ	7728	;# 
  1184     1E31                     CLC4SEL1        equ	7729	;# 
  1185     1E32                     CLC4SEL2        equ	7730	;# 
  1186     1E33                     CLC4SEL3        equ	7731	;# 
  1187     1E34                     CLC4GLS0        equ	7732	;# 
  1188     1E35                     CLC4GLS1        equ	7733	;# 
  1189     1E36                     CLC4GLS2        equ	7734	;# 
  1190     1E37                     CLC4GLS3        equ	7735	;# 
  1191     1E8F                     PPSLOCK         equ	7823	;# 
  1192     1E90                     INTPPS          equ	7824	;# 
  1193     1E91                     T0CKIPPS        equ	7825	;# 
  1194     1E92                     T1CKIPPS        equ	7826	;# 
  1195     1E93                     T1GPPS          equ	7827	;# 
  1196     1E94                     T3CKIPPS        equ	7828	;# 
  1197     1E95                     T3GPPS          equ	7829	;# 
  1198     1E96                     T5CKIPPS        equ	7830	;# 
  1199     1E97                     T5GPPS          equ	7831	;# 
  1200     1E9C                     T2INPPS         equ	7836	;# 
  1201     1E9D                     T4INPPS         equ	7837	;# 
  1202     1E9E                     T6INPPS         equ	7838	;# 
  1203     1EA1                     CCP1PPS         equ	7841	;# 
  1204     1EA2                     CCP2PPS         equ	7842	;# 
  1205     1EA3                     CCP3PPS         equ	7843	;# 
  1206     1EA4                     CCP4PPS         equ	7844	;# 
  1207     1EA5                     CCP5PPS         equ	7845	;# 
  1208     1EA9                     SMT1WINPPS      equ	7849	;# 
  1209     1EAA                     SMT1SIGPPS      equ	7850	;# 
  1210     1EAB                     SMT2WINPPS      equ	7851	;# 
  1211     1EAC                     SMT2SIGPPS      equ	7852	;# 
  1212     1EB1                     CWG1PPS         equ	7857	;# 
  1213     1EB2                     CWG2PPS         equ	7858	;# 
  1214     1EB3                     CWG3PPS         equ	7859	;# 
  1215     1EB8                     MDCARLPPS       equ	7864	;# 
  1216     1EB9                     MDCARHPPS       equ	7865	;# 
  1217     1EBA                     MDSRCPPS        equ	7866	;# 
  1218     1EBB                     CLCIN0PPS       equ	7867	;# 
  1219     1EBC                     CLCIN1PPS       equ	7868	;# 
  1220     1EBD                     CLCIN2PPS       equ	7869	;# 
  1221     1EBE                     CLCIN3PPS       equ	7870	;# 
  1222     1EC3                     ADACTPPS        equ	7875	;# 
  1223     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1224     1EC6                     SSP1DATPPS      equ	7878	;# 
  1225     1EC7                     SSP1SSPPS       equ	7879	;# 
  1226     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1227     1EC9                     SSP2DATPPS      equ	7881	;# 
  1228     1ECA                     SSP2SSPPS       equ	7882	;# 
  1229     1ECB                     RX1PPS          equ	7883	;# 
  1230     1ECC                     CK1PPS          equ	7884	;# 
  1231     1ECD                     RX2PPS          equ	7885	;# 
  1232     1ECE                     CK2PPS          equ	7886	;# 
  1233     1F10                     RA0PPS          equ	7952	;# 
  1234     1F11                     RA1PPS          equ	7953	;# 
  1235     1F12                     RA2PPS          equ	7954	;# 
  1236     1F13                     RA3PPS          equ	7955	;# 
  1237     1F14                     RA4PPS          equ	7956	;# 
  1238     1F15                     RA5PPS          equ	7957	;# 
  1239     1F16                     RA6PPS          equ	7958	;# 
  1240     1F17                     RA7PPS          equ	7959	;# 
  1241     1F18                     RB0PPS          equ	7960	;# 
  1242     1F19                     RB1PPS          equ	7961	;# 
  1243     1F1A                     RB2PPS          equ	7962	;# 
  1244     1F1B                     RB3PPS          equ	7963	;# 
  1245     1F1C                     RB4PPS          equ	7964	;# 
  1246     1F1D                     RB5PPS          equ	7965	;# 
  1247     1F1E                     RB6PPS          equ	7966	;# 
  1248     1F1F                     RB7PPS          equ	7967	;# 
  1249     1F20                     RC0PPS          equ	7968	;# 
  1250     1F21                     RC1PPS          equ	7969	;# 
  1251     1F22                     RC2PPS          equ	7970	;# 
  1252     1F23                     RC3PPS          equ	7971	;# 
  1253     1F24                     RC4PPS          equ	7972	;# 
  1254     1F25                     RC5PPS          equ	7973	;# 
  1255     1F26                     RC6PPS          equ	7974	;# 
  1256     1F27                     RC7PPS          equ	7975	;# 
  1257     1F38                     ANSELA          equ	7992	;# 
  1258     1F39                     WPUA            equ	7993	;# 
  1259     1F3A                     ODCONA          equ	7994	;# 
  1260     1F3B                     SLRCONA         equ	7995	;# 
  1261     1F3C                     INLVLA          equ	7996	;# 
  1262     1F3D                     IOCAP           equ	7997	;# 
  1263     1F3E                     IOCAN           equ	7998	;# 
  1264     1F3F                     IOCAF           equ	7999	;# 
  1265     1F43                     ANSELB          equ	8003	;# 
  1266     1F44                     WPUB            equ	8004	;# 
  1267     1F45                     ODCONB          equ	8005	;# 
  1268     1F46                     SLRCONB         equ	8006	;# 
  1269     1F47                     INLVLB          equ	8007	;# 
  1270     1F48                     IOCBP           equ	8008	;# 
  1271     1F49                     IOCBN           equ	8009	;# 
  1272     1F4A                     IOCBF           equ	8010	;# 
  1273     1F4E                     ANSELC          equ	8014	;# 
  1274     1F4F                     WPUC            equ	8015	;# 
  1275     1F50                     ODCONC          equ	8016	;# 
  1276     1F51                     SLRCONC         equ	8017	;# 
  1277     1F52                     INLVLC          equ	8018	;# 
  1278     1F53                     IOCCP           equ	8019	;# 
  1279     1F54                     IOCCN           equ	8020	;# 
  1280     1F55                     IOCCF           equ	8021	;# 
  1281     1F65                     WPUE            equ	8037	;# 
  1282     1F66                     ODCONE          equ	8038	;# 
  1283     1F67                     SLRCONE         equ	8039	;# 
  1284     1F68                     INLVLE          equ	8040	;# 
  1285     1F69                     IOCEP           equ	8041	;# 
  1286     1F6A                     IOCEN           equ	8042	;# 
  1287     1F6B                     IOCEF           equ	8043	;# 
  1288     1FE4                     STATUS_SHAD     equ	8164	;# 
  1289     1FE5                     WREG_SHAD       equ	8165	;# 
  1290     1FE6                     BSR_SHAD        equ	8166	;# 
  1291     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1292     1FE8                     FSR0_SHAD       equ	8168	;# 
  1293     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1294     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1295     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1296     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1297     1FED                     STKPTR          equ	8173	;# 
  1298     1FEE                     TOSL            equ	8174	;# 
  1299     1FEF                     TOSH            equ	8175	;# 
  1300     0000                     INDF0           equ	0	;# 
  1301     0001                     INDF1           equ	1	;# 
  1302     0002                     PCL             equ	2	;# 
  1303     0003                     STATUS          equ	3	;# 
  1304     0004                     FSR0L           equ	4	;# 
  1305     0005                     FSR0H           equ	5	;# 
  1306     0006                     FSR1L           equ	6	;# 
  1307     0007                     FSR1H           equ	7	;# 
  1308     0008                     BSR             equ	8	;# 
  1309     0009                     WREG            equ	9	;# 
  1310     000A                     PCLATH          equ	10	;# 
  1311     000B                     INTCON          equ	11	;# 
  1312     000C                     PORTA           equ	12	;# 
  1313     000D                     PORTB           equ	13	;# 
  1314     000E                     PORTC           equ	14	;# 
  1315     0010                     PORTE           equ	16	;# 
  1316     0012                     TRISA           equ	18	;# 
  1317     0013                     TRISB           equ	19	;# 
  1318     0014                     TRISC           equ	20	;# 
  1319     0016                     TRISE           equ	22	;# 
  1320     0018                     LATA            equ	24	;# 
  1321     0019                     LATB            equ	25	;# 
  1322     001A                     LATC            equ	26	;# 
  1323     008C                     ADLTH           equ	140	;# 
  1324     008C                     ADLTHL          equ	140	;# 
  1325     008D                     ADLTHH          equ	141	;# 
  1326     008E                     ADUTH           equ	142	;# 
  1327     008E                     ADUTHL          equ	142	;# 
  1328     008F                     ADUTHH          equ	143	;# 
  1329     0090                     ADERR           equ	144	;# 
  1330     0090                     ADERRL          equ	144	;# 
  1331     0091                     ADERRH          equ	145	;# 
  1332     0092                     ADSTPT          equ	146	;# 
  1333     0092                     ADSTPTL         equ	146	;# 
  1334     0093                     ADSTPTH         equ	147	;# 
  1335     0094                     ADFLTR          equ	148	;# 
  1336     0094                     ADFLTRL         equ	148	;# 
  1337     0095                     ADFLTRH         equ	149	;# 
  1338     0096                     ADACC           equ	150	;# 
  1339     0096                     ADACCL          equ	150	;# 
  1340     0097                     ADACCH          equ	151	;# 
  1341     0098                     ADACCU          equ	152	;# 
  1342     0099                     ADCNT           equ	153	;# 
  1343     009A                     ADRPT           equ	154	;# 
  1344     009B                     ADPREV          equ	155	;# 
  1345     009B                     ADPREVL         equ	155	;# 
  1346     009C                     ADPREVH         equ	156	;# 
  1347     009D                     ADRES           equ	157	;# 
  1348     009D                     ADRESL          equ	157	;# 
  1349     009E                     ADRESH          equ	158	;# 
  1350     009F                     ADPCH           equ	159	;# 
  1351     010C                     ADACQ           equ	268	;# 
  1352     010C                     ADACQL          equ	268	;# 
  1353     010D                     ADACQH          equ	269	;# 
  1354     010E                     ADCAP           equ	270	;# 
  1355     010F                     ADPRE           equ	271	;# 
  1356     010F                     ADPREL          equ	271	;# 
  1357     0110                     ADPREH          equ	272	;# 
  1358     0111                     ADCON0          equ	273	;# 
  1359     0112                     ADCON1          equ	274	;# 
  1360     0113                     ADCON2          equ	275	;# 
  1361     0114                     ADCON3          equ	276	;# 
  1362     0115                     ADSTAT          equ	277	;# 
  1363     0116                     ADREF           equ	278	;# 
  1364     0117                     ADACT           equ	279	;# 
  1365     0118                     ADCLK           equ	280	;# 
  1366     0119                     RC1REG          equ	281	;# 
  1367     0119                     RCREG           equ	281	;# 
  1368     0119                     RCREG1          equ	281	;# 
  1369     011A                     TX1REG          equ	282	;# 
  1370     011A                     TXREG1          equ	282	;# 
  1371     011A                     TXREG           equ	282	;# 
  1372     011B                     SP1BRG          equ	283	;# 
  1373     011B                     SPBRG           equ	283	;# 
  1374     011B                     SP1BRGL         equ	283	;# 
  1375     011B                     SPBRG1          equ	283	;# 
  1376     011B                     SPBRGL          equ	283	;# 
  1377     011C                     SP1BRGH         equ	284	;# 
  1378     011C                     SPBRGH          equ	284	;# 
  1379     011C                     SPBRGH1         equ	284	;# 
  1380     011D                     RC1STA          equ	285	;# 
  1381     011D                     RCSTA1          equ	285	;# 
  1382     011D                     RCSTA           equ	285	;# 
  1383     011E                     TX1STA          equ	286	;# 
  1384     011E                     TXSTA1          equ	286	;# 
  1385     011E                     TXSTA           equ	286	;# 
  1386     011F                     BAUD1CON        equ	287	;# 
  1387     011F                     BAUDCON1        equ	287	;# 
  1388     011F                     BAUDCTL1        equ	287	;# 
  1389     011F                     BAUDCON         equ	287	;# 
  1390     011F                     BAUDCTL         equ	287	;# 
  1391     018C                     SSP1BUF         equ	396	;# 
  1392     018D                     SSP1ADD         equ	397	;# 
  1393     018E                     SSP1MSK         equ	398	;# 
  1394     018F                     SSP1STAT        equ	399	;# 
  1395     0190                     SSP1CON1        equ	400	;# 
  1396     0191                     SSP1CON2        equ	401	;# 
  1397     0192                     SSP1CON3        equ	402	;# 
  1398     0196                     SSP2BUF         equ	406	;# 
  1399     0197                     SSP2ADD         equ	407	;# 
  1400     0198                     SSP2MSK         equ	408	;# 
  1401     0199                     SSP2STAT        equ	409	;# 
  1402     019A                     SSP2CON1        equ	410	;# 
  1403     019B                     SSP2CON2        equ	411	;# 
  1404     019C                     SSP2CON3        equ	412	;# 
  1405     020C                     TMR1            equ	524	;# 
  1406     020C                     TMR1L           equ	524	;# 
  1407     020D                     TMR1H           equ	525	;# 
  1408     020E                     T1CON           equ	526	;# 
  1409     020E                     TMR1CON         equ	526	;# 
  1410     020F                     T1GCON          equ	527	;# 
  1411     020F                     TMR1GCON        equ	527	;# 
  1412     0210                     T1GATE          equ	528	;# 
  1413     0210                     TMR1GATE        equ	528	;# 
  1414     0211                     T1CLK           equ	529	;# 
  1415     0211                     TMR1CLK         equ	529	;# 
  1416     0211                     PR1             equ	529	;# 
  1417     0212                     TMR3            equ	530	;# 
  1418     0212                     TMR3L           equ	530	;# 
  1419     0213                     TMR3H           equ	531	;# 
  1420     0214                     T3CON           equ	532	;# 
  1421     0214                     TMR3CON         equ	532	;# 
  1422     0215                     T3GCON          equ	533	;# 
  1423     0215                     TMR3GCON        equ	533	;# 
  1424     0216                     T3GATE          equ	534	;# 
  1425     0216                     TMR3GATE        equ	534	;# 
  1426     0217                     T3CLK           equ	535	;# 
  1427     0217                     TMR3CLK         equ	535	;# 
  1428     0217                     PR3             equ	535	;# 
  1429     0218                     TMR5            equ	536	;# 
  1430     0218                     TMR5L           equ	536	;# 
  1431     0219                     TMR5H           equ	537	;# 
  1432     021A                     T5CON           equ	538	;# 
  1433     021A                     TMR5CON         equ	538	;# 
  1434     021B                     T5GCON          equ	539	;# 
  1435     021B                     TMR5GCON        equ	539	;# 
  1436     021C                     T5GATE          equ	540	;# 
  1437     021C                     TMR5GATE        equ	540	;# 
  1438     021D                     T5CLK           equ	541	;# 
  1439     021D                     TMR5CLK         equ	541	;# 
  1440     021D                     PR5             equ	541	;# 
  1441     021E                     CCPTMRS0        equ	542	;# 
  1442     021F                     CCPTMRS1        equ	543	;# 
  1443     028C                     T2TMR           equ	652	;# 
  1444     028C                     TMR2            equ	652	;# 
  1445     028D                     T2PR            equ	653	;# 
  1446     028D                     PR2             equ	653	;# 
  1447     028E                     T2CON           equ	654	;# 
  1448     028F                     T2HLT           equ	655	;# 
  1449     0290                     T2CLKCON        equ	656	;# 
  1450     0291                     T2RST           equ	657	;# 
  1451     0292                     T4TMR           equ	658	;# 
  1452     0292                     TMR4            equ	658	;# 
  1453     0293                     T4PR            equ	659	;# 
  1454     0293                     PR4             equ	659	;# 
  1455     0294                     T4CON           equ	660	;# 
  1456     0295                     T4HLT           equ	661	;# 
  1457     0296                     T4CLKCON        equ	662	;# 
  1458     0297                     T4RST           equ	663	;# 
  1459     0298                     T6TMR           equ	664	;# 
  1460     0298                     TMR6            equ	664	;# 
  1461     0299                     T6PR            equ	665	;# 
  1462     0299                     PR6             equ	665	;# 
  1463     029A                     T6CON           equ	666	;# 
  1464     029B                     T6HLT           equ	667	;# 
  1465     029C                     T6CLKCON        equ	668	;# 
  1466     029D                     T6RST           equ	669	;# 
  1467     029F                     ADCPCON0        equ	671	;# 
  1468     030C                     CCPR1           equ	780	;# 
  1469     030C                     CCPR1L          equ	780	;# 
  1470     030D                     CCPR1H          equ	781	;# 
  1471     030E                     CCP1CON         equ	782	;# 
  1472     030F                     CCP1CAP         equ	783	;# 
  1473     0310                     CCPR2           equ	784	;# 
  1474     0310                     CCPR2L          equ	784	;# 
  1475     0311                     CCPR2H          equ	785	;# 
  1476     0312                     CCP2CON         equ	786	;# 
  1477     0313                     CCP2CAP         equ	787	;# 
  1478     0314                     CCPR3           equ	788	;# 
  1479     0314                     CCPR3L          equ	788	;# 
  1480     0315                     CCPR3H          equ	789	;# 
  1481     0316                     CCP3CON         equ	790	;# 
  1482     0317                     CCP3CAP         equ	791	;# 
  1483     0318                     CCPR4           equ	792	;# 
  1484     0318                     CCPR4L          equ	792	;# 
  1485     0319                     CCPR4H          equ	793	;# 
  1486     031A                     CCP4CON         equ	794	;# 
  1487     031B                     CCP4CAP         equ	795	;# 
  1488     031C                     CCPR5           equ	796	;# 
  1489     031C                     CCPR5L          equ	796	;# 
  1490     031D                     CCPR5H          equ	797	;# 
  1491     031E                     CCP5CON         equ	798	;# 
  1492     031F                     CCP5CAP         equ	799	;# 
  1493     038C                     PWM6DC          equ	908	;# 
  1494     038C                     PWM6DCL         equ	908	;# 
  1495     038D                     PWM6DCH         equ	909	;# 
  1496     038E                     PWM6CON         equ	910	;# 
  1497     0390                     PWM7DC          equ	912	;# 
  1498     0390                     PWM7DCL         equ	912	;# 
  1499     0391                     PWM7DCH         equ	913	;# 
  1500     0392                     PWM7CON         equ	914	;# 
  1501     048C                     SMT1TMR         equ	1164	;# 
  1502     048C                     SMT1TMRL        equ	1164	;# 
  1503     048D                     SMT1TMRH        equ	1165	;# 
  1504     048E                     SMT1TMRU        equ	1166	;# 
  1505     048F                     SMT1CPR         equ	1167	;# 
  1506     048F                     SMT1CPRL        equ	1167	;# 
  1507     0490                     SMT1CPRH        equ	1168	;# 
  1508     0491                     SMT1CPRU        equ	1169	;# 
  1509     0492                     SMT1CPW         equ	1170	;# 
  1510     0492                     SMT1CPWL        equ	1170	;# 
  1511     0493                     SMT1CPWH        equ	1171	;# 
  1512     0494                     SMT1CPWU        equ	1172	;# 
  1513     0495                     SMT1PR          equ	1173	;# 
  1514     0495                     SMT1PRL         equ	1173	;# 
  1515     0496                     SMT1PRH         equ	1174	;# 
  1516     0497                     SMT1PRU         equ	1175	;# 
  1517     0498                     SMT1CON0        equ	1176	;# 
  1518     0499                     SMT1CON1        equ	1177	;# 
  1519     049A                     SMT1STAT        equ	1178	;# 
  1520     049B                     SMT1CLK         equ	1179	;# 
  1521     049C                     SMT1SIG         equ	1180	;# 
  1522     049D                     SMT1WIN         equ	1181	;# 
  1523     050C                     SMT2TMR         equ	1292	;# 
  1524     050C                     SMT2TMRL        equ	1292	;# 
  1525     050D                     SMT2TMRH        equ	1293	;# 
  1526     050E                     SMT2TMRU        equ	1294	;# 
  1527     050F                     SMT2CPR         equ	1295	;# 
  1528     050F                     SMT2CPRL        equ	1295	;# 
  1529     0510                     SMT2CPRH        equ	1296	;# 
  1530     0511                     SMT2CPRU        equ	1297	;# 
  1531     0512                     SMT2CPW         equ	1298	;# 
  1532     0512                     SMT2CPWL        equ	1298	;# 
  1533     0513                     SMT2CPWH        equ	1299	;# 
  1534     0514                     SMT2CPWU        equ	1300	;# 
  1535     0515                     SMT2PR          equ	1301	;# 
  1536     0515                     SMT2PRL         equ	1301	;# 
  1537     0516                     SMT2PRH         equ	1302	;# 
  1538     0517                     SMT2PRU         equ	1303	;# 
  1539     0518                     SMT2CON0        equ	1304	;# 
  1540     0519                     SMT2CON1        equ	1305	;# 
  1541     051A                     SMT2STAT        equ	1306	;# 
  1542     051B                     SMT2CLK         equ	1307	;# 
  1543     051C                     SMT2SIG         equ	1308	;# 
  1544     051D                     SMT2WIN         equ	1309	;# 
  1545     058C                     NCO1ACC         equ	1420	;# 
  1546     058C                     NCO1ACCL        equ	1420	;# 
  1547     058D                     NCO1ACCH        equ	1421	;# 
  1548     058E                     NCO1ACCU        equ	1422	;# 
  1549     058F                     NCO1INC         equ	1423	;# 
  1550     058F                     NCO1INCL        equ	1423	;# 
  1551     0590                     NCO1INCH        equ	1424	;# 
  1552     0591                     NCO1INCU        equ	1425	;# 
  1553     0592                     NCO1CON         equ	1426	;# 
  1554     0593                     NCO1CLK         equ	1427	;# 
  1555     059C                     TMR0L           equ	1436	;# 
  1556     059C                     TMR0            equ	1436	;# 
  1557     059D                     TMR0H           equ	1437	;# 
  1558     059D                     PR0             equ	1437	;# 
  1559     059E                     T0CON0          equ	1438	;# 
  1560     059F                     T0CON1          equ	1439	;# 
  1561     060C                     CWG1CLK         equ	1548	;# 
  1562     060C                     CWG1CLKCON      equ	1548	;# 
  1563     060D                     CWG1ISM         equ	1549	;# 
  1564     060D                     CWG1DAT         equ	1549	;# 
  1565     060E                     CWG1DBR         equ	1550	;# 
  1566     060F                     CWG1DBF         equ	1551	;# 
  1567     0610                     CWG1CON0        equ	1552	;# 
  1568     0611                     CWG1CON1        equ	1553	;# 
  1569     0612                     CWG1AS0         equ	1554	;# 
  1570     0613                     CWG1AS1         equ	1555	;# 
  1571     0614                     CWG1STR         equ	1556	;# 
  1572     0616                     CWG2CLK         equ	1558	;# 
  1573     0616                     CWG2CLKCON      equ	1558	;# 
  1574     0617                     CWG2ISM         equ	1559	;# 
  1575     0617                     CWG2DAT         equ	1559	;# 
  1576     0618                     CWG2DBR         equ	1560	;# 
  1577     0619                     CWG2DBF         equ	1561	;# 
  1578     061A                     CWG2CON0        equ	1562	;# 
  1579     061B                     CWG2CON1        equ	1563	;# 
  1580     061C                     CWG2AS0         equ	1564	;# 
  1581     061D                     CWG2AS1         equ	1565	;# 
  1582     061E                     CWG2STR         equ	1566	;# 
  1583     068C                     CWG3CLK         equ	1676	;# 
  1584     068C                     CWG3CLKCON      equ	1676	;# 
  1585     068D                     CWG3ISM         equ	1677	;# 
  1586     068D                     CWG3DAT         equ	1677	;# 
  1587     068E                     CWG3DBR         equ	1678	;# 
  1588     068F                     CWG3DBF         equ	1679	;# 
  1589     0690                     CWG3CON0        equ	1680	;# 
  1590     0691                     CWG3CON1        equ	1681	;# 
  1591     0692                     CWG3AS0         equ	1682	;# 
  1592     0693                     CWG3AS1         equ	1683	;# 
  1593     0694                     CWG3STR         equ	1684	;# 
  1594     070C                     PIR0            equ	1804	;# 
  1595     070D                     PIR1            equ	1805	;# 
  1596     070E                     PIR2            equ	1806	;# 
  1597     070F                     PIR3            equ	1807	;# 
  1598     0710                     PIR4            equ	1808	;# 
  1599     0711                     PIR5            equ	1809	;# 
  1600     0712                     PIR6            equ	1810	;# 
  1601     0713                     PIR7            equ	1811	;# 
  1602     0714                     PIR8            equ	1812	;# 
  1603     0716                     PIE0            equ	1814	;# 
  1604     0717                     PIE1            equ	1815	;# 
  1605     0718                     PIE2            equ	1816	;# 
  1606     0719                     PIE3            equ	1817	;# 
  1607     071A                     PIE4            equ	1818	;# 
  1608     071B                     PIE5            equ	1819	;# 
  1609     071C                     PIE6            equ	1820	;# 
  1610     071D                     PIE7            equ	1821	;# 
  1611     071E                     PIE8            equ	1822	;# 
  1612     0796                     PMD0            equ	1942	;# 
  1613     0797                     PMD1            equ	1943	;# 
  1614     0798                     PMD2            equ	1944	;# 
  1615     0799                     PMD3            equ	1945	;# 
  1616     079A                     PMD4            equ	1946	;# 
  1617     079B                     PMD5            equ	1947	;# 
  1618     079C                     PMD6            equ	1948	;# 
  1619     079D                     PMD7            equ	1949	;# 
  1620     080C                     WDTCON0         equ	2060	;# 
  1621     080D                     WDTCON1         equ	2061	;# 
  1622     080E                     WDTPSL          equ	2062	;# 
  1623     080F                     WDTPSH          equ	2063	;# 
  1624     0810                     WDTTMR          equ	2064	;# 
  1625     0811                     BORCON          equ	2065	;# 
  1626     0813                     PCON0           equ	2067	;# 
  1627     0814                     PCON1           equ	2068	;# 
  1628     081A                     NVMADR          equ	2074	;# 
  1629     081A                     NVMADRL         equ	2074	;# 
  1630     081B                     NVMADRH         equ	2075	;# 
  1631     081C                     NVMDAT          equ	2076	;# 
  1632     081C                     NVMDATL         equ	2076	;# 
  1633     081D                     NVMDATH         equ	2077	;# 
  1634     081E                     NVMCON1         equ	2078	;# 
  1635     081F                     NVMCON2         equ	2079	;# 
  1636     088C                     CPUDOZE         equ	2188	;# 
  1637     088D                     OSCCON1         equ	2189	;# 
  1638     088E                     OSCCON2         equ	2190	;# 
  1639     088F                     OSCCON3         equ	2191	;# 
  1640     0890                     OSCSTAT         equ	2192	;# 
  1641     0891                     OSCEN           equ	2193	;# 
  1642     0892                     OSCTUNE         equ	2194	;# 
  1643     0893                     OSCFRQ          equ	2195	;# 
  1644     0895                     CLKRCON         equ	2197	;# 
  1645     0896                     CLKRCLK         equ	2198	;# 
  1646     0897                     MD1CON0         equ	2199	;# 
  1647     0898                     MD1CON1         equ	2200	;# 
  1648     0899                     MD1SRC          equ	2201	;# 
  1649     089A                     MD1CARL         equ	2202	;# 
  1650     089B                     MD1CARH         equ	2203	;# 
  1651     090C                     FVRCON          equ	2316	;# 
  1652     090E                     DAC1CON0        equ	2318	;# 
  1653     090F                     DAC1CON1        equ	2319	;# 
  1654     091F                     ZCDCON          equ	2335	;# 
  1655     098F                     CMOUT           equ	2447	;# 
  1656     098F                     CMSTAT          equ	2447	;# 
  1657     0990                     CM1CON0         equ	2448	;# 
  1658     0991                     CM1CON1         equ	2449	;# 
  1659     0992                     CM1NCH          equ	2450	;# 
  1660     0993                     CM1PCH          equ	2451	;# 
  1661     0994                     CM2CON0         equ	2452	;# 
  1662     0995                     CM2CON1         equ	2453	;# 
  1663     0996                     CM2NCH          equ	2454	;# 
  1664     0997                     CM2PCH          equ	2455	;# 
  1665     0A19                     RC2REG          equ	2585	;# 
  1666     0A19                     RCREG2          equ	2585	;# 
  1667     0A1A                     TX2REG          equ	2586	;# 
  1668     0A1A                     TXREG2          equ	2586	;# 
  1669     0A1B                     SP2BRG          equ	2587	;# 
  1670     0A1B                     SP2BRGL         equ	2587	;# 
  1671     0A1B                     SPBRG2          equ	2587	;# 
  1672     0A1C                     SP2BRGH         equ	2588	;# 
  1673     0A1C                     SPBRGH2         equ	2588	;# 
  1674     0A1D                     RC2STA          equ	2589	;# 
  1675     0A1D                     RCSTA2          equ	2589	;# 
  1676     0A1E                     TX2STA          equ	2590	;# 
  1677     0A1E                     TXSTA2          equ	2590	;# 
  1678     0A1F                     BAUD2CON        equ	2591	;# 
  1679     0A1F                     BAUDCON2        equ	2591	;# 
  1680     0A1F                     BAUDCTL2        equ	2591	;# 
  1681     1E0F                     CLCDATA         equ	7695	;# 
  1682     1E10                     CLC1CON         equ	7696	;# 
  1683     1E11                     CLC1POL         equ	7697	;# 
  1684     1E12                     CLC1SEL0        equ	7698	;# 
  1685     1E13                     CLC1SEL1        equ	7699	;# 
  1686     1E14                     CLC1SEL2        equ	7700	;# 
  1687     1E15                     CLC1SEL3        equ	7701	;# 
  1688     1E16                     CLC1GLS0        equ	7702	;# 
  1689     1E17                     CLC1GLS1        equ	7703	;# 
  1690     1E18                     CLC1GLS2        equ	7704	;# 
  1691     1E19                     CLC1GLS3        equ	7705	;# 
  1692     1E1A                     CLC2CON         equ	7706	;# 
  1693     1E1B                     CLC2POL         equ	7707	;# 
  1694     1E1C                     CLC2SEL0        equ	7708	;# 
  1695     1E1D                     CLC2SEL1        equ	7709	;# 
  1696     1E1E                     CLC2SEL2        equ	7710	;# 
  1697     1E1F                     CLC2SEL3        equ	7711	;# 
  1698     1E20                     CLC2GLS0        equ	7712	;# 
  1699     1E21                     CLC2GLS1        equ	7713	;# 
  1700     1E22                     CLC2GLS2        equ	7714	;# 
  1701     1E23                     CLC2GLS3        equ	7715	;# 
  1702     1E24                     CLC3CON         equ	7716	;# 
  1703     1E25                     CLC3POL         equ	7717	;# 
  1704     1E26                     CLC3SEL0        equ	7718	;# 
  1705     1E27                     CLC3SEL1        equ	7719	;# 
  1706     1E28                     CLC3SEL2        equ	7720	;# 
  1707     1E29                     CLC3SEL3        equ	7721	;# 
  1708     1E2A                     CLC3GLS0        equ	7722	;# 
  1709     1E2B                     CLC3GLS1        equ	7723	;# 
  1710     1E2C                     CLC3GLS2        equ	7724	;# 
  1711     1E2D                     CLC3GLS3        equ	7725	;# 
  1712     1E2E                     CLC4CON         equ	7726	;# 
  1713     1E2F                     CLC4POL         equ	7727	;# 
  1714     1E30                     CLC4SEL0        equ	7728	;# 
  1715     1E31                     CLC4SEL1        equ	7729	;# 
  1716     1E32                     CLC4SEL2        equ	7730	;# 
  1717     1E33                     CLC4SEL3        equ	7731	;# 
  1718     1E34                     CLC4GLS0        equ	7732	;# 
  1719     1E35                     CLC4GLS1        equ	7733	;# 
  1720     1E36                     CLC4GLS2        equ	7734	;# 
  1721     1E37                     CLC4GLS3        equ	7735	;# 
  1722     1E8F                     PPSLOCK         equ	7823	;# 
  1723     1E90                     INTPPS          equ	7824	;# 
  1724     1E91                     T0CKIPPS        equ	7825	;# 
  1725     1E92                     T1CKIPPS        equ	7826	;# 
  1726     1E93                     T1GPPS          equ	7827	;# 
  1727     1E94                     T3CKIPPS        equ	7828	;# 
  1728     1E95                     T3GPPS          equ	7829	;# 
  1729     1E96                     T5CKIPPS        equ	7830	;# 
  1730     1E97                     T5GPPS          equ	7831	;# 
  1731     1E9C                     T2INPPS         equ	7836	;# 
  1732     1E9D                     T4INPPS         equ	7837	;# 
  1733     1E9E                     T6INPPS         equ	7838	;# 
  1734     1EA1                     CCP1PPS         equ	7841	;# 
  1735     1EA2                     CCP2PPS         equ	7842	;# 
  1736     1EA3                     CCP3PPS         equ	7843	;# 
  1737     1EA4                     CCP4PPS         equ	7844	;# 
  1738     1EA5                     CCP5PPS         equ	7845	;# 
  1739     1EA9                     SMT1WINPPS      equ	7849	;# 
  1740     1EAA                     SMT1SIGPPS      equ	7850	;# 
  1741     1EAB                     SMT2WINPPS      equ	7851	;# 
  1742     1EAC                     SMT2SIGPPS      equ	7852	;# 
  1743     1EB1                     CWG1PPS         equ	7857	;# 
  1744     1EB2                     CWG2PPS         equ	7858	;# 
  1745     1EB3                     CWG3PPS         equ	7859	;# 
  1746     1EB8                     MDCARLPPS       equ	7864	;# 
  1747     1EB9                     MDCARHPPS       equ	7865	;# 
  1748     1EBA                     MDSRCPPS        equ	7866	;# 
  1749     1EBB                     CLCIN0PPS       equ	7867	;# 
  1750     1EBC                     CLCIN1PPS       equ	7868	;# 
  1751     1EBD                     CLCIN2PPS       equ	7869	;# 
  1752     1EBE                     CLCIN3PPS       equ	7870	;# 
  1753     1EC3                     ADACTPPS        equ	7875	;# 
  1754     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1755     1EC6                     SSP1DATPPS      equ	7878	;# 
  1756     1EC7                     SSP1SSPPS       equ	7879	;# 
  1757     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1758     1EC9                     SSP2DATPPS      equ	7881	;# 
  1759     1ECA                     SSP2SSPPS       equ	7882	;# 
  1760     1ECB                     RX1PPS          equ	7883	;# 
  1761     1ECC                     CK1PPS          equ	7884	;# 
  1762     1ECD                     RX2PPS          equ	7885	;# 
  1763     1ECE                     CK2PPS          equ	7886	;# 
  1764     1F10                     RA0PPS          equ	7952	;# 
  1765     1F11                     RA1PPS          equ	7953	;# 
  1766     1F12                     RA2PPS          equ	7954	;# 
  1767     1F13                     RA3PPS          equ	7955	;# 
  1768     1F14                     RA4PPS          equ	7956	;# 
  1769     1F15                     RA5PPS          equ	7957	;# 
  1770     1F16                     RA6PPS          equ	7958	;# 
  1771     1F17                     RA7PPS          equ	7959	;# 
  1772     1F18                     RB0PPS          equ	7960	;# 
  1773     1F19                     RB1PPS          equ	7961	;# 
  1774     1F1A                     RB2PPS          equ	7962	;# 
  1775     1F1B                     RB3PPS          equ	7963	;# 
  1776     1F1C                     RB4PPS          equ	7964	;# 
  1777     1F1D                     RB5PPS          equ	7965	;# 
  1778     1F1E                     RB6PPS          equ	7966	;# 
  1779     1F1F                     RB7PPS          equ	7967	;# 
  1780     1F20                     RC0PPS          equ	7968	;# 
  1781     1F21                     RC1PPS          equ	7969	;# 
  1782     1F22                     RC2PPS          equ	7970	;# 
  1783     1F23                     RC3PPS          equ	7971	;# 
  1784     1F24                     RC4PPS          equ	7972	;# 
  1785     1F25                     RC5PPS          equ	7973	;# 
  1786     1F26                     RC6PPS          equ	7974	;# 
  1787     1F27                     RC7PPS          equ	7975	;# 
  1788     1F38                     ANSELA          equ	7992	;# 
  1789     1F39                     WPUA            equ	7993	;# 
  1790     1F3A                     ODCONA          equ	7994	;# 
  1791     1F3B                     SLRCONA         equ	7995	;# 
  1792     1F3C                     INLVLA          equ	7996	;# 
  1793     1F3D                     IOCAP           equ	7997	;# 
  1794     1F3E                     IOCAN           equ	7998	;# 
  1795     1F3F                     IOCAF           equ	7999	;# 
  1796     1F43                     ANSELB          equ	8003	;# 
  1797     1F44                     WPUB            equ	8004	;# 
  1798     1F45                     ODCONB          equ	8005	;# 
  1799     1F46                     SLRCONB         equ	8006	;# 
  1800     1F47                     INLVLB          equ	8007	;# 
  1801     1F48                     IOCBP           equ	8008	;# 
  1802     1F49                     IOCBN           equ	8009	;# 
  1803     1F4A                     IOCBF           equ	8010	;# 
  1804     1F4E                     ANSELC          equ	8014	;# 
  1805     1F4F                     WPUC            equ	8015	;# 
  1806     1F50                     ODCONC          equ	8016	;# 
  1807     1F51                     SLRCONC         equ	8017	;# 
  1808     1F52                     INLVLC          equ	8018	;# 
  1809     1F53                     IOCCP           equ	8019	;# 
  1810     1F54                     IOCCN           equ	8020	;# 
  1811     1F55                     IOCCF           equ	8021	;# 
  1812     1F65                     WPUE            equ	8037	;# 
  1813     1F66                     ODCONE          equ	8038	;# 
  1814     1F67                     SLRCONE         equ	8039	;# 
  1815     1F68                     INLVLE          equ	8040	;# 
  1816     1F69                     IOCEP           equ	8041	;# 
  1817     1F6A                     IOCEN           equ	8042	;# 
  1818     1F6B                     IOCEF           equ	8043	;# 
  1819     1FE4                     STATUS_SHAD     equ	8164	;# 
  1820     1FE5                     WREG_SHAD       equ	8165	;# 
  1821     1FE6                     BSR_SHAD        equ	8166	;# 
  1822     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1823     1FE8                     FSR0_SHAD       equ	8168	;# 
  1824     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1825     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1826     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1827     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1828     1FED                     STKPTR          equ	8173	;# 
  1829     1FEE                     TOSL            equ	8174	;# 
  1830     1FEF                     TOSH            equ	8175	;# 
  1831     0000                     INDF0           equ	0	;# 
  1832     0001                     INDF1           equ	1	;# 
  1833     0002                     PCL             equ	2	;# 
  1834     0003                     STATUS          equ	3	;# 
  1835     0004                     FSR0L           equ	4	;# 
  1836     0005                     FSR0H           equ	5	;# 
  1837     0006                     FSR1L           equ	6	;# 
  1838     0007                     FSR1H           equ	7	;# 
  1839     0008                     BSR             equ	8	;# 
  1840     0009                     WREG            equ	9	;# 
  1841     000A                     PCLATH          equ	10	;# 
  1842     000B                     INTCON          equ	11	;# 
  1843     000C                     PORTA           equ	12	;# 
  1844     000D                     PORTB           equ	13	;# 
  1845     000E                     PORTC           equ	14	;# 
  1846     0010                     PORTE           equ	16	;# 
  1847     0012                     TRISA           equ	18	;# 
  1848     0013                     TRISB           equ	19	;# 
  1849     0014                     TRISC           equ	20	;# 
  1850     0016                     TRISE           equ	22	;# 
  1851     0018                     LATA            equ	24	;# 
  1852     0019                     LATB            equ	25	;# 
  1853     001A                     LATC            equ	26	;# 
  1854     008C                     ADLTH           equ	140	;# 
  1855     008C                     ADLTHL          equ	140	;# 
  1856     008D                     ADLTHH          equ	141	;# 
  1857     008E                     ADUTH           equ	142	;# 
  1858     008E                     ADUTHL          equ	142	;# 
  1859     008F                     ADUTHH          equ	143	;# 
  1860     0090                     ADERR           equ	144	;# 
  1861     0090                     ADERRL          equ	144	;# 
  1862     0091                     ADERRH          equ	145	;# 
  1863     0092                     ADSTPT          equ	146	;# 
  1864     0092                     ADSTPTL         equ	146	;# 
  1865     0093                     ADSTPTH         equ	147	;# 
  1866     0094                     ADFLTR          equ	148	;# 
  1867     0094                     ADFLTRL         equ	148	;# 
  1868     0095                     ADFLTRH         equ	149	;# 
  1869     0096                     ADACC           equ	150	;# 
  1870     0096                     ADACCL          equ	150	;# 
  1871     0097                     ADACCH          equ	151	;# 
  1872     0098                     ADACCU          equ	152	;# 
  1873     0099                     ADCNT           equ	153	;# 
  1874     009A                     ADRPT           equ	154	;# 
  1875     009B                     ADPREV          equ	155	;# 
  1876     009B                     ADPREVL         equ	155	;# 
  1877     009C                     ADPREVH         equ	156	;# 
  1878     009D                     ADRES           equ	157	;# 
  1879     009D                     ADRESL          equ	157	;# 
  1880     009E                     ADRESH          equ	158	;# 
  1881     009F                     ADPCH           equ	159	;# 
  1882     010C                     ADACQ           equ	268	;# 
  1883     010C                     ADACQL          equ	268	;# 
  1884     010D                     ADACQH          equ	269	;# 
  1885     010E                     ADCAP           equ	270	;# 
  1886     010F                     ADPRE           equ	271	;# 
  1887     010F                     ADPREL          equ	271	;# 
  1888     0110                     ADPREH          equ	272	;# 
  1889     0111                     ADCON0          equ	273	;# 
  1890     0112                     ADCON1          equ	274	;# 
  1891     0113                     ADCON2          equ	275	;# 
  1892     0114                     ADCON3          equ	276	;# 
  1893     0115                     ADSTAT          equ	277	;# 
  1894     0116                     ADREF           equ	278	;# 
  1895     0117                     ADACT           equ	279	;# 
  1896     0118                     ADCLK           equ	280	;# 
  1897     0119                     RC1REG          equ	281	;# 
  1898     0119                     RCREG           equ	281	;# 
  1899     0119                     RCREG1          equ	281	;# 
  1900     011A                     TX1REG          equ	282	;# 
  1901     011A                     TXREG1          equ	282	;# 
  1902     011A                     TXREG           equ	282	;# 
  1903     011B                     SP1BRG          equ	283	;# 
  1904     011B                     SPBRG           equ	283	;# 
  1905     011B                     SP1BRGL         equ	283	;# 
  1906     011B                     SPBRG1          equ	283	;# 
  1907     011B                     SPBRGL          equ	283	;# 
  1908     011C                     SP1BRGH         equ	284	;# 
  1909     011C                     SPBRGH          equ	284	;# 
  1910     011C                     SPBRGH1         equ	284	;# 
  1911     011D                     RC1STA          equ	285	;# 
  1912     011D                     RCSTA1          equ	285	;# 
  1913     011D                     RCSTA           equ	285	;# 
  1914     011E                     TX1STA          equ	286	;# 
  1915     011E                     TXSTA1          equ	286	;# 
  1916     011E                     TXSTA           equ	286	;# 
  1917     011F                     BAUD1CON        equ	287	;# 
  1918     011F                     BAUDCON1        equ	287	;# 
  1919     011F                     BAUDCTL1        equ	287	;# 
  1920     011F                     BAUDCON         equ	287	;# 
  1921     011F                     BAUDCTL         equ	287	;# 
  1922     018C                     SSP1BUF         equ	396	;# 
  1923     018D                     SSP1ADD         equ	397	;# 
  1924     018E                     SSP1MSK         equ	398	;# 
  1925     018F                     SSP1STAT        equ	399	;# 
  1926     0190                     SSP1CON1        equ	400	;# 
  1927     0191                     SSP1CON2        equ	401	;# 
  1928     0192                     SSP1CON3        equ	402	;# 
  1929     0196                     SSP2BUF         equ	406	;# 
  1930     0197                     SSP2ADD         equ	407	;# 
  1931     0198                     SSP2MSK         equ	408	;# 
  1932     0199                     SSP2STAT        equ	409	;# 
  1933     019A                     SSP2CON1        equ	410	;# 
  1934     019B                     SSP2CON2        equ	411	;# 
  1935     019C                     SSP2CON3        equ	412	;# 
  1936     020C                     TMR1            equ	524	;# 
  1937     020C                     TMR1L           equ	524	;# 
  1938     020D                     TMR1H           equ	525	;# 
  1939     020E                     T1CON           equ	526	;# 
  1940     020E                     TMR1CON         equ	526	;# 
  1941     020F                     T1GCON          equ	527	;# 
  1942     020F                     TMR1GCON        equ	527	;# 
  1943     0210                     T1GATE          equ	528	;# 
  1944     0210                     TMR1GATE        equ	528	;# 
  1945     0211                     T1CLK           equ	529	;# 
  1946     0211                     TMR1CLK         equ	529	;# 
  1947     0211                     PR1             equ	529	;# 
  1948     0212                     TMR3            equ	530	;# 
  1949     0212                     TMR3L           equ	530	;# 
  1950     0213                     TMR3H           equ	531	;# 
  1951     0214                     T3CON           equ	532	;# 
  1952     0214                     TMR3CON         equ	532	;# 
  1953     0215                     T3GCON          equ	533	;# 
  1954     0215                     TMR3GCON        equ	533	;# 
  1955     0216                     T3GATE          equ	534	;# 
  1956     0216                     TMR3GATE        equ	534	;# 
  1957     0217                     T3CLK           equ	535	;# 
  1958     0217                     TMR3CLK         equ	535	;# 
  1959     0217                     PR3             equ	535	;# 
  1960     0218                     TMR5            equ	536	;# 
  1961     0218                     TMR5L           equ	536	;# 
  1962     0219                     TMR5H           equ	537	;# 
  1963     021A                     T5CON           equ	538	;# 
  1964     021A                     TMR5CON         equ	538	;# 
  1965     021B                     T5GCON          equ	539	;# 
  1966     021B                     TMR5GCON        equ	539	;# 
  1967     021C                     T5GATE          equ	540	;# 
  1968     021C                     TMR5GATE        equ	540	;# 
  1969     021D                     T5CLK           equ	541	;# 
  1970     021D                     TMR5CLK         equ	541	;# 
  1971     021D                     PR5             equ	541	;# 
  1972     021E                     CCPTMRS0        equ	542	;# 
  1973     021F                     CCPTMRS1        equ	543	;# 
  1974     028C                     T2TMR           equ	652	;# 
  1975     028C                     TMR2            equ	652	;# 
  1976     028D                     T2PR            equ	653	;# 
  1977     028D                     PR2             equ	653	;# 
  1978     028E                     T2CON           equ	654	;# 
  1979     028F                     T2HLT           equ	655	;# 
  1980     0290                     T2CLKCON        equ	656	;# 
  1981     0291                     T2RST           equ	657	;# 
  1982     0292                     T4TMR           equ	658	;# 
  1983     0292                     TMR4            equ	658	;# 
  1984     0293                     T4PR            equ	659	;# 
  1985     0293                     PR4             equ	659	;# 
  1986     0294                     T4CON           equ	660	;# 
  1987     0295                     T4HLT           equ	661	;# 
  1988     0296                     T4CLKCON        equ	662	;# 
  1989     0297                     T4RST           equ	663	;# 
  1990     0298                     T6TMR           equ	664	;# 
  1991     0298                     TMR6            equ	664	;# 
  1992     0299                     T6PR            equ	665	;# 
  1993     0299                     PR6             equ	665	;# 
  1994     029A                     T6CON           equ	666	;# 
  1995     029B                     T6HLT           equ	667	;# 
  1996     029C                     T6CLKCON        equ	668	;# 
  1997     029D                     T6RST           equ	669	;# 
  1998     029F                     ADCPCON0        equ	671	;# 
  1999     030C                     CCPR1           equ	780	;# 
  2000     030C                     CCPR1L          equ	780	;# 
  2001     030D                     CCPR1H          equ	781	;# 
  2002     030E                     CCP1CON         equ	782	;# 
  2003     030F                     CCP1CAP         equ	783	;# 
  2004     0310                     CCPR2           equ	784	;# 
  2005     0310                     CCPR2L          equ	784	;# 
  2006     0311                     CCPR2H          equ	785	;# 
  2007     0312                     CCP2CON         equ	786	;# 
  2008     0313                     CCP2CAP         equ	787	;# 
  2009     0314                     CCPR3           equ	788	;# 
  2010     0314                     CCPR3L          equ	788	;# 
  2011     0315                     CCPR3H          equ	789	;# 
  2012     0316                     CCP3CON         equ	790	;# 
  2013     0317                     CCP3CAP         equ	791	;# 
  2014     0318                     CCPR4           equ	792	;# 
  2015     0318                     CCPR4L          equ	792	;# 
  2016     0319                     CCPR4H          equ	793	;# 
  2017     031A                     CCP4CON         equ	794	;# 
  2018     031B                     CCP4CAP         equ	795	;# 
  2019     031C                     CCPR5           equ	796	;# 
  2020     031C                     CCPR5L          equ	796	;# 
  2021     031D                     CCPR5H          equ	797	;# 
  2022     031E                     CCP5CON         equ	798	;# 
  2023     031F                     CCP5CAP         equ	799	;# 
  2024     038C                     PWM6DC          equ	908	;# 
  2025     038C                     PWM6DCL         equ	908	;# 
  2026     038D                     PWM6DCH         equ	909	;# 
  2027     038E                     PWM6CON         equ	910	;# 
  2028     0390                     PWM7DC          equ	912	;# 
  2029     0390                     PWM7DCL         equ	912	;# 
  2030     0391                     PWM7DCH         equ	913	;# 
  2031     0392                     PWM7CON         equ	914	;# 
  2032     048C                     SMT1TMR         equ	1164	;# 
  2033     048C                     SMT1TMRL        equ	1164	;# 
  2034     048D                     SMT1TMRH        equ	1165	;# 
  2035     048E                     SMT1TMRU        equ	1166	;# 
  2036     048F                     SMT1CPR         equ	1167	;# 
  2037     048F                     SMT1CPRL        equ	1167	;# 
  2038     0490                     SMT1CPRH        equ	1168	;# 
  2039     0491                     SMT1CPRU        equ	1169	;# 
  2040     0492                     SMT1CPW         equ	1170	;# 
  2041     0492                     SMT1CPWL        equ	1170	;# 
  2042     0493                     SMT1CPWH        equ	1171	;# 
  2043     0494                     SMT1CPWU        equ	1172	;# 
  2044     0495                     SMT1PR          equ	1173	;# 
  2045     0495                     SMT1PRL         equ	1173	;# 
  2046     0496                     SMT1PRH         equ	1174	;# 
  2047     0497                     SMT1PRU         equ	1175	;# 
  2048     0498                     SMT1CON0        equ	1176	;# 
  2049     0499                     SMT1CON1        equ	1177	;# 
  2050     049A                     SMT1STAT        equ	1178	;# 
  2051     049B                     SMT1CLK         equ	1179	;# 
  2052     049C                     SMT1SIG         equ	1180	;# 
  2053     049D                     SMT1WIN         equ	1181	;# 
  2054     050C                     SMT2TMR         equ	1292	;# 
  2055     050C                     SMT2TMRL        equ	1292	;# 
  2056     050D                     SMT2TMRH        equ	1293	;# 
  2057     050E                     SMT2TMRU        equ	1294	;# 
  2058     050F                     SMT2CPR         equ	1295	;# 
  2059     050F                     SMT2CPRL        equ	1295	;# 
  2060     0510                     SMT2CPRH        equ	1296	;# 
  2061     0511                     SMT2CPRU        equ	1297	;# 
  2062     0512                     SMT2CPW         equ	1298	;# 
  2063     0512                     SMT2CPWL        equ	1298	;# 
  2064     0513                     SMT2CPWH        equ	1299	;# 
  2065     0514                     SMT2CPWU        equ	1300	;# 
  2066     0515                     SMT2PR          equ	1301	;# 
  2067     0515                     SMT2PRL         equ	1301	;# 
  2068     0516                     SMT2PRH         equ	1302	;# 
  2069     0517                     SMT2PRU         equ	1303	;# 
  2070     0518                     SMT2CON0        equ	1304	;# 
  2071     0519                     SMT2CON1        equ	1305	;# 
  2072     051A                     SMT2STAT        equ	1306	;# 
  2073     051B                     SMT2CLK         equ	1307	;# 
  2074     051C                     SMT2SIG         equ	1308	;# 
  2075     051D                     SMT2WIN         equ	1309	;# 
  2076     058C                     NCO1ACC         equ	1420	;# 
  2077     058C                     NCO1ACCL        equ	1420	;# 
  2078     058D                     NCO1ACCH        equ	1421	;# 
  2079     058E                     NCO1ACCU        equ	1422	;# 
  2080     058F                     NCO1INC         equ	1423	;# 
  2081     058F                     NCO1INCL        equ	1423	;# 
  2082     0590                     NCO1INCH        equ	1424	;# 
  2083     0591                     NCO1INCU        equ	1425	;# 
  2084     0592                     NCO1CON         equ	1426	;# 
  2085     0593                     NCO1CLK         equ	1427	;# 
  2086     059C                     TMR0L           equ	1436	;# 
  2087     059C                     TMR0            equ	1436	;# 
  2088     059D                     TMR0H           equ	1437	;# 
  2089     059D                     PR0             equ	1437	;# 
  2090     059E                     T0CON0          equ	1438	;# 
  2091     059F                     T0CON1          equ	1439	;# 
  2092     060C                     CWG1CLK         equ	1548	;# 
  2093     060C                     CWG1CLKCON      equ	1548	;# 
  2094     060D                     CWG1ISM         equ	1549	;# 
  2095     060D                     CWG1DAT         equ	1549	;# 
  2096     060E                     CWG1DBR         equ	1550	;# 
  2097     060F                     CWG1DBF         equ	1551	;# 
  2098     0610                     CWG1CON0        equ	1552	;# 
  2099     0611                     CWG1CON1        equ	1553	;# 
  2100     0612                     CWG1AS0         equ	1554	;# 
  2101     0613                     CWG1AS1         equ	1555	;# 
  2102     0614                     CWG1STR         equ	1556	;# 
  2103     0616                     CWG2CLK         equ	1558	;# 
  2104     0616                     CWG2CLKCON      equ	1558	;# 
  2105     0617                     CWG2ISM         equ	1559	;# 
  2106     0617                     CWG2DAT         equ	1559	;# 
  2107     0618                     CWG2DBR         equ	1560	;# 
  2108     0619                     CWG2DBF         equ	1561	;# 
  2109     061A                     CWG2CON0        equ	1562	;# 
  2110     061B                     CWG2CON1        equ	1563	;# 
  2111     061C                     CWG2AS0         equ	1564	;# 
  2112     061D                     CWG2AS1         equ	1565	;# 
  2113     061E                     CWG2STR         equ	1566	;# 
  2114     068C                     CWG3CLK         equ	1676	;# 
  2115     068C                     CWG3CLKCON      equ	1676	;# 
  2116     068D                     CWG3ISM         equ	1677	;# 
  2117     068D                     CWG3DAT         equ	1677	;# 
  2118     068E                     CWG3DBR         equ	1678	;# 
  2119     068F                     CWG3DBF         equ	1679	;# 
  2120     0690                     CWG3CON0        equ	1680	;# 
  2121     0691                     CWG3CON1        equ	1681	;# 
  2122     0692                     CWG3AS0         equ	1682	;# 
  2123     0693                     CWG3AS1         equ	1683	;# 
  2124     0694                     CWG3STR         equ	1684	;# 
  2125     070C                     PIR0            equ	1804	;# 
  2126     070D                     PIR1            equ	1805	;# 
  2127     070E                     PIR2            equ	1806	;# 
  2128     070F                     PIR3            equ	1807	;# 
  2129     0710                     PIR4            equ	1808	;# 
  2130     0711                     PIR5            equ	1809	;# 
  2131     0712                     PIR6            equ	1810	;# 
  2132     0713                     PIR7            equ	1811	;# 
  2133     0714                     PIR8            equ	1812	;# 
  2134     0716                     PIE0            equ	1814	;# 
  2135     0717                     PIE1            equ	1815	;# 
  2136     0718                     PIE2            equ	1816	;# 
  2137     0719                     PIE3            equ	1817	;# 
  2138     071A                     PIE4            equ	1818	;# 
  2139     071B                     PIE5            equ	1819	;# 
  2140     071C                     PIE6            equ	1820	;# 
  2141     071D                     PIE7            equ	1821	;# 
  2142     071E                     PIE8            equ	1822	;# 
  2143     0796                     PMD0            equ	1942	;# 
  2144     0797                     PMD1            equ	1943	;# 
  2145     0798                     PMD2            equ	1944	;# 
  2146     0799                     PMD3            equ	1945	;# 
  2147     079A                     PMD4            equ	1946	;# 
  2148     079B                     PMD5            equ	1947	;# 
  2149     079C                     PMD6            equ	1948	;# 
  2150     079D                     PMD7            equ	1949	;# 
  2151     080C                     WDTCON0         equ	2060	;# 
  2152     080D                     WDTCON1         equ	2061	;# 
  2153     080E                     WDTPSL          equ	2062	;# 
  2154     080F                     WDTPSH          equ	2063	;# 
  2155     0810                     WDTTMR          equ	2064	;# 
  2156     0811                     BORCON          equ	2065	;# 
  2157     0813                     PCON0           equ	2067	;# 
  2158     0814                     PCON1           equ	2068	;# 
  2159     081A                     NVMADR          equ	2074	;# 
  2160     081A                     NVMADRL         equ	2074	;# 
  2161     081B                     NVMADRH         equ	2075	;# 
  2162     081C                     NVMDAT          equ	2076	;# 
  2163     081C                     NVMDATL         equ	2076	;# 
  2164     081D                     NVMDATH         equ	2077	;# 
  2165     081E                     NVMCON1         equ	2078	;# 
  2166     081F                     NVMCON2         equ	2079	;# 
  2167     088C                     CPUDOZE         equ	2188	;# 
  2168     088D                     OSCCON1         equ	2189	;# 
  2169     088E                     OSCCON2         equ	2190	;# 
  2170     088F                     OSCCON3         equ	2191	;# 
  2171     0890                     OSCSTAT         equ	2192	;# 
  2172     0891                     OSCEN           equ	2193	;# 
  2173     0892                     OSCTUNE         equ	2194	;# 
  2174     0893                     OSCFRQ          equ	2195	;# 
  2175     0895                     CLKRCON         equ	2197	;# 
  2176     0896                     CLKRCLK         equ	2198	;# 
  2177     0897                     MD1CON0         equ	2199	;# 
  2178     0898                     MD1CON1         equ	2200	;# 
  2179     0899                     MD1SRC          equ	2201	;# 
  2180     089A                     MD1CARL         equ	2202	;# 
  2181     089B                     MD1CARH         equ	2203	;# 
  2182     090C                     FVRCON          equ	2316	;# 
  2183     090E                     DAC1CON0        equ	2318	;# 
  2184     090F                     DAC1CON1        equ	2319	;# 
  2185     091F                     ZCDCON          equ	2335	;# 
  2186     098F                     CMOUT           equ	2447	;# 
  2187     098F                     CMSTAT          equ	2447	;# 
  2188     0990                     CM1CON0         equ	2448	;# 
  2189     0991                     CM1CON1         equ	2449	;# 
  2190     0992                     CM1NCH          equ	2450	;# 
  2191     0993                     CM1PCH          equ	2451	;# 
  2192     0994                     CM2CON0         equ	2452	;# 
  2193     0995                     CM2CON1         equ	2453	;# 
  2194     0996                     CM2NCH          equ	2454	;# 
  2195     0997                     CM2PCH          equ	2455	;# 
  2196     0A19                     RC2REG          equ	2585	;# 
  2197     0A19                     RCREG2          equ	2585	;# 
  2198     0A1A                     TX2REG          equ	2586	;# 
  2199     0A1A                     TXREG2          equ	2586	;# 
  2200     0A1B                     SP2BRG          equ	2587	;# 
  2201     0A1B                     SP2BRGL         equ	2587	;# 
  2202     0A1B                     SPBRG2          equ	2587	;# 
  2203     0A1C                     SP2BRGH         equ	2588	;# 
  2204     0A1C                     SPBRGH2         equ	2588	;# 
  2205     0A1D                     RC2STA          equ	2589	;# 
  2206     0A1D                     RCSTA2          equ	2589	;# 
  2207     0A1E                     TX2STA          equ	2590	;# 
  2208     0A1E                     TXSTA2          equ	2590	;# 
  2209     0A1F                     BAUD2CON        equ	2591	;# 
  2210     0A1F                     BAUDCON2        equ	2591	;# 
  2211     0A1F                     BAUDCTL2        equ	2591	;# 
  2212     1E0F                     CLCDATA         equ	7695	;# 
  2213     1E10                     CLC1CON         equ	7696	;# 
  2214     1E11                     CLC1POL         equ	7697	;# 
  2215     1E12                     CLC1SEL0        equ	7698	;# 
  2216     1E13                     CLC1SEL1        equ	7699	;# 
  2217     1E14                     CLC1SEL2        equ	7700	;# 
  2218     1E15                     CLC1SEL3        equ	7701	;# 
  2219     1E16                     CLC1GLS0        equ	7702	;# 
  2220     1E17                     CLC1GLS1        equ	7703	;# 
  2221     1E18                     CLC1GLS2        equ	7704	;# 
  2222     1E19                     CLC1GLS3        equ	7705	;# 
  2223     1E1A                     CLC2CON         equ	7706	;# 
  2224     1E1B                     CLC2POL         equ	7707	;# 
  2225     1E1C                     CLC2SEL0        equ	7708	;# 
  2226     1E1D                     CLC2SEL1        equ	7709	;# 
  2227     1E1E                     CLC2SEL2        equ	7710	;# 
  2228     1E1F                     CLC2SEL3        equ	7711	;# 
  2229     1E20                     CLC2GLS0        equ	7712	;# 
  2230     1E21                     CLC2GLS1        equ	7713	;# 
  2231     1E22                     CLC2GLS2        equ	7714	;# 
  2232     1E23                     CLC2GLS3        equ	7715	;# 
  2233     1E24                     CLC3CON         equ	7716	;# 
  2234     1E25                     CLC3POL         equ	7717	;# 
  2235     1E26                     CLC3SEL0        equ	7718	;# 
  2236     1E27                     CLC3SEL1        equ	7719	;# 
  2237     1E28                     CLC3SEL2        equ	7720	;# 
  2238     1E29                     CLC3SEL3        equ	7721	;# 
  2239     1E2A                     CLC3GLS0        equ	7722	;# 
  2240     1E2B                     CLC3GLS1        equ	7723	;# 
  2241     1E2C                     CLC3GLS2        equ	7724	;# 
  2242     1E2D                     CLC3GLS3        equ	7725	;# 
  2243     1E2E                     CLC4CON         equ	7726	;# 
  2244     1E2F                     CLC4POL         equ	7727	;# 
  2245     1E30                     CLC4SEL0        equ	7728	;# 
  2246     1E31                     CLC4SEL1        equ	7729	;# 
  2247     1E32                     CLC4SEL2        equ	7730	;# 
  2248     1E33                     CLC4SEL3        equ	7731	;# 
  2249     1E34                     CLC4GLS0        equ	7732	;# 
  2250     1E35                     CLC4GLS1        equ	7733	;# 
  2251     1E36                     CLC4GLS2        equ	7734	;# 
  2252     1E37                     CLC4GLS3        equ	7735	;# 
  2253     1E8F                     PPSLOCK         equ	7823	;# 
  2254     1E90                     INTPPS          equ	7824	;# 
  2255     1E91                     T0CKIPPS        equ	7825	;# 
  2256     1E92                     T1CKIPPS        equ	7826	;# 
  2257     1E93                     T1GPPS          equ	7827	;# 
  2258     1E94                     T3CKIPPS        equ	7828	;# 
  2259     1E95                     T3GPPS          equ	7829	;# 
  2260     1E96                     T5CKIPPS        equ	7830	;# 
  2261     1E97                     T5GPPS          equ	7831	;# 
  2262     1E9C                     T2INPPS         equ	7836	;# 
  2263     1E9D                     T4INPPS         equ	7837	;# 
  2264     1E9E                     T6INPPS         equ	7838	;# 
  2265     1EA1                     CCP1PPS         equ	7841	;# 
  2266     1EA2                     CCP2PPS         equ	7842	;# 
  2267     1EA3                     CCP3PPS         equ	7843	;# 
  2268     1EA4                     CCP4PPS         equ	7844	;# 
  2269     1EA5                     CCP5PPS         equ	7845	;# 
  2270     1EA9                     SMT1WINPPS      equ	7849	;# 
  2271     1EAA                     SMT1SIGPPS      equ	7850	;# 
  2272     1EAB                     SMT2WINPPS      equ	7851	;# 
  2273     1EAC                     SMT2SIGPPS      equ	7852	;# 
  2274     1EB1                     CWG1PPS         equ	7857	;# 
  2275     1EB2                     CWG2PPS         equ	7858	;# 
  2276     1EB3                     CWG3PPS         equ	7859	;# 
  2277     1EB8                     MDCARLPPS       equ	7864	;# 
  2278     1EB9                     MDCARHPPS       equ	7865	;# 
  2279     1EBA                     MDSRCPPS        equ	7866	;# 
  2280     1EBB                     CLCIN0PPS       equ	7867	;# 
  2281     1EBC                     CLCIN1PPS       equ	7868	;# 
  2282     1EBD                     CLCIN2PPS       equ	7869	;# 
  2283     1EBE                     CLCIN3PPS       equ	7870	;# 
  2284     1EC3                     ADACTPPS        equ	7875	;# 
  2285     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2286     1EC6                     SSP1DATPPS      equ	7878	;# 
  2287     1EC7                     SSP1SSPPS       equ	7879	;# 
  2288     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2289     1EC9                     SSP2DATPPS      equ	7881	;# 
  2290     1ECA                     SSP2SSPPS       equ	7882	;# 
  2291     1ECB                     RX1PPS          equ	7883	;# 
  2292     1ECC                     CK1PPS          equ	7884	;# 
  2293     1ECD                     RX2PPS          equ	7885	;# 
  2294     1ECE                     CK2PPS          equ	7886	;# 
  2295     1F10                     RA0PPS          equ	7952	;# 
  2296     1F11                     RA1PPS          equ	7953	;# 
  2297     1F12                     RA2PPS          equ	7954	;# 
  2298     1F13                     RA3PPS          equ	7955	;# 
  2299     1F14                     RA4PPS          equ	7956	;# 
  2300     1F15                     RA5PPS          equ	7957	;# 
  2301     1F16                     RA6PPS          equ	7958	;# 
  2302     1F17                     RA7PPS          equ	7959	;# 
  2303     1F18                     RB0PPS          equ	7960	;# 
  2304     1F19                     RB1PPS          equ	7961	;# 
  2305     1F1A                     RB2PPS          equ	7962	;# 
  2306     1F1B                     RB3PPS          equ	7963	;# 
  2307     1F1C                     RB4PPS          equ	7964	;# 
  2308     1F1D                     RB5PPS          equ	7965	;# 
  2309     1F1E                     RB6PPS          equ	7966	;# 
  2310     1F1F                     RB7PPS          equ	7967	;# 
  2311     1F20                     RC0PPS          equ	7968	;# 
  2312     1F21                     RC1PPS          equ	7969	;# 
  2313     1F22                     RC2PPS          equ	7970	;# 
  2314     1F23                     RC3PPS          equ	7971	;# 
  2315     1F24                     RC4PPS          equ	7972	;# 
  2316     1F25                     RC5PPS          equ	7973	;# 
  2317     1F26                     RC6PPS          equ	7974	;# 
  2318     1F27                     RC7PPS          equ	7975	;# 
  2319     1F38                     ANSELA          equ	7992	;# 
  2320     1F39                     WPUA            equ	7993	;# 
  2321     1F3A                     ODCONA          equ	7994	;# 
  2322     1F3B                     SLRCONA         equ	7995	;# 
  2323     1F3C                     INLVLA          equ	7996	;# 
  2324     1F3D                     IOCAP           equ	7997	;# 
  2325     1F3E                     IOCAN           equ	7998	;# 
  2326     1F3F                     IOCAF           equ	7999	;# 
  2327     1F43                     ANSELB          equ	8003	;# 
  2328     1F44                     WPUB            equ	8004	;# 
  2329     1F45                     ODCONB          equ	8005	;# 
  2330     1F46                     SLRCONB         equ	8006	;# 
  2331     1F47                     INLVLB          equ	8007	;# 
  2332     1F48                     IOCBP           equ	8008	;# 
  2333     1F49                     IOCBN           equ	8009	;# 
  2334     1F4A                     IOCBF           equ	8010	;# 
  2335     1F4E                     ANSELC          equ	8014	;# 
  2336     1F4F                     WPUC            equ	8015	;# 
  2337     1F50                     ODCONC          equ	8016	;# 
  2338     1F51                     SLRCONC         equ	8017	;# 
  2339     1F52                     INLVLC          equ	8018	;# 
  2340     1F53                     IOCCP           equ	8019	;# 
  2341     1F54                     IOCCN           equ	8020	;# 
  2342     1F55                     IOCCF           equ	8021	;# 
  2343     1F65                     WPUE            equ	8037	;# 
  2344     1F66                     ODCONE          equ	8038	;# 
  2345     1F67                     SLRCONE         equ	8039	;# 
  2346     1F68                     INLVLE          equ	8040	;# 
  2347     1F69                     IOCEP           equ	8041	;# 
  2348     1F6A                     IOCEN           equ	8042	;# 
  2349     1F6B                     IOCEF           equ	8043	;# 
  2350     1FE4                     STATUS_SHAD     equ	8164	;# 
  2351     1FE5                     WREG_SHAD       equ	8165	;# 
  2352     1FE6                     BSR_SHAD        equ	8166	;# 
  2353     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2354     1FE8                     FSR0_SHAD       equ	8168	;# 
  2355     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2356     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2357     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2358     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2359     1FED                     STKPTR          equ	8173	;# 
  2360     1FEE                     TOSL            equ	8174	;# 
  2361     1FEF                     TOSH            equ	8175	;# 
  2362     0000                     INDF0           equ	0	;# 
  2363     0001                     INDF1           equ	1	;# 
  2364     0002                     PCL             equ	2	;# 
  2365     0003                     STATUS          equ	3	;# 
  2366     0004                     FSR0L           equ	4	;# 
  2367     0005                     FSR0H           equ	5	;# 
  2368     0006                     FSR1L           equ	6	;# 
  2369     0007                     FSR1H           equ	7	;# 
  2370     0008                     BSR             equ	8	;# 
  2371     0009                     WREG            equ	9	;# 
  2372     000A                     PCLATH          equ	10	;# 
  2373     000B                     INTCON          equ	11	;# 
  2374     000C                     PORTA           equ	12	;# 
  2375     000D                     PORTB           equ	13	;# 
  2376     000E                     PORTC           equ	14	;# 
  2377     0010                     PORTE           equ	16	;# 
  2378     0012                     TRISA           equ	18	;# 
  2379     0013                     TRISB           equ	19	;# 
  2380     0014                     TRISC           equ	20	;# 
  2381     0016                     TRISE           equ	22	;# 
  2382     0018                     LATA            equ	24	;# 
  2383     0019                     LATB            equ	25	;# 
  2384     001A                     LATC            equ	26	;# 
  2385     008C                     ADLTH           equ	140	;# 
  2386     008C                     ADLTHL          equ	140	;# 
  2387     008D                     ADLTHH          equ	141	;# 
  2388     008E                     ADUTH           equ	142	;# 
  2389     008E                     ADUTHL          equ	142	;# 
  2390     008F                     ADUTHH          equ	143	;# 
  2391     0090                     ADERR           equ	144	;# 
  2392     0090                     ADERRL          equ	144	;# 
  2393     0091                     ADERRH          equ	145	;# 
  2394     0092                     ADSTPT          equ	146	;# 
  2395     0092                     ADSTPTL         equ	146	;# 
  2396     0093                     ADSTPTH         equ	147	;# 
  2397     0094                     ADFLTR          equ	148	;# 
  2398     0094                     ADFLTRL         equ	148	;# 
  2399     0095                     ADFLTRH         equ	149	;# 
  2400     0096                     ADACC           equ	150	;# 
  2401     0096                     ADACCL          equ	150	;# 
  2402     0097                     ADACCH          equ	151	;# 
  2403     0098                     ADACCU          equ	152	;# 
  2404     0099                     ADCNT           equ	153	;# 
  2405     009A                     ADRPT           equ	154	;# 
  2406     009B                     ADPREV          equ	155	;# 
  2407     009B                     ADPREVL         equ	155	;# 
  2408     009C                     ADPREVH         equ	156	;# 
  2409     009D                     ADRES           equ	157	;# 
  2410     009D                     ADRESL          equ	157	;# 
  2411     009E                     ADRESH          equ	158	;# 
  2412     009F                     ADPCH           equ	159	;# 
  2413     010C                     ADACQ           equ	268	;# 
  2414     010C                     ADACQL          equ	268	;# 
  2415     010D                     ADACQH          equ	269	;# 
  2416     010E                     ADCAP           equ	270	;# 
  2417     010F                     ADPRE           equ	271	;# 
  2418     010F                     ADPREL          equ	271	;# 
  2419     0110                     ADPREH          equ	272	;# 
  2420     0111                     ADCON0          equ	273	;# 
  2421     0112                     ADCON1          equ	274	;# 
  2422     0113                     ADCON2          equ	275	;# 
  2423     0114                     ADCON3          equ	276	;# 
  2424     0115                     ADSTAT          equ	277	;# 
  2425     0116                     ADREF           equ	278	;# 
  2426     0117                     ADACT           equ	279	;# 
  2427     0118                     ADCLK           equ	280	;# 
  2428     0119                     RC1REG          equ	281	;# 
  2429     0119                     RCREG           equ	281	;# 
  2430     0119                     RCREG1          equ	281	;# 
  2431     011A                     TX1REG          equ	282	;# 
  2432     011A                     TXREG1          equ	282	;# 
  2433     011A                     TXREG           equ	282	;# 
  2434     011B                     SP1BRG          equ	283	;# 
  2435     011B                     SPBRG           equ	283	;# 
  2436     011B                     SP1BRGL         equ	283	;# 
  2437     011B                     SPBRG1          equ	283	;# 
  2438     011B                     SPBRGL          equ	283	;# 
  2439     011C                     SP1BRGH         equ	284	;# 
  2440     011C                     SPBRGH          equ	284	;# 
  2441     011C                     SPBRGH1         equ	284	;# 
  2442     011D                     RC1STA          equ	285	;# 
  2443     011D                     RCSTA1          equ	285	;# 
  2444     011D                     RCSTA           equ	285	;# 
  2445     011E                     TX1STA          equ	286	;# 
  2446     011E                     TXSTA1          equ	286	;# 
  2447     011E                     TXSTA           equ	286	;# 
  2448     011F                     BAUD1CON        equ	287	;# 
  2449     011F                     BAUDCON1        equ	287	;# 
  2450     011F                     BAUDCTL1        equ	287	;# 
  2451     011F                     BAUDCON         equ	287	;# 
  2452     011F                     BAUDCTL         equ	287	;# 
  2453     018C                     SSP1BUF         equ	396	;# 
  2454     018D                     SSP1ADD         equ	397	;# 
  2455     018E                     SSP1MSK         equ	398	;# 
  2456     018F                     SSP1STAT        equ	399	;# 
  2457     0190                     SSP1CON1        equ	400	;# 
  2458     0191                     SSP1CON2        equ	401	;# 
  2459     0192                     SSP1CON3        equ	402	;# 
  2460     0196                     SSP2BUF         equ	406	;# 
  2461     0197                     SSP2ADD         equ	407	;# 
  2462     0198                     SSP2MSK         equ	408	;# 
  2463     0199                     SSP2STAT        equ	409	;# 
  2464     019A                     SSP2CON1        equ	410	;# 
  2465     019B                     SSP2CON2        equ	411	;# 
  2466     019C                     SSP2CON3        equ	412	;# 
  2467     020C                     TMR1            equ	524	;# 
  2468     020C                     TMR1L           equ	524	;# 
  2469     020D                     TMR1H           equ	525	;# 
  2470     020E                     T1CON           equ	526	;# 
  2471     020E                     TMR1CON         equ	526	;# 
  2472     020F                     T1GCON          equ	527	;# 
  2473     020F                     TMR1GCON        equ	527	;# 
  2474     0210                     T1GATE          equ	528	;# 
  2475     0210                     TMR1GATE        equ	528	;# 
  2476     0211                     T1CLK           equ	529	;# 
  2477     0211                     TMR1CLK         equ	529	;# 
  2478     0211                     PR1             equ	529	;# 
  2479     0212                     TMR3            equ	530	;# 
  2480     0212                     TMR3L           equ	530	;# 
  2481     0213                     TMR3H           equ	531	;# 
  2482     0214                     T3CON           equ	532	;# 
  2483     0214                     TMR3CON         equ	532	;# 
  2484     0215                     T3GCON          equ	533	;# 
  2485     0215                     TMR3GCON        equ	533	;# 
  2486     0216                     T3GATE          equ	534	;# 
  2487     0216                     TMR3GATE        equ	534	;# 
  2488     0217                     T3CLK           equ	535	;# 
  2489     0217                     TMR3CLK         equ	535	;# 
  2490     0217                     PR3             equ	535	;# 
  2491     0218                     TMR5            equ	536	;# 
  2492     0218                     TMR5L           equ	536	;# 
  2493     0219                     TMR5H           equ	537	;# 
  2494     021A                     T5CON           equ	538	;# 
  2495     021A                     TMR5CON         equ	538	;# 
  2496     021B                     T5GCON          equ	539	;# 
  2497     021B                     TMR5GCON        equ	539	;# 
  2498     021C                     T5GATE          equ	540	;# 
  2499     021C                     TMR5GATE        equ	540	;# 
  2500     021D                     T5CLK           equ	541	;# 
  2501     021D                     TMR5CLK         equ	541	;# 
  2502     021D                     PR5             equ	541	;# 
  2503     021E                     CCPTMRS0        equ	542	;# 
  2504     021F                     CCPTMRS1        equ	543	;# 
  2505     028C                     T2TMR           equ	652	;# 
  2506     028C                     TMR2            equ	652	;# 
  2507     028D                     T2PR            equ	653	;# 
  2508     028D                     PR2             equ	653	;# 
  2509     028E                     T2CON           equ	654	;# 
  2510     028F                     T2HLT           equ	655	;# 
  2511     0290                     T2CLKCON        equ	656	;# 
  2512     0291                     T2RST           equ	657	;# 
  2513     0292                     T4TMR           equ	658	;# 
  2514     0292                     TMR4            equ	658	;# 
  2515     0293                     T4PR            equ	659	;# 
  2516     0293                     PR4             equ	659	;# 
  2517     0294                     T4CON           equ	660	;# 
  2518     0295                     T4HLT           equ	661	;# 
  2519     0296                     T4CLKCON        equ	662	;# 
  2520     0297                     T4RST           equ	663	;# 
  2521     0298                     T6TMR           equ	664	;# 
  2522     0298                     TMR6            equ	664	;# 
  2523     0299                     T6PR            equ	665	;# 
  2524     0299                     PR6             equ	665	;# 
  2525     029A                     T6CON           equ	666	;# 
  2526     029B                     T6HLT           equ	667	;# 
  2527     029C                     T6CLKCON        equ	668	;# 
  2528     029D                     T6RST           equ	669	;# 
  2529     029F                     ADCPCON0        equ	671	;# 
  2530     030C                     CCPR1           equ	780	;# 
  2531     030C                     CCPR1L          equ	780	;# 
  2532     030D                     CCPR1H          equ	781	;# 
  2533     030E                     CCP1CON         equ	782	;# 
  2534     030F                     CCP1CAP         equ	783	;# 
  2535     0310                     CCPR2           equ	784	;# 
  2536     0310                     CCPR2L          equ	784	;# 
  2537     0311                     CCPR2H          equ	785	;# 
  2538     0312                     CCP2CON         equ	786	;# 
  2539     0313                     CCP2CAP         equ	787	;# 
  2540     0314                     CCPR3           equ	788	;# 
  2541     0314                     CCPR3L          equ	788	;# 
  2542     0315                     CCPR3H          equ	789	;# 
  2543     0316                     CCP3CON         equ	790	;# 
  2544     0317                     CCP3CAP         equ	791	;# 
  2545     0318                     CCPR4           equ	792	;# 
  2546     0318                     CCPR4L          equ	792	;# 
  2547     0319                     CCPR4H          equ	793	;# 
  2548     031A                     CCP4CON         equ	794	;# 
  2549     031B                     CCP4CAP         equ	795	;# 
  2550     031C                     CCPR5           equ	796	;# 
  2551     031C                     CCPR5L          equ	796	;# 
  2552     031D                     CCPR5H          equ	797	;# 
  2553     031E                     CCP5CON         equ	798	;# 
  2554     031F                     CCP5CAP         equ	799	;# 
  2555     038C                     PWM6DC          equ	908	;# 
  2556     038C                     PWM6DCL         equ	908	;# 
  2557     038D                     PWM6DCH         equ	909	;# 
  2558     038E                     PWM6CON         equ	910	;# 
  2559     0390                     PWM7DC          equ	912	;# 
  2560     0390                     PWM7DCL         equ	912	;# 
  2561     0391                     PWM7DCH         equ	913	;# 
  2562     0392                     PWM7CON         equ	914	;# 
  2563     048C                     SMT1TMR         equ	1164	;# 
  2564     048C                     SMT1TMRL        equ	1164	;# 
  2565     048D                     SMT1TMRH        equ	1165	;# 
  2566     048E                     SMT1TMRU        equ	1166	;# 
  2567     048F                     SMT1CPR         equ	1167	;# 
  2568     048F                     SMT1CPRL        equ	1167	;# 
  2569     0490                     SMT1CPRH        equ	1168	;# 
  2570     0491                     SMT1CPRU        equ	1169	;# 
  2571     0492                     SMT1CPW         equ	1170	;# 
  2572     0492                     SMT1CPWL        equ	1170	;# 
  2573     0493                     SMT1CPWH        equ	1171	;# 
  2574     0494                     SMT1CPWU        equ	1172	;# 
  2575     0495                     SMT1PR          equ	1173	;# 
  2576     0495                     SMT1PRL         equ	1173	;# 
  2577     0496                     SMT1PRH         equ	1174	;# 
  2578     0497                     SMT1PRU         equ	1175	;# 
  2579     0498                     SMT1CON0        equ	1176	;# 
  2580     0499                     SMT1CON1        equ	1177	;# 
  2581     049A                     SMT1STAT        equ	1178	;# 
  2582     049B                     SMT1CLK         equ	1179	;# 
  2583     049C                     SMT1SIG         equ	1180	;# 
  2584     049D                     SMT1WIN         equ	1181	;# 
  2585     050C                     SMT2TMR         equ	1292	;# 
  2586     050C                     SMT2TMRL        equ	1292	;# 
  2587     050D                     SMT2TMRH        equ	1293	;# 
  2588     050E                     SMT2TMRU        equ	1294	;# 
  2589     050F                     SMT2CPR         equ	1295	;# 
  2590     050F                     SMT2CPRL        equ	1295	;# 
  2591     0510                     SMT2CPRH        equ	1296	;# 
  2592     0511                     SMT2CPRU        equ	1297	;# 
  2593     0512                     SMT2CPW         equ	1298	;# 
  2594     0512                     SMT2CPWL        equ	1298	;# 
  2595     0513                     SMT2CPWH        equ	1299	;# 
  2596     0514                     SMT2CPWU        equ	1300	;# 
  2597     0515                     SMT2PR          equ	1301	;# 
  2598     0515                     SMT2PRL         equ	1301	;# 
  2599     0516                     SMT2PRH         equ	1302	;# 
  2600     0517                     SMT2PRU         equ	1303	;# 
  2601     0518                     SMT2CON0        equ	1304	;# 
  2602     0519                     SMT2CON1        equ	1305	;# 
  2603     051A                     SMT2STAT        equ	1306	;# 
  2604     051B                     SMT2CLK         equ	1307	;# 
  2605     051C                     SMT2SIG         equ	1308	;# 
  2606     051D                     SMT2WIN         equ	1309	;# 
  2607     058C                     NCO1ACC         equ	1420	;# 
  2608     058C                     NCO1ACCL        equ	1420	;# 
  2609     058D                     NCO1ACCH        equ	1421	;# 
  2610     058E                     NCO1ACCU        equ	1422	;# 
  2611     058F                     NCO1INC         equ	1423	;# 
  2612     058F                     NCO1INCL        equ	1423	;# 
  2613     0590                     NCO1INCH        equ	1424	;# 
  2614     0591                     NCO1INCU        equ	1425	;# 
  2615     0592                     NCO1CON         equ	1426	;# 
  2616     0593                     NCO1CLK         equ	1427	;# 
  2617     059C                     TMR0L           equ	1436	;# 
  2618     059C                     TMR0            equ	1436	;# 
  2619     059D                     TMR0H           equ	1437	;# 
  2620     059D                     PR0             equ	1437	;# 
  2621     059E                     T0CON0          equ	1438	;# 
  2622     059F                     T0CON1          equ	1439	;# 
  2623     060C                     CWG1CLK         equ	1548	;# 
  2624     060C                     CWG1CLKCON      equ	1548	;# 
  2625     060D                     CWG1ISM         equ	1549	;# 
  2626     060D                     CWG1DAT         equ	1549	;# 
  2627     060E                     CWG1DBR         equ	1550	;# 
  2628     060F                     CWG1DBF         equ	1551	;# 
  2629     0610                     CWG1CON0        equ	1552	;# 
  2630     0611                     CWG1CON1        equ	1553	;# 
  2631     0612                     CWG1AS0         equ	1554	;# 
  2632     0613                     CWG1AS1         equ	1555	;# 
  2633     0614                     CWG1STR         equ	1556	;# 
  2634     0616                     CWG2CLK         equ	1558	;# 
  2635     0616                     CWG2CLKCON      equ	1558	;# 
  2636     0617                     CWG2ISM         equ	1559	;# 
  2637     0617                     CWG2DAT         equ	1559	;# 
  2638     0618                     CWG2DBR         equ	1560	;# 
  2639     0619                     CWG2DBF         equ	1561	;# 
  2640     061A                     CWG2CON0        equ	1562	;# 
  2641     061B                     CWG2CON1        equ	1563	;# 
  2642     061C                     CWG2AS0         equ	1564	;# 
  2643     061D                     CWG2AS1         equ	1565	;# 
  2644     061E                     CWG2STR         equ	1566	;# 
  2645     068C                     CWG3CLK         equ	1676	;# 
  2646     068C                     CWG3CLKCON      equ	1676	;# 
  2647     068D                     CWG3ISM         equ	1677	;# 
  2648     068D                     CWG3DAT         equ	1677	;# 
  2649     068E                     CWG3DBR         equ	1678	;# 
  2650     068F                     CWG3DBF         equ	1679	;# 
  2651     0690                     CWG3CON0        equ	1680	;# 
  2652     0691                     CWG3CON1        equ	1681	;# 
  2653     0692                     CWG3AS0         equ	1682	;# 
  2654     0693                     CWG3AS1         equ	1683	;# 
  2655     0694                     CWG3STR         equ	1684	;# 
  2656     070C                     PIR0            equ	1804	;# 
  2657     070D                     PIR1            equ	1805	;# 
  2658     070E                     PIR2            equ	1806	;# 
  2659     070F                     PIR3            equ	1807	;# 
  2660     0710                     PIR4            equ	1808	;# 
  2661     0711                     PIR5            equ	1809	;# 
  2662     0712                     PIR6            equ	1810	;# 
  2663     0713                     PIR7            equ	1811	;# 
  2664     0714                     PIR8            equ	1812	;# 
  2665     0716                     PIE0            equ	1814	;# 
  2666     0717                     PIE1            equ	1815	;# 
  2667     0718                     PIE2            equ	1816	;# 
  2668     0719                     PIE3            equ	1817	;# 
  2669     071A                     PIE4            equ	1818	;# 
  2670     071B                     PIE5            equ	1819	;# 
  2671     071C                     PIE6            equ	1820	;# 
  2672     071D                     PIE7            equ	1821	;# 
  2673     071E                     PIE8            equ	1822	;# 
  2674     0796                     PMD0            equ	1942	;# 
  2675     0797                     PMD1            equ	1943	;# 
  2676     0798                     PMD2            equ	1944	;# 
  2677     0799                     PMD3            equ	1945	;# 
  2678     079A                     PMD4            equ	1946	;# 
  2679     079B                     PMD5            equ	1947	;# 
  2680     079C                     PMD6            equ	1948	;# 
  2681     079D                     PMD7            equ	1949	;# 
  2682     080C                     WDTCON0         equ	2060	;# 
  2683     080D                     WDTCON1         equ	2061	;# 
  2684     080E                     WDTPSL          equ	2062	;# 
  2685     080F                     WDTPSH          equ	2063	;# 
  2686     0810                     WDTTMR          equ	2064	;# 
  2687     0811                     BORCON          equ	2065	;# 
  2688     0813                     PCON0           equ	2067	;# 
  2689     0814                     PCON1           equ	2068	;# 
  2690     081A                     NVMADR          equ	2074	;# 
  2691     081A                     NVMADRL         equ	2074	;# 
  2692     081B                     NVMADRH         equ	2075	;# 
  2693     081C                     NVMDAT          equ	2076	;# 
  2694     081C                     NVMDATL         equ	2076	;# 
  2695     081D                     NVMDATH         equ	2077	;# 
  2696     081E                     NVMCON1         equ	2078	;# 
  2697     081F                     NVMCON2         equ	2079	;# 
  2698     088C                     CPUDOZE         equ	2188	;# 
  2699     088D                     OSCCON1         equ	2189	;# 
  2700     088E                     OSCCON2         equ	2190	;# 
  2701     088F                     OSCCON3         equ	2191	;# 
  2702     0890                     OSCSTAT         equ	2192	;# 
  2703     0891                     OSCEN           equ	2193	;# 
  2704     0892                     OSCTUNE         equ	2194	;# 
  2705     0893                     OSCFRQ          equ	2195	;# 
  2706     0895                     CLKRCON         equ	2197	;# 
  2707     0896                     CLKRCLK         equ	2198	;# 
  2708     0897                     MD1CON0         equ	2199	;# 
  2709     0898                     MD1CON1         equ	2200	;# 
  2710     0899                     MD1SRC          equ	2201	;# 
  2711     089A                     MD1CARL         equ	2202	;# 
  2712     089B                     MD1CARH         equ	2203	;# 
  2713     090C                     FVRCON          equ	2316	;# 
  2714     090E                     DAC1CON0        equ	2318	;# 
  2715     090F                     DAC1CON1        equ	2319	;# 
  2716     091F                     ZCDCON          equ	2335	;# 
  2717     098F                     CMOUT           equ	2447	;# 
  2718     098F                     CMSTAT          equ	2447	;# 
  2719     0990                     CM1CON0         equ	2448	;# 
  2720     0991                     CM1CON1         equ	2449	;# 
  2721     0992                     CM1NCH          equ	2450	;# 
  2722     0993                     CM1PCH          equ	2451	;# 
  2723     0994                     CM2CON0         equ	2452	;# 
  2724     0995                     CM2CON1         equ	2453	;# 
  2725     0996                     CM2NCH          equ	2454	;# 
  2726     0997                     CM2PCH          equ	2455	;# 
  2727     0A19                     RC2REG          equ	2585	;# 
  2728     0A19                     RCREG2          equ	2585	;# 
  2729     0A1A                     TX2REG          equ	2586	;# 
  2730     0A1A                     TXREG2          equ	2586	;# 
  2731     0A1B                     SP2BRG          equ	2587	;# 
  2732     0A1B                     SP2BRGL         equ	2587	;# 
  2733     0A1B                     SPBRG2          equ	2587	;# 
  2734     0A1C                     SP2BRGH         equ	2588	;# 
  2735     0A1C                     SPBRGH2         equ	2588	;# 
  2736     0A1D                     RC2STA          equ	2589	;# 
  2737     0A1D                     RCSTA2          equ	2589	;# 
  2738     0A1E                     TX2STA          equ	2590	;# 
  2739     0A1E                     TXSTA2          equ	2590	;# 
  2740     0A1F                     BAUD2CON        equ	2591	;# 
  2741     0A1F                     BAUDCON2        equ	2591	;# 
  2742     0A1F                     BAUDCTL2        equ	2591	;# 
  2743     1E0F                     CLCDATA         equ	7695	;# 
  2744     1E10                     CLC1CON         equ	7696	;# 
  2745     1E11                     CLC1POL         equ	7697	;# 
  2746     1E12                     CLC1SEL0        equ	7698	;# 
  2747     1E13                     CLC1SEL1        equ	7699	;# 
  2748     1E14                     CLC1SEL2        equ	7700	;# 
  2749     1E15                     CLC1SEL3        equ	7701	;# 
  2750     1E16                     CLC1GLS0        equ	7702	;# 
  2751     1E17                     CLC1GLS1        equ	7703	;# 
  2752     1E18                     CLC1GLS2        equ	7704	;# 
  2753     1E19                     CLC1GLS3        equ	7705	;# 
  2754     1E1A                     CLC2CON         equ	7706	;# 
  2755     1E1B                     CLC2POL         equ	7707	;# 
  2756     1E1C                     CLC2SEL0        equ	7708	;# 
  2757     1E1D                     CLC2SEL1        equ	7709	;# 
  2758     1E1E                     CLC2SEL2        equ	7710	;# 
  2759     1E1F                     CLC2SEL3        equ	7711	;# 
  2760     1E20                     CLC2GLS0        equ	7712	;# 
  2761     1E21                     CLC2GLS1        equ	7713	;# 
  2762     1E22                     CLC2GLS2        equ	7714	;# 
  2763     1E23                     CLC2GLS3        equ	7715	;# 
  2764     1E24                     CLC3CON         equ	7716	;# 
  2765     1E25                     CLC3POL         equ	7717	;# 
  2766     1E26                     CLC3SEL0        equ	7718	;# 
  2767     1E27                     CLC3SEL1        equ	7719	;# 
  2768     1E28                     CLC3SEL2        equ	7720	;# 
  2769     1E29                     CLC3SEL3        equ	7721	;# 
  2770     1E2A                     CLC3GLS0        equ	7722	;# 
  2771     1E2B                     CLC3GLS1        equ	7723	;# 
  2772     1E2C                     CLC3GLS2        equ	7724	;# 
  2773     1E2D                     CLC3GLS3        equ	7725	;# 
  2774     1E2E                     CLC4CON         equ	7726	;# 
  2775     1E2F                     CLC4POL         equ	7727	;# 
  2776     1E30                     CLC4SEL0        equ	7728	;# 
  2777     1E31                     CLC4SEL1        equ	7729	;# 
  2778     1E32                     CLC4SEL2        equ	7730	;# 
  2779     1E33                     CLC4SEL3        equ	7731	;# 
  2780     1E34                     CLC4GLS0        equ	7732	;# 
  2781     1E35                     CLC4GLS1        equ	7733	;# 
  2782     1E36                     CLC4GLS2        equ	7734	;# 
  2783     1E37                     CLC4GLS3        equ	7735	;# 
  2784     1E8F                     PPSLOCK         equ	7823	;# 
  2785     1E90                     INTPPS          equ	7824	;# 
  2786     1E91                     T0CKIPPS        equ	7825	;# 
  2787     1E92                     T1CKIPPS        equ	7826	;# 
  2788     1E93                     T1GPPS          equ	7827	;# 
  2789     1E94                     T3CKIPPS        equ	7828	;# 
  2790     1E95                     T3GPPS          equ	7829	;# 
  2791     1E96                     T5CKIPPS        equ	7830	;# 
  2792     1E97                     T5GPPS          equ	7831	;# 
  2793     1E9C                     T2INPPS         equ	7836	;# 
  2794     1E9D                     T4INPPS         equ	7837	;# 
  2795     1E9E                     T6INPPS         equ	7838	;# 
  2796     1EA1                     CCP1PPS         equ	7841	;# 
  2797     1EA2                     CCP2PPS         equ	7842	;# 
  2798     1EA3                     CCP3PPS         equ	7843	;# 
  2799     1EA4                     CCP4PPS         equ	7844	;# 
  2800     1EA5                     CCP5PPS         equ	7845	;# 
  2801     1EA9                     SMT1WINPPS      equ	7849	;# 
  2802     1EAA                     SMT1SIGPPS      equ	7850	;# 
  2803     1EAB                     SMT2WINPPS      equ	7851	;# 
  2804     1EAC                     SMT2SIGPPS      equ	7852	;# 
  2805     1EB1                     CWG1PPS         equ	7857	;# 
  2806     1EB2                     CWG2PPS         equ	7858	;# 
  2807     1EB3                     CWG3PPS         equ	7859	;# 
  2808     1EB8                     MDCARLPPS       equ	7864	;# 
  2809     1EB9                     MDCARHPPS       equ	7865	;# 
  2810     1EBA                     MDSRCPPS        equ	7866	;# 
  2811     1EBB                     CLCIN0PPS       equ	7867	;# 
  2812     1EBC                     CLCIN1PPS       equ	7868	;# 
  2813     1EBD                     CLCIN2PPS       equ	7869	;# 
  2814     1EBE                     CLCIN3PPS       equ	7870	;# 
  2815     1EC3                     ADACTPPS        equ	7875	;# 
  2816     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2817     1EC6                     SSP1DATPPS      equ	7878	;# 
  2818     1EC7                     SSP1SSPPS       equ	7879	;# 
  2819     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2820     1EC9                     SSP2DATPPS      equ	7881	;# 
  2821     1ECA                     SSP2SSPPS       equ	7882	;# 
  2822     1ECB                     RX1PPS          equ	7883	;# 
  2823     1ECC                     CK1PPS          equ	7884	;# 
  2824     1ECD                     RX2PPS          equ	7885	;# 
  2825     1ECE                     CK2PPS          equ	7886	;# 
  2826     1F10                     RA0PPS          equ	7952	;# 
  2827     1F11                     RA1PPS          equ	7953	;# 
  2828     1F12                     RA2PPS          equ	7954	;# 
  2829     1F13                     RA3PPS          equ	7955	;# 
  2830     1F14                     RA4PPS          equ	7956	;# 
  2831     1F15                     RA5PPS          equ	7957	;# 
  2832     1F16                     RA6PPS          equ	7958	;# 
  2833     1F17                     RA7PPS          equ	7959	;# 
  2834     1F18                     RB0PPS          equ	7960	;# 
  2835     1F19                     RB1PPS          equ	7961	;# 
  2836     1F1A                     RB2PPS          equ	7962	;# 
  2837     1F1B                     RB3PPS          equ	7963	;# 
  2838     1F1C                     RB4PPS          equ	7964	;# 
  2839     1F1D                     RB5PPS          equ	7965	;# 
  2840     1F1E                     RB6PPS          equ	7966	;# 
  2841     1F1F                     RB7PPS          equ	7967	;# 
  2842     1F20                     RC0PPS          equ	7968	;# 
  2843     1F21                     RC1PPS          equ	7969	;# 
  2844     1F22                     RC2PPS          equ	7970	;# 
  2845     1F23                     RC3PPS          equ	7971	;# 
  2846     1F24                     RC4PPS          equ	7972	;# 
  2847     1F25                     RC5PPS          equ	7973	;# 
  2848     1F26                     RC6PPS          equ	7974	;# 
  2849     1F27                     RC7PPS          equ	7975	;# 
  2850     1F38                     ANSELA          equ	7992	;# 
  2851     1F39                     WPUA            equ	7993	;# 
  2852     1F3A                     ODCONA          equ	7994	;# 
  2853     1F3B                     SLRCONA         equ	7995	;# 
  2854     1F3C                     INLVLA          equ	7996	;# 
  2855     1F3D                     IOCAP           equ	7997	;# 
  2856     1F3E                     IOCAN           equ	7998	;# 
  2857     1F3F                     IOCAF           equ	7999	;# 
  2858     1F43                     ANSELB          equ	8003	;# 
  2859     1F44                     WPUB            equ	8004	;# 
  2860     1F45                     ODCONB          equ	8005	;# 
  2861     1F46                     SLRCONB         equ	8006	;# 
  2862     1F47                     INLVLB          equ	8007	;# 
  2863     1F48                     IOCBP           equ	8008	;# 
  2864     1F49                     IOCBN           equ	8009	;# 
  2865     1F4A                     IOCBF           equ	8010	;# 
  2866     1F4E                     ANSELC          equ	8014	;# 
  2867     1F4F                     WPUC            equ	8015	;# 
  2868     1F50                     ODCONC          equ	8016	;# 
  2869     1F51                     SLRCONC         equ	8017	;# 
  2870     1F52                     INLVLC          equ	8018	;# 
  2871     1F53                     IOCCP           equ	8019	;# 
  2872     1F54                     IOCCN           equ	8020	;# 
  2873     1F55                     IOCCF           equ	8021	;# 
  2874     1F65                     WPUE            equ	8037	;# 
  2875     1F66                     ODCONE          equ	8038	;# 
  2876     1F67                     SLRCONE         equ	8039	;# 
  2877     1F68                     INLVLE          equ	8040	;# 
  2878     1F69                     IOCEP           equ	8041	;# 
  2879     1F6A                     IOCEN           equ	8042	;# 
  2880     1F6B                     IOCEF           equ	8043	;# 
  2881     1FE4                     STATUS_SHAD     equ	8164	;# 
  2882     1FE5                     WREG_SHAD       equ	8165	;# 
  2883     1FE6                     BSR_SHAD        equ	8166	;# 
  2884     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2885     1FE8                     FSR0_SHAD       equ	8168	;# 
  2886     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2887     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2888     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2889     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2890     1FED                     STKPTR          equ	8173	;# 
  2891     1FEE                     TOSL            equ	8174	;# 
  2892     1FEF                     TOSH            equ	8175	;# 
  2893     0000                     INDF0           equ	0	;# 
  2894     0001                     INDF1           equ	1	;# 
  2895     0002                     PCL             equ	2	;# 
  2896     0003                     STATUS          equ	3	;# 
  2897     0004                     FSR0L           equ	4	;# 
  2898     0005                     FSR0H           equ	5	;# 
  2899     0006                     FSR1L           equ	6	;# 
  2900     0007                     FSR1H           equ	7	;# 
  2901     0008                     BSR             equ	8	;# 
  2902     0009                     WREG            equ	9	;# 
  2903     000A                     PCLATH          equ	10	;# 
  2904     000B                     INTCON          equ	11	;# 
  2905     000C                     PORTA           equ	12	;# 
  2906     000D                     PORTB           equ	13	;# 
  2907     000E                     PORTC           equ	14	;# 
  2908     0010                     PORTE           equ	16	;# 
  2909     0012                     TRISA           equ	18	;# 
  2910     0013                     TRISB           equ	19	;# 
  2911     0014                     TRISC           equ	20	;# 
  2912     0016                     TRISE           equ	22	;# 
  2913     0018                     LATA            equ	24	;# 
  2914     0019                     LATB            equ	25	;# 
  2915     001A                     LATC            equ	26	;# 
  2916     008C                     ADLTH           equ	140	;# 
  2917     008C                     ADLTHL          equ	140	;# 
  2918     008D                     ADLTHH          equ	141	;# 
  2919     008E                     ADUTH           equ	142	;# 
  2920     008E                     ADUTHL          equ	142	;# 
  2921     008F                     ADUTHH          equ	143	;# 
  2922     0090                     ADERR           equ	144	;# 
  2923     0090                     ADERRL          equ	144	;# 
  2924     0091                     ADERRH          equ	145	;# 
  2925     0092                     ADSTPT          equ	146	;# 
  2926     0092                     ADSTPTL         equ	146	;# 
  2927     0093                     ADSTPTH         equ	147	;# 
  2928     0094                     ADFLTR          equ	148	;# 
  2929     0094                     ADFLTRL         equ	148	;# 
  2930     0095                     ADFLTRH         equ	149	;# 
  2931     0096                     ADACC           equ	150	;# 
  2932     0096                     ADACCL          equ	150	;# 
  2933     0097                     ADACCH          equ	151	;# 
  2934     0098                     ADACCU          equ	152	;# 
  2935     0099                     ADCNT           equ	153	;# 
  2936     009A                     ADRPT           equ	154	;# 
  2937     009B                     ADPREV          equ	155	;# 
  2938     009B                     ADPREVL         equ	155	;# 
  2939     009C                     ADPREVH         equ	156	;# 
  2940     009D                     ADRES           equ	157	;# 
  2941     009D                     ADRESL          equ	157	;# 
  2942     009E                     ADRESH          equ	158	;# 
  2943     009F                     ADPCH           equ	159	;# 
  2944     010C                     ADACQ           equ	268	;# 
  2945     010C                     ADACQL          equ	268	;# 
  2946     010D                     ADACQH          equ	269	;# 
  2947     010E                     ADCAP           equ	270	;# 
  2948     010F                     ADPRE           equ	271	;# 
  2949     010F                     ADPREL          equ	271	;# 
  2950     0110                     ADPREH          equ	272	;# 
  2951     0111                     ADCON0          equ	273	;# 
  2952     0112                     ADCON1          equ	274	;# 
  2953     0113                     ADCON2          equ	275	;# 
  2954     0114                     ADCON3          equ	276	;# 
  2955     0115                     ADSTAT          equ	277	;# 
  2956     0116                     ADREF           equ	278	;# 
  2957     0117                     ADACT           equ	279	;# 
  2958     0118                     ADCLK           equ	280	;# 
  2959     0119                     RC1REG          equ	281	;# 
  2960     0119                     RCREG           equ	281	;# 
  2961     0119                     RCREG1          equ	281	;# 
  2962     011A                     TX1REG          equ	282	;# 
  2963     011A                     TXREG1          equ	282	;# 
  2964     011A                     TXREG           equ	282	;# 
  2965     011B                     SP1BRG          equ	283	;# 
  2966     011B                     SPBRG           equ	283	;# 
  2967     011B                     SP1BRGL         equ	283	;# 
  2968     011B                     SPBRG1          equ	283	;# 
  2969     011B                     SPBRGL          equ	283	;# 
  2970     011C                     SP1BRGH         equ	284	;# 
  2971     011C                     SPBRGH          equ	284	;# 
  2972     011C                     SPBRGH1         equ	284	;# 
  2973     011D                     RC1STA          equ	285	;# 
  2974     011D                     RCSTA1          equ	285	;# 
  2975     011D                     RCSTA           equ	285	;# 
  2976     011E                     TX1STA          equ	286	;# 
  2977     011E                     TXSTA1          equ	286	;# 
  2978     011E                     TXSTA           equ	286	;# 
  2979     011F                     BAUD1CON        equ	287	;# 
  2980     011F                     BAUDCON1        equ	287	;# 
  2981     011F                     BAUDCTL1        equ	287	;# 
  2982     011F                     BAUDCON         equ	287	;# 
  2983     011F                     BAUDCTL         equ	287	;# 
  2984     018C                     SSP1BUF         equ	396	;# 
  2985     018D                     SSP1ADD         equ	397	;# 
  2986     018E                     SSP1MSK         equ	398	;# 
  2987     018F                     SSP1STAT        equ	399	;# 
  2988     0190                     SSP1CON1        equ	400	;# 
  2989     0191                     SSP1CON2        equ	401	;# 
  2990     0192                     SSP1CON3        equ	402	;# 
  2991     0196                     SSP2BUF         equ	406	;# 
  2992     0197                     SSP2ADD         equ	407	;# 
  2993     0198                     SSP2MSK         equ	408	;# 
  2994     0199                     SSP2STAT        equ	409	;# 
  2995     019A                     SSP2CON1        equ	410	;# 
  2996     019B                     SSP2CON2        equ	411	;# 
  2997     019C                     SSP2CON3        equ	412	;# 
  2998     020C                     TMR1            equ	524	;# 
  2999     020C                     TMR1L           equ	524	;# 
  3000     020D                     TMR1H           equ	525	;# 
  3001     020E                     T1CON           equ	526	;# 
  3002     020E                     TMR1CON         equ	526	;# 
  3003     020F                     T1GCON          equ	527	;# 
  3004     020F                     TMR1GCON        equ	527	;# 
  3005     0210                     T1GATE          equ	528	;# 
  3006     0210                     TMR1GATE        equ	528	;# 
  3007     0211                     T1CLK           equ	529	;# 
  3008     0211                     TMR1CLK         equ	529	;# 
  3009     0211                     PR1             equ	529	;# 
  3010     0212                     TMR3            equ	530	;# 
  3011     0212                     TMR3L           equ	530	;# 
  3012     0213                     TMR3H           equ	531	;# 
  3013     0214                     T3CON           equ	532	;# 
  3014     0214                     TMR3CON         equ	532	;# 
  3015     0215                     T3GCON          equ	533	;# 
  3016     0215                     TMR3GCON        equ	533	;# 
  3017     0216                     T3GATE          equ	534	;# 
  3018     0216                     TMR3GATE        equ	534	;# 
  3019     0217                     T3CLK           equ	535	;# 
  3020     0217                     TMR3CLK         equ	535	;# 
  3021     0217                     PR3             equ	535	;# 
  3022     0218                     TMR5            equ	536	;# 
  3023     0218                     TMR5L           equ	536	;# 
  3024     0219                     TMR5H           equ	537	;# 
  3025     021A                     T5CON           equ	538	;# 
  3026     021A                     TMR5CON         equ	538	;# 
  3027     021B                     T5GCON          equ	539	;# 
  3028     021B                     TMR5GCON        equ	539	;# 
  3029     021C                     T5GATE          equ	540	;# 
  3030     021C                     TMR5GATE        equ	540	;# 
  3031     021D                     T5CLK           equ	541	;# 
  3032     021D                     TMR5CLK         equ	541	;# 
  3033     021D                     PR5             equ	541	;# 
  3034     021E                     CCPTMRS0        equ	542	;# 
  3035     021F                     CCPTMRS1        equ	543	;# 
  3036     028C                     T2TMR           equ	652	;# 
  3037     028C                     TMR2            equ	652	;# 
  3038     028D                     T2PR            equ	653	;# 
  3039     028D                     PR2             equ	653	;# 
  3040     028E                     T2CON           equ	654	;# 
  3041     028F                     T2HLT           equ	655	;# 
  3042     0290                     T2CLKCON        equ	656	;# 
  3043     0291                     T2RST           equ	657	;# 
  3044     0292                     T4TMR           equ	658	;# 
  3045     0292                     TMR4            equ	658	;# 
  3046     0293                     T4PR            equ	659	;# 
  3047     0293                     PR4             equ	659	;# 
  3048     0294                     T4CON           equ	660	;# 
  3049     0295                     T4HLT           equ	661	;# 
  3050     0296                     T4CLKCON        equ	662	;# 
  3051     0297                     T4RST           equ	663	;# 
  3052     0298                     T6TMR           equ	664	;# 
  3053     0298                     TMR6            equ	664	;# 
  3054     0299                     T6PR            equ	665	;# 
  3055     0299                     PR6             equ	665	;# 
  3056     029A                     T6CON           equ	666	;# 
  3057     029B                     T6HLT           equ	667	;# 
  3058     029C                     T6CLKCON        equ	668	;# 
  3059     029D                     T6RST           equ	669	;# 
  3060     029F                     ADCPCON0        equ	671	;# 
  3061     030C                     CCPR1           equ	780	;# 
  3062     030C                     CCPR1L          equ	780	;# 
  3063     030D                     CCPR1H          equ	781	;# 
  3064     030E                     CCP1CON         equ	782	;# 
  3065     030F                     CCP1CAP         equ	783	;# 
  3066     0310                     CCPR2           equ	784	;# 
  3067     0310                     CCPR2L          equ	784	;# 
  3068     0311                     CCPR2H          equ	785	;# 
  3069     0312                     CCP2CON         equ	786	;# 
  3070     0313                     CCP2CAP         equ	787	;# 
  3071     0314                     CCPR3           equ	788	;# 
  3072     0314                     CCPR3L          equ	788	;# 
  3073     0315                     CCPR3H          equ	789	;# 
  3074     0316                     CCP3CON         equ	790	;# 
  3075     0317                     CCP3CAP         equ	791	;# 
  3076     0318                     CCPR4           equ	792	;# 
  3077     0318                     CCPR4L          equ	792	;# 
  3078     0319                     CCPR4H          equ	793	;# 
  3079     031A                     CCP4CON         equ	794	;# 
  3080     031B                     CCP4CAP         equ	795	;# 
  3081     031C                     CCPR5           equ	796	;# 
  3082     031C                     CCPR5L          equ	796	;# 
  3083     031D                     CCPR5H          equ	797	;# 
  3084     031E                     CCP5CON         equ	798	;# 
  3085     031F                     CCP5CAP         equ	799	;# 
  3086     038C                     PWM6DC          equ	908	;# 
  3087     038C                     PWM6DCL         equ	908	;# 
  3088     038D                     PWM6DCH         equ	909	;# 
  3089     038E                     PWM6CON         equ	910	;# 
  3090     0390                     PWM7DC          equ	912	;# 
  3091     0390                     PWM7DCL         equ	912	;# 
  3092     0391                     PWM7DCH         equ	913	;# 
  3093     0392                     PWM7CON         equ	914	;# 
  3094     048C                     SMT1TMR         equ	1164	;# 
  3095     048C                     SMT1TMRL        equ	1164	;# 
  3096     048D                     SMT1TMRH        equ	1165	;# 
  3097     048E                     SMT1TMRU        equ	1166	;# 
  3098     048F                     SMT1CPR         equ	1167	;# 
  3099     048F                     SMT1CPRL        equ	1167	;# 
  3100     0490                     SMT1CPRH        equ	1168	;# 
  3101     0491                     SMT1CPRU        equ	1169	;# 
  3102     0492                     SMT1CPW         equ	1170	;# 
  3103     0492                     SMT1CPWL        equ	1170	;# 
  3104     0493                     SMT1CPWH        equ	1171	;# 
  3105     0494                     SMT1CPWU        equ	1172	;# 
  3106     0495                     SMT1PR          equ	1173	;# 
  3107     0495                     SMT1PRL         equ	1173	;# 
  3108     0496                     SMT1PRH         equ	1174	;# 
  3109     0497                     SMT1PRU         equ	1175	;# 
  3110     0498                     SMT1CON0        equ	1176	;# 
  3111     0499                     SMT1CON1        equ	1177	;# 
  3112     049A                     SMT1STAT        equ	1178	;# 
  3113     049B                     SMT1CLK         equ	1179	;# 
  3114     049C                     SMT1SIG         equ	1180	;# 
  3115     049D                     SMT1WIN         equ	1181	;# 
  3116     050C                     SMT2TMR         equ	1292	;# 
  3117     050C                     SMT2TMRL        equ	1292	;# 
  3118     050D                     SMT2TMRH        equ	1293	;# 
  3119     050E                     SMT2TMRU        equ	1294	;# 
  3120     050F                     SMT2CPR         equ	1295	;# 
  3121     050F                     SMT2CPRL        equ	1295	;# 
  3122     0510                     SMT2CPRH        equ	1296	;# 
  3123     0511                     SMT2CPRU        equ	1297	;# 
  3124     0512                     SMT2CPW         equ	1298	;# 
  3125     0512                     SMT2CPWL        equ	1298	;# 
  3126     0513                     SMT2CPWH        equ	1299	;# 
  3127     0514                     SMT2CPWU        equ	1300	;# 
  3128     0515                     SMT2PR          equ	1301	;# 
  3129     0515                     SMT2PRL         equ	1301	;# 
  3130     0516                     SMT2PRH         equ	1302	;# 
  3131     0517                     SMT2PRU         equ	1303	;# 
  3132     0518                     SMT2CON0        equ	1304	;# 
  3133     0519                     SMT2CON1        equ	1305	;# 
  3134     051A                     SMT2STAT        equ	1306	;# 
  3135     051B                     SMT2CLK         equ	1307	;# 
  3136     051C                     SMT2SIG         equ	1308	;# 
  3137     051D                     SMT2WIN         equ	1309	;# 
  3138     058C                     NCO1ACC         equ	1420	;# 
  3139     058C                     NCO1ACCL        equ	1420	;# 
  3140     058D                     NCO1ACCH        equ	1421	;# 
  3141     058E                     NCO1ACCU        equ	1422	;# 
  3142     058F                     NCO1INC         equ	1423	;# 
  3143     058F                     NCO1INCL        equ	1423	;# 
  3144     0590                     NCO1INCH        equ	1424	;# 
  3145     0591                     NCO1INCU        equ	1425	;# 
  3146     0592                     NCO1CON         equ	1426	;# 
  3147     0593                     NCO1CLK         equ	1427	;# 
  3148     059C                     TMR0L           equ	1436	;# 
  3149     059C                     TMR0            equ	1436	;# 
  3150     059D                     TMR0H           equ	1437	;# 
  3151     059D                     PR0             equ	1437	;# 
  3152     059E                     T0CON0          equ	1438	;# 
  3153     059F                     T0CON1          equ	1439	;# 
  3154     060C                     CWG1CLK         equ	1548	;# 
  3155     060C                     CWG1CLKCON      equ	1548	;# 
  3156     060D                     CWG1ISM         equ	1549	;# 
  3157     060D                     CWG1DAT         equ	1549	;# 
  3158     060E                     CWG1DBR         equ	1550	;# 
  3159     060F                     CWG1DBF         equ	1551	;# 
  3160     0610                     CWG1CON0        equ	1552	;# 
  3161     0611                     CWG1CON1        equ	1553	;# 
  3162     0612                     CWG1AS0         equ	1554	;# 
  3163     0613                     CWG1AS1         equ	1555	;# 
  3164     0614                     CWG1STR         equ	1556	;# 
  3165     0616                     CWG2CLK         equ	1558	;# 
  3166     0616                     CWG2CLKCON      equ	1558	;# 
  3167     0617                     CWG2ISM         equ	1559	;# 
  3168     0617                     CWG2DAT         equ	1559	;# 
  3169     0618                     CWG2DBR         equ	1560	;# 
  3170     0619                     CWG2DBF         equ	1561	;# 
  3171     061A                     CWG2CON0        equ	1562	;# 
  3172     061B                     CWG2CON1        equ	1563	;# 
  3173     061C                     CWG2AS0         equ	1564	;# 
  3174     061D                     CWG2AS1         equ	1565	;# 
  3175     061E                     CWG2STR         equ	1566	;# 
  3176     068C                     CWG3CLK         equ	1676	;# 
  3177     068C                     CWG3CLKCON      equ	1676	;# 
  3178     068D                     CWG3ISM         equ	1677	;# 
  3179     068D                     CWG3DAT         equ	1677	;# 
  3180     068E                     CWG3DBR         equ	1678	;# 
  3181     068F                     CWG3DBF         equ	1679	;# 
  3182     0690                     CWG3CON0        equ	1680	;# 
  3183     0691                     CWG3CON1        equ	1681	;# 
  3184     0692                     CWG3AS0         equ	1682	;# 
  3185     0693                     CWG3AS1         equ	1683	;# 
  3186     0694                     CWG3STR         equ	1684	;# 
  3187     070C                     PIR0            equ	1804	;# 
  3188     070D                     PIR1            equ	1805	;# 
  3189     070E                     PIR2            equ	1806	;# 
  3190     070F                     PIR3            equ	1807	;# 
  3191     0710                     PIR4            equ	1808	;# 
  3192     0711                     PIR5            equ	1809	;# 
  3193     0712                     PIR6            equ	1810	;# 
  3194     0713                     PIR7            equ	1811	;# 
  3195     0714                     PIR8            equ	1812	;# 
  3196     0716                     PIE0            equ	1814	;# 
  3197     0717                     PIE1            equ	1815	;# 
  3198     0718                     PIE2            equ	1816	;# 
  3199     0719                     PIE3            equ	1817	;# 
  3200     071A                     PIE4            equ	1818	;# 
  3201     071B                     PIE5            equ	1819	;# 
  3202     071C                     PIE6            equ	1820	;# 
  3203     071D                     PIE7            equ	1821	;# 
  3204     071E                     PIE8            equ	1822	;# 
  3205     0796                     PMD0            equ	1942	;# 
  3206     0797                     PMD1            equ	1943	;# 
  3207     0798                     PMD2            equ	1944	;# 
  3208     0799                     PMD3            equ	1945	;# 
  3209     079A                     PMD4            equ	1946	;# 
  3210     079B                     PMD5            equ	1947	;# 
  3211     079C                     PMD6            equ	1948	;# 
  3212     079D                     PMD7            equ	1949	;# 
  3213     080C                     WDTCON0         equ	2060	;# 
  3214     080D                     WDTCON1         equ	2061	;# 
  3215     080E                     WDTPSL          equ	2062	;# 
  3216     080F                     WDTPSH          equ	2063	;# 
  3217     0810                     WDTTMR          equ	2064	;# 
  3218     0811                     BORCON          equ	2065	;# 
  3219     0813                     PCON0           equ	2067	;# 
  3220     0814                     PCON1           equ	2068	;# 
  3221     081A                     NVMADR          equ	2074	;# 
  3222     081A                     NVMADRL         equ	2074	;# 
  3223     081B                     NVMADRH         equ	2075	;# 
  3224     081C                     NVMDAT          equ	2076	;# 
  3225     081C                     NVMDATL         equ	2076	;# 
  3226     081D                     NVMDATH         equ	2077	;# 
  3227     081E                     NVMCON1         equ	2078	;# 
  3228     081F                     NVMCON2         equ	2079	;# 
  3229     088C                     CPUDOZE         equ	2188	;# 
  3230     088D                     OSCCON1         equ	2189	;# 
  3231     088E                     OSCCON2         equ	2190	;# 
  3232     088F                     OSCCON3         equ	2191	;# 
  3233     0890                     OSCSTAT         equ	2192	;# 
  3234     0891                     OSCEN           equ	2193	;# 
  3235     0892                     OSCTUNE         equ	2194	;# 
  3236     0893                     OSCFRQ          equ	2195	;# 
  3237     0895                     CLKRCON         equ	2197	;# 
  3238     0896                     CLKRCLK         equ	2198	;# 
  3239     0897                     MD1CON0         equ	2199	;# 
  3240     0898                     MD1CON1         equ	2200	;# 
  3241     0899                     MD1SRC          equ	2201	;# 
  3242     089A                     MD1CARL         equ	2202	;# 
  3243     089B                     MD1CARH         equ	2203	;# 
  3244     090C                     FVRCON          equ	2316	;# 
  3245     090E                     DAC1CON0        equ	2318	;# 
  3246     090F                     DAC1CON1        equ	2319	;# 
  3247     091F                     ZCDCON          equ	2335	;# 
  3248     098F                     CMOUT           equ	2447	;# 
  3249     098F                     CMSTAT          equ	2447	;# 
  3250     0990                     CM1CON0         equ	2448	;# 
  3251     0991                     CM1CON1         equ	2449	;# 
  3252     0992                     CM1NCH          equ	2450	;# 
  3253     0993                     CM1PCH          equ	2451	;# 
  3254     0994                     CM2CON0         equ	2452	;# 
  3255     0995                     CM2CON1         equ	2453	;# 
  3256     0996                     CM2NCH          equ	2454	;# 
  3257     0997                     CM2PCH          equ	2455	;# 
  3258     0A19                     RC2REG          equ	2585	;# 
  3259     0A19                     RCREG2          equ	2585	;# 
  3260     0A1A                     TX2REG          equ	2586	;# 
  3261     0A1A                     TXREG2          equ	2586	;# 
  3262     0A1B                     SP2BRG          equ	2587	;# 
  3263     0A1B                     SP2BRGL         equ	2587	;# 
  3264     0A1B                     SPBRG2          equ	2587	;# 
  3265     0A1C                     SP2BRGH         equ	2588	;# 
  3266     0A1C                     SPBRGH2         equ	2588	;# 
  3267     0A1D                     RC2STA          equ	2589	;# 
  3268     0A1D                     RCSTA2          equ	2589	;# 
  3269     0A1E                     TX2STA          equ	2590	;# 
  3270     0A1E                     TXSTA2          equ	2590	;# 
  3271     0A1F                     BAUD2CON        equ	2591	;# 
  3272     0A1F                     BAUDCON2        equ	2591	;# 
  3273     0A1F                     BAUDCTL2        equ	2591	;# 
  3274     1E0F                     CLCDATA         equ	7695	;# 
  3275     1E10                     CLC1CON         equ	7696	;# 
  3276     1E11                     CLC1POL         equ	7697	;# 
  3277     1E12                     CLC1SEL0        equ	7698	;# 
  3278     1E13                     CLC1SEL1        equ	7699	;# 
  3279     1E14                     CLC1SEL2        equ	7700	;# 
  3280     1E15                     CLC1SEL3        equ	7701	;# 
  3281     1E16                     CLC1GLS0        equ	7702	;# 
  3282     1E17                     CLC1GLS1        equ	7703	;# 
  3283     1E18                     CLC1GLS2        equ	7704	;# 
  3284     1E19                     CLC1GLS3        equ	7705	;# 
  3285     1E1A                     CLC2CON         equ	7706	;# 
  3286     1E1B                     CLC2POL         equ	7707	;# 
  3287     1E1C                     CLC2SEL0        equ	7708	;# 
  3288     1E1D                     CLC2SEL1        equ	7709	;# 
  3289     1E1E                     CLC2SEL2        equ	7710	;# 
  3290     1E1F                     CLC2SEL3        equ	7711	;# 
  3291     1E20                     CLC2GLS0        equ	7712	;# 
  3292     1E21                     CLC2GLS1        equ	7713	;# 
  3293     1E22                     CLC2GLS2        equ	7714	;# 
  3294     1E23                     CLC2GLS3        equ	7715	;# 
  3295     1E24                     CLC3CON         equ	7716	;# 
  3296     1E25                     CLC3POL         equ	7717	;# 
  3297     1E26                     CLC3SEL0        equ	7718	;# 
  3298     1E27                     CLC3SEL1        equ	7719	;# 
  3299     1E28                     CLC3SEL2        equ	7720	;# 
  3300     1E29                     CLC3SEL3        equ	7721	;# 
  3301     1E2A                     CLC3GLS0        equ	7722	;# 
  3302     1E2B                     CLC3GLS1        equ	7723	;# 
  3303     1E2C                     CLC3GLS2        equ	7724	;# 
  3304     1E2D                     CLC3GLS3        equ	7725	;# 
  3305     1E2E                     CLC4CON         equ	7726	;# 
  3306     1E2F                     CLC4POL         equ	7727	;# 
  3307     1E30                     CLC4SEL0        equ	7728	;# 
  3308     1E31                     CLC4SEL1        equ	7729	;# 
  3309     1E32                     CLC4SEL2        equ	7730	;# 
  3310     1E33                     CLC4SEL3        equ	7731	;# 
  3311     1E34                     CLC4GLS0        equ	7732	;# 
  3312     1E35                     CLC4GLS1        equ	7733	;# 
  3313     1E36                     CLC4GLS2        equ	7734	;# 
  3314     1E37                     CLC4GLS3        equ	7735	;# 
  3315     1E8F                     PPSLOCK         equ	7823	;# 
  3316     1E90                     INTPPS          equ	7824	;# 
  3317     1E91                     T0CKIPPS        equ	7825	;# 
  3318     1E92                     T1CKIPPS        equ	7826	;# 
  3319     1E93                     T1GPPS          equ	7827	;# 
  3320     1E94                     T3CKIPPS        equ	7828	;# 
  3321     1E95                     T3GPPS          equ	7829	;# 
  3322     1E96                     T5CKIPPS        equ	7830	;# 
  3323     1E97                     T5GPPS          equ	7831	;# 
  3324     1E9C                     T2INPPS         equ	7836	;# 
  3325     1E9D                     T4INPPS         equ	7837	;# 
  3326     1E9E                     T6INPPS         equ	7838	;# 
  3327     1EA1                     CCP1PPS         equ	7841	;# 
  3328     1EA2                     CCP2PPS         equ	7842	;# 
  3329     1EA3                     CCP3PPS         equ	7843	;# 
  3330     1EA4                     CCP4PPS         equ	7844	;# 
  3331     1EA5                     CCP5PPS         equ	7845	;# 
  3332     1EA9                     SMT1WINPPS      equ	7849	;# 
  3333     1EAA                     SMT1SIGPPS      equ	7850	;# 
  3334     1EAB                     SMT2WINPPS      equ	7851	;# 
  3335     1EAC                     SMT2SIGPPS      equ	7852	;# 
  3336     1EB1                     CWG1PPS         equ	7857	;# 
  3337     1EB2                     CWG2PPS         equ	7858	;# 
  3338     1EB3                     CWG3PPS         equ	7859	;# 
  3339     1EB8                     MDCARLPPS       equ	7864	;# 
  3340     1EB9                     MDCARHPPS       equ	7865	;# 
  3341     1EBA                     MDSRCPPS        equ	7866	;# 
  3342     1EBB                     CLCIN0PPS       equ	7867	;# 
  3343     1EBC                     CLCIN1PPS       equ	7868	;# 
  3344     1EBD                     CLCIN2PPS       equ	7869	;# 
  3345     1EBE                     CLCIN3PPS       equ	7870	;# 
  3346     1EC3                     ADACTPPS        equ	7875	;# 
  3347     1EC5                     SSP1CLKPPS      equ	7877	;# 
  3348     1EC6                     SSP1DATPPS      equ	7878	;# 
  3349     1EC7                     SSP1SSPPS       equ	7879	;# 
  3350     1EC8                     SSP2CLKPPS      equ	7880	;# 
  3351     1EC9                     SSP2DATPPS      equ	7881	;# 
  3352     1ECA                     SSP2SSPPS       equ	7882	;# 
  3353     1ECB                     RX1PPS          equ	7883	;# 
  3354     1ECC                     CK1PPS          equ	7884	;# 
  3355     1ECD                     RX2PPS          equ	7885	;# 
  3356     1ECE                     CK2PPS          equ	7886	;# 
  3357     1F10                     RA0PPS          equ	7952	;# 
  3358     1F11                     RA1PPS          equ	7953	;# 
  3359     1F12                     RA2PPS          equ	7954	;# 
  3360     1F13                     RA3PPS          equ	7955	;# 
  3361     1F14                     RA4PPS          equ	7956	;# 
  3362     1F15                     RA5PPS          equ	7957	;# 
  3363     1F16                     RA6PPS          equ	7958	;# 
  3364     1F17                     RA7PPS          equ	7959	;# 
  3365     1F18                     RB0PPS          equ	7960	;# 
  3366     1F19                     RB1PPS          equ	7961	;# 
  3367     1F1A                     RB2PPS          equ	7962	;# 
  3368     1F1B                     RB3PPS          equ	7963	;# 
  3369     1F1C                     RB4PPS          equ	7964	;# 
  3370     1F1D                     RB5PPS          equ	7965	;# 
  3371     1F1E                     RB6PPS          equ	7966	;# 
  3372     1F1F                     RB7PPS          equ	7967	;# 
  3373     1F20                     RC0PPS          equ	7968	;# 
  3374     1F21                     RC1PPS          equ	7969	;# 
  3375     1F22                     RC2PPS          equ	7970	;# 
  3376     1F23                     RC3PPS          equ	7971	;# 
  3377     1F24                     RC4PPS          equ	7972	;# 
  3378     1F25                     RC5PPS          equ	7973	;# 
  3379     1F26                     RC6PPS          equ	7974	;# 
  3380     1F27                     RC7PPS          equ	7975	;# 
  3381     1F38                     ANSELA          equ	7992	;# 
  3382     1F39                     WPUA            equ	7993	;# 
  3383     1F3A                     ODCONA          equ	7994	;# 
  3384     1F3B                     SLRCONA         equ	7995	;# 
  3385     1F3C                     INLVLA          equ	7996	;# 
  3386     1F3D                     IOCAP           equ	7997	;# 
  3387     1F3E                     IOCAN           equ	7998	;# 
  3388     1F3F                     IOCAF           equ	7999	;# 
  3389     1F43                     ANSELB          equ	8003	;# 
  3390     1F44                     WPUB            equ	8004	;# 
  3391     1F45                     ODCONB          equ	8005	;# 
  3392     1F46                     SLRCONB         equ	8006	;# 
  3393     1F47                     INLVLB          equ	8007	;# 
  3394     1F48                     IOCBP           equ	8008	;# 
  3395     1F49                     IOCBN           equ	8009	;# 
  3396     1F4A                     IOCBF           equ	8010	;# 
  3397     1F4E                     ANSELC          equ	8014	;# 
  3398     1F4F                     WPUC            equ	8015	;# 
  3399     1F50                     ODCONC          equ	8016	;# 
  3400     1F51                     SLRCONC         equ	8017	;# 
  3401     1F52                     INLVLC          equ	8018	;# 
  3402     1F53                     IOCCP           equ	8019	;# 
  3403     1F54                     IOCCN           equ	8020	;# 
  3404     1F55                     IOCCF           equ	8021	;# 
  3405     1F65                     WPUE            equ	8037	;# 
  3406     1F66                     ODCONE          equ	8038	;# 
  3407     1F67                     SLRCONE         equ	8039	;# 
  3408     1F68                     INLVLE          equ	8040	;# 
  3409     1F69                     IOCEP           equ	8041	;# 
  3410     1F6A                     IOCEN           equ	8042	;# 
  3411     1F6B                     IOCEF           equ	8043	;# 
  3412     1FE4                     STATUS_SHAD     equ	8164	;# 
  3413     1FE5                     WREG_SHAD       equ	8165	;# 
  3414     1FE6                     BSR_SHAD        equ	8166	;# 
  3415     1FE7                     PCLATH_SHAD     equ	8167	;# 
  3416     1FE8                     FSR0_SHAD       equ	8168	;# 
  3417     1FE8                     FSR0L_SHAD      equ	8168	;# 
  3418     1FE9                     FSR0H_SHAD      equ	8169	;# 
  3419     1FEA                     FSR1L_SHAD      equ	8170	;# 
  3420     1FEB                     FSR1H_SHAD      equ	8171	;# 
  3421     1FED                     STKPTR          equ	8173	;# 
  3422     1FEE                     TOSL            equ	8174	;# 
  3423     1FEF                     TOSH            equ	8175	;# 
  3424     0000                     INDF0           equ	0	;# 
  3425     0001                     INDF1           equ	1	;# 
  3426     0002                     PCL             equ	2	;# 
  3427     0003                     STATUS          equ	3	;# 
  3428     0004                     FSR0L           equ	4	;# 
  3429     0005                     FSR0H           equ	5	;# 
  3430     0006                     FSR1L           equ	6	;# 
  3431     0007                     FSR1H           equ	7	;# 
  3432     0008                     BSR             equ	8	;# 
  3433     0009                     WREG            equ	9	;# 
  3434     000A                     PCLATH          equ	10	;# 
  3435     000B                     INTCON          equ	11	;# 
  3436     000C                     PORTA           equ	12	;# 
  3437     000D                     PORTB           equ	13	;# 
  3438     000E                     PORTC           equ	14	;# 
  3439     0010                     PORTE           equ	16	;# 
  3440     0012                     TRISA           equ	18	;# 
  3441     0013                     TRISB           equ	19	;# 
  3442     0014                     TRISC           equ	20	;# 
  3443     0016                     TRISE           equ	22	;# 
  3444     0018                     LATA            equ	24	;# 
  3445     0019                     LATB            equ	25	;# 
  3446     001A                     LATC            equ	26	;# 
  3447     008C                     ADLTH           equ	140	;# 
  3448     008C                     ADLTHL          equ	140	;# 
  3449     008D                     ADLTHH          equ	141	;# 
  3450     008E                     ADUTH           equ	142	;# 
  3451     008E                     ADUTHL          equ	142	;# 
  3452     008F                     ADUTHH          equ	143	;# 
  3453     0090                     ADERR           equ	144	;# 
  3454     0090                     ADERRL          equ	144	;# 
  3455     0091                     ADERRH          equ	145	;# 
  3456     0092                     ADSTPT          equ	146	;# 
  3457     0092                     ADSTPTL         equ	146	;# 
  3458     0093                     ADSTPTH         equ	147	;# 
  3459     0094                     ADFLTR          equ	148	;# 
  3460     0094                     ADFLTRL         equ	148	;# 
  3461     0095                     ADFLTRH         equ	149	;# 
  3462     0096                     ADACC           equ	150	;# 
  3463     0096                     ADACCL          equ	150	;# 
  3464     0097                     ADACCH          equ	151	;# 
  3465     0098                     ADACCU          equ	152	;# 
  3466     0099                     ADCNT           equ	153	;# 
  3467     009A                     ADRPT           equ	154	;# 
  3468     009B                     ADPREV          equ	155	;# 
  3469     009B                     ADPREVL         equ	155	;# 
  3470     009C                     ADPREVH         equ	156	;# 
  3471     009D                     ADRES           equ	157	;# 
  3472     009D                     ADRESL          equ	157	;# 
  3473     009E                     ADRESH          equ	158	;# 
  3474     009F                     ADPCH           equ	159	;# 
  3475     010C                     ADACQ           equ	268	;# 
  3476     010C                     ADACQL          equ	268	;# 
  3477     010D                     ADACQH          equ	269	;# 
  3478     010E                     ADCAP           equ	270	;# 
  3479     010F                     ADPRE           equ	271	;# 
  3480     010F                     ADPREL          equ	271	;# 
  3481     0110                     ADPREH          equ	272	;# 
  3482     0111                     ADCON0          equ	273	;# 
  3483     0112                     ADCON1          equ	274	;# 
  3484     0113                     ADCON2          equ	275	;# 
  3485     0114                     ADCON3          equ	276	;# 
  3486     0115                     ADSTAT          equ	277	;# 
  3487     0116                     ADREF           equ	278	;# 
  3488     0117                     ADACT           equ	279	;# 
  3489     0118                     ADCLK           equ	280	;# 
  3490     0119                     RC1REG          equ	281	;# 
  3491     0119                     RCREG           equ	281	;# 
  3492     0119                     RCREG1          equ	281	;# 
  3493     011A                     TX1REG          equ	282	;# 
  3494     011A                     TXREG1          equ	282	;# 
  3495     011A                     TXREG           equ	282	;# 
  3496     011B                     SP1BRG          equ	283	;# 
  3497     011B                     SPBRG           equ	283	;# 
  3498     011B                     SP1BRGL         equ	283	;# 
  3499     011B                     SPBRG1          equ	283	;# 
  3500     011B                     SPBRGL          equ	283	;# 
  3501     011C                     SP1BRGH         equ	284	;# 
  3502     011C                     SPBRGH          equ	284	;# 
  3503     011C                     SPBRGH1         equ	284	;# 
  3504     011D                     RC1STA          equ	285	;# 
  3505     011D                     RCSTA1          equ	285	;# 
  3506     011D                     RCSTA           equ	285	;# 
  3507     011E                     TX1STA          equ	286	;# 
  3508     011E                     TXSTA1          equ	286	;# 
  3509     011E                     TXSTA           equ	286	;# 
  3510     011F                     BAUD1CON        equ	287	;# 
  3511     011F                     BAUDCON1        equ	287	;# 
  3512     011F                     BAUDCTL1        equ	287	;# 
  3513     011F                     BAUDCON         equ	287	;# 
  3514     011F                     BAUDCTL         equ	287	;# 
  3515     018C                     SSP1BUF         equ	396	;# 
  3516     018D                     SSP1ADD         equ	397	;# 
  3517     018E                     SSP1MSK         equ	398	;# 
  3518     018F                     SSP1STAT        equ	399	;# 
  3519     0190                     SSP1CON1        equ	400	;# 
  3520     0191                     SSP1CON2        equ	401	;# 
  3521     0192                     SSP1CON3        equ	402	;# 
  3522     0196                     SSP2BUF         equ	406	;# 
  3523     0197                     SSP2ADD         equ	407	;# 
  3524     0198                     SSP2MSK         equ	408	;# 
  3525     0199                     SSP2STAT        equ	409	;# 
  3526     019A                     SSP2CON1        equ	410	;# 
  3527     019B                     SSP2CON2        equ	411	;# 
  3528     019C                     SSP2CON3        equ	412	;# 
  3529     020C                     TMR1            equ	524	;# 
  3530     020C                     TMR1L           equ	524	;# 
  3531     020D                     TMR1H           equ	525	;# 
  3532     020E                     T1CON           equ	526	;# 
  3533     020E                     TMR1CON         equ	526	;# 
  3534     020F                     T1GCON          equ	527	;# 
  3535     020F                     TMR1GCON        equ	527	;# 
  3536     0210                     T1GATE          equ	528	;# 
  3537     0210                     TMR1GATE        equ	528	;# 
  3538     0211                     T1CLK           equ	529	;# 
  3539     0211                     TMR1CLK         equ	529	;# 
  3540     0211                     PR1             equ	529	;# 
  3541     0212                     TMR3            equ	530	;# 
  3542     0212                     TMR3L           equ	530	;# 
  3543     0213                     TMR3H           equ	531	;# 
  3544     0214                     T3CON           equ	532	;# 
  3545     0214                     TMR3CON         equ	532	;# 
  3546     0215                     T3GCON          equ	533	;# 
  3547     0215                     TMR3GCON        equ	533	;# 
  3548     0216                     T3GATE          equ	534	;# 
  3549     0216                     TMR3GATE        equ	534	;# 
  3550     0217                     T3CLK           equ	535	;# 
  3551     0217                     TMR3CLK         equ	535	;# 
  3552     0217                     PR3             equ	535	;# 
  3553     0218                     TMR5            equ	536	;# 
  3554     0218                     TMR5L           equ	536	;# 
  3555     0219                     TMR5H           equ	537	;# 
  3556     021A                     T5CON           equ	538	;# 
  3557     021A                     TMR5CON         equ	538	;# 
  3558     021B                     T5GCON          equ	539	;# 
  3559     021B                     TMR5GCON        equ	539	;# 
  3560     021C                     T5GATE          equ	540	;# 
  3561     021C                     TMR5GATE        equ	540	;# 
  3562     021D                     T5CLK           equ	541	;# 
  3563     021D                     TMR5CLK         equ	541	;# 
  3564     021D                     PR5             equ	541	;# 
  3565     021E                     CCPTMRS0        equ	542	;# 
  3566     021F                     CCPTMRS1        equ	543	;# 
  3567     028C                     T2TMR           equ	652	;# 
  3568     028C                     TMR2            equ	652	;# 
  3569     028D                     T2PR            equ	653	;# 
  3570     028D                     PR2             equ	653	;# 
  3571     028E                     T2CON           equ	654	;# 
  3572     028F                     T2HLT           equ	655	;# 
  3573     0290                     T2CLKCON        equ	656	;# 
  3574     0291                     T2RST           equ	657	;# 
  3575     0292                     T4TMR           equ	658	;# 
  3576     0292                     TMR4            equ	658	;# 
  3577     0293                     T4PR            equ	659	;# 
  3578     0293                     PR4             equ	659	;# 
  3579     0294                     T4CON           equ	660	;# 
  3580     0295                     T4HLT           equ	661	;# 
  3581     0296                     T4CLKCON        equ	662	;# 
  3582     0297                     T4RST           equ	663	;# 
  3583     0298                     T6TMR           equ	664	;# 
  3584     0298                     TMR6            equ	664	;# 
  3585     0299                     T6PR            equ	665	;# 
  3586     0299                     PR6             equ	665	;# 
  3587     029A                     T6CON           equ	666	;# 
  3588     029B                     T6HLT           equ	667	;# 
  3589     029C                     T6CLKCON        equ	668	;# 
  3590     029D                     T6RST           equ	669	;# 
  3591     029F                     ADCPCON0        equ	671	;# 
  3592     030C                     CCPR1           equ	780	;# 
  3593     030C                     CCPR1L          equ	780	;# 
  3594     030D                     CCPR1H          equ	781	;# 
  3595     030E                     CCP1CON         equ	782	;# 
  3596     030F                     CCP1CAP         equ	783	;# 
  3597     0310                     CCPR2           equ	784	;# 
  3598     0310                     CCPR2L          equ	784	;# 
  3599     0311                     CCPR2H          equ	785	;# 
  3600     0312                     CCP2CON         equ	786	;# 
  3601     0313                     CCP2CAP         equ	787	;# 
  3602     0314                     CCPR3           equ	788	;# 
  3603     0314                     CCPR3L          equ	788	;# 
  3604     0315                     CCPR3H          equ	789	;# 
  3605     0316                     CCP3CON         equ	790	;# 
  3606     0317                     CCP3CAP         equ	791	;# 
  3607     0318                     CCPR4           equ	792	;# 
  3608     0318                     CCPR4L          equ	792	;# 
  3609     0319                     CCPR4H          equ	793	;# 
  3610     031A                     CCP4CON         equ	794	;# 
  3611     031B                     CCP4CAP         equ	795	;# 
  3612     031C                     CCPR5           equ	796	;# 
  3613     031C                     CCPR5L          equ	796	;# 
  3614     031D                     CCPR5H          equ	797	;# 
  3615     031E                     CCP5CON         equ	798	;# 
  3616     031F                     CCP5CAP         equ	799	;# 
  3617     038C                     PWM6DC          equ	908	;# 
  3618     038C                     PWM6DCL         equ	908	;# 
  3619     038D                     PWM6DCH         equ	909	;# 
  3620     038E                     PWM6CON         equ	910	;# 
  3621     0390                     PWM7DC          equ	912	;# 
  3622     0390                     PWM7DCL         equ	912	;# 
  3623     0391                     PWM7DCH         equ	913	;# 
  3624     0392                     PWM7CON         equ	914	;# 
  3625     048C                     SMT1TMR         equ	1164	;# 
  3626     048C                     SMT1TMRL        equ	1164	;# 
  3627     048D                     SMT1TMRH        equ	1165	;# 
  3628     048E                     SMT1TMRU        equ	1166	;# 
  3629     048F                     SMT1CPR         equ	1167	;# 
  3630     048F                     SMT1CPRL        equ	1167	;# 
  3631     0490                     SMT1CPRH        equ	1168	;# 
  3632     0491                     SMT1CPRU        equ	1169	;# 
  3633     0492                     SMT1CPW         equ	1170	;# 
  3634     0492                     SMT1CPWL        equ	1170	;# 
  3635     0493                     SMT1CPWH        equ	1171	;# 
  3636     0494                     SMT1CPWU        equ	1172	;# 
  3637     0495                     SMT1PR          equ	1173	;# 
  3638     0495                     SMT1PRL         equ	1173	;# 
  3639     0496                     SMT1PRH         equ	1174	;# 
  3640     0497                     SMT1PRU         equ	1175	;# 
  3641     0498                     SMT1CON0        equ	1176	;# 
  3642     0499                     SMT1CON1        equ	1177	;# 
  3643     049A                     SMT1STAT        equ	1178	;# 
  3644     049B                     SMT1CLK         equ	1179	;# 
  3645     049C                     SMT1SIG         equ	1180	;# 
  3646     049D                     SMT1WIN         equ	1181	;# 
  3647     050C                     SMT2TMR         equ	1292	;# 
  3648     050C                     SMT2TMRL        equ	1292	;# 
  3649     050D                     SMT2TMRH        equ	1293	;# 
  3650     050E                     SMT2TMRU        equ	1294	;# 
  3651     050F                     SMT2CPR         equ	1295	;# 
  3652     050F                     SMT2CPRL        equ	1295	;# 
  3653     0510                     SMT2CPRH        equ	1296	;# 
  3654     0511                     SMT2CPRU        equ	1297	;# 
  3655     0512                     SMT2CPW         equ	1298	;# 
  3656     0512                     SMT2CPWL        equ	1298	;# 
  3657     0513                     SMT2CPWH        equ	1299	;# 
  3658     0514                     SMT2CPWU        equ	1300	;# 
  3659     0515                     SMT2PR          equ	1301	;# 
  3660     0515                     SMT2PRL         equ	1301	;# 
  3661     0516                     SMT2PRH         equ	1302	;# 
  3662     0517                     SMT2PRU         equ	1303	;# 
  3663     0518                     SMT2CON0        equ	1304	;# 
  3664     0519                     SMT2CON1        equ	1305	;# 
  3665     051A                     SMT2STAT        equ	1306	;# 
  3666     051B                     SMT2CLK         equ	1307	;# 
  3667     051C                     SMT2SIG         equ	1308	;# 
  3668     051D                     SMT2WIN         equ	1309	;# 
  3669     058C                     NCO1ACC         equ	1420	;# 
  3670     058C                     NCO1ACCL        equ	1420	;# 
  3671     058D                     NCO1ACCH        equ	1421	;# 
  3672     058E                     NCO1ACCU        equ	1422	;# 
  3673     058F                     NCO1INC         equ	1423	;# 
  3674     058F                     NCO1INCL        equ	1423	;# 
  3675     0590                     NCO1INCH        equ	1424	;# 
  3676     0591                     NCO1INCU        equ	1425	;# 
  3677     0592                     NCO1CON         equ	1426	;# 
  3678     0593                     NCO1CLK         equ	1427	;# 
  3679     059C                     TMR0L           equ	1436	;# 
  3680     059C                     TMR0            equ	1436	;# 
  3681     059D                     TMR0H           equ	1437	;# 
  3682     059D                     PR0             equ	1437	;# 
  3683     059E                     T0CON0          equ	1438	;# 
  3684     059F                     T0CON1          equ	1439	;# 
  3685     060C                     CWG1CLK         equ	1548	;# 
  3686     060C                     CWG1CLKCON      equ	1548	;# 
  3687     060D                     CWG1ISM         equ	1549	;# 
  3688     060D                     CWG1DAT         equ	1549	;# 
  3689     060E                     CWG1DBR         equ	1550	;# 
  3690     060F                     CWG1DBF         equ	1551	;# 
  3691     0610                     CWG1CON0        equ	1552	;# 
  3692     0611                     CWG1CON1        equ	1553	;# 
  3693     0612                     CWG1AS0         equ	1554	;# 
  3694     0613                     CWG1AS1         equ	1555	;# 
  3695     0614                     CWG1STR         equ	1556	;# 
  3696     0616                     CWG2CLK         equ	1558	;# 
  3697     0616                     CWG2CLKCON      equ	1558	;# 
  3698     0617                     CWG2ISM         equ	1559	;# 
  3699     0617                     CWG2DAT         equ	1559	;# 
  3700     0618                     CWG2DBR         equ	1560	;# 
  3701     0619                     CWG2DBF         equ	1561	;# 
  3702     061A                     CWG2CON0        equ	1562	;# 
  3703     061B                     CWG2CON1        equ	1563	;# 
  3704     061C                     CWG2AS0         equ	1564	;# 
  3705     061D                     CWG2AS1         equ	1565	;# 
  3706     061E                     CWG2STR         equ	1566	;# 
  3707     068C                     CWG3CLK         equ	1676	;# 
  3708     068C                     CWG3CLKCON      equ	1676	;# 
  3709     068D                     CWG3ISM         equ	1677	;# 
  3710     068D                     CWG3DAT         equ	1677	;# 
  3711     068E                     CWG3DBR         equ	1678	;# 
  3712     068F                     CWG3DBF         equ	1679	;# 
  3713     0690                     CWG3CON0        equ	1680	;# 
  3714     0691                     CWG3CON1        equ	1681	;# 
  3715     0692                     CWG3AS0         equ	1682	;# 
  3716     0693                     CWG3AS1         equ	1683	;# 
  3717     0694                     CWG3STR         equ	1684	;# 
  3718     070C                     PIR0            equ	1804	;# 
  3719     070D                     PIR1            equ	1805	;# 
  3720     070E                     PIR2            equ	1806	;# 
  3721     070F                     PIR3            equ	1807	;# 
  3722     0710                     PIR4            equ	1808	;# 
  3723     0711                     PIR5            equ	1809	;# 
  3724     0712                     PIR6            equ	1810	;# 
  3725     0713                     PIR7            equ	1811	;# 
  3726     0714                     PIR8            equ	1812	;# 
  3727     0716                     PIE0            equ	1814	;# 
  3728     0717                     PIE1            equ	1815	;# 
  3729     0718                     PIE2            equ	1816	;# 
  3730     0719                     PIE3            equ	1817	;# 
  3731     071A                     PIE4            equ	1818	;# 
  3732     071B                     PIE5            equ	1819	;# 
  3733     071C                     PIE6            equ	1820	;# 
  3734     071D                     PIE7            equ	1821	;# 
  3735     071E                     PIE8            equ	1822	;# 
  3736     0796                     PMD0            equ	1942	;# 
  3737     0797                     PMD1            equ	1943	;# 
  3738     0798                     PMD2            equ	1944	;# 
  3739     0799                     PMD3            equ	1945	;# 
  3740     079A                     PMD4            equ	1946	;# 
  3741     079B                     PMD5            equ	1947	;# 
  3742     079C                     PMD6            equ	1948	;# 
  3743     079D                     PMD7            equ	1949	;# 
  3744     080C                     WDTCON0         equ	2060	;# 
  3745     080D                     WDTCON1         equ	2061	;# 
  3746     080E                     WDTPSL          equ	2062	;# 
  3747     080F                     WDTPSH          equ	2063	;# 
  3748     0810                     WDTTMR          equ	2064	;# 
  3749     0811                     BORCON          equ	2065	;# 
  3750     0813                     PCON0           equ	2067	;# 
  3751     0814                     PCON1           equ	2068	;# 
  3752     081A                     NVMADR          equ	2074	;# 
  3753     081A                     NVMADRL         equ	2074	;# 
  3754     081B                     NVMADRH         equ	2075	;# 
  3755     081C                     NVMDAT          equ	2076	;# 
  3756     081C                     NVMDATL         equ	2076	;# 
  3757     081D                     NVMDATH         equ	2077	;# 
  3758     081E                     NVMCON1         equ	2078	;# 
  3759     081F                     NVMCON2         equ	2079	;# 
  3760     088C                     CPUDOZE         equ	2188	;# 
  3761     088D                     OSCCON1         equ	2189	;# 
  3762     088E                     OSCCON2         equ	2190	;# 
  3763     088F                     OSCCON3         equ	2191	;# 
  3764     0890                     OSCSTAT         equ	2192	;# 
  3765     0891                     OSCEN           equ	2193	;# 
  3766     0892                     OSCTUNE         equ	2194	;# 
  3767     0893                     OSCFRQ          equ	2195	;# 
  3768     0895                     CLKRCON         equ	2197	;# 
  3769     0896                     CLKRCLK         equ	2198	;# 
  3770     0897                     MD1CON0         equ	2199	;# 
  3771     0898                     MD1CON1         equ	2200	;# 
  3772     0899                     MD1SRC          equ	2201	;# 
  3773     089A                     MD1CARL         equ	2202	;# 
  3774     089B                     MD1CARH         equ	2203	;# 
  3775     090C                     FVRCON          equ	2316	;# 
  3776     090E                     DAC1CON0        equ	2318	;# 
  3777     090F                     DAC1CON1        equ	2319	;# 
  3778     091F                     ZCDCON          equ	2335	;# 
  3779     098F                     CMOUT           equ	2447	;# 
  3780     098F                     CMSTAT          equ	2447	;# 
  3781     0990                     CM1CON0         equ	2448	;# 
  3782     0991                     CM1CON1         equ	2449	;# 
  3783     0992                     CM1NCH          equ	2450	;# 
  3784     0993                     CM1PCH          equ	2451	;# 
  3785     0994                     CM2CON0         equ	2452	;# 
  3786     0995                     CM2CON1         equ	2453	;# 
  3787     0996                     CM2NCH          equ	2454	;# 
  3788     0997                     CM2PCH          equ	2455	;# 
  3789     0A19                     RC2REG          equ	2585	;# 
  3790     0A19                     RCREG2          equ	2585	;# 
  3791     0A1A                     TX2REG          equ	2586	;# 
  3792     0A1A                     TXREG2          equ	2586	;# 
  3793     0A1B                     SP2BRG          equ	2587	;# 
  3794     0A1B                     SP2BRGL         equ	2587	;# 
  3795     0A1B                     SPBRG2          equ	2587	;# 
  3796     0A1C                     SP2BRGH         equ	2588	;# 
  3797     0A1C                     SPBRGH2         equ	2588	;# 
  3798     0A1D                     RC2STA          equ	2589	;# 
  3799     0A1D                     RCSTA2          equ	2589	;# 
  3800     0A1E                     TX2STA          equ	2590	;# 
  3801     0A1E                     TXSTA2          equ	2590	;# 
  3802     0A1F                     BAUD2CON        equ	2591	;# 
  3803     0A1F                     BAUDCON2        equ	2591	;# 
  3804     0A1F                     BAUDCTL2        equ	2591	;# 
  3805     1E0F                     CLCDATA         equ	7695	;# 
  3806     1E10                     CLC1CON         equ	7696	;# 
  3807     1E11                     CLC1POL         equ	7697	;# 
  3808     1E12                     CLC1SEL0        equ	7698	;# 
  3809     1E13                     CLC1SEL1        equ	7699	;# 
  3810     1E14                     CLC1SEL2        equ	7700	;# 
  3811     1E15                     CLC1SEL3        equ	7701	;# 
  3812     1E16                     CLC1GLS0        equ	7702	;# 
  3813     1E17                     CLC1GLS1        equ	7703	;# 
  3814     1E18                     CLC1GLS2        equ	7704	;# 
  3815     1E19                     CLC1GLS3        equ	7705	;# 
  3816     1E1A                     CLC2CON         equ	7706	;# 
  3817     1E1B                     CLC2POL         equ	7707	;# 
  3818     1E1C                     CLC2SEL0        equ	7708	;# 
  3819     1E1D                     CLC2SEL1        equ	7709	;# 
  3820     1E1E                     CLC2SEL2        equ	7710	;# 
  3821     1E1F                     CLC2SEL3        equ	7711	;# 
  3822     1E20                     CLC2GLS0        equ	7712	;# 
  3823     1E21                     CLC2GLS1        equ	7713	;# 
  3824     1E22                     CLC2GLS2        equ	7714	;# 
  3825     1E23                     CLC2GLS3        equ	7715	;# 
  3826     1E24                     CLC3CON         equ	7716	;# 
  3827     1E25                     CLC3POL         equ	7717	;# 
  3828     1E26                     CLC3SEL0        equ	7718	;# 
  3829     1E27                     CLC3SEL1        equ	7719	;# 
  3830     1E28                     CLC3SEL2        equ	7720	;# 
  3831     1E29                     CLC3SEL3        equ	7721	;# 
  3832     1E2A                     CLC3GLS0        equ	7722	;# 
  3833     1E2B                     CLC3GLS1        equ	7723	;# 
  3834     1E2C                     CLC3GLS2        equ	7724	;# 
  3835     1E2D                     CLC3GLS3        equ	7725	;# 
  3836     1E2E                     CLC4CON         equ	7726	;# 
  3837     1E2F                     CLC4POL         equ	7727	;# 
  3838     1E30                     CLC4SEL0        equ	7728	;# 
  3839     1E31                     CLC4SEL1        equ	7729	;# 
  3840     1E32                     CLC4SEL2        equ	7730	;# 
  3841     1E33                     CLC4SEL3        equ	7731	;# 
  3842     1E34                     CLC4GLS0        equ	7732	;# 
  3843     1E35                     CLC4GLS1        equ	7733	;# 
  3844     1E36                     CLC4GLS2        equ	7734	;# 
  3845     1E37                     CLC4GLS3        equ	7735	;# 
  3846     1E8F                     PPSLOCK         equ	7823	;# 
  3847     1E90                     INTPPS          equ	7824	;# 
  3848     1E91                     T0CKIPPS        equ	7825	;# 
  3849     1E92                     T1CKIPPS        equ	7826	;# 
  3850     1E93                     T1GPPS          equ	7827	;# 
  3851     1E94                     T3CKIPPS        equ	7828	;# 
  3852     1E95                     T3GPPS          equ	7829	;# 
  3853     1E96                     T5CKIPPS        equ	7830	;# 
  3854     1E97                     T5GPPS          equ	7831	;# 
  3855     1E9C                     T2INPPS         equ	7836	;# 
  3856     1E9D                     T4INPPS         equ	7837	;# 
  3857     1E9E                     T6INPPS         equ	7838	;# 
  3858     1EA1                     CCP1PPS         equ	7841	;# 
  3859     1EA2                     CCP2PPS         equ	7842	;# 
  3860     1EA3                     CCP3PPS         equ	7843	;# 
  3861     1EA4                     CCP4PPS         equ	7844	;# 
  3862     1EA5                     CCP5PPS         equ	7845	;# 
  3863     1EA9                     SMT1WINPPS      equ	7849	;# 
  3864     1EAA                     SMT1SIGPPS      equ	7850	;# 
  3865     1EAB                     SMT2WINPPS      equ	7851	;# 
  3866     1EAC                     SMT2SIGPPS      equ	7852	;# 
  3867     1EB1                     CWG1PPS         equ	7857	;# 
  3868     1EB2                     CWG2PPS         equ	7858	;# 
  3869     1EB3                     CWG3PPS         equ	7859	;# 
  3870     1EB8                     MDCARLPPS       equ	7864	;# 
  3871     1EB9                     MDCARHPPS       equ	7865	;# 
  3872     1EBA                     MDSRCPPS        equ	7866	;# 
  3873     1EBB                     CLCIN0PPS       equ	7867	;# 
  3874     1EBC                     CLCIN1PPS       equ	7868	;# 
  3875     1EBD                     CLCIN2PPS       equ	7869	;# 
  3876     1EBE                     CLCIN3PPS       equ	7870	;# 
  3877     1EC3                     ADACTPPS        equ	7875	;# 
  3878     1EC5                     SSP1CLKPPS      equ	7877	;# 
  3879     1EC6                     SSP1DATPPS      equ	7878	;# 
  3880     1EC7                     SSP1SSPPS       equ	7879	;# 
  3881     1EC8                     SSP2CLKPPS      equ	7880	;# 
  3882     1EC9                     SSP2DATPPS      equ	7881	;# 
  3883     1ECA                     SSP2SSPPS       equ	7882	;# 
  3884     1ECB                     RX1PPS          equ	7883	;# 
  3885     1ECC                     CK1PPS          equ	7884	;# 
  3886     1ECD                     RX2PPS          equ	7885	;# 
  3887     1ECE                     CK2PPS          equ	7886	;# 
  3888     1F10                     RA0PPS          equ	7952	;# 
  3889     1F11                     RA1PPS          equ	7953	;# 
  3890     1F12                     RA2PPS          equ	7954	;# 
  3891     1F13                     RA3PPS          equ	7955	;# 
  3892     1F14                     RA4PPS          equ	7956	;# 
  3893     1F15                     RA5PPS          equ	7957	;# 
  3894     1F16                     RA6PPS          equ	7958	;# 
  3895     1F17                     RA7PPS          equ	7959	;# 
  3896     1F18                     RB0PPS          equ	7960	;# 
  3897     1F19                     RB1PPS          equ	7961	;# 
  3898     1F1A                     RB2PPS          equ	7962	;# 
  3899     1F1B                     RB3PPS          equ	7963	;# 
  3900     1F1C                     RB4PPS          equ	7964	;# 
  3901     1F1D                     RB5PPS          equ	7965	;# 
  3902     1F1E                     RB6PPS          equ	7966	;# 
  3903     1F1F                     RB7PPS          equ	7967	;# 
  3904     1F20                     RC0PPS          equ	7968	;# 
  3905     1F21                     RC1PPS          equ	7969	;# 
  3906     1F22                     RC2PPS          equ	7970	;# 
  3907     1F23                     RC3PPS          equ	7971	;# 
  3908     1F24                     RC4PPS          equ	7972	;# 
  3909     1F25                     RC5PPS          equ	7973	;# 
  3910     1F26                     RC6PPS          equ	7974	;# 
  3911     1F27                     RC7PPS          equ	7975	;# 
  3912     1F38                     ANSELA          equ	7992	;# 
  3913     1F39                     WPUA            equ	7993	;# 
  3914     1F3A                     ODCONA          equ	7994	;# 
  3915     1F3B                     SLRCONA         equ	7995	;# 
  3916     1F3C                     INLVLA          equ	7996	;# 
  3917     1F3D                     IOCAP           equ	7997	;# 
  3918     1F3E                     IOCAN           equ	7998	;# 
  3919     1F3F                     IOCAF           equ	7999	;# 
  3920     1F43                     ANSELB          equ	8003	;# 
  3921     1F44                     WPUB            equ	8004	;# 
  3922     1F45                     ODCONB          equ	8005	;# 
  3923     1F46                     SLRCONB         equ	8006	;# 
  3924     1F47                     INLVLB          equ	8007	;# 
  3925     1F48                     IOCBP           equ	8008	;# 
  3926     1F49                     IOCBN           equ	8009	;# 
  3927     1F4A                     IOCBF           equ	8010	;# 
  3928     1F4E                     ANSELC          equ	8014	;# 
  3929     1F4F                     WPUC            equ	8015	;# 
  3930     1F50                     ODCONC          equ	8016	;# 
  3931     1F51                     SLRCONC         equ	8017	;# 
  3932     1F52                     INLVLC          equ	8018	;# 
  3933     1F53                     IOCCP           equ	8019	;# 
  3934     1F54                     IOCCN           equ	8020	;# 
  3935     1F55                     IOCCF           equ	8021	;# 
  3936     1F65                     WPUE            equ	8037	;# 
  3937     1F66                     ODCONE          equ	8038	;# 
  3938     1F67                     SLRCONE         equ	8039	;# 
  3939     1F68                     INLVLE          equ	8040	;# 
  3940     1F69                     IOCEP           equ	8041	;# 
  3941     1F6A                     IOCEN           equ	8042	;# 
  3942     1F6B                     IOCEF           equ	8043	;# 
  3943     1FE4                     STATUS_SHAD     equ	8164	;# 
  3944     1FE5                     WREG_SHAD       equ	8165	;# 
  3945     1FE6                     BSR_SHAD        equ	8166	;# 
  3946     1FE7                     PCLATH_SHAD     equ	8167	;# 
  3947     1FE8                     FSR0_SHAD       equ	8168	;# 
  3948     1FE8                     FSR0L_SHAD      equ	8168	;# 
  3949     1FE9                     FSR0H_SHAD      equ	8169	;# 
  3950     1FEA                     FSR1L_SHAD      equ	8170	;# 
  3951     1FEB                     FSR1H_SHAD      equ	8171	;# 
  3952     1FED                     STKPTR          equ	8173	;# 
  3953     1FEE                     TOSL            equ	8174	;# 
  3954     1FEF                     TOSH            equ	8175	;# 
  3955     0000                     INDF0           equ	0	;# 
  3956     0001                     INDF1           equ	1	;# 
  3957     0002                     PCL             equ	2	;# 
  3958     0003                     STATUS          equ	3	;# 
  3959     0004                     FSR0L           equ	4	;# 
  3960     0005                     FSR0H           equ	5	;# 
  3961     0006                     FSR1L           equ	6	;# 
  3962     0007                     FSR1H           equ	7	;# 
  3963     0008                     BSR             equ	8	;# 
  3964     0009                     WREG            equ	9	;# 
  3965     000A                     PCLATH          equ	10	;# 
  3966     000B                     INTCON          equ	11	;# 
  3967     000C                     PORTA           equ	12	;# 
  3968     000D                     PORTB           equ	13	;# 
  3969     000E                     PORTC           equ	14	;# 
  3970     0010                     PORTE           equ	16	;# 
  3971     0012                     TRISA           equ	18	;# 
  3972     0013                     TRISB           equ	19	;# 
  3973     0014                     TRISC           equ	20	;# 
  3974     0016                     TRISE           equ	22	;# 
  3975     0018                     LATA            equ	24	;# 
  3976     0019                     LATB            equ	25	;# 
  3977     001A                     LATC            equ	26	;# 
  3978     008C                     ADLTH           equ	140	;# 
  3979     008C                     ADLTHL          equ	140	;# 
  3980     008D                     ADLTHH          equ	141	;# 
  3981     008E                     ADUTH           equ	142	;# 
  3982     008E                     ADUTHL          equ	142	;# 
  3983     008F                     ADUTHH          equ	143	;# 
  3984     0090                     ADERR           equ	144	;# 
  3985     0090                     ADERRL          equ	144	;# 
  3986     0091                     ADERRH          equ	145	;# 
  3987     0092                     ADSTPT          equ	146	;# 
  3988     0092                     ADSTPTL         equ	146	;# 
  3989     0093                     ADSTPTH         equ	147	;# 
  3990     0094                     ADFLTR          equ	148	;# 
  3991     0094                     ADFLTRL         equ	148	;# 
  3992     0095                     ADFLTRH         equ	149	;# 
  3993     0096                     ADACC           equ	150	;# 
  3994     0096                     ADACCL          equ	150	;# 
  3995     0097                     ADACCH          equ	151	;# 
  3996     0098                     ADACCU          equ	152	;# 
  3997     0099                     ADCNT           equ	153	;# 
  3998     009A                     ADRPT           equ	154	;# 
  3999     009B                     ADPREV          equ	155	;# 
  4000     009B                     ADPREVL         equ	155	;# 
  4001     009C                     ADPREVH         equ	156	;# 
  4002     009D                     ADRES           equ	157	;# 
  4003     009D                     ADRESL          equ	157	;# 
  4004     009E                     ADRESH          equ	158	;# 
  4005     009F                     ADPCH           equ	159	;# 
  4006     010C                     ADACQ           equ	268	;# 
  4007     010C                     ADACQL          equ	268	;# 
  4008     010D                     ADACQH          equ	269	;# 
  4009     010E                     ADCAP           equ	270	;# 
  4010     010F                     ADPRE           equ	271	;# 
  4011     010F                     ADPREL          equ	271	;# 
  4012     0110                     ADPREH          equ	272	;# 
  4013     0111                     ADCON0          equ	273	;# 
  4014     0112                     ADCON1          equ	274	;# 
  4015     0113                     ADCON2          equ	275	;# 
  4016     0114                     ADCON3          equ	276	;# 
  4017     0115                     ADSTAT          equ	277	;# 
  4018     0116                     ADREF           equ	278	;# 
  4019     0117                     ADACT           equ	279	;# 
  4020     0118                     ADCLK           equ	280	;# 
  4021     0119                     RC1REG          equ	281	;# 
  4022     0119                     RCREG           equ	281	;# 
  4023     0119                     RCREG1          equ	281	;# 
  4024     011A                     TX1REG          equ	282	;# 
  4025     011A                     TXREG1          equ	282	;# 
  4026     011A                     TXREG           equ	282	;# 
  4027     011B                     SP1BRG          equ	283	;# 
  4028     011B                     SPBRG           equ	283	;# 
  4029     011B                     SP1BRGL         equ	283	;# 
  4030     011B                     SPBRG1          equ	283	;# 
  4031     011B                     SPBRGL          equ	283	;# 
  4032     011C                     SP1BRGH         equ	284	;# 
  4033     011C                     SPBRGH          equ	284	;# 
  4034     011C                     SPBRGH1         equ	284	;# 
  4035     011D                     RC1STA          equ	285	;# 
  4036     011D                     RCSTA1          equ	285	;# 
  4037     011D                     RCSTA           equ	285	;# 
  4038     011E                     TX1STA          equ	286	;# 
  4039     011E                     TXSTA1          equ	286	;# 
  4040     011E                     TXSTA           equ	286	;# 
  4041     011F                     BAUD1CON        equ	287	;# 
  4042     011F                     BAUDCON1        equ	287	;# 
  4043     011F                     BAUDCTL1        equ	287	;# 
  4044     011F                     BAUDCON         equ	287	;# 
  4045     011F                     BAUDCTL         equ	287	;# 
  4046     018C                     SSP1BUF         equ	396	;# 
  4047     018D                     SSP1ADD         equ	397	;# 
  4048     018E                     SSP1MSK         equ	398	;# 
  4049     018F                     SSP1STAT        equ	399	;# 
  4050     0190                     SSP1CON1        equ	400	;# 
  4051     0191                     SSP1CON2        equ	401	;# 
  4052     0192                     SSP1CON3        equ	402	;# 
  4053     0196                     SSP2BUF         equ	406	;# 
  4054     0197                     SSP2ADD         equ	407	;# 
  4055     0198                     SSP2MSK         equ	408	;# 
  4056     0199                     SSP2STAT        equ	409	;# 
  4057     019A                     SSP2CON1        equ	410	;# 
  4058     019B                     SSP2CON2        equ	411	;# 
  4059     019C                     SSP2CON3        equ	412	;# 
  4060     020C                     TMR1            equ	524	;# 
  4061     020C                     TMR1L           equ	524	;# 
  4062     020D                     TMR1H           equ	525	;# 
  4063     020E                     T1CON           equ	526	;# 
  4064     020E                     TMR1CON         equ	526	;# 
  4065     020F                     T1GCON          equ	527	;# 
  4066     020F                     TMR1GCON        equ	527	;# 
  4067     0210                     T1GATE          equ	528	;# 
  4068     0210                     TMR1GATE        equ	528	;# 
  4069     0211                     T1CLK           equ	529	;# 
  4070     0211                     TMR1CLK         equ	529	;# 
  4071     0211                     PR1             equ	529	;# 
  4072     0212                     TMR3            equ	530	;# 
  4073     0212                     TMR3L           equ	530	;# 
  4074     0213                     TMR3H           equ	531	;# 
  4075     0214                     T3CON           equ	532	;# 
  4076     0214                     TMR3CON         equ	532	;# 
  4077     0215                     T3GCON          equ	533	;# 
  4078     0215                     TMR3GCON        equ	533	;# 
  4079     0216                     T3GATE          equ	534	;# 
  4080     0216                     TMR3GATE        equ	534	;# 
  4081     0217                     T3CLK           equ	535	;# 
  4082     0217                     TMR3CLK         equ	535	;# 
  4083     0217                     PR3             equ	535	;# 
  4084     0218                     TMR5            equ	536	;# 
  4085     0218                     TMR5L           equ	536	;# 
  4086     0219                     TMR5H           equ	537	;# 
  4087     021A                     T5CON           equ	538	;# 
  4088     021A                     TMR5CON         equ	538	;# 
  4089     021B                     T5GCON          equ	539	;# 
  4090     021B                     TMR5GCON        equ	539	;# 
  4091     021C                     T5GATE          equ	540	;# 
  4092     021C                     TMR5GATE        equ	540	;# 
  4093     021D                     T5CLK           equ	541	;# 
  4094     021D                     TMR5CLK         equ	541	;# 
  4095     021D                     PR5             equ	541	;# 
  4096     021E                     CCPTMRS0        equ	542	;# 
  4097     021F                     CCPTMRS1        equ	543	;# 
  4098     028C                     T2TMR           equ	652	;# 
  4099     028C                     TMR2            equ	652	;# 
  4100     028D                     T2PR            equ	653	;# 
  4101     028D                     PR2             equ	653	;# 
  4102     028E                     T2CON           equ	654	;# 
  4103     028F                     T2HLT           equ	655	;# 
  4104     0290                     T2CLKCON        equ	656	;# 
  4105     0291                     T2RST           equ	657	;# 
  4106     0292                     T4TMR           equ	658	;# 
  4107     0292                     TMR4            equ	658	;# 
  4108     0293                     T4PR            equ	659	;# 
  4109     0293                     PR4             equ	659	;# 
  4110     0294                     T4CON           equ	660	;# 
  4111     0295                     T4HLT           equ	661	;# 
  4112     0296                     T4CLKCON        equ	662	;# 
  4113     0297                     T4RST           equ	663	;# 
  4114     0298                     T6TMR           equ	664	;# 
  4115     0298                     TMR6            equ	664	;# 
  4116     0299                     T6PR            equ	665	;# 
  4117     0299                     PR6             equ	665	;# 
  4118     029A                     T6CON           equ	666	;# 
  4119     029B                     T6HLT           equ	667	;# 
  4120     029C                     T6CLKCON        equ	668	;# 
  4121     029D                     T6RST           equ	669	;# 
  4122     029F                     ADCPCON0        equ	671	;# 
  4123     030C                     CCPR1           equ	780	;# 
  4124     030C                     CCPR1L          equ	780	;# 
  4125     030D                     CCPR1H          equ	781	;# 
  4126     030E                     CCP1CON         equ	782	;# 
  4127     030F                     CCP1CAP         equ	783	;# 
  4128     0310                     CCPR2           equ	784	;# 
  4129     0310                     CCPR2L          equ	784	;# 
  4130     0311                     CCPR2H          equ	785	;# 
  4131     0312                     CCP2CON         equ	786	;# 
  4132     0313                     CCP2CAP         equ	787	;# 
  4133     0314                     CCPR3           equ	788	;# 
  4134     0314                     CCPR3L          equ	788	;# 
  4135     0315                     CCPR3H          equ	789	;# 
  4136     0316                     CCP3CON         equ	790	;# 
  4137     0317                     CCP3CAP         equ	791	;# 
  4138     0318                     CCPR4           equ	792	;# 
  4139     0318                     CCPR4L          equ	792	;# 
  4140     0319                     CCPR4H          equ	793	;# 
  4141     031A                     CCP4CON         equ	794	;# 
  4142     031B                     CCP4CAP         equ	795	;# 
  4143     031C                     CCPR5           equ	796	;# 
  4144     031C                     CCPR5L          equ	796	;# 
  4145     031D                     CCPR5H          equ	797	;# 
  4146     031E                     CCP5CON         equ	798	;# 
  4147     031F                     CCP5CAP         equ	799	;# 
  4148     038C                     PWM6DC          equ	908	;# 
  4149     038C                     PWM6DCL         equ	908	;# 
  4150     038D                     PWM6DCH         equ	909	;# 
  4151     038E                     PWM6CON         equ	910	;# 
  4152     0390                     PWM7DC          equ	912	;# 
  4153     0390                     PWM7DCL         equ	912	;# 
  4154     0391                     PWM7DCH         equ	913	;# 
  4155     0392                     PWM7CON         equ	914	;# 
  4156     048C                     SMT1TMR         equ	1164	;# 
  4157     048C                     SMT1TMRL        equ	1164	;# 
  4158     048D                     SMT1TMRH        equ	1165	;# 
  4159     048E                     SMT1TMRU        equ	1166	;# 
  4160     048F                     SMT1CPR         equ	1167	;# 
  4161     048F                     SMT1CPRL        equ	1167	;# 
  4162     0490                     SMT1CPRH        equ	1168	;# 
  4163     0491                     SMT1CPRU        equ	1169	;# 
  4164     0492                     SMT1CPW         equ	1170	;# 
  4165     0492                     SMT1CPWL        equ	1170	;# 
  4166     0493                     SMT1CPWH        equ	1171	;# 
  4167     0494                     SMT1CPWU        equ	1172	;# 
  4168     0495                     SMT1PR          equ	1173	;# 
  4169     0495                     SMT1PRL         equ	1173	;# 
  4170     0496                     SMT1PRH         equ	1174	;# 
  4171     0497                     SMT1PRU         equ	1175	;# 
  4172     0498                     SMT1CON0        equ	1176	;# 
  4173     0499                     SMT1CON1        equ	1177	;# 
  4174     049A                     SMT1STAT        equ	1178	;# 
  4175     049B                     SMT1CLK         equ	1179	;# 
  4176     049C                     SMT1SIG         equ	1180	;# 
  4177     049D                     SMT1WIN         equ	1181	;# 
  4178     050C                     SMT2TMR         equ	1292	;# 
  4179     050C                     SMT2TMRL        equ	1292	;# 
  4180     050D                     SMT2TMRH        equ	1293	;# 
  4181     050E                     SMT2TMRU        equ	1294	;# 
  4182     050F                     SMT2CPR         equ	1295	;# 
  4183     050F                     SMT2CPRL        equ	1295	;# 
  4184     0510                     SMT2CPRH        equ	1296	;# 
  4185     0511                     SMT2CPRU        equ	1297	;# 
  4186     0512                     SMT2CPW         equ	1298	;# 
  4187     0512                     SMT2CPWL        equ	1298	;# 
  4188     0513                     SMT2CPWH        equ	1299	;# 
  4189     0514                     SMT2CPWU        equ	1300	;# 
  4190     0515                     SMT2PR          equ	1301	;# 
  4191     0515                     SMT2PRL         equ	1301	;# 
  4192     0516                     SMT2PRH         equ	1302	;# 
  4193     0517                     SMT2PRU         equ	1303	;# 
  4194     0518                     SMT2CON0        equ	1304	;# 
  4195     0519                     SMT2CON1        equ	1305	;# 
  4196     051A                     SMT2STAT        equ	1306	;# 
  4197     051B                     SMT2CLK         equ	1307	;# 
  4198     051C                     SMT2SIG         equ	1308	;# 
  4199     051D                     SMT2WIN         equ	1309	;# 
  4200     058C                     NCO1ACC         equ	1420	;# 
  4201     058C                     NCO1ACCL        equ	1420	;# 
  4202     058D                     NCO1ACCH        equ	1421	;# 
  4203     058E                     NCO1ACCU        equ	1422	;# 
  4204     058F                     NCO1INC         equ	1423	;# 
  4205     058F                     NCO1INCL        equ	1423	;# 
  4206     0590                     NCO1INCH        equ	1424	;# 
  4207     0591                     NCO1INCU        equ	1425	;# 
  4208     0592                     NCO1CON         equ	1426	;# 
  4209     0593                     NCO1CLK         equ	1427	;# 
  4210     059C                     TMR0L           equ	1436	;# 
  4211     059C                     TMR0            equ	1436	;# 
  4212     059D                     TMR0H           equ	1437	;# 
  4213     059D                     PR0             equ	1437	;# 
  4214     059E                     T0CON0          equ	1438	;# 
  4215     059F                     T0CON1          equ	1439	;# 
  4216     060C                     CWG1CLK         equ	1548	;# 
  4217     060C                     CWG1CLKCON      equ	1548	;# 
  4218     060D                     CWG1ISM         equ	1549	;# 
  4219     060D                     CWG1DAT         equ	1549	;# 
  4220     060E                     CWG1DBR         equ	1550	;# 
  4221     060F                     CWG1DBF         equ	1551	;# 
  4222     0610                     CWG1CON0        equ	1552	;# 
  4223     0611                     CWG1CON1        equ	1553	;# 
  4224     0612                     CWG1AS0         equ	1554	;# 
  4225     0613                     CWG1AS1         equ	1555	;# 
  4226     0614                     CWG1STR         equ	1556	;# 
  4227     0616                     CWG2CLK         equ	1558	;# 
  4228     0616                     CWG2CLKCON      equ	1558	;# 
  4229     0617                     CWG2ISM         equ	1559	;# 
  4230     0617                     CWG2DAT         equ	1559	;# 
  4231     0618                     CWG2DBR         equ	1560	;# 
  4232     0619                     CWG2DBF         equ	1561	;# 
  4233     061A                     CWG2CON0        equ	1562	;# 
  4234     061B                     CWG2CON1        equ	1563	;# 
  4235     061C                     CWG2AS0         equ	1564	;# 
  4236     061D                     CWG2AS1         equ	1565	;# 
  4237     061E                     CWG2STR         equ	1566	;# 
  4238     068C                     CWG3CLK         equ	1676	;# 
  4239     068C                     CWG3CLKCON      equ	1676	;# 
  4240     068D                     CWG3ISM         equ	1677	;# 
  4241     068D                     CWG3DAT         equ	1677	;# 
  4242     068E                     CWG3DBR         equ	1678	;# 
  4243     068F                     CWG3DBF         equ	1679	;# 
  4244     0690                     CWG3CON0        equ	1680	;# 
  4245     0691                     CWG3CON1        equ	1681	;# 
  4246     0692                     CWG3AS0         equ	1682	;# 
  4247     0693                     CWG3AS1         equ	1683	;# 
  4248     0694                     CWG3STR         equ	1684	;# 
  4249     070C                     PIR0            equ	1804	;# 
  4250     070D                     PIR1            equ	1805	;# 
  4251     070E                     PIR2            equ	1806	;# 
  4252     070F                     PIR3            equ	1807	;# 
  4253     0710                     PIR4            equ	1808	;# 
  4254     0711                     PIR5            equ	1809	;# 
  4255     0712                     PIR6            equ	1810	;# 
  4256     0713                     PIR7            equ	1811	;# 
  4257     0714                     PIR8            equ	1812	;# 
  4258     0716                     PIE0            equ	1814	;# 
  4259     0717                     PIE1            equ	1815	;# 
  4260     0718                     PIE2            equ	1816	;# 
  4261     0719                     PIE3            equ	1817	;# 
  4262     071A                     PIE4            equ	1818	;# 
  4263     071B                     PIE5            equ	1819	;# 
  4264     071C                     PIE6            equ	1820	;# 
  4265     071D                     PIE7            equ	1821	;# 
  4266     071E                     PIE8            equ	1822	;# 
  4267     0796                     PMD0            equ	1942	;# 
  4268     0797                     PMD1            equ	1943	;# 
  4269     0798                     PMD2            equ	1944	;# 
  4270     0799                     PMD3            equ	1945	;# 
  4271     079A                     PMD4            equ	1946	;# 
  4272     079B                     PMD5            equ	1947	;# 
  4273     079C                     PMD6            equ	1948	;# 
  4274     079D                     PMD7            equ	1949	;# 
  4275     080C                     WDTCON0         equ	2060	;# 
  4276     080D                     WDTCON1         equ	2061	;# 
  4277     080E                     WDTPSL          equ	2062	;# 
  4278     080F                     WDTPSH          equ	2063	;# 
  4279     0810                     WDTTMR          equ	2064	;# 
  4280     0811                     BORCON          equ	2065	;# 
  4281     0813                     PCON0           equ	2067	;# 
  4282     0814                     PCON1           equ	2068	;# 
  4283     081A                     NVMADR          equ	2074	;# 
  4284     081A                     NVMADRL         equ	2074	;# 
  4285     081B                     NVMADRH         equ	2075	;# 
  4286     081C                     NVMDAT          equ	2076	;# 
  4287     081C                     NVMDATL         equ	2076	;# 
  4288     081D                     NVMDATH         equ	2077	;# 
  4289     081E                     NVMCON1         equ	2078	;# 
  4290     081F                     NVMCON2         equ	2079	;# 
  4291     088C                     CPUDOZE         equ	2188	;# 
  4292     088D                     OSCCON1         equ	2189	;# 
  4293     088E                     OSCCON2         equ	2190	;# 
  4294     088F                     OSCCON3         equ	2191	;# 
  4295     0890                     OSCSTAT         equ	2192	;# 
  4296     0891                     OSCEN           equ	2193	;# 
  4297     0892                     OSCTUNE         equ	2194	;# 
  4298     0893                     OSCFRQ          equ	2195	;# 
  4299     0895                     CLKRCON         equ	2197	;# 
  4300     0896                     CLKRCLK         equ	2198	;# 
  4301     0897                     MD1CON0         equ	2199	;# 
  4302     0898                     MD1CON1         equ	2200	;# 
  4303     0899                     MD1SRC          equ	2201	;# 
  4304     089A                     MD1CARL         equ	2202	;# 
  4305     089B                     MD1CARH         equ	2203	;# 
  4306     090C                     FVRCON          equ	2316	;# 
  4307     090E                     DAC1CON0        equ	2318	;# 
  4308     090F                     DAC1CON1        equ	2319	;# 
  4309     091F                     ZCDCON          equ	2335	;# 
  4310     098F                     CMOUT           equ	2447	;# 
  4311     098F                     CMSTAT          equ	2447	;# 
  4312     0990                     CM1CON0         equ	2448	;# 
  4313     0991                     CM1CON1         equ	2449	;# 
  4314     0992                     CM1NCH          equ	2450	;# 
  4315     0993                     CM1PCH          equ	2451	;# 
  4316     0994                     CM2CON0         equ	2452	;# 
  4317     0995                     CM2CON1         equ	2453	;# 
  4318     0996                     CM2NCH          equ	2454	;# 
  4319     0997                     CM2PCH          equ	2455	;# 
  4320     0A19                     RC2REG          equ	2585	;# 
  4321     0A19                     RCREG2          equ	2585	;# 
  4322     0A1A                     TX2REG          equ	2586	;# 
  4323     0A1A                     TXREG2          equ	2586	;# 
  4324     0A1B                     SP2BRG          equ	2587	;# 
  4325     0A1B                     SP2BRGL         equ	2587	;# 
  4326     0A1B                     SPBRG2          equ	2587	;# 
  4327     0A1C                     SP2BRGH         equ	2588	;# 
  4328     0A1C                     SPBRGH2         equ	2588	;# 
  4329     0A1D                     RC2STA          equ	2589	;# 
  4330     0A1D                     RCSTA2          equ	2589	;# 
  4331     0A1E                     TX2STA          equ	2590	;# 
  4332     0A1E                     TXSTA2          equ	2590	;# 
  4333     0A1F                     BAUD2CON        equ	2591	;# 
  4334     0A1F                     BAUDCON2        equ	2591	;# 
  4335     0A1F                     BAUDCTL2        equ	2591	;# 
  4336     1E0F                     CLCDATA         equ	7695	;# 
  4337     1E10                     CLC1CON         equ	7696	;# 
  4338     1E11                     CLC1POL         equ	7697	;# 
  4339     1E12                     CLC1SEL0        equ	7698	;# 
  4340     1E13                     CLC1SEL1        equ	7699	;# 
  4341     1E14                     CLC1SEL2        equ	7700	;# 
  4342     1E15                     CLC1SEL3        equ	7701	;# 
  4343     1E16                     CLC1GLS0        equ	7702	;# 
  4344     1E17                     CLC1GLS1        equ	7703	;# 
  4345     1E18                     CLC1GLS2        equ	7704	;# 
  4346     1E19                     CLC1GLS3        equ	7705	;# 
  4347     1E1A                     CLC2CON         equ	7706	;# 
  4348     1E1B                     CLC2POL         equ	7707	;# 
  4349     1E1C                     CLC2SEL0        equ	7708	;# 
  4350     1E1D                     CLC2SEL1        equ	7709	;# 
  4351     1E1E                     CLC2SEL2        equ	7710	;# 
  4352     1E1F                     CLC2SEL3        equ	7711	;# 
  4353     1E20                     CLC2GLS0        equ	7712	;# 
  4354     1E21                     CLC2GLS1        equ	7713	;# 
  4355     1E22                     CLC2GLS2        equ	7714	;# 
  4356     1E23                     CLC2GLS3        equ	7715	;# 
  4357     1E24                     CLC3CON         equ	7716	;# 
  4358     1E25                     CLC3POL         equ	7717	;# 
  4359     1E26                     CLC3SEL0        equ	7718	;# 
  4360     1E27                     CLC3SEL1        equ	7719	;# 
  4361     1E28                     CLC3SEL2        equ	7720	;# 
  4362     1E29                     CLC3SEL3        equ	7721	;# 
  4363     1E2A                     CLC3GLS0        equ	7722	;# 
  4364     1E2B                     CLC3GLS1        equ	7723	;# 
  4365     1E2C                     CLC3GLS2        equ	7724	;# 
  4366     1E2D                     CLC3GLS3        equ	7725	;# 
  4367     1E2E                     CLC4CON         equ	7726	;# 
  4368     1E2F                     CLC4POL         equ	7727	;# 
  4369     1E30                     CLC4SEL0        equ	7728	;# 
  4370     1E31                     CLC4SEL1        equ	7729	;# 
  4371     1E32                     CLC4SEL2        equ	7730	;# 
  4372     1E33                     CLC4SEL3        equ	7731	;# 
  4373     1E34                     CLC4GLS0        equ	7732	;# 
  4374     1E35                     CLC4GLS1        equ	7733	;# 
  4375     1E36                     CLC4GLS2        equ	7734	;# 
  4376     1E37                     CLC4GLS3        equ	7735	;# 
  4377     1E8F                     PPSLOCK         equ	7823	;# 
  4378     1E90                     INTPPS          equ	7824	;# 
  4379     1E91                     T0CKIPPS        equ	7825	;# 
  4380     1E92                     T1CKIPPS        equ	7826	;# 
  4381     1E93                     T1GPPS          equ	7827	;# 
  4382     1E94                     T3CKIPPS        equ	7828	;# 
  4383     1E95                     T3GPPS          equ	7829	;# 
  4384     1E96                     T5CKIPPS        equ	7830	;# 
  4385     1E97                     T5GPPS          equ	7831	;# 
  4386     1E9C                     T2INPPS         equ	7836	;# 
  4387     1E9D                     T4INPPS         equ	7837	;# 
  4388     1E9E                     T6INPPS         equ	7838	;# 
  4389     1EA1                     CCP1PPS         equ	7841	;# 
  4390     1EA2                     CCP2PPS         equ	7842	;# 
  4391     1EA3                     CCP3PPS         equ	7843	;# 
  4392     1EA4                     CCP4PPS         equ	7844	;# 
  4393     1EA5                     CCP5PPS         equ	7845	;# 
  4394     1EA9                     SMT1WINPPS      equ	7849	;# 
  4395     1EAA                     SMT1SIGPPS      equ	7850	;# 
  4396     1EAB                     SMT2WINPPS      equ	7851	;# 
  4397     1EAC                     SMT2SIGPPS      equ	7852	;# 
  4398     1EB1                     CWG1PPS         equ	7857	;# 
  4399     1EB2                     CWG2PPS         equ	7858	;# 
  4400     1EB3                     CWG3PPS         equ	7859	;# 
  4401     1EB8                     MDCARLPPS       equ	7864	;# 
  4402     1EB9                     MDCARHPPS       equ	7865	;# 
  4403     1EBA                     MDSRCPPS        equ	7866	;# 
  4404     1EBB                     CLCIN0PPS       equ	7867	;# 
  4405     1EBC                     CLCIN1PPS       equ	7868	;# 
  4406     1EBD                     CLCIN2PPS       equ	7869	;# 
  4407     1EBE                     CLCIN3PPS       equ	7870	;# 
  4408     1EC3                     ADACTPPS        equ	7875	;# 
  4409     1EC5                     SSP1CLKPPS      equ	7877	;# 
  4410     1EC6                     SSP1DATPPS      equ	7878	;# 
  4411     1EC7                     SSP1SSPPS       equ	7879	;# 
  4412     1EC8                     SSP2CLKPPS      equ	7880	;# 
  4413     1EC9                     SSP2DATPPS      equ	7881	;# 
  4414     1ECA                     SSP2SSPPS       equ	7882	;# 
  4415     1ECB                     RX1PPS          equ	7883	;# 
  4416     1ECC                     CK1PPS          equ	7884	;# 
  4417     1ECD                     RX2PPS          equ	7885	;# 
  4418     1ECE                     CK2PPS          equ	7886	;# 
  4419     1F10                     RA0PPS          equ	7952	;# 
  4420     1F11                     RA1PPS          equ	7953	;# 
  4421     1F12                     RA2PPS          equ	7954	;# 
  4422     1F13                     RA3PPS          equ	7955	;# 
  4423     1F14                     RA4PPS          equ	7956	;# 
  4424     1F15                     RA5PPS          equ	7957	;# 
  4425     1F16                     RA6PPS          equ	7958	;# 
  4426     1F17                     RA7PPS          equ	7959	;# 
  4427     1F18                     RB0PPS          equ	7960	;# 
  4428     1F19                     RB1PPS          equ	7961	;# 
  4429     1F1A                     RB2PPS          equ	7962	;# 
  4430     1F1B                     RB3PPS          equ	7963	;# 
  4431     1F1C                     RB4PPS          equ	7964	;# 
  4432     1F1D                     RB5PPS          equ	7965	;# 
  4433     1F1E                     RB6PPS          equ	7966	;# 
  4434     1F1F                     RB7PPS          equ	7967	;# 
  4435     1F20                     RC0PPS          equ	7968	;# 
  4436     1F21                     RC1PPS          equ	7969	;# 
  4437     1F22                     RC2PPS          equ	7970	;# 
  4438     1F23                     RC3PPS          equ	7971	;# 
  4439     1F24                     RC4PPS          equ	7972	;# 
  4440     1F25                     RC5PPS          equ	7973	;# 
  4441     1F26                     RC6PPS          equ	7974	;# 
  4442     1F27                     RC7PPS          equ	7975	;# 
  4443     1F38                     ANSELA          equ	7992	;# 
  4444     1F39                     WPUA            equ	7993	;# 
  4445     1F3A                     ODCONA          equ	7994	;# 
  4446     1F3B                     SLRCONA         equ	7995	;# 
  4447     1F3C                     INLVLA          equ	7996	;# 
  4448     1F3D                     IOCAP           equ	7997	;# 
  4449     1F3E                     IOCAN           equ	7998	;# 
  4450     1F3F                     IOCAF           equ	7999	;# 
  4451     1F43                     ANSELB          equ	8003	;# 
  4452     1F44                     WPUB            equ	8004	;# 
  4453     1F45                     ODCONB          equ	8005	;# 
  4454     1F46                     SLRCONB         equ	8006	;# 
  4455     1F47                     INLVLB          equ	8007	;# 
  4456     1F48                     IOCBP           equ	8008	;# 
  4457     1F49                     IOCBN           equ	8009	;# 
  4458     1F4A                     IOCBF           equ	8010	;# 
  4459     1F4E                     ANSELC          equ	8014	;# 
  4460     1F4F                     WPUC            equ	8015	;# 
  4461     1F50                     ODCONC          equ	8016	;# 
  4462     1F51                     SLRCONC         equ	8017	;# 
  4463     1F52                     INLVLC          equ	8018	;# 
  4464     1F53                     IOCCP           equ	8019	;# 
  4465     1F54                     IOCCN           equ	8020	;# 
  4466     1F55                     IOCCF           equ	8021	;# 
  4467     1F65                     WPUE            equ	8037	;# 
  4468     1F66                     ODCONE          equ	8038	;# 
  4469     1F67                     SLRCONE         equ	8039	;# 
  4470     1F68                     INLVLE          equ	8040	;# 
  4471     1F69                     IOCEP           equ	8041	;# 
  4472     1F6A                     IOCEN           equ	8042	;# 
  4473     1F6B                     IOCEF           equ	8043	;# 
  4474     1FE4                     STATUS_SHAD     equ	8164	;# 
  4475     1FE5                     WREG_SHAD       equ	8165	;# 
  4476     1FE6                     BSR_SHAD        equ	8166	;# 
  4477     1FE7                     PCLATH_SHAD     equ	8167	;# 
  4478     1FE8                     FSR0_SHAD       equ	8168	;# 
  4479     1FE8                     FSR0L_SHAD      equ	8168	;# 
  4480     1FE9                     FSR0H_SHAD      equ	8169	;# 
  4481     1FEA                     FSR1L_SHAD      equ	8170	;# 
  4482     1FEB                     FSR1H_SHAD      equ	8171	;# 
  4483     1FED                     STKPTR          equ	8173	;# 
  4484     1FEE                     TOSL            equ	8174	;# 
  4485     1FEF                     TOSH            equ	8175	;# 
  4486     0000                     INDF0           equ	0	;# 
  4487     0001                     INDF1           equ	1	;# 
  4488     0002                     PCL             equ	2	;# 
  4489     0003                     STATUS          equ	3	;# 
  4490     0004                     FSR0L           equ	4	;# 
  4491     0005                     FSR0H           equ	5	;# 
  4492     0006                     FSR1L           equ	6	;# 
  4493     0007                     FSR1H           equ	7	;# 
  4494     0008                     BSR             equ	8	;# 
  4495     0009                     WREG            equ	9	;# 
  4496     000A                     PCLATH          equ	10	;# 
  4497     000B                     INTCON          equ	11	;# 
  4498     000C                     PORTA           equ	12	;# 
  4499     000D                     PORTB           equ	13	;# 
  4500     000E                     PORTC           equ	14	;# 
  4501     0010                     PORTE           equ	16	;# 
  4502     0012                     TRISA           equ	18	;# 
  4503     0013                     TRISB           equ	19	;# 
  4504     0014                     TRISC           equ	20	;# 
  4505     0016                     TRISE           equ	22	;# 
  4506     0018                     LATA            equ	24	;# 
  4507     0019                     LATB            equ	25	;# 
  4508     001A                     LATC            equ	26	;# 
  4509     008C                     ADLTH           equ	140	;# 
  4510     008C                     ADLTHL          equ	140	;# 
  4511     008D                     ADLTHH          equ	141	;# 
  4512     008E                     ADUTH           equ	142	;# 
  4513     008E                     ADUTHL          equ	142	;# 
  4514     008F                     ADUTHH          equ	143	;# 
  4515     0090                     ADERR           equ	144	;# 
  4516     0090                     ADERRL          equ	144	;# 
  4517     0091                     ADERRH          equ	145	;# 
  4518     0092                     ADSTPT          equ	146	;# 
  4519     0092                     ADSTPTL         equ	146	;# 
  4520     0093                     ADSTPTH         equ	147	;# 
  4521     0094                     ADFLTR          equ	148	;# 
  4522     0094                     ADFLTRL         equ	148	;# 
  4523     0095                     ADFLTRH         equ	149	;# 
  4524     0096                     ADACC           equ	150	;# 
  4525     0096                     ADACCL          equ	150	;# 
  4526     0097                     ADACCH          equ	151	;# 
  4527     0098                     ADACCU          equ	152	;# 
  4528     0099                     ADCNT           equ	153	;# 
  4529     009A                     ADRPT           equ	154	;# 
  4530     009B                     ADPREV          equ	155	;# 
  4531     009B                     ADPREVL         equ	155	;# 
  4532     009C                     ADPREVH         equ	156	;# 
  4533     009D                     ADRES           equ	157	;# 
  4534     009D                     ADRESL          equ	157	;# 
  4535     009E                     ADRESH          equ	158	;# 
  4536     009F                     ADPCH           equ	159	;# 
  4537     010C                     ADACQ           equ	268	;# 
  4538     010C                     ADACQL          equ	268	;# 
  4539     010D                     ADACQH          equ	269	;# 
  4540     010E                     ADCAP           equ	270	;# 
  4541     010F                     ADPRE           equ	271	;# 
  4542     010F                     ADPREL          equ	271	;# 
  4543     0110                     ADPREH          equ	272	;# 
  4544     0111                     ADCON0          equ	273	;# 
  4545     0112                     ADCON1          equ	274	;# 
  4546     0113                     ADCON2          equ	275	;# 
  4547     0114                     ADCON3          equ	276	;# 
  4548     0115                     ADSTAT          equ	277	;# 
  4549     0116                     ADREF           equ	278	;# 
  4550     0117                     ADACT           equ	279	;# 
  4551     0118                     ADCLK           equ	280	;# 
  4552     0119                     RC1REG          equ	281	;# 
  4553     0119                     RCREG           equ	281	;# 
  4554     0119                     RCREG1          equ	281	;# 
  4555     011A                     TX1REG          equ	282	;# 
  4556     011A                     TXREG1          equ	282	;# 
  4557     011A                     TXREG           equ	282	;# 
  4558     011B                     SP1BRG          equ	283	;# 
  4559     011B                     SPBRG           equ	283	;# 
  4560     011B                     SP1BRGL         equ	283	;# 
  4561     011B                     SPBRG1          equ	283	;# 
  4562     011B                     SPBRGL          equ	283	;# 
  4563     011C                     SP1BRGH         equ	284	;# 
  4564     011C                     SPBRGH          equ	284	;# 
  4565     011C                     SPBRGH1         equ	284	;# 
  4566     011D                     RC1STA          equ	285	;# 
  4567     011D                     RCSTA1          equ	285	;# 
  4568     011D                     RCSTA           equ	285	;# 
  4569     011E                     TX1STA          equ	286	;# 
  4570     011E                     TXSTA1          equ	286	;# 
  4571     011E                     TXSTA           equ	286	;# 
  4572     011F                     BAUD1CON        equ	287	;# 
  4573     011F                     BAUDCON1        equ	287	;# 
  4574     011F                     BAUDCTL1        equ	287	;# 
  4575     011F                     BAUDCON         equ	287	;# 
  4576     011F                     BAUDCTL         equ	287	;# 
  4577     018C                     SSP1BUF         equ	396	;# 
  4578     018D                     SSP1ADD         equ	397	;# 
  4579     018E                     SSP1MSK         equ	398	;# 
  4580     018F                     SSP1STAT        equ	399	;# 
  4581     0190                     SSP1CON1        equ	400	;# 
  4582     0191                     SSP1CON2        equ	401	;# 
  4583     0192                     SSP1CON3        equ	402	;# 
  4584     0196                     SSP2BUF         equ	406	;# 
  4585     0197                     SSP2ADD         equ	407	;# 
  4586     0198                     SSP2MSK         equ	408	;# 
  4587     0199                     SSP2STAT        equ	409	;# 
  4588     019A                     SSP2CON1        equ	410	;# 
  4589     019B                     SSP2CON2        equ	411	;# 
  4590     019C                     SSP2CON3        equ	412	;# 
  4591     020C                     TMR1            equ	524	;# 
  4592     020C                     TMR1L           equ	524	;# 
  4593     020D                     TMR1H           equ	525	;# 
  4594     020E                     T1CON           equ	526	;# 
  4595     020E                     TMR1CON         equ	526	;# 
  4596     020F                     T1GCON          equ	527	;# 
  4597     020F                     TMR1GCON        equ	527	;# 
  4598     0210                     T1GATE          equ	528	;# 
  4599     0210                     TMR1GATE        equ	528	;# 
  4600     0211                     T1CLK           equ	529	;# 
  4601     0211                     TMR1CLK         equ	529	;# 
  4602     0211                     PR1             equ	529	;# 
  4603     0212                     TMR3            equ	530	;# 
  4604     0212                     TMR3L           equ	530	;# 
  4605     0213                     TMR3H           equ	531	;# 
  4606     0214                     T3CON           equ	532	;# 
  4607     0214                     TMR3CON         equ	532	;# 
  4608     0215                     T3GCON          equ	533	;# 
  4609     0215                     TMR3GCON        equ	533	;# 
  4610     0216                     T3GATE          equ	534	;# 
  4611     0216                     TMR3GATE        equ	534	;# 
  4612     0217                     T3CLK           equ	535	;# 
  4613     0217                     TMR3CLK         equ	535	;# 
  4614     0217                     PR3             equ	535	;# 
  4615     0218                     TMR5            equ	536	;# 
  4616     0218                     TMR5L           equ	536	;# 
  4617     0219                     TMR5H           equ	537	;# 
  4618     021A                     T5CON           equ	538	;# 
  4619     021A                     TMR5CON         equ	538	;# 
  4620     021B                     T5GCON          equ	539	;# 
  4621     021B                     TMR5GCON        equ	539	;# 
  4622     021C                     T5GATE          equ	540	;# 
  4623     021C                     TMR5GATE        equ	540	;# 
  4624     021D                     T5CLK           equ	541	;# 
  4625     021D                     TMR5CLK         equ	541	;# 
  4626     021D                     PR5             equ	541	;# 
  4627     021E                     CCPTMRS0        equ	542	;# 
  4628     021F                     CCPTMRS1        equ	543	;# 
  4629     028C                     T2TMR           equ	652	;# 
  4630     028C                     TMR2            equ	652	;# 
  4631     028D                     T2PR            equ	653	;# 
  4632     028D                     PR2             equ	653	;# 
  4633     028E                     T2CON           equ	654	;# 
  4634     028F                     T2HLT           equ	655	;# 
  4635     0290                     T2CLKCON        equ	656	;# 
  4636     0291                     T2RST           equ	657	;# 
  4637     0292                     T4TMR           equ	658	;# 
  4638     0292                     TMR4            equ	658	;# 
  4639     0293                     T4PR            equ	659	;# 
  4640     0293                     PR4             equ	659	;# 
  4641     0294                     T4CON           equ	660	;# 
  4642     0295                     T4HLT           equ	661	;# 
  4643     0296                     T4CLKCON        equ	662	;# 
  4644     0297                     T4RST           equ	663	;# 
  4645     0298                     T6TMR           equ	664	;# 
  4646     0298                     TMR6            equ	664	;# 
  4647     0299                     T6PR            equ	665	;# 
  4648     0299                     PR6             equ	665	;# 
  4649     029A                     T6CON           equ	666	;# 
  4650     029B                     T6HLT           equ	667	;# 
  4651     029C                     T6CLKCON        equ	668	;# 
  4652     029D                     T6RST           equ	669	;# 
  4653     029F                     ADCPCON0        equ	671	;# 
  4654     030C                     CCPR1           equ	780	;# 
  4655     030C                     CCPR1L          equ	780	;# 
  4656     030D                     CCPR1H          equ	781	;# 
  4657     030E                     CCP1CON         equ	782	;# 
  4658     030F                     CCP1CAP         equ	783	;# 
  4659     0310                     CCPR2           equ	784	;# 
  4660     0310                     CCPR2L          equ	784	;# 
  4661     0311                     CCPR2H          equ	785	;# 
  4662     0312                     CCP2CON         equ	786	;# 
  4663     0313                     CCP2CAP         equ	787	;# 
  4664     0314                     CCPR3           equ	788	;# 
  4665     0314                     CCPR3L          equ	788	;# 
  4666     0315                     CCPR3H          equ	789	;# 
  4667     0316                     CCP3CON         equ	790	;# 
  4668     0317                     CCP3CAP         equ	791	;# 
  4669     0318                     CCPR4           equ	792	;# 
  4670     0318                     CCPR4L          equ	792	;# 
  4671     0319                     CCPR4H          equ	793	;# 
  4672     031A                     CCP4CON         equ	794	;# 
  4673     031B                     CCP4CAP         equ	795	;# 
  4674     031C                     CCPR5           equ	796	;# 
  4675     031C                     CCPR5L          equ	796	;# 
  4676     031D                     CCPR5H          equ	797	;# 
  4677     031E                     CCP5CON         equ	798	;# 
  4678     031F                     CCP5CAP         equ	799	;# 
  4679     038C                     PWM6DC          equ	908	;# 
  4680     038C                     PWM6DCL         equ	908	;# 
  4681     038D                     PWM6DCH         equ	909	;# 
  4682     038E                     PWM6CON         equ	910	;# 
  4683     0390                     PWM7DC          equ	912	;# 
  4684     0390                     PWM7DCL         equ	912	;# 
  4685     0391                     PWM7DCH         equ	913	;# 
  4686     0392                     PWM7CON         equ	914	;# 
  4687     048C                     SMT1TMR         equ	1164	;# 
  4688     048C                     SMT1TMRL        equ	1164	;# 
  4689     048D                     SMT1TMRH        equ	1165	;# 
  4690     048E                     SMT1TMRU        equ	1166	;# 
  4691     048F                     SMT1CPR         equ	1167	;# 
  4692     048F                     SMT1CPRL        equ	1167	;# 
  4693     0490                     SMT1CPRH        equ	1168	;# 
  4694     0491                     SMT1CPRU        equ	1169	;# 
  4695     0492                     SMT1CPW         equ	1170	;# 
  4696     0492                     SMT1CPWL        equ	1170	;# 
  4697     0493                     SMT1CPWH        equ	1171	;# 
  4698     0494                     SMT1CPWU        equ	1172	;# 
  4699     0495                     SMT1PR          equ	1173	;# 
  4700     0495                     SMT1PRL         equ	1173	;# 
  4701     0496                     SMT1PRH         equ	1174	;# 
  4702     0497                     SMT1PRU         equ	1175	;# 
  4703     0498                     SMT1CON0        equ	1176	;# 
  4704     0499                     SMT1CON1        equ	1177	;# 
  4705     049A                     SMT1STAT        equ	1178	;# 
  4706     049B                     SMT1CLK         equ	1179	;# 
  4707     049C                     SMT1SIG         equ	1180	;# 
  4708     049D                     SMT1WIN         equ	1181	;# 
  4709     050C                     SMT2TMR         equ	1292	;# 
  4710     050C                     SMT2TMRL        equ	1292	;# 
  4711     050D                     SMT2TMRH        equ	1293	;# 
  4712     050E                     SMT2TMRU        equ	1294	;# 
  4713     050F                     SMT2CPR         equ	1295	;# 
  4714     050F                     SMT2CPRL        equ	1295	;# 
  4715     0510                     SMT2CPRH        equ	1296	;# 
  4716     0511                     SMT2CPRU        equ	1297	;# 
  4717     0512                     SMT2CPW         equ	1298	;# 
  4718     0512                     SMT2CPWL        equ	1298	;# 
  4719     0513                     SMT2CPWH        equ	1299	;# 
  4720     0514                     SMT2CPWU        equ	1300	;# 
  4721     0515                     SMT2PR          equ	1301	;# 
  4722     0515                     SMT2PRL         equ	1301	;# 
  4723     0516                     SMT2PRH         equ	1302	;# 
  4724     0517                     SMT2PRU         equ	1303	;# 
  4725     0518                     SMT2CON0        equ	1304	;# 
  4726     0519                     SMT2CON1        equ	1305	;# 
  4727     051A                     SMT2STAT        equ	1306	;# 
  4728     051B                     SMT2CLK         equ	1307	;# 
  4729     051C                     SMT2SIG         equ	1308	;# 
  4730     051D                     SMT2WIN         equ	1309	;# 
  4731     058C                     NCO1ACC         equ	1420	;# 
  4732     058C                     NCO1ACCL        equ	1420	;# 
  4733     058D                     NCO1ACCH        equ	1421	;# 
  4734     058E                     NCO1ACCU        equ	1422	;# 
  4735     058F                     NCO1INC         equ	1423	;# 
  4736     058F                     NCO1INCL        equ	1423	;# 
  4737     0590                     NCO1INCH        equ	1424	;# 
  4738     0591                     NCO1INCU        equ	1425	;# 
  4739     0592                     NCO1CON         equ	1426	;# 
  4740     0593                     NCO1CLK         equ	1427	;# 
  4741     059C                     TMR0L           equ	1436	;# 
  4742     059C                     TMR0            equ	1436	;# 
  4743     059D                     TMR0H           equ	1437	;# 
  4744     059D                     PR0             equ	1437	;# 
  4745     059E                     T0CON0          equ	1438	;# 
  4746     059F                     T0CON1          equ	1439	;# 
  4747     060C                     CWG1CLK         equ	1548	;# 
  4748     060C                     CWG1CLKCON      equ	1548	;# 
  4749     060D                     CWG1ISM         equ	1549	;# 
  4750     060D                     CWG1DAT         equ	1549	;# 
  4751     060E                     CWG1DBR         equ	1550	;# 
  4752     060F                     CWG1DBF         equ	1551	;# 
  4753     0610                     CWG1CON0        equ	1552	;# 
  4754     0611                     CWG1CON1        equ	1553	;# 
  4755     0612                     CWG1AS0         equ	1554	;# 
  4756     0613                     CWG1AS1         equ	1555	;# 
  4757     0614                     CWG1STR         equ	1556	;# 
  4758     0616                     CWG2CLK         equ	1558	;# 
  4759     0616                     CWG2CLKCON      equ	1558	;# 
  4760     0617                     CWG2ISM         equ	1559	;# 
  4761     0617                     CWG2DAT         equ	1559	;# 
  4762     0618                     CWG2DBR         equ	1560	;# 
  4763     0619                     CWG2DBF         equ	1561	;# 
  4764     061A                     CWG2CON0        equ	1562	;# 
  4765     061B                     CWG2CON1        equ	1563	;# 
  4766     061C                     CWG2AS0         equ	1564	;# 
  4767     061D                     CWG2AS1         equ	1565	;# 
  4768     061E                     CWG2STR         equ	1566	;# 
  4769     068C                     CWG3CLK         equ	1676	;# 
  4770     068C                     CWG3CLKCON      equ	1676	;# 
  4771     068D                     CWG3ISM         equ	1677	;# 
  4772     068D                     CWG3DAT         equ	1677	;# 
  4773     068E                     CWG3DBR         equ	1678	;# 
  4774     068F                     CWG3DBF         equ	1679	;# 
  4775     0690                     CWG3CON0        equ	1680	;# 
  4776     0691                     CWG3CON1        equ	1681	;# 
  4777     0692                     CWG3AS0         equ	1682	;# 
  4778     0693                     CWG3AS1         equ	1683	;# 
  4779     0694                     CWG3STR         equ	1684	;# 
  4780     070C                     PIR0            equ	1804	;# 
  4781     070D                     PIR1            equ	1805	;# 
  4782     070E                     PIR2            equ	1806	;# 
  4783     070F                     PIR3            equ	1807	;# 
  4784     0710                     PIR4            equ	1808	;# 
  4785     0711                     PIR5            equ	1809	;# 
  4786     0712                     PIR6            equ	1810	;# 
  4787     0713                     PIR7            equ	1811	;# 
  4788     0714                     PIR8            equ	1812	;# 
  4789     0716                     PIE0            equ	1814	;# 
  4790     0717                     PIE1            equ	1815	;# 
  4791     0718                     PIE2            equ	1816	;# 
  4792     0719                     PIE3            equ	1817	;# 
  4793     071A                     PIE4            equ	1818	;# 
  4794     071B                     PIE5            equ	1819	;# 
  4795     071C                     PIE6            equ	1820	;# 
  4796     071D                     PIE7            equ	1821	;# 
  4797     071E                     PIE8            equ	1822	;# 
  4798     0796                     PMD0            equ	1942	;# 
  4799     0797                     PMD1            equ	1943	;# 
  4800     0798                     PMD2            equ	1944	;# 
  4801     0799                     PMD3            equ	1945	;# 
  4802     079A                     PMD4            equ	1946	;# 
  4803     079B                     PMD5            equ	1947	;# 
  4804     079C                     PMD6            equ	1948	;# 
  4805     079D                     PMD7            equ	1949	;# 
  4806     080C                     WDTCON0         equ	2060	;# 
  4807     080D                     WDTCON1         equ	2061	;# 
  4808     080E                     WDTPSL          equ	2062	;# 
  4809     080F                     WDTPSH          equ	2063	;# 
  4810     0810                     WDTTMR          equ	2064	;# 
  4811     0811                     BORCON          equ	2065	;# 
  4812     0813                     PCON0           equ	2067	;# 
  4813     0814                     PCON1           equ	2068	;# 
  4814     081A                     NVMADR          equ	2074	;# 
  4815     081A                     NVMADRL         equ	2074	;# 
  4816     081B                     NVMADRH         equ	2075	;# 
  4817     081C                     NVMDAT          equ	2076	;# 
  4818     081C                     NVMDATL         equ	2076	;# 
  4819     081D                     NVMDATH         equ	2077	;# 
  4820     081E                     NVMCON1         equ	2078	;# 
  4821     081F                     NVMCON2         equ	2079	;# 
  4822     088C                     CPUDOZE         equ	2188	;# 
  4823     088D                     OSCCON1         equ	2189	;# 
  4824     088E                     OSCCON2         equ	2190	;# 
  4825     088F                     OSCCON3         equ	2191	;# 
  4826     0890                     OSCSTAT         equ	2192	;# 
  4827     0891                     OSCEN           equ	2193	;# 
  4828     0892                     OSCTUNE         equ	2194	;# 
  4829     0893                     OSCFRQ          equ	2195	;# 
  4830     0895                     CLKRCON         equ	2197	;# 
  4831     0896                     CLKRCLK         equ	2198	;# 
  4832     0897                     MD1CON0         equ	2199	;# 
  4833     0898                     MD1CON1         equ	2200	;# 
  4834     0899                     MD1SRC          equ	2201	;# 
  4835     089A                     MD1CARL         equ	2202	;# 
  4836     089B                     MD1CARH         equ	2203	;# 
  4837     090C                     FVRCON          equ	2316	;# 
  4838     090E                     DAC1CON0        equ	2318	;# 
  4839     090F                     DAC1CON1        equ	2319	;# 
  4840     091F                     ZCDCON          equ	2335	;# 
  4841     098F                     CMOUT           equ	2447	;# 
  4842     098F                     CMSTAT          equ	2447	;# 
  4843     0990                     CM1CON0         equ	2448	;# 
  4844     0991                     CM1CON1         equ	2449	;# 
  4845     0992                     CM1NCH          equ	2450	;# 
  4846     0993                     CM1PCH          equ	2451	;# 
  4847     0994                     CM2CON0         equ	2452	;# 
  4848     0995                     CM2CON1         equ	2453	;# 
  4849     0996                     CM2NCH          equ	2454	;# 
  4850     0997                     CM2PCH          equ	2455	;# 
  4851     0A19                     RC2REG          equ	2585	;# 
  4852     0A19                     RCREG2          equ	2585	;# 
  4853     0A1A                     TX2REG          equ	2586	;# 
  4854     0A1A                     TXREG2          equ	2586	;# 
  4855     0A1B                     SP2BRG          equ	2587	;# 
  4856     0A1B                     SP2BRGL         equ	2587	;# 
  4857     0A1B                     SPBRG2          equ	2587	;# 
  4858     0A1C                     SP2BRGH         equ	2588	;# 
  4859     0A1C                     SPBRGH2         equ	2588	;# 
  4860     0A1D                     RC2STA          equ	2589	;# 
  4861     0A1D                     RCSTA2          equ	2589	;# 
  4862     0A1E                     TX2STA          equ	2590	;# 
  4863     0A1E                     TXSTA2          equ	2590	;# 
  4864     0A1F                     BAUD2CON        equ	2591	;# 
  4865     0A1F                     BAUDCON2        equ	2591	;# 
  4866     0A1F                     BAUDCTL2        equ	2591	;# 
  4867     1E0F                     CLCDATA         equ	7695	;# 
  4868     1E10                     CLC1CON         equ	7696	;# 
  4869     1E11                     CLC1POL         equ	7697	;# 
  4870     1E12                     CLC1SEL0        equ	7698	;# 
  4871     1E13                     CLC1SEL1        equ	7699	;# 
  4872     1E14                     CLC1SEL2        equ	7700	;# 
  4873     1E15                     CLC1SEL3        equ	7701	;# 
  4874     1E16                     CLC1GLS0        equ	7702	;# 
  4875     1E17                     CLC1GLS1        equ	7703	;# 
  4876     1E18                     CLC1GLS2        equ	7704	;# 
  4877     1E19                     CLC1GLS3        equ	7705	;# 
  4878     1E1A                     CLC2CON         equ	7706	;# 
  4879     1E1B                     CLC2POL         equ	7707	;# 
  4880     1E1C                     CLC2SEL0        equ	7708	;# 
  4881     1E1D                     CLC2SEL1        equ	7709	;# 
  4882     1E1E                     CLC2SEL2        equ	7710	;# 
  4883     1E1F                     CLC2SEL3        equ	7711	;# 
  4884     1E20                     CLC2GLS0        equ	7712	;# 
  4885     1E21                     CLC2GLS1        equ	7713	;# 
  4886     1E22                     CLC2GLS2        equ	7714	;# 
  4887     1E23                     CLC2GLS3        equ	7715	;# 
  4888     1E24                     CLC3CON         equ	7716	;# 
  4889     1E25                     CLC3POL         equ	7717	;# 
  4890     1E26                     CLC3SEL0        equ	7718	;# 
  4891     1E27                     CLC3SEL1        equ	7719	;# 
  4892     1E28                     CLC3SEL2        equ	7720	;# 
  4893     1E29                     CLC3SEL3        equ	7721	;# 
  4894     1E2A                     CLC3GLS0        equ	7722	;# 
  4895     1E2B                     CLC3GLS1        equ	7723	;# 
  4896     1E2C                     CLC3GLS2        equ	7724	;# 
  4897     1E2D                     CLC3GLS3        equ	7725	;# 
  4898     1E2E                     CLC4CON         equ	7726	;# 
  4899     1E2F                     CLC4POL         equ	7727	;# 
  4900     1E30                     CLC4SEL0        equ	7728	;# 
  4901     1E31                     CLC4SEL1        equ	7729	;# 
  4902     1E32                     CLC4SEL2        equ	7730	;# 
  4903     1E33                     CLC4SEL3        equ	7731	;# 
  4904     1E34                     CLC4GLS0        equ	7732	;# 
  4905     1E35                     CLC4GLS1        equ	7733	;# 
  4906     1E36                     CLC4GLS2        equ	7734	;# 
  4907     1E37                     CLC4GLS3        equ	7735	;# 
  4908     1E8F                     PPSLOCK         equ	7823	;# 
  4909     1E90                     INTPPS          equ	7824	;# 
  4910     1E91                     T0CKIPPS        equ	7825	;# 
  4911     1E92                     T1CKIPPS        equ	7826	;# 
  4912     1E93                     T1GPPS          equ	7827	;# 
  4913     1E94                     T3CKIPPS        equ	7828	;# 
  4914     1E95                     T3GPPS          equ	7829	;# 
  4915     1E96                     T5CKIPPS        equ	7830	;# 
  4916     1E97                     T5GPPS          equ	7831	;# 
  4917     1E9C                     T2INPPS         equ	7836	;# 
  4918     1E9D                     T4INPPS         equ	7837	;# 
  4919     1E9E                     T6INPPS         equ	7838	;# 
  4920     1EA1                     CCP1PPS         equ	7841	;# 
  4921     1EA2                     CCP2PPS         equ	7842	;# 
  4922     1EA3                     CCP3PPS         equ	7843	;# 
  4923     1EA4                     CCP4PPS         equ	7844	;# 
  4924     1EA5                     CCP5PPS         equ	7845	;# 
  4925     1EA9                     SMT1WINPPS      equ	7849	;# 
  4926     1EAA                     SMT1SIGPPS      equ	7850	;# 
  4927     1EAB                     SMT2WINPPS      equ	7851	;# 
  4928     1EAC                     SMT2SIGPPS      equ	7852	;# 
  4929     1EB1                     CWG1PPS         equ	7857	;# 
  4930     1EB2                     CWG2PPS         equ	7858	;# 
  4931     1EB3                     CWG3PPS         equ	7859	;# 
  4932     1EB8                     MDCARLPPS       equ	7864	;# 
  4933     1EB9                     MDCARHPPS       equ	7865	;# 
  4934     1EBA                     MDSRCPPS        equ	7866	;# 
  4935     1EBB                     CLCIN0PPS       equ	7867	;# 
  4936     1EBC                     CLCIN1PPS       equ	7868	;# 
  4937     1EBD                     CLCIN2PPS       equ	7869	;# 
  4938     1EBE                     CLCIN3PPS       equ	7870	;# 
  4939     1EC3                     ADACTPPS        equ	7875	;# 
  4940     1EC5                     SSP1CLKPPS      equ	7877	;# 
  4941     1EC6                     SSP1DATPPS      equ	7878	;# 
  4942     1EC7                     SSP1SSPPS       equ	7879	;# 
  4943     1EC8                     SSP2CLKPPS      equ	7880	;# 
  4944     1EC9                     SSP2DATPPS      equ	7881	;# 
  4945     1ECA                     SSP2SSPPS       equ	7882	;# 
  4946     1ECB                     RX1PPS          equ	7883	;# 
  4947     1ECC                     CK1PPS          equ	7884	;# 
  4948     1ECD                     RX2PPS          equ	7885	;# 
  4949     1ECE                     CK2PPS          equ	7886	;# 
  4950     1F10                     RA0PPS          equ	7952	;# 
  4951     1F11                     RA1PPS          equ	7953	;# 
  4952     1F12                     RA2PPS          equ	7954	;# 
  4953     1F13                     RA3PPS          equ	7955	;# 
  4954     1F14                     RA4PPS          equ	7956	;# 
  4955     1F15                     RA5PPS          equ	7957	;# 
  4956     1F16                     RA6PPS          equ	7958	;# 
  4957     1F17                     RA7PPS          equ	7959	;# 
  4958     1F18                     RB0PPS          equ	7960	;# 
  4959     1F19                     RB1PPS          equ	7961	;# 
  4960     1F1A                     RB2PPS          equ	7962	;# 
  4961     1F1B                     RB3PPS          equ	7963	;# 
  4962     1F1C                     RB4PPS          equ	7964	;# 
  4963     1F1D                     RB5PPS          equ	7965	;# 
  4964     1F1E                     RB6PPS          equ	7966	;# 
  4965     1F1F                     RB7PPS          equ	7967	;# 
  4966     1F20                     RC0PPS          equ	7968	;# 
  4967     1F21                     RC1PPS          equ	7969	;# 
  4968     1F22                     RC2PPS          equ	7970	;# 
  4969     1F23                     RC3PPS          equ	7971	;# 
  4970     1F24                     RC4PPS          equ	7972	;# 
  4971     1F25                     RC5PPS          equ	7973	;# 
  4972     1F26                     RC6PPS          equ	7974	;# 
  4973     1F27                     RC7PPS          equ	7975	;# 
  4974     1F38                     ANSELA          equ	7992	;# 
  4975     1F39                     WPUA            equ	7993	;# 
  4976     1F3A                     ODCONA          equ	7994	;# 
  4977     1F3B                     SLRCONA         equ	7995	;# 
  4978     1F3C                     INLVLA          equ	7996	;# 
  4979     1F3D                     IOCAP           equ	7997	;# 
  4980     1F3E                     IOCAN           equ	7998	;# 
  4981     1F3F                     IOCAF           equ	7999	;# 
  4982     1F43                     ANSELB          equ	8003	;# 
  4983     1F44                     WPUB            equ	8004	;# 
  4984     1F45                     ODCONB          equ	8005	;# 
  4985     1F46                     SLRCONB         equ	8006	;# 
  4986     1F47                     INLVLB          equ	8007	;# 
  4987     1F48                     IOCBP           equ	8008	;# 
  4988     1F49                     IOCBN           equ	8009	;# 
  4989     1F4A                     IOCBF           equ	8010	;# 
  4990     1F4E                     ANSELC          equ	8014	;# 
  4991     1F4F                     WPUC            equ	8015	;# 
  4992     1F50                     ODCONC          equ	8016	;# 
  4993     1F51                     SLRCONC         equ	8017	;# 
  4994     1F52                     INLVLC          equ	8018	;# 
  4995     1F53                     IOCCP           equ	8019	;# 
  4996     1F54                     IOCCN           equ	8020	;# 
  4997     1F55                     IOCCF           equ	8021	;# 
  4998     1F65                     WPUE            equ	8037	;# 
  4999     1F66                     ODCONE          equ	8038	;# 
  5000     1F67                     SLRCONE         equ	8039	;# 
  5001     1F68                     INLVLE          equ	8040	;# 
  5002     1F69                     IOCEP           equ	8041	;# 
  5003     1F6A                     IOCEN           equ	8042	;# 
  5004     1F6B                     IOCEF           equ	8043	;# 
  5005     1FE4                     STATUS_SHAD     equ	8164	;# 
  5006     1FE5                     WREG_SHAD       equ	8165	;# 
  5007     1FE6                     BSR_SHAD        equ	8166	;# 
  5008     1FE7                     PCLATH_SHAD     equ	8167	;# 
  5009     1FE8                     FSR0_SHAD       equ	8168	;# 
  5010     1FE8                     FSR0L_SHAD      equ	8168	;# 
  5011     1FE9                     FSR0H_SHAD      equ	8169	;# 
  5012     1FEA                     FSR1L_SHAD      equ	8170	;# 
  5013     1FEB                     FSR1H_SHAD      equ	8171	;# 
  5014     1FED                     STKPTR          equ	8173	;# 
  5015     1FEE                     TOSL            equ	8174	;# 
  5016     1FEF                     TOSH            equ	8175	;# 
  5017     0000                     INDF0           equ	0	;# 
  5018     0001                     INDF1           equ	1	;# 
  5019     0002                     PCL             equ	2	;# 
  5020     0003                     STATUS          equ	3	;# 
  5021     0004                     FSR0L           equ	4	;# 
  5022     0005                     FSR0H           equ	5	;# 
  5023     0006                     FSR1L           equ	6	;# 
  5024     0007                     FSR1H           equ	7	;# 
  5025     0008                     BSR             equ	8	;# 
  5026     0009                     WREG            equ	9	;# 
  5027     000A                     PCLATH          equ	10	;# 
  5028     000B                     INTCON          equ	11	;# 
  5029     000C                     PORTA           equ	12	;# 
  5030     000D                     PORTB           equ	13	;# 
  5031     000E                     PORTC           equ	14	;# 
  5032     0010                     PORTE           equ	16	;# 
  5033     0012                     TRISA           equ	18	;# 
  5034     0013                     TRISB           equ	19	;# 
  5035     0014                     TRISC           equ	20	;# 
  5036     0016                     TRISE           equ	22	;# 
  5037     0018                     LATA            equ	24	;# 
  5038     0019                     LATB            equ	25	;# 
  5039     001A                     LATC            equ	26	;# 
  5040     008C                     ADLTH           equ	140	;# 
  5041     008C                     ADLTHL          equ	140	;# 
  5042     008D                     ADLTHH          equ	141	;# 
  5043     008E                     ADUTH           equ	142	;# 
  5044     008E                     ADUTHL          equ	142	;# 
  5045     008F                     ADUTHH          equ	143	;# 
  5046     0090                     ADERR           equ	144	;# 
  5047     0090                     ADERRL          equ	144	;# 
  5048     0091                     ADERRH          equ	145	;# 
  5049     0092                     ADSTPT          equ	146	;# 
  5050     0092                     ADSTPTL         equ	146	;# 
  5051     0093                     ADSTPTH         equ	147	;# 
  5052     0094                     ADFLTR          equ	148	;# 
  5053     0094                     ADFLTRL         equ	148	;# 
  5054     0095                     ADFLTRH         equ	149	;# 
  5055     0096                     ADACC           equ	150	;# 
  5056     0096                     ADACCL          equ	150	;# 
  5057     0097                     ADACCH          equ	151	;# 
  5058     0098                     ADACCU          equ	152	;# 
  5059     0099                     ADCNT           equ	153	;# 
  5060     009A                     ADRPT           equ	154	;# 
  5061     009B                     ADPREV          equ	155	;# 
  5062     009B                     ADPREVL         equ	155	;# 
  5063     009C                     ADPREVH         equ	156	;# 
  5064     009D                     ADRES           equ	157	;# 
  5065     009D                     ADRESL          equ	157	;# 
  5066     009E                     ADRESH          equ	158	;# 
  5067     009F                     ADPCH           equ	159	;# 
  5068     010C                     ADACQ           equ	268	;# 
  5069     010C                     ADACQL          equ	268	;# 
  5070     010D                     ADACQH          equ	269	;# 
  5071     010E                     ADCAP           equ	270	;# 
  5072     010F                     ADPRE           equ	271	;# 
  5073     010F                     ADPREL          equ	271	;# 
  5074     0110                     ADPREH          equ	272	;# 
  5075     0111                     ADCON0          equ	273	;# 
  5076     0112                     ADCON1          equ	274	;# 
  5077     0113                     ADCON2          equ	275	;# 
  5078     0114                     ADCON3          equ	276	;# 
  5079     0115                     ADSTAT          equ	277	;# 
  5080     0116                     ADREF           equ	278	;# 
  5081     0117                     ADACT           equ	279	;# 
  5082     0118                     ADCLK           equ	280	;# 
  5083     0119                     RC1REG          equ	281	;# 
  5084     0119                     RCREG           equ	281	;# 
  5085     0119                     RCREG1          equ	281	;# 
  5086     011A                     TX1REG          equ	282	;# 
  5087     011A                     TXREG1          equ	282	;# 
  5088     011A                     TXREG           equ	282	;# 
  5089     011B                     SP1BRG          equ	283	;# 
  5090     011B                     SPBRG           equ	283	;# 
  5091     011B                     SP1BRGL         equ	283	;# 
  5092     011B                     SPBRG1          equ	283	;# 
  5093     011B                     SPBRGL          equ	283	;# 
  5094     011C                     SP1BRGH         equ	284	;# 
  5095     011C                     SPBRGH          equ	284	;# 
  5096     011C                     SPBRGH1         equ	284	;# 
  5097     011D                     RC1STA          equ	285	;# 
  5098     011D                     RCSTA1          equ	285	;# 
  5099     011D                     RCSTA           equ	285	;# 
  5100     011E                     TX1STA          equ	286	;# 
  5101     011E                     TXSTA1          equ	286	;# 
  5102     011E                     TXSTA           equ	286	;# 
  5103     011F                     BAUD1CON        equ	287	;# 
  5104     011F                     BAUDCON1        equ	287	;# 
  5105     011F                     BAUDCTL1        equ	287	;# 
  5106     011F                     BAUDCON         equ	287	;# 
  5107     011F                     BAUDCTL         equ	287	;# 
  5108     018C                     SSP1BUF         equ	396	;# 
  5109     018D                     SSP1ADD         equ	397	;# 
  5110     018E                     SSP1MSK         equ	398	;# 
  5111     018F                     SSP1STAT        equ	399	;# 
  5112     0190                     SSP1CON1        equ	400	;# 
  5113     0191                     SSP1CON2        equ	401	;# 
  5114     0192                     SSP1CON3        equ	402	;# 
  5115     0196                     SSP2BUF         equ	406	;# 
  5116     0197                     SSP2ADD         equ	407	;# 
  5117     0198                     SSP2MSK         equ	408	;# 
  5118     0199                     SSP2STAT        equ	409	;# 
  5119     019A                     SSP2CON1        equ	410	;# 
  5120     019B                     SSP2CON2        equ	411	;# 
  5121     019C                     SSP2CON3        equ	412	;# 
  5122     020C                     TMR1            equ	524	;# 
  5123     020C                     TMR1L           equ	524	;# 
  5124     020D                     TMR1H           equ	525	;# 
  5125     020E                     T1CON           equ	526	;# 
  5126     020E                     TMR1CON         equ	526	;# 
  5127     020F                     T1GCON          equ	527	;# 
  5128     020F                     TMR1GCON        equ	527	;# 
  5129     0210                     T1GATE          equ	528	;# 
  5130     0210                     TMR1GATE        equ	528	;# 
  5131     0211                     T1CLK           equ	529	;# 
  5132     0211                     TMR1CLK         equ	529	;# 
  5133     0211                     PR1             equ	529	;# 
  5134     0212                     TMR3            equ	530	;# 
  5135     0212                     TMR3L           equ	530	;# 
  5136     0213                     TMR3H           equ	531	;# 
  5137     0214                     T3CON           equ	532	;# 
  5138     0214                     TMR3CON         equ	532	;# 
  5139     0215                     T3GCON          equ	533	;# 
  5140     0215                     TMR3GCON        equ	533	;# 
  5141     0216                     T3GATE          equ	534	;# 
  5142     0216                     TMR3GATE        equ	534	;# 
  5143     0217                     T3CLK           equ	535	;# 
  5144     0217                     TMR3CLK         equ	535	;# 
  5145     0217                     PR3             equ	535	;# 
  5146     0218                     TMR5            equ	536	;# 
  5147     0218                     TMR5L           equ	536	;# 
  5148     0219                     TMR5H           equ	537	;# 
  5149     021A                     T5CON           equ	538	;# 
  5150     021A                     TMR5CON         equ	538	;# 
  5151     021B                     T5GCON          equ	539	;# 
  5152     021B                     TMR5GCON        equ	539	;# 
  5153     021C                     T5GATE          equ	540	;# 
  5154     021C                     TMR5GATE        equ	540	;# 
  5155     021D                     T5CLK           equ	541	;# 
  5156     021D                     TMR5CLK         equ	541	;# 
  5157     021D                     PR5             equ	541	;# 
  5158     021E                     CCPTMRS0        equ	542	;# 
  5159     021F                     CCPTMRS1        equ	543	;# 
  5160     028C                     T2TMR           equ	652	;# 
  5161     028C                     TMR2            equ	652	;# 
  5162     028D                     T2PR            equ	653	;# 
  5163     028D                     PR2             equ	653	;# 
  5164     028E                     T2CON           equ	654	;# 
  5165     028F                     T2HLT           equ	655	;# 
  5166     0290                     T2CLKCON        equ	656	;# 
  5167     0291                     T2RST           equ	657	;# 
  5168     0292                     T4TMR           equ	658	;# 
  5169     0292                     TMR4            equ	658	;# 
  5170     0293                     T4PR            equ	659	;# 
  5171     0293                     PR4             equ	659	;# 
  5172     0294                     T4CON           equ	660	;# 
  5173     0295                     T4HLT           equ	661	;# 
  5174     0296                     T4CLKCON        equ	662	;# 
  5175     0297                     T4RST           equ	663	;# 
  5176     0298                     T6TMR           equ	664	;# 
  5177     0298                     TMR6            equ	664	;# 
  5178     0299                     T6PR            equ	665	;# 
  5179     0299                     PR6             equ	665	;# 
  5180     029A                     T6CON           equ	666	;# 
  5181     029B                     T6HLT           equ	667	;# 
  5182     029C                     T6CLKCON        equ	668	;# 
  5183     029D                     T6RST           equ	669	;# 
  5184     029F                     ADCPCON0        equ	671	;# 
  5185     030C                     CCPR1           equ	780	;# 
  5186     030C                     CCPR1L          equ	780	;# 
  5187     030D                     CCPR1H          equ	781	;# 
  5188     030E                     CCP1CON         equ	782	;# 
  5189     030F                     CCP1CAP         equ	783	;# 
  5190     0310                     CCPR2           equ	784	;# 
  5191     0310                     CCPR2L          equ	784	;# 
  5192     0311                     CCPR2H          equ	785	;# 
  5193     0312                     CCP2CON         equ	786	;# 
  5194     0313                     CCP2CAP         equ	787	;# 
  5195     0314                     CCPR3           equ	788	;# 
  5196     0314                     CCPR3L          equ	788	;# 
  5197     0315                     CCPR3H          equ	789	;# 
  5198     0316                     CCP3CON         equ	790	;# 
  5199     0317                     CCP3CAP         equ	791	;# 
  5200     0318                     CCPR4           equ	792	;# 
  5201     0318                     CCPR4L          equ	792	;# 
  5202     0319                     CCPR4H          equ	793	;# 
  5203     031A                     CCP4CON         equ	794	;# 
  5204     031B                     CCP4CAP         equ	795	;# 
  5205     031C                     CCPR5           equ	796	;# 
  5206     031C                     CCPR5L          equ	796	;# 
  5207     031D                     CCPR5H          equ	797	;# 
  5208     031E                     CCP5CON         equ	798	;# 
  5209     031F                     CCP5CAP         equ	799	;# 
  5210     038C                     PWM6DC          equ	908	;# 
  5211     038C                     PWM6DCL         equ	908	;# 
  5212     038D                     PWM6DCH         equ	909	;# 
  5213     038E                     PWM6CON         equ	910	;# 
  5214     0390                     PWM7DC          equ	912	;# 
  5215     0390                     PWM7DCL         equ	912	;# 
  5216     0391                     PWM7DCH         equ	913	;# 
  5217     0392                     PWM7CON         equ	914	;# 
  5218     048C                     SMT1TMR         equ	1164	;# 
  5219     048C                     SMT1TMRL        equ	1164	;# 
  5220     048D                     SMT1TMRH        equ	1165	;# 
  5221     048E                     SMT1TMRU        equ	1166	;# 
  5222     048F                     SMT1CPR         equ	1167	;# 
  5223     048F                     SMT1CPRL        equ	1167	;# 
  5224     0490                     SMT1CPRH        equ	1168	;# 
  5225     0491                     SMT1CPRU        equ	1169	;# 
  5226     0492                     SMT1CPW         equ	1170	;# 
  5227     0492                     SMT1CPWL        equ	1170	;# 
  5228     0493                     SMT1CPWH        equ	1171	;# 
  5229     0494                     SMT1CPWU        equ	1172	;# 
  5230     0495                     SMT1PR          equ	1173	;# 
  5231     0495                     SMT1PRL         equ	1173	;# 
  5232     0496                     SMT1PRH         equ	1174	;# 
  5233     0497                     SMT1PRU         equ	1175	;# 
  5234     0498                     SMT1CON0        equ	1176	;# 
  5235     0499                     SMT1CON1        equ	1177	;# 
  5236     049A                     SMT1STAT        equ	1178	;# 
  5237     049B                     SMT1CLK         equ	1179	;# 
  5238     049C                     SMT1SIG         equ	1180	;# 
  5239     049D                     SMT1WIN         equ	1181	;# 
  5240     050C                     SMT2TMR         equ	1292	;# 
  5241     050C                     SMT2TMRL        equ	1292	;# 
  5242     050D                     SMT2TMRH        equ	1293	;# 
  5243     050E                     SMT2TMRU        equ	1294	;# 
  5244     050F                     SMT2CPR         equ	1295	;# 
  5245     050F                     SMT2CPRL        equ	1295	;# 
  5246     0510                     SMT2CPRH        equ	1296	;# 
  5247     0511                     SMT2CPRU        equ	1297	;# 
  5248     0512                     SMT2CPW         equ	1298	;# 
  5249     0512                     SMT2CPWL        equ	1298	;# 
  5250     0513                     SMT2CPWH        equ	1299	;# 
  5251     0514                     SMT2CPWU        equ	1300	;# 
  5252     0515                     SMT2PR          equ	1301	;# 
  5253     0515                     SMT2PRL         equ	1301	;# 
  5254     0516                     SMT2PRH         equ	1302	;# 
  5255     0517                     SMT2PRU         equ	1303	;# 
  5256     0518                     SMT2CON0        equ	1304	;# 
  5257     0519                     SMT2CON1        equ	1305	;# 
  5258     051A                     SMT2STAT        equ	1306	;# 
  5259     051B                     SMT2CLK         equ	1307	;# 
  5260     051C                     SMT2SIG         equ	1308	;# 
  5261     051D                     SMT2WIN         equ	1309	;# 
  5262     058C                     NCO1ACC         equ	1420	;# 
  5263     058C                     NCO1ACCL        equ	1420	;# 
  5264     058D                     NCO1ACCH        equ	1421	;# 
  5265     058E                     NCO1ACCU        equ	1422	;# 
  5266     058F                     NCO1INC         equ	1423	;# 
  5267     058F                     NCO1INCL        equ	1423	;# 
  5268     0590                     NCO1INCH        equ	1424	;# 
  5269     0591                     NCO1INCU        equ	1425	;# 
  5270     0592                     NCO1CON         equ	1426	;# 
  5271     0593                     NCO1CLK         equ	1427	;# 
  5272     059C                     TMR0L           equ	1436	;# 
  5273     059C                     TMR0            equ	1436	;# 
  5274     059D                     TMR0H           equ	1437	;# 
  5275     059D                     PR0             equ	1437	;# 
  5276     059E                     T0CON0          equ	1438	;# 
  5277     059F                     T0CON1          equ	1439	;# 
  5278     060C                     CWG1CLK         equ	1548	;# 
  5279     060C                     CWG1CLKCON      equ	1548	;# 
  5280     060D                     CWG1ISM         equ	1549	;# 
  5281     060D                     CWG1DAT         equ	1549	;# 
  5282     060E                     CWG1DBR         equ	1550	;# 
  5283     060F                     CWG1DBF         equ	1551	;# 
  5284     0610                     CWG1CON0        equ	1552	;# 
  5285     0611                     CWG1CON1        equ	1553	;# 
  5286     0612                     CWG1AS0         equ	1554	;# 
  5287     0613                     CWG1AS1         equ	1555	;# 
  5288     0614                     CWG1STR         equ	1556	;# 
  5289     0616                     CWG2CLK         equ	1558	;# 
  5290     0616                     CWG2CLKCON      equ	1558	;# 
  5291     0617                     CWG2ISM         equ	1559	;# 
  5292     0617                     CWG2DAT         equ	1559	;# 
  5293     0618                     CWG2DBR         equ	1560	;# 
  5294     0619                     CWG2DBF         equ	1561	;# 
  5295     061A                     CWG2CON0        equ	1562	;# 
  5296     061B                     CWG2CON1        equ	1563	;# 
  5297     061C                     CWG2AS0         equ	1564	;# 
  5298     061D                     CWG2AS1         equ	1565	;# 
  5299     061E                     CWG2STR         equ	1566	;# 
  5300     068C                     CWG3CLK         equ	1676	;# 
  5301     068C                     CWG3CLKCON      equ	1676	;# 
  5302     068D                     CWG3ISM         equ	1677	;# 
  5303     068D                     CWG3DAT         equ	1677	;# 
  5304     068E                     CWG3DBR         equ	1678	;# 
  5305     068F                     CWG3DBF         equ	1679	;# 
  5306     0690                     CWG3CON0        equ	1680	;# 
  5307     0691                     CWG3CON1        equ	1681	;# 
  5308     0692                     CWG3AS0         equ	1682	;# 
  5309     0693                     CWG3AS1         equ	1683	;# 
  5310     0694                     CWG3STR         equ	1684	;# 
  5311     070C                     PIR0            equ	1804	;# 
  5312     070D                     PIR1            equ	1805	;# 
  5313     070E                     PIR2            equ	1806	;# 
  5314     070F                     PIR3            equ	1807	;# 
  5315     0710                     PIR4            equ	1808	;# 
  5316     0711                     PIR5            equ	1809	;# 
  5317     0712                     PIR6            equ	1810	;# 
  5318     0713                     PIR7            equ	1811	;# 
  5319     0714                     PIR8            equ	1812	;# 
  5320     0716                     PIE0            equ	1814	;# 
  5321     0717                     PIE1            equ	1815	;# 
  5322     0718                     PIE2            equ	1816	;# 
  5323     0719                     PIE3            equ	1817	;# 
  5324     071A                     PIE4            equ	1818	;# 
  5325     071B                     PIE5            equ	1819	;# 
  5326     071C                     PIE6            equ	1820	;# 
  5327     071D                     PIE7            equ	1821	;# 
  5328     071E                     PIE8            equ	1822	;# 
  5329     0796                     PMD0            equ	1942	;# 
  5330     0797                     PMD1            equ	1943	;# 
  5331     0798                     PMD2            equ	1944	;# 
  5332     0799                     PMD3            equ	1945	;# 
  5333     079A                     PMD4            equ	1946	;# 
  5334     079B                     PMD5            equ	1947	;# 
  5335     079C                     PMD6            equ	1948	;# 
  5336     079D                     PMD7            equ	1949	;# 
  5337     080C                     WDTCON0         equ	2060	;# 
  5338     080D                     WDTCON1         equ	2061	;# 
  5339     080E                     WDTPSL          equ	2062	;# 
  5340     080F                     WDTPSH          equ	2063	;# 
  5341     0810                     WDTTMR          equ	2064	;# 
  5342     0811                     BORCON          equ	2065	;# 
  5343     0813                     PCON0           equ	2067	;# 
  5344     0814                     PCON1           equ	2068	;# 
  5345     081A                     NVMADR          equ	2074	;# 
  5346     081A                     NVMADRL         equ	2074	;# 
  5347     081B                     NVMADRH         equ	2075	;# 
  5348     081C                     NVMDAT          equ	2076	;# 
  5349     081C                     NVMDATL         equ	2076	;# 
  5350     081D                     NVMDATH         equ	2077	;# 
  5351     081E                     NVMCON1         equ	2078	;# 
  5352     081F                     NVMCON2         equ	2079	;# 
  5353     088C                     CPUDOZE         equ	2188	;# 
  5354     088D                     OSCCON1         equ	2189	;# 
  5355     088E                     OSCCON2         equ	2190	;# 
  5356     088F                     OSCCON3         equ	2191	;# 
  5357     0890                     OSCSTAT         equ	2192	;# 
  5358     0891                     OSCEN           equ	2193	;# 
  5359     0892                     OSCTUNE         equ	2194	;# 
  5360     0893                     OSCFRQ          equ	2195	;# 
  5361     0895                     CLKRCON         equ	2197	;# 
  5362     0896                     CLKRCLK         equ	2198	;# 
  5363     0897                     MD1CON0         equ	2199	;# 
  5364     0898                     MD1CON1         equ	2200	;# 
  5365     0899                     MD1SRC          equ	2201	;# 
  5366     089A                     MD1CARL         equ	2202	;# 
  5367     089B                     MD1CARH         equ	2203	;# 
  5368     090C                     FVRCON          equ	2316	;# 
  5369     090E                     DAC1CON0        equ	2318	;# 
  5370     090F                     DAC1CON1        equ	2319	;# 
  5371     091F                     ZCDCON          equ	2335	;# 
  5372     098F                     CMOUT           equ	2447	;# 
  5373     098F                     CMSTAT          equ	2447	;# 
  5374     0990                     CM1CON0         equ	2448	;# 
  5375     0991                     CM1CON1         equ	2449	;# 
  5376     0992                     CM1NCH          equ	2450	;# 
  5377     0993                     CM1PCH          equ	2451	;# 
  5378     0994                     CM2CON0         equ	2452	;# 
  5379     0995                     CM2CON1         equ	2453	;# 
  5380     0996                     CM2NCH          equ	2454	;# 
  5381     0997                     CM2PCH          equ	2455	;# 
  5382     0A19                     RC2REG          equ	2585	;# 
  5383     0A19                     RCREG2          equ	2585	;# 
  5384     0A1A                     TX2REG          equ	2586	;# 
  5385     0A1A                     TXREG2          equ	2586	;# 
  5386     0A1B                     SP2BRG          equ	2587	;# 
  5387     0A1B                     SP2BRGL         equ	2587	;# 
  5388     0A1B                     SPBRG2          equ	2587	;# 
  5389     0A1C                     SP2BRGH         equ	2588	;# 
  5390     0A1C                     SPBRGH2         equ	2588	;# 
  5391     0A1D                     RC2STA          equ	2589	;# 
  5392     0A1D                     RCSTA2          equ	2589	;# 
  5393     0A1E                     TX2STA          equ	2590	;# 
  5394     0A1E                     TXSTA2          equ	2590	;# 
  5395     0A1F                     BAUD2CON        equ	2591	;# 
  5396     0A1F                     BAUDCON2        equ	2591	;# 
  5397     0A1F                     BAUDCTL2        equ	2591	;# 
  5398     1E0F                     CLCDATA         equ	7695	;# 
  5399     1E10                     CLC1CON         equ	7696	;# 
  5400     1E11                     CLC1POL         equ	7697	;# 
  5401     1E12                     CLC1SEL0        equ	7698	;# 
  5402     1E13                     CLC1SEL1        equ	7699	;# 
  5403     1E14                     CLC1SEL2        equ	7700	;# 
  5404     1E15                     CLC1SEL3        equ	7701	;# 
  5405     1E16                     CLC1GLS0        equ	7702	;# 
  5406     1E17                     CLC1GLS1        equ	7703	;# 
  5407     1E18                     CLC1GLS2        equ	7704	;# 
  5408     1E19                     CLC1GLS3        equ	7705	;# 
  5409     1E1A                     CLC2CON         equ	7706	;# 
  5410     1E1B                     CLC2POL         equ	7707	;# 
  5411     1E1C                     CLC2SEL0        equ	7708	;# 
  5412     1E1D                     CLC2SEL1        equ	7709	;# 
  5413     1E1E                     CLC2SEL2        equ	7710	;# 
  5414     1E1F                     CLC2SEL3        equ	7711	;# 
  5415     1E20                     CLC2GLS0        equ	7712	;# 
  5416     1E21                     CLC2GLS1        equ	7713	;# 
  5417     1E22                     CLC2GLS2        equ	7714	;# 
  5418     1E23                     CLC2GLS3        equ	7715	;# 
  5419     1E24                     CLC3CON         equ	7716	;# 
  5420     1E25                     CLC3POL         equ	7717	;# 
  5421     1E26                     CLC3SEL0        equ	7718	;# 
  5422     1E27                     CLC3SEL1        equ	7719	;# 
  5423     1E28                     CLC3SEL2        equ	7720	;# 
  5424     1E29                     CLC3SEL3        equ	7721	;# 
  5425     1E2A                     CLC3GLS0        equ	7722	;# 
  5426     1E2B                     CLC3GLS1        equ	7723	;# 
  5427     1E2C                     CLC3GLS2        equ	7724	;# 
  5428     1E2D                     CLC3GLS3        equ	7725	;# 
  5429     1E2E                     CLC4CON         equ	7726	;# 
  5430     1E2F                     CLC4POL         equ	7727	;# 
  5431     1E30                     CLC4SEL0        equ	7728	;# 
  5432     1E31                     CLC4SEL1        equ	7729	;# 
  5433     1E32                     CLC4SEL2        equ	7730	;# 
  5434     1E33                     CLC4SEL3        equ	7731	;# 
  5435     1E34                     CLC4GLS0        equ	7732	;# 
  5436     1E35                     CLC4GLS1        equ	7733	;# 
  5437     1E36                     CLC4GLS2        equ	7734	;# 
  5438     1E37                     CLC4GLS3        equ	7735	;# 
  5439     1E8F                     PPSLOCK         equ	7823	;# 
  5440     1E90                     INTPPS          equ	7824	;# 
  5441     1E91                     T0CKIPPS        equ	7825	;# 
  5442     1E92                     T1CKIPPS        equ	7826	;# 
  5443     1E93                     T1GPPS          equ	7827	;# 
  5444     1E94                     T3CKIPPS        equ	7828	;# 
  5445     1E95                     T3GPPS          equ	7829	;# 
  5446     1E96                     T5CKIPPS        equ	7830	;# 
  5447     1E97                     T5GPPS          equ	7831	;# 
  5448     1E9C                     T2INPPS         equ	7836	;# 
  5449     1E9D                     T4INPPS         equ	7837	;# 
  5450     1E9E                     T6INPPS         equ	7838	;# 
  5451     1EA1                     CCP1PPS         equ	7841	;# 
  5452     1EA2                     CCP2PPS         equ	7842	;# 
  5453     1EA3                     CCP3PPS         equ	7843	;# 
  5454     1EA4                     CCP4PPS         equ	7844	;# 
  5455     1EA5                     CCP5PPS         equ	7845	;# 
  5456     1EA9                     SMT1WINPPS      equ	7849	;# 
  5457     1EAA                     SMT1SIGPPS      equ	7850	;# 
  5458     1EAB                     SMT2WINPPS      equ	7851	;# 
  5459     1EAC                     SMT2SIGPPS      equ	7852	;# 
  5460     1EB1                     CWG1PPS         equ	7857	;# 
  5461     1EB2                     CWG2PPS         equ	7858	;# 
  5462     1EB3                     CWG3PPS         equ	7859	;# 
  5463     1EB8                     MDCARLPPS       equ	7864	;# 
  5464     1EB9                     MDCARHPPS       equ	7865	;# 
  5465     1EBA                     MDSRCPPS        equ	7866	;# 
  5466     1EBB                     CLCIN0PPS       equ	7867	;# 
  5467     1EBC                     CLCIN1PPS       equ	7868	;# 
  5468     1EBD                     CLCIN2PPS       equ	7869	;# 
  5469     1EBE                     CLCIN3PPS       equ	7870	;# 
  5470     1EC3                     ADACTPPS        equ	7875	;# 
  5471     1EC5                     SSP1CLKPPS      equ	7877	;# 
  5472     1EC6                     SSP1DATPPS      equ	7878	;# 
  5473     1EC7                     SSP1SSPPS       equ	7879	;# 
  5474     1EC8                     SSP2CLKPPS      equ	7880	;# 
  5475     1EC9                     SSP2DATPPS      equ	7881	;# 
  5476     1ECA                     SSP2SSPPS       equ	7882	;# 
  5477     1ECB                     RX1PPS          equ	7883	;# 
  5478     1ECC                     CK1PPS          equ	7884	;# 
  5479     1ECD                     RX2PPS          equ	7885	;# 
  5480     1ECE                     CK2PPS          equ	7886	;# 
  5481     1F10                     RA0PPS          equ	7952	;# 
  5482     1F11                     RA1PPS          equ	7953	;# 
  5483     1F12                     RA2PPS          equ	7954	;# 
  5484     1F13                     RA3PPS          equ	7955	;# 
  5485     1F14                     RA4PPS          equ	7956	;# 
  5486     1F15                     RA5PPS          equ	7957	;# 
  5487     1F16                     RA6PPS          equ	7958	;# 
  5488     1F17                     RA7PPS          equ	7959	;# 
  5489     1F18                     RB0PPS          equ	7960	;# 
  5490     1F19                     RB1PPS          equ	7961	;# 
  5491     1F1A                     RB2PPS          equ	7962	;# 
  5492     1F1B                     RB3PPS          equ	7963	;# 
  5493     1F1C                     RB4PPS          equ	7964	;# 
  5494     1F1D                     RB5PPS          equ	7965	;# 
  5495     1F1E                     RB6PPS          equ	7966	;# 
  5496     1F1F                     RB7PPS          equ	7967	;# 
  5497     1F20                     RC0PPS          equ	7968	;# 
  5498     1F21                     RC1PPS          equ	7969	;# 
  5499     1F22                     RC2PPS          equ	7970	;# 
  5500     1F23                     RC3PPS          equ	7971	;# 
  5501     1F24                     RC4PPS          equ	7972	;# 
  5502     1F25                     RC5PPS          equ	7973	;# 
  5503     1F26                     RC6PPS          equ	7974	;# 
  5504     1F27                     RC7PPS          equ	7975	;# 
  5505     1F38                     ANSELA          equ	7992	;# 
  5506     1F39                     WPUA            equ	7993	;# 
  5507     1F3A                     ODCONA          equ	7994	;# 
  5508     1F3B                     SLRCONA         equ	7995	;# 
  5509     1F3C                     INLVLA          equ	7996	;# 
  5510     1F3D                     IOCAP           equ	7997	;# 
  5511     1F3E                     IOCAN           equ	7998	;# 
  5512     1F3F                     IOCAF           equ	7999	;# 
  5513     1F43                     ANSELB          equ	8003	;# 
  5514     1F44                     WPUB            equ	8004	;# 
  5515     1F45                     ODCONB          equ	8005	;# 
  5516     1F46                     SLRCONB         equ	8006	;# 
  5517     1F47                     INLVLB          equ	8007	;# 
  5518     1F48                     IOCBP           equ	8008	;# 
  5519     1F49                     IOCBN           equ	8009	;# 
  5520     1F4A                     IOCBF           equ	8010	;# 
  5521     1F4E                     ANSELC          equ	8014	;# 
  5522     1F4F                     WPUC            equ	8015	;# 
  5523     1F50                     ODCONC          equ	8016	;# 
  5524     1F51                     SLRCONC         equ	8017	;# 
  5525     1F52                     INLVLC          equ	8018	;# 
  5526     1F53                     IOCCP           equ	8019	;# 
  5527     1F54                     IOCCN           equ	8020	;# 
  5528     1F55                     IOCCF           equ	8021	;# 
  5529     1F65                     WPUE            equ	8037	;# 
  5530     1F66                     ODCONE          equ	8038	;# 
  5531     1F67                     SLRCONE         equ	8039	;# 
  5532     1F68                     INLVLE          equ	8040	;# 
  5533     1F69                     IOCEP           equ	8041	;# 
  5534     1F6A                     IOCEN           equ	8042	;# 
  5535     1F6B                     IOCEF           equ	8043	;# 
  5536     1FE4                     STATUS_SHAD     equ	8164	;# 
  5537     1FE5                     WREG_SHAD       equ	8165	;# 
  5538     1FE6                     BSR_SHAD        equ	8166	;# 
  5539     1FE7                     PCLATH_SHAD     equ	8167	;# 
  5540     1FE8                     FSR0_SHAD       equ	8168	;# 
  5541     1FE8                     FSR0L_SHAD      equ	8168	;# 
  5542     1FE9                     FSR0H_SHAD      equ	8169	;# 
  5543     1FEA                     FSR1L_SHAD      equ	8170	;# 
  5544     1FEB                     FSR1H_SHAD      equ	8171	;# 
  5545     1FED                     STKPTR          equ	8173	;# 
  5546     1FEE                     TOSL            equ	8174	;# 
  5547     1FEF                     TOSH            equ	8175	;# 
  5548     0000                     INDF0           equ	0	;# 
  5549     0001                     INDF1           equ	1	;# 
  5550     0002                     PCL             equ	2	;# 
  5551     0003                     STATUS          equ	3	;# 
  5552     0004                     FSR0L           equ	4	;# 
  5553     0005                     FSR0H           equ	5	;# 
  5554     0006                     FSR1L           equ	6	;# 
  5555     0007                     FSR1H           equ	7	;# 
  5556     0008                     BSR             equ	8	;# 
  5557     0009                     WREG            equ	9	;# 
  5558     000A                     PCLATH          equ	10	;# 
  5559     000B                     INTCON          equ	11	;# 
  5560     000C                     PORTA           equ	12	;# 
  5561     000D                     PORTB           equ	13	;# 
  5562     000E                     PORTC           equ	14	;# 
  5563     0010                     PORTE           equ	16	;# 
  5564     0012                     TRISA           equ	18	;# 
  5565     0013                     TRISB           equ	19	;# 
  5566     0014                     TRISC           equ	20	;# 
  5567     0016                     TRISE           equ	22	;# 
  5568     0018                     LATA            equ	24	;# 
  5569     0019                     LATB            equ	25	;# 
  5570     001A                     LATC            equ	26	;# 
  5571     008C                     ADLTH           equ	140	;# 
  5572     008C                     ADLTHL          equ	140	;# 
  5573     008D                     ADLTHH          equ	141	;# 
  5574     008E                     ADUTH           equ	142	;# 
  5575     008E                     ADUTHL          equ	142	;# 
  5576     008F                     ADUTHH          equ	143	;# 
  5577     0090                     ADERR           equ	144	;# 
  5578     0090                     ADERRL          equ	144	;# 
  5579     0091                     ADERRH          equ	145	;# 
  5580     0092                     ADSTPT          equ	146	;# 
  5581     0092                     ADSTPTL         equ	146	;# 
  5582     0093                     ADSTPTH         equ	147	;# 
  5583     0094                     ADFLTR          equ	148	;# 
  5584     0094                     ADFLTRL         equ	148	;# 
  5585     0095                     ADFLTRH         equ	149	;# 
  5586     0096                     ADACC           equ	150	;# 
  5587     0096                     ADACCL          equ	150	;# 
  5588     0097                     ADACCH          equ	151	;# 
  5589     0098                     ADACCU          equ	152	;# 
  5590     0099                     ADCNT           equ	153	;# 
  5591     009A                     ADRPT           equ	154	;# 
  5592     009B                     ADPREV          equ	155	;# 
  5593     009B                     ADPREVL         equ	155	;# 
  5594     009C                     ADPREVH         equ	156	;# 
  5595     009D                     ADRES           equ	157	;# 
  5596     009D                     ADRESL          equ	157	;# 
  5597     009E                     ADRESH          equ	158	;# 
  5598     009F                     ADPCH           equ	159	;# 
  5599     010C                     ADACQ           equ	268	;# 
  5600     010C                     ADACQL          equ	268	;# 
  5601     010D                     ADACQH          equ	269	;# 
  5602     010E                     ADCAP           equ	270	;# 
  5603     010F                     ADPRE           equ	271	;# 
  5604     010F                     ADPREL          equ	271	;# 
  5605     0110                     ADPREH          equ	272	;# 
  5606     0111                     ADCON0          equ	273	;# 
  5607     0112                     ADCON1          equ	274	;# 
  5608     0113                     ADCON2          equ	275	;# 
  5609     0114                     ADCON3          equ	276	;# 
  5610     0115                     ADSTAT          equ	277	;# 
  5611     0116                     ADREF           equ	278	;# 
  5612     0117                     ADACT           equ	279	;# 
  5613     0118                     ADCLK           equ	280	;# 
  5614     0119                     RC1REG          equ	281	;# 
  5615     0119                     RCREG           equ	281	;# 
  5616     0119                     RCREG1          equ	281	;# 
  5617     011A                     TX1REG          equ	282	;# 
  5618     011A                     TXREG1          equ	282	;# 
  5619     011A                     TXREG           equ	282	;# 
  5620     011B                     SP1BRG          equ	283	;# 
  5621     011B                     SPBRG           equ	283	;# 
  5622     011B                     SP1BRGL         equ	283	;# 
  5623     011B                     SPBRG1          equ	283	;# 
  5624     011B                     SPBRGL          equ	283	;# 
  5625     011C                     SP1BRGH         equ	284	;# 
  5626     011C                     SPBRGH          equ	284	;# 
  5627     011C                     SPBRGH1         equ	284	;# 
  5628     011D                     RC1STA          equ	285	;# 
  5629     011D                     RCSTA1          equ	285	;# 
  5630     011D                     RCSTA           equ	285	;# 
  5631     011E                     TX1STA          equ	286	;# 
  5632     011E                     TXSTA1          equ	286	;# 
  5633     011E                     TXSTA           equ	286	;# 
  5634     011F                     BAUD1CON        equ	287	;# 
  5635     011F                     BAUDCON1        equ	287	;# 
  5636     011F                     BAUDCTL1        equ	287	;# 
  5637     011F                     BAUDCON         equ	287	;# 
  5638     011F                     BAUDCTL         equ	287	;# 
  5639     018C                     SSP1BUF         equ	396	;# 
  5640     018D                     SSP1ADD         equ	397	;# 
  5641     018E                     SSP1MSK         equ	398	;# 
  5642     018F                     SSP1STAT        equ	399	;# 
  5643     0190                     SSP1CON1        equ	400	;# 
  5644     0191                     SSP1CON2        equ	401	;# 
  5645     0192                     SSP1CON3        equ	402	;# 
  5646     0196                     SSP2BUF         equ	406	;# 
  5647     0197                     SSP2ADD         equ	407	;# 
  5648     0198                     SSP2MSK         equ	408	;# 
  5649     0199                     SSP2STAT        equ	409	;# 
  5650     019A                     SSP2CON1        equ	410	;# 
  5651     019B                     SSP2CON2        equ	411	;# 
  5652     019C                     SSP2CON3        equ	412	;# 
  5653     020C                     TMR1            equ	524	;# 
  5654     020C                     TMR1L           equ	524	;# 
  5655     020D                     TMR1H           equ	525	;# 
  5656     020E                     T1CON           equ	526	;# 
  5657     020E                     TMR1CON         equ	526	;# 
  5658     020F                     T1GCON          equ	527	;# 
  5659     020F                     TMR1GCON        equ	527	;# 
  5660     0210                     T1GATE          equ	528	;# 
  5661     0210                     TMR1GATE        equ	528	;# 
  5662     0211                     T1CLK           equ	529	;# 
  5663     0211                     TMR1CLK         equ	529	;# 
  5664     0211                     PR1             equ	529	;# 
  5665     0212                     TMR3            equ	530	;# 
  5666     0212                     TMR3L           equ	530	;# 
  5667     0213                     TMR3H           equ	531	;# 
  5668     0214                     T3CON           equ	532	;# 
  5669     0214                     TMR3CON         equ	532	;# 
  5670     0215                     T3GCON          equ	533	;# 
  5671     0215                     TMR3GCON        equ	533	;# 
  5672     0216                     T3GATE          equ	534	;# 
  5673     0216                     TMR3GATE        equ	534	;# 
  5674     0217                     T3CLK           equ	535	;# 
  5675     0217                     TMR3CLK         equ	535	;# 
  5676     0217                     PR3             equ	535	;# 
  5677     0218                     TMR5            equ	536	;# 
  5678     0218                     TMR5L           equ	536	;# 
  5679     0219                     TMR5H           equ	537	;# 
  5680     021A                     T5CON           equ	538	;# 
  5681     021A                     TMR5CON         equ	538	;# 
  5682     021B                     T5GCON          equ	539	;# 
  5683     021B                     TMR5GCON        equ	539	;# 
  5684     021C                     T5GATE          equ	540	;# 
  5685     021C                     TMR5GATE        equ	540	;# 
  5686     021D                     T5CLK           equ	541	;# 
  5687     021D                     TMR5CLK         equ	541	;# 
  5688     021D                     PR5             equ	541	;# 
  5689     021E                     CCPTMRS0        equ	542	;# 
  5690     021F                     CCPTMRS1        equ	543	;# 
  5691     028C                     T2TMR           equ	652	;# 
  5692     028C                     TMR2            equ	652	;# 
  5693     028D                     T2PR            equ	653	;# 
  5694     028D                     PR2             equ	653	;# 
  5695     028E                     T2CON           equ	654	;# 
  5696     028F                     T2HLT           equ	655	;# 
  5697     0290                     T2CLKCON        equ	656	;# 
  5698     0291                     T2RST           equ	657	;# 
  5699     0292                     T4TMR           equ	658	;# 
  5700     0292                     TMR4            equ	658	;# 
  5701     0293                     T4PR            equ	659	;# 
  5702     0293                     PR4             equ	659	;# 
  5703     0294                     T4CON           equ	660	;# 
  5704     0295                     T4HLT           equ	661	;# 
  5705     0296                     T4CLKCON        equ	662	;# 
  5706     0297                     T4RST           equ	663	;# 
  5707     0298                     T6TMR           equ	664	;# 
  5708     0298                     TMR6            equ	664	;# 
  5709     0299                     T6PR            equ	665	;# 
  5710     0299                     PR6             equ	665	;# 
  5711     029A                     T6CON           equ	666	;# 
  5712     029B                     T6HLT           equ	667	;# 
  5713     029C                     T6CLKCON        equ	668	;# 
  5714     029D                     T6RST           equ	669	;# 
  5715     029F                     ADCPCON0        equ	671	;# 
  5716     030C                     CCPR1           equ	780	;# 
  5717     030C                     CCPR1L          equ	780	;# 
  5718     030D                     CCPR1H          equ	781	;# 
  5719     030E                     CCP1CON         equ	782	;# 
  5720     030F                     CCP1CAP         equ	783	;# 
  5721     0310                     CCPR2           equ	784	;# 
  5722     0310                     CCPR2L          equ	784	;# 
  5723     0311                     CCPR2H          equ	785	;# 
  5724     0312                     CCP2CON         equ	786	;# 
  5725     0313                     CCP2CAP         equ	787	;# 
  5726     0314                     CCPR3           equ	788	;# 
  5727     0314                     CCPR3L          equ	788	;# 
  5728     0315                     CCPR3H          equ	789	;# 
  5729     0316                     CCP3CON         equ	790	;# 
  5730     0317                     CCP3CAP         equ	791	;# 
  5731     0318                     CCPR4           equ	792	;# 
  5732     0318                     CCPR4L          equ	792	;# 
  5733     0319                     CCPR4H          equ	793	;# 
  5734     031A                     CCP4CON         equ	794	;# 
  5735     031B                     CCP4CAP         equ	795	;# 
  5736     031C                     CCPR5           equ	796	;# 
  5737     031C                     CCPR5L          equ	796	;# 
  5738     031D                     CCPR5H          equ	797	;# 
  5739     031E                     CCP5CON         equ	798	;# 
  5740     031F                     CCP5CAP         equ	799	;# 
  5741     038C                     PWM6DC          equ	908	;# 
  5742     038C                     PWM6DCL         equ	908	;# 
  5743     038D                     PWM6DCH         equ	909	;# 
  5744     038E                     PWM6CON         equ	910	;# 
  5745     0390                     PWM7DC          equ	912	;# 
  5746     0390                     PWM7DCL         equ	912	;# 
  5747     0391                     PWM7DCH         equ	913	;# 
  5748     0392                     PWM7CON         equ	914	;# 
  5749     048C                     SMT1TMR         equ	1164	;# 
  5750     048C                     SMT1TMRL        equ	1164	;# 
  5751     048D                     SMT1TMRH        equ	1165	;# 
  5752     048E                     SMT1TMRU        equ	1166	;# 
  5753     048F                     SMT1CPR         equ	1167	;# 
  5754     048F                     SMT1CPRL        equ	1167	;# 
  5755     0490                     SMT1CPRH        equ	1168	;# 
  5756     0491                     SMT1CPRU        equ	1169	;# 
  5757     0492                     SMT1CPW         equ	1170	;# 
  5758     0492                     SMT1CPWL        equ	1170	;# 
  5759     0493                     SMT1CPWH        equ	1171	;# 
  5760     0494                     SMT1CPWU        equ	1172	;# 
  5761     0495                     SMT1PR          equ	1173	;# 
  5762     0495                     SMT1PRL         equ	1173	;# 
  5763     0496                     SMT1PRH         equ	1174	;# 
  5764     0497                     SMT1PRU         equ	1175	;# 
  5765     0498                     SMT1CON0        equ	1176	;# 
  5766     0499                     SMT1CON1        equ	1177	;# 
  5767     049A                     SMT1STAT        equ	1178	;# 
  5768     049B                     SMT1CLK         equ	1179	;# 
  5769     049C                     SMT1SIG         equ	1180	;# 
  5770     049D                     SMT1WIN         equ	1181	;# 
  5771     050C                     SMT2TMR         equ	1292	;# 
  5772     050C                     SMT2TMRL        equ	1292	;# 
  5773     050D                     SMT2TMRH        equ	1293	;# 
  5774     050E                     SMT2TMRU        equ	1294	;# 
  5775     050F                     SMT2CPR         equ	1295	;# 
  5776     050F                     SMT2CPRL        equ	1295	;# 
  5777     0510                     SMT2CPRH        equ	1296	;# 
  5778     0511                     SMT2CPRU        equ	1297	;# 
  5779     0512                     SMT2CPW         equ	1298	;# 
  5780     0512                     SMT2CPWL        equ	1298	;# 
  5781     0513                     SMT2CPWH        equ	1299	;# 
  5782     0514                     SMT2CPWU        equ	1300	;# 
  5783     0515                     SMT2PR          equ	1301	;# 
  5784     0515                     SMT2PRL         equ	1301	;# 
  5785     0516                     SMT2PRH         equ	1302	;# 
  5786     0517                     SMT2PRU         equ	1303	;# 
  5787     0518                     SMT2CON0        equ	1304	;# 
  5788     0519                     SMT2CON1        equ	1305	;# 
  5789     051A                     SMT2STAT        equ	1306	;# 
  5790     051B                     SMT2CLK         equ	1307	;# 
  5791     051C                     SMT2SIG         equ	1308	;# 
  5792     051D                     SMT2WIN         equ	1309	;# 
  5793     058C                     NCO1ACC         equ	1420	;# 
  5794     058C                     NCO1ACCL        equ	1420	;# 
  5795     058D                     NCO1ACCH        equ	1421	;# 
  5796     058E                     NCO1ACCU        equ	1422	;# 
  5797     058F                     NCO1INC         equ	1423	;# 
  5798     058F                     NCO1INCL        equ	1423	;# 
  5799     0590                     NCO1INCH        equ	1424	;# 
  5800     0591                     NCO1INCU        equ	1425	;# 
  5801     0592                     NCO1CON         equ	1426	;# 
  5802     0593                     NCO1CLK         equ	1427	;# 
  5803     059C                     TMR0L           equ	1436	;# 
  5804     059C                     TMR0            equ	1436	;# 
  5805     059D                     TMR0H           equ	1437	;# 
  5806     059D                     PR0             equ	1437	;# 
  5807     059E                     T0CON0          equ	1438	;# 
  5808     059F                     T0CON1          equ	1439	;# 
  5809     060C                     CWG1CLK         equ	1548	;# 
  5810     060C                     CWG1CLKCON      equ	1548	;# 
  5811     060D                     CWG1ISM         equ	1549	;# 
  5812     060D                     CWG1DAT         equ	1549	;# 
  5813     060E                     CWG1DBR         equ	1550	;# 
  5814     060F                     CWG1DBF         equ	1551	;# 
  5815     0610                     CWG1CON0        equ	1552	;# 
  5816     0611                     CWG1CON1        equ	1553	;# 
  5817     0612                     CWG1AS0         equ	1554	;# 
  5818     0613                     CWG1AS1         equ	1555	;# 
  5819     0614                     CWG1STR         equ	1556	;# 
  5820     0616                     CWG2CLK         equ	1558	;# 
  5821     0616                     CWG2CLKCON      equ	1558	;# 
  5822     0617                     CWG2ISM         equ	1559	;# 
  5823     0617                     CWG2DAT         equ	1559	;# 
  5824     0618                     CWG2DBR         equ	1560	;# 
  5825     0619                     CWG2DBF         equ	1561	;# 
  5826     061A                     CWG2CON0        equ	1562	;# 
  5827     061B                     CWG2CON1        equ	1563	;# 
  5828     061C                     CWG2AS0         equ	1564	;# 
  5829     061D                     CWG2AS1         equ	1565	;# 
  5830     061E                     CWG2STR         equ	1566	;# 
  5831     068C                     CWG3CLK         equ	1676	;# 
  5832     068C                     CWG3CLKCON      equ	1676	;# 
  5833     068D                     CWG3ISM         equ	1677	;# 
  5834     068D                     CWG3DAT         equ	1677	;# 
  5835     068E                     CWG3DBR         equ	1678	;# 
  5836     068F                     CWG3DBF         equ	1679	;# 
  5837     0690                     CWG3CON0        equ	1680	;# 
  5838     0691                     CWG3CON1        equ	1681	;# 
  5839     0692                     CWG3AS0         equ	1682	;# 
  5840     0693                     CWG3AS1         equ	1683	;# 
  5841     0694                     CWG3STR         equ	1684	;# 
  5842     070C                     PIR0            equ	1804	;# 
  5843     070D                     PIR1            equ	1805	;# 
  5844     070E                     PIR2            equ	1806	;# 
  5845     070F                     PIR3            equ	1807	;# 
  5846     0710                     PIR4            equ	1808	;# 
  5847     0711                     PIR5            equ	1809	;# 
  5848     0712                     PIR6            equ	1810	;# 
  5849     0713                     PIR7            equ	1811	;# 
  5850     0714                     PIR8            equ	1812	;# 
  5851     0716                     PIE0            equ	1814	;# 
  5852     0717                     PIE1            equ	1815	;# 
  5853     0718                     PIE2            equ	1816	;# 
  5854     0719                     PIE3            equ	1817	;# 
  5855     071A                     PIE4            equ	1818	;# 
  5856     071B                     PIE5            equ	1819	;# 
  5857     071C                     PIE6            equ	1820	;# 
  5858     071D                     PIE7            equ	1821	;# 
  5859     071E                     PIE8            equ	1822	;# 
  5860     0796                     PMD0            equ	1942	;# 
  5861     0797                     PMD1            equ	1943	;# 
  5862     0798                     PMD2            equ	1944	;# 
  5863     0799                     PMD3            equ	1945	;# 
  5864     079A                     PMD4            equ	1946	;# 
  5865     079B                     PMD5            equ	1947	;# 
  5866     079C                     PMD6            equ	1948	;# 
  5867     079D                     PMD7            equ	1949	;# 
  5868     080C                     WDTCON0         equ	2060	;# 
  5869     080D                     WDTCON1         equ	2061	;# 
  5870     080E                     WDTPSL          equ	2062	;# 
  5871     080F                     WDTPSH          equ	2063	;# 
  5872     0810                     WDTTMR          equ	2064	;# 
  5873     0811                     BORCON          equ	2065	;# 
  5874     0813                     PCON0           equ	2067	;# 
  5875     0814                     PCON1           equ	2068	;# 
  5876     081A                     NVMADR          equ	2074	;# 
  5877     081A                     NVMADRL         equ	2074	;# 
  5878     081B                     NVMADRH         equ	2075	;# 
  5879     081C                     NVMDAT          equ	2076	;# 
  5880     081C                     NVMDATL         equ	2076	;# 
  5881     081D                     NVMDATH         equ	2077	;# 
  5882     081E                     NVMCON1         equ	2078	;# 
  5883     081F                     NVMCON2         equ	2079	;# 
  5884     088C                     CPUDOZE         equ	2188	;# 
  5885     088D                     OSCCON1         equ	2189	;# 
  5886     088E                     OSCCON2         equ	2190	;# 
  5887     088F                     OSCCON3         equ	2191	;# 
  5888     0890                     OSCSTAT         equ	2192	;# 
  5889     0891                     OSCEN           equ	2193	;# 
  5890     0892                     OSCTUNE         equ	2194	;# 
  5891     0893                     OSCFRQ          equ	2195	;# 
  5892     0895                     CLKRCON         equ	2197	;# 
  5893     0896                     CLKRCLK         equ	2198	;# 
  5894     0897                     MD1CON0         equ	2199	;# 
  5895     0898                     MD1CON1         equ	2200	;# 
  5896     0899                     MD1SRC          equ	2201	;# 
  5897     089A                     MD1CARL         equ	2202	;# 
  5898     089B                     MD1CARH         equ	2203	;# 
  5899     090C                     FVRCON          equ	2316	;# 
  5900     090E                     DAC1CON0        equ	2318	;# 
  5901     090F                     DAC1CON1        equ	2319	;# 
  5902     091F                     ZCDCON          equ	2335	;# 
  5903     098F                     CMOUT           equ	2447	;# 
  5904     098F                     CMSTAT          equ	2447	;# 
  5905     0990                     CM1CON0         equ	2448	;# 
  5906     0991                     CM1CON1         equ	2449	;# 
  5907     0992                     CM1NCH          equ	2450	;# 
  5908     0993                     CM1PCH          equ	2451	;# 
  5909     0994                     CM2CON0         equ	2452	;# 
  5910     0995                     CM2CON1         equ	2453	;# 
  5911     0996                     CM2NCH          equ	2454	;# 
  5912     0997                     CM2PCH          equ	2455	;# 
  5913     0A19                     RC2REG          equ	2585	;# 
  5914     0A19                     RCREG2          equ	2585	;# 
  5915     0A1A                     TX2REG          equ	2586	;# 
  5916     0A1A                     TXREG2          equ	2586	;# 
  5917     0A1B                     SP2BRG          equ	2587	;# 
  5918     0A1B                     SP2BRGL         equ	2587	;# 
  5919     0A1B                     SPBRG2          equ	2587	;# 
  5920     0A1C                     SP2BRGH         equ	2588	;# 
  5921     0A1C                     SPBRGH2         equ	2588	;# 
  5922     0A1D                     RC2STA          equ	2589	;# 
  5923     0A1D                     RCSTA2          equ	2589	;# 
  5924     0A1E                     TX2STA          equ	2590	;# 
  5925     0A1E                     TXSTA2          equ	2590	;# 
  5926     0A1F                     BAUD2CON        equ	2591	;# 
  5927     0A1F                     BAUDCON2        equ	2591	;# 
  5928     0A1F                     BAUDCTL2        equ	2591	;# 
  5929     1E0F                     CLCDATA         equ	7695	;# 
  5930     1E10                     CLC1CON         equ	7696	;# 
  5931     1E11                     CLC1POL         equ	7697	;# 
  5932     1E12                     CLC1SEL0        equ	7698	;# 
  5933     1E13                     CLC1SEL1        equ	7699	;# 
  5934     1E14                     CLC1SEL2        equ	7700	;# 
  5935     1E15                     CLC1SEL3        equ	7701	;# 
  5936     1E16                     CLC1GLS0        equ	7702	;# 
  5937     1E17                     CLC1GLS1        equ	7703	;# 
  5938     1E18                     CLC1GLS2        equ	7704	;# 
  5939     1E19                     CLC1GLS3        equ	7705	;# 
  5940     1E1A                     CLC2CON         equ	7706	;# 
  5941     1E1B                     CLC2POL         equ	7707	;# 
  5942     1E1C                     CLC2SEL0        equ	7708	;# 
  5943     1E1D                     CLC2SEL1        equ	7709	;# 
  5944     1E1E                     CLC2SEL2        equ	7710	;# 
  5945     1E1F                     CLC2SEL3        equ	7711	;# 
  5946     1E20                     CLC2GLS0        equ	7712	;# 
  5947     1E21                     CLC2GLS1        equ	7713	;# 
  5948     1E22                     CLC2GLS2        equ	7714	;# 
  5949     1E23                     CLC2GLS3        equ	7715	;# 
  5950     1E24                     CLC3CON         equ	7716	;# 
  5951     1E25                     CLC3POL         equ	7717	;# 
  5952     1E26                     CLC3SEL0        equ	7718	;# 
  5953     1E27                     CLC3SEL1        equ	7719	;# 
  5954     1E28                     CLC3SEL2        equ	7720	;# 
  5955     1E29                     CLC3SEL3        equ	7721	;# 
  5956     1E2A                     CLC3GLS0        equ	7722	;# 
  5957     1E2B                     CLC3GLS1        equ	7723	;# 
  5958     1E2C                     CLC3GLS2        equ	7724	;# 
  5959     1E2D                     CLC3GLS3        equ	7725	;# 
  5960     1E2E                     CLC4CON         equ	7726	;# 
  5961     1E2F                     CLC4POL         equ	7727	;# 
  5962     1E30                     CLC4SEL0        equ	7728	;# 
  5963     1E31                     CLC4SEL1        equ	7729	;# 
  5964     1E32                     CLC4SEL2        equ	7730	;# 
  5965     1E33                     CLC4SEL3        equ	7731	;# 
  5966     1E34                     CLC4GLS0        equ	7732	;# 
  5967     1E35                     CLC4GLS1        equ	7733	;# 
  5968     1E36                     CLC4GLS2        equ	7734	;# 
  5969     1E37                     CLC4GLS3        equ	7735	;# 
  5970     1E8F                     PPSLOCK         equ	7823	;# 
  5971     1E90                     INTPPS          equ	7824	;# 
  5972     1E91                     T0CKIPPS        equ	7825	;# 
  5973     1E92                     T1CKIPPS        equ	7826	;# 
  5974     1E93                     T1GPPS          equ	7827	;# 
  5975     1E94                     T3CKIPPS        equ	7828	;# 
  5976     1E95                     T3GPPS          equ	7829	;# 
  5977     1E96                     T5CKIPPS        equ	7830	;# 
  5978     1E97                     T5GPPS          equ	7831	;# 
  5979     1E9C                     T2INPPS         equ	7836	;# 
  5980     1E9D                     T4INPPS         equ	7837	;# 
  5981     1E9E                     T6INPPS         equ	7838	;# 
  5982     1EA1                     CCP1PPS         equ	7841	;# 
  5983     1EA2                     CCP2PPS         equ	7842	;# 
  5984     1EA3                     CCP3PPS         equ	7843	;# 
  5985     1EA4                     CCP4PPS         equ	7844	;# 
  5986     1EA5                     CCP5PPS         equ	7845	;# 
  5987     1EA9                     SMT1WINPPS      equ	7849	;# 
  5988     1EAA                     SMT1SIGPPS      equ	7850	;# 
  5989     1EAB                     SMT2WINPPS      equ	7851	;# 
  5990     1EAC                     SMT2SIGPPS      equ	7852	;# 
  5991     1EB1                     CWG1PPS         equ	7857	;# 
  5992     1EB2                     CWG2PPS         equ	7858	;# 
  5993     1EB3                     CWG3PPS         equ	7859	;# 
  5994     1EB8                     MDCARLPPS       equ	7864	;# 
  5995     1EB9                     MDCARHPPS       equ	7865	;# 
  5996     1EBA                     MDSRCPPS        equ	7866	;# 
  5997     1EBB                     CLCIN0PPS       equ	7867	;# 
  5998     1EBC                     CLCIN1PPS       equ	7868	;# 
  5999     1EBD                     CLCIN2PPS       equ	7869	;# 
  6000     1EBE                     CLCIN3PPS       equ	7870	;# 
  6001     1EC3                     ADACTPPS        equ	7875	;# 
  6002     1EC5                     SSP1CLKPPS      equ	7877	;# 
  6003     1EC6                     SSP1DATPPS      equ	7878	;# 
  6004     1EC7                     SSP1SSPPS       equ	7879	;# 
  6005     1EC8                     SSP2CLKPPS      equ	7880	;# 
  6006     1EC9                     SSP2DATPPS      equ	7881	;# 
  6007     1ECA                     SSP2SSPPS       equ	7882	;# 
  6008     1ECB                     RX1PPS          equ	7883	;# 
  6009     1ECC                     CK1PPS          equ	7884	;# 
  6010     1ECD                     RX2PPS          equ	7885	;# 
  6011     1ECE                     CK2PPS          equ	7886	;# 
  6012     1F10                     RA0PPS          equ	7952	;# 
  6013     1F11                     RA1PPS          equ	7953	;# 
  6014     1F12                     RA2PPS          equ	7954	;# 
  6015     1F13                     RA3PPS          equ	7955	;# 
  6016     1F14                     RA4PPS          equ	7956	;# 
  6017     1F15                     RA5PPS          equ	7957	;# 
  6018     1F16                     RA6PPS          equ	7958	;# 
  6019     1F17                     RA7PPS          equ	7959	;# 
  6020     1F18                     RB0PPS          equ	7960	;# 
  6021     1F19                     RB1PPS          equ	7961	;# 
  6022     1F1A                     RB2PPS          equ	7962	;# 
  6023     1F1B                     RB3PPS          equ	7963	;# 
  6024     1F1C                     RB4PPS          equ	7964	;# 
  6025     1F1D                     RB5PPS          equ	7965	;# 
  6026     1F1E                     RB6PPS          equ	7966	;# 
  6027     1F1F                     RB7PPS          equ	7967	;# 
  6028     1F20                     RC0PPS          equ	7968	;# 
  6029     1F21                     RC1PPS          equ	7969	;# 
  6030     1F22                     RC2PPS          equ	7970	;# 
  6031     1F23                     RC3PPS          equ	7971	;# 
  6032     1F24                     RC4PPS          equ	7972	;# 
  6033     1F25                     RC5PPS          equ	7973	;# 
  6034     1F26                     RC6PPS          equ	7974	;# 
  6035     1F27                     RC7PPS          equ	7975	;# 
  6036     1F38                     ANSELA          equ	7992	;# 
  6037     1F39                     WPUA            equ	7993	;# 
  6038     1F3A                     ODCONA          equ	7994	;# 
  6039     1F3B                     SLRCONA         equ	7995	;# 
  6040     1F3C                     INLVLA          equ	7996	;# 
  6041     1F3D                     IOCAP           equ	7997	;# 
  6042     1F3E                     IOCAN           equ	7998	;# 
  6043     1F3F                     IOCAF           equ	7999	;# 
  6044     1F43                     ANSELB          equ	8003	;# 
  6045     1F44                     WPUB            equ	8004	;# 
  6046     1F45                     ODCONB          equ	8005	;# 
  6047     1F46                     SLRCONB         equ	8006	;# 
  6048     1F47                     INLVLB          equ	8007	;# 
  6049     1F48                     IOCBP           equ	8008	;# 
  6050     1F49                     IOCBN           equ	8009	;# 
  6051     1F4A                     IOCBF           equ	8010	;# 
  6052     1F4E                     ANSELC          equ	8014	;# 
  6053     1F4F                     WPUC            equ	8015	;# 
  6054     1F50                     ODCONC          equ	8016	;# 
  6055     1F51                     SLRCONC         equ	8017	;# 
  6056     1F52                     INLVLC          equ	8018	;# 
  6057     1F53                     IOCCP           equ	8019	;# 
  6058     1F54                     IOCCN           equ	8020	;# 
  6059     1F55                     IOCCF           equ	8021	;# 
  6060     1F65                     WPUE            equ	8037	;# 
  6061     1F66                     ODCONE          equ	8038	;# 
  6062     1F67                     SLRCONE         equ	8039	;# 
  6063     1F68                     INLVLE          equ	8040	;# 
  6064     1F69                     IOCEP           equ	8041	;# 
  6065     1F6A                     IOCEN           equ	8042	;# 
  6066     1F6B                     IOCEF           equ	8043	;# 
  6067     1FE4                     STATUS_SHAD     equ	8164	;# 
  6068     1FE5                     WREG_SHAD       equ	8165	;# 
  6069     1FE6                     BSR_SHAD        equ	8166	;# 
  6070     1FE7                     PCLATH_SHAD     equ	8167	;# 
  6071     1FE8                     FSR0_SHAD       equ	8168	;# 
  6072     1FE8                     FSR0L_SHAD      equ	8168	;# 
  6073     1FE9                     FSR0H_SHAD      equ	8169	;# 
  6074     1FEA                     FSR1L_SHAD      equ	8170	;# 
  6075     1FEB                     FSR1H_SHAD      equ	8171	;# 
  6076     1FED                     STKPTR          equ	8173	;# 
  6077     1FEE                     TOSL            equ	8174	;# 
  6078     1FEF                     TOSH            equ	8175	;# 
  6079     0000                     INDF0           equ	0	;# 
  6080     0001                     INDF1           equ	1	;# 
  6081     0002                     PCL             equ	2	;# 
  6082     0003                     STATUS          equ	3	;# 
  6083     0004                     FSR0L           equ	4	;# 
  6084     0005                     FSR0H           equ	5	;# 
  6085     0006                     FSR1L           equ	6	;# 
  6086     0007                     FSR1H           equ	7	;# 
  6087     0008                     BSR             equ	8	;# 
  6088     0009                     WREG            equ	9	;# 
  6089     000A                     PCLATH          equ	10	;# 
  6090     000B                     INTCON          equ	11	;# 
  6091     000C                     PORTA           equ	12	;# 
  6092     000D                     PORTB           equ	13	;# 
  6093     000E                     PORTC           equ	14	;# 
  6094     0010                     PORTE           equ	16	;# 
  6095     0012                     TRISA           equ	18	;# 
  6096     0013                     TRISB           equ	19	;# 
  6097     0014                     TRISC           equ	20	;# 
  6098     0016                     TRISE           equ	22	;# 
  6099     0018                     LATA            equ	24	;# 
  6100     0019                     LATB            equ	25	;# 
  6101     001A                     LATC            equ	26	;# 
  6102     008C                     ADLTH           equ	140	;# 
  6103     008C                     ADLTHL          equ	140	;# 
  6104     008D                     ADLTHH          equ	141	;# 
  6105     008E                     ADUTH           equ	142	;# 
  6106     008E                     ADUTHL          equ	142	;# 
  6107     008F                     ADUTHH          equ	143	;# 
  6108     0090                     ADERR           equ	144	;# 
  6109     0090                     ADERRL          equ	144	;# 
  6110     0091                     ADERRH          equ	145	;# 
  6111     0092                     ADSTPT          equ	146	;# 
  6112     0092                     ADSTPTL         equ	146	;# 
  6113     0093                     ADSTPTH         equ	147	;# 
  6114     0094                     ADFLTR          equ	148	;# 
  6115     0094                     ADFLTRL         equ	148	;# 
  6116     0095                     ADFLTRH         equ	149	;# 
  6117     0096                     ADACC           equ	150	;# 
  6118     0096                     ADACCL          equ	150	;# 
  6119     0097                     ADACCH          equ	151	;# 
  6120     0098                     ADACCU          equ	152	;# 
  6121     0099                     ADCNT           equ	153	;# 
  6122     009A                     ADRPT           equ	154	;# 
  6123     009B                     ADPREV          equ	155	;# 
  6124     009B                     ADPREVL         equ	155	;# 
  6125     009C                     ADPREVH         equ	156	;# 
  6126     009D                     ADRES           equ	157	;# 
  6127     009D                     ADRESL          equ	157	;# 
  6128     009E                     ADRESH          equ	158	;# 
  6129     009F                     ADPCH           equ	159	;# 
  6130     010C                     ADACQ           equ	268	;# 
  6131     010C                     ADACQL          equ	268	;# 
  6132     010D                     ADACQH          equ	269	;# 
  6133     010E                     ADCAP           equ	270	;# 
  6134     010F                     ADPRE           equ	271	;# 
  6135     010F                     ADPREL          equ	271	;# 
  6136     0110                     ADPREH          equ	272	;# 
  6137     0111                     ADCON0          equ	273	;# 
  6138     0112                     ADCON1          equ	274	;# 
  6139     0113                     ADCON2          equ	275	;# 
  6140     0114                     ADCON3          equ	276	;# 
  6141     0115                     ADSTAT          equ	277	;# 
  6142     0116                     ADREF           equ	278	;# 
  6143     0117                     ADACT           equ	279	;# 
  6144     0118                     ADCLK           equ	280	;# 
  6145     0119                     RC1REG          equ	281	;# 
  6146     0119                     RCREG           equ	281	;# 
  6147     0119                     RCREG1          equ	281	;# 
  6148     011A                     TX1REG          equ	282	;# 
  6149     011A                     TXREG1          equ	282	;# 
  6150     011A                     TXREG           equ	282	;# 
  6151     011B                     SP1BRG          equ	283	;# 
  6152     011B                     SPBRG           equ	283	;# 
  6153     011B                     SP1BRGL         equ	283	;# 
  6154     011B                     SPBRG1          equ	283	;# 
  6155     011B                     SPBRGL          equ	283	;# 
  6156     011C                     SP1BRGH         equ	284	;# 
  6157     011C                     SPBRGH          equ	284	;# 
  6158     011C                     SPBRGH1         equ	284	;# 
  6159     011D                     RC1STA          equ	285	;# 
  6160     011D                     RCSTA1          equ	285	;# 
  6161     011D                     RCSTA           equ	285	;# 
  6162     011E                     TX1STA          equ	286	;# 
  6163     011E                     TXSTA1          equ	286	;# 
  6164     011E                     TXSTA           equ	286	;# 
  6165     011F                     BAUD1CON        equ	287	;# 
  6166     011F                     BAUDCON1        equ	287	;# 
  6167     011F                     BAUDCTL1        equ	287	;# 
  6168     011F                     BAUDCON         equ	287	;# 
  6169     011F                     BAUDCTL         equ	287	;# 
  6170     018C                     SSP1BUF         equ	396	;# 
  6171     018D                     SSP1ADD         equ	397	;# 
  6172     018E                     SSP1MSK         equ	398	;# 
  6173     018F                     SSP1STAT        equ	399	;# 
  6174     0190                     SSP1CON1        equ	400	;# 
  6175     0191                     SSP1CON2        equ	401	;# 
  6176     0192                     SSP1CON3        equ	402	;# 
  6177     0196                     SSP2BUF         equ	406	;# 
  6178     0197                     SSP2ADD         equ	407	;# 
  6179     0198                     SSP2MSK         equ	408	;# 
  6180     0199                     SSP2STAT        equ	409	;# 
  6181     019A                     SSP2CON1        equ	410	;# 
  6182     019B                     SSP2CON2        equ	411	;# 
  6183     019C                     SSP2CON3        equ	412	;# 
  6184     020C                     TMR1            equ	524	;# 
  6185     020C                     TMR1L           equ	524	;# 
  6186     020D                     TMR1H           equ	525	;# 
  6187     020E                     T1CON           equ	526	;# 
  6188     020E                     TMR1CON         equ	526	;# 
  6189     020F                     T1GCON          equ	527	;# 
  6190     020F                     TMR1GCON        equ	527	;# 
  6191     0210                     T1GATE          equ	528	;# 
  6192     0210                     TMR1GATE        equ	528	;# 
  6193     0211                     T1CLK           equ	529	;# 
  6194     0211                     TMR1CLK         equ	529	;# 
  6195     0211                     PR1             equ	529	;# 
  6196     0212                     TMR3            equ	530	;# 
  6197     0212                     TMR3L           equ	530	;# 
  6198     0213                     TMR3H           equ	531	;# 
  6199     0214                     T3CON           equ	532	;# 
  6200     0214                     TMR3CON         equ	532	;# 
  6201     0215                     T3GCON          equ	533	;# 
  6202     0215                     TMR3GCON        equ	533	;# 
  6203     0216                     T3GATE          equ	534	;# 
  6204     0216                     TMR3GATE        equ	534	;# 
  6205     0217                     T3CLK           equ	535	;# 
  6206     0217                     TMR3CLK         equ	535	;# 
  6207     0217                     PR3             equ	535	;# 
  6208     0218                     TMR5            equ	536	;# 
  6209     0218                     TMR5L           equ	536	;# 
  6210     0219                     TMR5H           equ	537	;# 
  6211     021A                     T5CON           equ	538	;# 
  6212     021A                     TMR5CON         equ	538	;# 
  6213     021B                     T5GCON          equ	539	;# 
  6214     021B                     TMR5GCON        equ	539	;# 
  6215     021C                     T5GATE          equ	540	;# 
  6216     021C                     TMR5GATE        equ	540	;# 
  6217     021D                     T5CLK           equ	541	;# 
  6218     021D                     TMR5CLK         equ	541	;# 
  6219     021D                     PR5             equ	541	;# 
  6220     021E                     CCPTMRS0        equ	542	;# 
  6221     021F                     CCPTMRS1        equ	543	;# 
  6222     028C                     T2TMR           equ	652	;# 
  6223     028C                     TMR2            equ	652	;# 
  6224     028D                     T2PR            equ	653	;# 
  6225     028D                     PR2             equ	653	;# 
  6226     028E                     T2CON           equ	654	;# 
  6227     028F                     T2HLT           equ	655	;# 
  6228     0290                     T2CLKCON        equ	656	;# 
  6229     0291                     T2RST           equ	657	;# 
  6230     0292                     T4TMR           equ	658	;# 
  6231     0292                     TMR4            equ	658	;# 
  6232     0293                     T4PR            equ	659	;# 
  6233     0293                     PR4             equ	659	;# 
  6234     0294                     T4CON           equ	660	;# 
  6235     0295                     T4HLT           equ	661	;# 
  6236     0296                     T4CLKCON        equ	662	;# 
  6237     0297                     T4RST           equ	663	;# 
  6238     0298                     T6TMR           equ	664	;# 
  6239     0298                     TMR6            equ	664	;# 
  6240     0299                     T6PR            equ	665	;# 
  6241     0299                     PR6             equ	665	;# 
  6242     029A                     T6CON           equ	666	;# 
  6243     029B                     T6HLT           equ	667	;# 
  6244     029C                     T6CLKCON        equ	668	;# 
  6245     029D                     T6RST           equ	669	;# 
  6246     029F                     ADCPCON0        equ	671	;# 
  6247     030C                     CCPR1           equ	780	;# 
  6248     030C                     CCPR1L          equ	780	;# 
  6249     030D                     CCPR1H          equ	781	;# 
  6250     030E                     CCP1CON         equ	782	;# 
  6251     030F                     CCP1CAP         equ	783	;# 
  6252     0310                     CCPR2           equ	784	;# 
  6253     0310                     CCPR2L          equ	784	;# 
  6254     0311                     CCPR2H          equ	785	;# 
  6255     0312                     CCP2CON         equ	786	;# 
  6256     0313                     CCP2CAP         equ	787	;# 
  6257     0314                     CCPR3           equ	788	;# 
  6258     0314                     CCPR3L          equ	788	;# 
  6259     0315                     CCPR3H          equ	789	;# 
  6260     0316                     CCP3CON         equ	790	;# 
  6261     0317                     CCP3CAP         equ	791	;# 
  6262     0318                     CCPR4           equ	792	;# 
  6263     0318                     CCPR4L          equ	792	;# 
  6264     0319                     CCPR4H          equ	793	;# 
  6265     031A                     CCP4CON         equ	794	;# 
  6266     031B                     CCP4CAP         equ	795	;# 
  6267     031C                     CCPR5           equ	796	;# 
  6268     031C                     CCPR5L          equ	796	;# 
  6269     031D                     CCPR5H          equ	797	;# 
  6270     031E                     CCP5CON         equ	798	;# 
  6271     031F                     CCP5CAP         equ	799	;# 
  6272     038C                     PWM6DC          equ	908	;# 
  6273     038C                     PWM6DCL         equ	908	;# 
  6274     038D                     PWM6DCH         equ	909	;# 
  6275     038E                     PWM6CON         equ	910	;# 
  6276     0390                     PWM7DC          equ	912	;# 
  6277     0390                     PWM7DCL         equ	912	;# 
  6278     0391                     PWM7DCH         equ	913	;# 
  6279     0392                     PWM7CON         equ	914	;# 
  6280     048C                     SMT1TMR         equ	1164	;# 
  6281     048C                     SMT1TMRL        equ	1164	;# 
  6282     048D                     SMT1TMRH        equ	1165	;# 
  6283     048E                     SMT1TMRU        equ	1166	;# 
  6284     048F                     SMT1CPR         equ	1167	;# 
  6285     048F                     SMT1CPRL        equ	1167	;# 
  6286     0490                     SMT1CPRH        equ	1168	;# 
  6287     0491                     SMT1CPRU        equ	1169	;# 
  6288     0492                     SMT1CPW         equ	1170	;# 
  6289     0492                     SMT1CPWL        equ	1170	;# 
  6290     0493                     SMT1CPWH        equ	1171	;# 
  6291     0494                     SMT1CPWU        equ	1172	;# 
  6292     0495                     SMT1PR          equ	1173	;# 
  6293     0495                     SMT1PRL         equ	1173	;# 
  6294     0496                     SMT1PRH         equ	1174	;# 
  6295     0497                     SMT1PRU         equ	1175	;# 
  6296     0498                     SMT1CON0        equ	1176	;# 
  6297     0499                     SMT1CON1        equ	1177	;# 
  6298     049A                     SMT1STAT        equ	1178	;# 
  6299     049B                     SMT1CLK         equ	1179	;# 
  6300     049C                     SMT1SIG         equ	1180	;# 
  6301     049D                     SMT1WIN         equ	1181	;# 
  6302     050C                     SMT2TMR         equ	1292	;# 
  6303     050C                     SMT2TMRL        equ	1292	;# 
  6304     050D                     SMT2TMRH        equ	1293	;# 
  6305     050E                     SMT2TMRU        equ	1294	;# 
  6306     050F                     SMT2CPR         equ	1295	;# 
  6307     050F                     SMT2CPRL        equ	1295	;# 
  6308     0510                     SMT2CPRH        equ	1296	;# 
  6309     0511                     SMT2CPRU        equ	1297	;# 
  6310     0512                     SMT2CPW         equ	1298	;# 
  6311     0512                     SMT2CPWL        equ	1298	;# 
  6312     0513                     SMT2CPWH        equ	1299	;# 
  6313     0514                     SMT2CPWU        equ	1300	;# 
  6314     0515                     SMT2PR          equ	1301	;# 
  6315     0515                     SMT2PRL         equ	1301	;# 
  6316     0516                     SMT2PRH         equ	1302	;# 
  6317     0517                     SMT2PRU         equ	1303	;# 
  6318     0518                     SMT2CON0        equ	1304	;# 
  6319     0519                     SMT2CON1        equ	1305	;# 
  6320     051A                     SMT2STAT        equ	1306	;# 
  6321     051B                     SMT2CLK         equ	1307	;# 
  6322     051C                     SMT2SIG         equ	1308	;# 
  6323     051D                     SMT2WIN         equ	1309	;# 
  6324     058C                     NCO1ACC         equ	1420	;# 
  6325     058C                     NCO1ACCL        equ	1420	;# 
  6326     058D                     NCO1ACCH        equ	1421	;# 
  6327     058E                     NCO1ACCU        equ	1422	;# 
  6328     058F                     NCO1INC         equ	1423	;# 
  6329     058F                     NCO1INCL        equ	1423	;# 
  6330     0590                     NCO1INCH        equ	1424	;# 
  6331     0591                     NCO1INCU        equ	1425	;# 
  6332     0592                     NCO1CON         equ	1426	;# 
  6333     0593                     NCO1CLK         equ	1427	;# 
  6334     059C                     TMR0L           equ	1436	;# 
  6335     059C                     TMR0            equ	1436	;# 
  6336     059D                     TMR0H           equ	1437	;# 
  6337     059D                     PR0             equ	1437	;# 
  6338     059E                     T0CON0          equ	1438	;# 
  6339     059F                     T0CON1          equ	1439	;# 
  6340     060C                     CWG1CLK         equ	1548	;# 
  6341     060C                     CWG1CLKCON      equ	1548	;# 
  6342     060D                     CWG1ISM         equ	1549	;# 
  6343     060D                     CWG1DAT         equ	1549	;# 
  6344     060E                     CWG1DBR         equ	1550	;# 
  6345     060F                     CWG1DBF         equ	1551	;# 
  6346     0610                     CWG1CON0        equ	1552	;# 
  6347     0611                     CWG1CON1        equ	1553	;# 
  6348     0612                     CWG1AS0         equ	1554	;# 
  6349     0613                     CWG1AS1         equ	1555	;# 
  6350     0614                     CWG1STR         equ	1556	;# 
  6351     0616                     CWG2CLK         equ	1558	;# 
  6352     0616                     CWG2CLKCON      equ	1558	;# 
  6353     0617                     CWG2ISM         equ	1559	;# 
  6354     0617                     CWG2DAT         equ	1559	;# 
  6355     0618                     CWG2DBR         equ	1560	;# 
  6356     0619                     CWG2DBF         equ	1561	;# 
  6357     061A                     CWG2CON0        equ	1562	;# 
  6358     061B                     CWG2CON1        equ	1563	;# 
  6359     061C                     CWG2AS0         equ	1564	;# 
  6360     061D                     CWG2AS1         equ	1565	;# 
  6361     061E                     CWG2STR         equ	1566	;# 
  6362     068C                     CWG3CLK         equ	1676	;# 
  6363     068C                     CWG3CLKCON      equ	1676	;# 
  6364     068D                     CWG3ISM         equ	1677	;# 
  6365     068D                     CWG3DAT         equ	1677	;# 
  6366     068E                     CWG3DBR         equ	1678	;# 
  6367     068F                     CWG3DBF         equ	1679	;# 
  6368     0690                     CWG3CON0        equ	1680	;# 
  6369     0691                     CWG3CON1        equ	1681	;# 
  6370     0692                     CWG3AS0         equ	1682	;# 
  6371     0693                     CWG3AS1         equ	1683	;# 
  6372     0694                     CWG3STR         equ	1684	;# 
  6373     070C                     PIR0            equ	1804	;# 
  6374     070D                     PIR1            equ	1805	;# 
  6375     070E                     PIR2            equ	1806	;# 
  6376     070F                     PIR3            equ	1807	;# 
  6377     0710                     PIR4            equ	1808	;# 
  6378     0711                     PIR5            equ	1809	;# 
  6379     0712                     PIR6            equ	1810	;# 
  6380     0713                     PIR7            equ	1811	;# 
  6381     0714                     PIR8            equ	1812	;# 
  6382     0716                     PIE0            equ	1814	;# 
  6383     0717                     PIE1            equ	1815	;# 
  6384     0718                     PIE2            equ	1816	;# 
  6385     0719                     PIE3            equ	1817	;# 
  6386     071A                     PIE4            equ	1818	;# 
  6387     071B                     PIE5            equ	1819	;# 
  6388     071C                     PIE6            equ	1820	;# 
  6389     071D                     PIE7            equ	1821	;# 
  6390     071E                     PIE8            equ	1822	;# 
  6391     0796                     PMD0            equ	1942	;# 
  6392     0797                     PMD1            equ	1943	;# 
  6393     0798                     PMD2            equ	1944	;# 
  6394     0799                     PMD3            equ	1945	;# 
  6395     079A                     PMD4            equ	1946	;# 
  6396     079B                     PMD5            equ	1947	;# 
  6397     079C                     PMD6            equ	1948	;# 
  6398     079D                     PMD7            equ	1949	;# 
  6399     080C                     WDTCON0         equ	2060	;# 
  6400     080D                     WDTCON1         equ	2061	;# 
  6401     080E                     WDTPSL          equ	2062	;# 
  6402     080F                     WDTPSH          equ	2063	;# 
  6403     0810                     WDTTMR          equ	2064	;# 
  6404     0811                     BORCON          equ	2065	;# 
  6405     0813                     PCON0           equ	2067	;# 
  6406     0814                     PCON1           equ	2068	;# 
  6407     081A                     NVMADR          equ	2074	;# 
  6408     081A                     NVMADRL         equ	2074	;# 
  6409     081B                     NVMADRH         equ	2075	;# 
  6410     081C                     NVMDAT          equ	2076	;# 
  6411     081C                     NVMDATL         equ	2076	;# 
  6412     081D                     NVMDATH         equ	2077	;# 
  6413     081E                     NVMCON1         equ	2078	;# 
  6414     081F                     NVMCON2         equ	2079	;# 
  6415     088C                     CPUDOZE         equ	2188	;# 
  6416     088D                     OSCCON1         equ	2189	;# 
  6417     088E                     OSCCON2         equ	2190	;# 
  6418     088F                     OSCCON3         equ	2191	;# 
  6419     0890                     OSCSTAT         equ	2192	;# 
  6420     0891                     OSCEN           equ	2193	;# 
  6421     0892                     OSCTUNE         equ	2194	;# 
  6422     0893                     OSCFRQ          equ	2195	;# 
  6423     0895                     CLKRCON         equ	2197	;# 
  6424     0896                     CLKRCLK         equ	2198	;# 
  6425     0897                     MD1CON0         equ	2199	;# 
  6426     0898                     MD1CON1         equ	2200	;# 
  6427     0899                     MD1SRC          equ	2201	;# 
  6428     089A                     MD1CARL         equ	2202	;# 
  6429     089B                     MD1CARH         equ	2203	;# 
  6430     090C                     FVRCON          equ	2316	;# 
  6431     090E                     DAC1CON0        equ	2318	;# 
  6432     090F                     DAC1CON1        equ	2319	;# 
  6433     091F                     ZCDCON          equ	2335	;# 
  6434     098F                     CMOUT           equ	2447	;# 
  6435     098F                     CMSTAT          equ	2447	;# 
  6436     0990                     CM1CON0         equ	2448	;# 
  6437     0991                     CM1CON1         equ	2449	;# 
  6438     0992                     CM1NCH          equ	2450	;# 
  6439     0993                     CM1PCH          equ	2451	;# 
  6440     0994                     CM2CON0         equ	2452	;# 
  6441     0995                     CM2CON1         equ	2453	;# 
  6442     0996                     CM2NCH          equ	2454	;# 
  6443     0997                     CM2PCH          equ	2455	;# 
  6444     0A19                     RC2REG          equ	2585	;# 
  6445     0A19                     RCREG2          equ	2585	;# 
  6446     0A1A                     TX2REG          equ	2586	;# 
  6447     0A1A                     TXREG2          equ	2586	;# 
  6448     0A1B                     SP2BRG          equ	2587	;# 
  6449     0A1B                     SP2BRGL         equ	2587	;# 
  6450     0A1B                     SPBRG2          equ	2587	;# 
  6451     0A1C                     SP2BRGH         equ	2588	;# 
  6452     0A1C                     SPBRGH2         equ	2588	;# 
  6453     0A1D                     RC2STA          equ	2589	;# 
  6454     0A1D                     RCSTA2          equ	2589	;# 
  6455     0A1E                     TX2STA          equ	2590	;# 
  6456     0A1E                     TXSTA2          equ	2590	;# 
  6457     0A1F                     BAUD2CON        equ	2591	;# 
  6458     0A1F                     BAUDCON2        equ	2591	;# 
  6459     0A1F                     BAUDCTL2        equ	2591	;# 
  6460     1E0F                     CLCDATA         equ	7695	;# 
  6461     1E10                     CLC1CON         equ	7696	;# 
  6462     1E11                     CLC1POL         equ	7697	;# 
  6463     1E12                     CLC1SEL0        equ	7698	;# 
  6464     1E13                     CLC1SEL1        equ	7699	;# 
  6465     1E14                     CLC1SEL2        equ	7700	;# 
  6466     1E15                     CLC1SEL3        equ	7701	;# 
  6467     1E16                     CLC1GLS0        equ	7702	;# 
  6468     1E17                     CLC1GLS1        equ	7703	;# 
  6469     1E18                     CLC1GLS2        equ	7704	;# 
  6470     1E19                     CLC1GLS3        equ	7705	;# 
  6471     1E1A                     CLC2CON         equ	7706	;# 
  6472     1E1B                     CLC2POL         equ	7707	;# 
  6473     1E1C                     CLC2SEL0        equ	7708	;# 
  6474     1E1D                     CLC2SEL1        equ	7709	;# 
  6475     1E1E                     CLC2SEL2        equ	7710	;# 
  6476     1E1F                     CLC2SEL3        equ	7711	;# 
  6477     1E20                     CLC2GLS0        equ	7712	;# 
  6478     1E21                     CLC2GLS1        equ	7713	;# 
  6479     1E22                     CLC2GLS2        equ	7714	;# 
  6480     1E23                     CLC2GLS3        equ	7715	;# 
  6481     1E24                     CLC3CON         equ	7716	;# 
  6482     1E25                     CLC3POL         equ	7717	;# 
  6483     1E26                     CLC3SEL0        equ	7718	;# 
  6484     1E27                     CLC3SEL1        equ	7719	;# 
  6485     1E28                     CLC3SEL2        equ	7720	;# 
  6486     1E29                     CLC3SEL3        equ	7721	;# 
  6487     1E2A                     CLC3GLS0        equ	7722	;# 
  6488     1E2B                     CLC3GLS1        equ	7723	;# 
  6489     1E2C                     CLC3GLS2        equ	7724	;# 
  6490     1E2D                     CLC3GLS3        equ	7725	;# 
  6491     1E2E                     CLC4CON         equ	7726	;# 
  6492     1E2F                     CLC4POL         equ	7727	;# 
  6493     1E30                     CLC4SEL0        equ	7728	;# 
  6494     1E31                     CLC4SEL1        equ	7729	;# 
  6495     1E32                     CLC4SEL2        equ	7730	;# 
  6496     1E33                     CLC4SEL3        equ	7731	;# 
  6497     1E34                     CLC4GLS0        equ	7732	;# 
  6498     1E35                     CLC4GLS1        equ	7733	;# 
  6499     1E36                     CLC4GLS2        equ	7734	;# 
  6500     1E37                     CLC4GLS3        equ	7735	;# 
  6501     1E8F                     PPSLOCK         equ	7823	;# 
  6502     1E90                     INTPPS          equ	7824	;# 
  6503     1E91                     T0CKIPPS        equ	7825	;# 
  6504     1E92                     T1CKIPPS        equ	7826	;# 
  6505     1E93                     T1GPPS          equ	7827	;# 
  6506     1E94                     T3CKIPPS        equ	7828	;# 
  6507     1E95                     T3GPPS          equ	7829	;# 
  6508     1E96                     T5CKIPPS        equ	7830	;# 
  6509     1E97                     T5GPPS          equ	7831	;# 
  6510     1E9C                     T2INPPS         equ	7836	;# 
  6511     1E9D                     T4INPPS         equ	7837	;# 
  6512     1E9E                     T6INPPS         equ	7838	;# 
  6513     1EA1                     CCP1PPS         equ	7841	;# 
  6514     1EA2                     CCP2PPS         equ	7842	;# 
  6515     1EA3                     CCP3PPS         equ	7843	;# 
  6516     1EA4                     CCP4PPS         equ	7844	;# 
  6517     1EA5                     CCP5PPS         equ	7845	;# 
  6518     1EA9                     SMT1WINPPS      equ	7849	;# 
  6519     1EAA                     SMT1SIGPPS      equ	7850	;# 
  6520     1EAB                     SMT2WINPPS      equ	7851	;# 
  6521     1EAC                     SMT2SIGPPS      equ	7852	;# 
  6522     1EB1                     CWG1PPS         equ	7857	;# 
  6523     1EB2                     CWG2PPS         equ	7858	;# 
  6524     1EB3                     CWG3PPS         equ	7859	;# 
  6525     1EB8                     MDCARLPPS       equ	7864	;# 
  6526     1EB9                     MDCARHPPS       equ	7865	;# 
  6527     1EBA                     MDSRCPPS        equ	7866	;# 
  6528     1EBB                     CLCIN0PPS       equ	7867	;# 
  6529     1EBC                     CLCIN1PPS       equ	7868	;# 
  6530     1EBD                     CLCIN2PPS       equ	7869	;# 
  6531     1EBE                     CLCIN3PPS       equ	7870	;# 
  6532     1EC3                     ADACTPPS        equ	7875	;# 
  6533     1EC5                     SSP1CLKPPS      equ	7877	;# 
  6534     1EC6                     SSP1DATPPS      equ	7878	;# 
  6535     1EC7                     SSP1SSPPS       equ	7879	;# 
  6536     1EC8                     SSP2CLKPPS      equ	7880	;# 
  6537     1EC9                     SSP2DATPPS      equ	7881	;# 
  6538     1ECA                     SSP2SSPPS       equ	7882	;# 
  6539     1ECB                     RX1PPS          equ	7883	;# 
  6540     1ECC                     CK1PPS          equ	7884	;# 
  6541     1ECD                     RX2PPS          equ	7885	;# 
  6542     1ECE                     CK2PPS          equ	7886	;# 
  6543     1F10                     RA0PPS          equ	7952	;# 
  6544     1F11                     RA1PPS          equ	7953	;# 
  6545     1F12                     RA2PPS          equ	7954	;# 
  6546     1F13                     RA3PPS          equ	7955	;# 
  6547     1F14                     RA4PPS          equ	7956	;# 
  6548     1F15                     RA5PPS          equ	7957	;# 
  6549     1F16                     RA6PPS          equ	7958	;# 
  6550     1F17                     RA7PPS          equ	7959	;# 
  6551     1F18                     RB0PPS          equ	7960	;# 
  6552     1F19                     RB1PPS          equ	7961	;# 
  6553     1F1A                     RB2PPS          equ	7962	;# 
  6554     1F1B                     RB3PPS          equ	7963	;# 
  6555     1F1C                     RB4PPS          equ	7964	;# 
  6556     1F1D                     RB5PPS          equ	7965	;# 
  6557     1F1E                     RB6PPS          equ	7966	;# 
  6558     1F1F                     RB7PPS          equ	7967	;# 
  6559     1F20                     RC0PPS          equ	7968	;# 
  6560     1F21                     RC1PPS          equ	7969	;# 
  6561     1F22                     RC2PPS          equ	7970	;# 
  6562     1F23                     RC3PPS          equ	7971	;# 
  6563     1F24                     RC4PPS          equ	7972	;# 
  6564     1F25                     RC5PPS          equ	7973	;# 
  6565     1F26                     RC6PPS          equ	7974	;# 
  6566     1F27                     RC7PPS          equ	7975	;# 
  6567     1F38                     ANSELA          equ	7992	;# 
  6568     1F39                     WPUA            equ	7993	;# 
  6569     1F3A                     ODCONA          equ	7994	;# 
  6570     1F3B                     SLRCONA         equ	7995	;# 
  6571     1F3C                     INLVLA          equ	7996	;# 
  6572     1F3D                     IOCAP           equ	7997	;# 
  6573     1F3E                     IOCAN           equ	7998	;# 
  6574     1F3F                     IOCAF           equ	7999	;# 
  6575     1F43                     ANSELB          equ	8003	;# 
  6576     1F44                     WPUB            equ	8004	;# 
  6577     1F45                     ODCONB          equ	8005	;# 
  6578     1F46                     SLRCONB         equ	8006	;# 
  6579     1F47                     INLVLB          equ	8007	;# 
  6580     1F48                     IOCBP           equ	8008	;# 
  6581     1F49                     IOCBN           equ	8009	;# 
  6582     1F4A                     IOCBF           equ	8010	;# 
  6583     1F4E                     ANSELC          equ	8014	;# 
  6584     1F4F                     WPUC            equ	8015	;# 
  6585     1F50                     ODCONC          equ	8016	;# 
  6586     1F51                     SLRCONC         equ	8017	;# 
  6587     1F52                     INLVLC          equ	8018	;# 
  6588     1F53                     IOCCP           equ	8019	;# 
  6589     1F54                     IOCCN           equ	8020	;# 
  6590     1F55                     IOCCF           equ	8021	;# 
  6591     1F65                     WPUE            equ	8037	;# 
  6592     1F66                     ODCONE          equ	8038	;# 
  6593     1F67                     SLRCONE         equ	8039	;# 
  6594     1F68                     INLVLE          equ	8040	;# 
  6595     1F69                     IOCEP           equ	8041	;# 
  6596     1F6A                     IOCEN           equ	8042	;# 
  6597     1F6B                     IOCEF           equ	8043	;# 
  6598     1FE4                     STATUS_SHAD     equ	8164	;# 
  6599     1FE5                     WREG_SHAD       equ	8165	;# 
  6600     1FE6                     BSR_SHAD        equ	8166	;# 
  6601     1FE7                     PCLATH_SHAD     equ	8167	;# 
  6602     1FE8                     FSR0_SHAD       equ	8168	;# 
  6603     1FE8                     FSR0L_SHAD      equ	8168	;# 
  6604     1FE9                     FSR0H_SHAD      equ	8169	;# 
  6605     1FEA                     FSR1L_SHAD      equ	8170	;# 
  6606     1FEB                     FSR1H_SHAD      equ	8171	;# 
  6607     1FED                     STKPTR          equ	8173	;# 
  6608     1FEE                     TOSL            equ	8174	;# 
  6609     1FEF                     TOSH            equ	8175	;# 
  6610     0000                     INDF0           equ	0	;# 
  6611     0001                     INDF1           equ	1	;# 
  6612     0002                     PCL             equ	2	;# 
  6613     0003                     STATUS          equ	3	;# 
  6614     0004                     FSR0L           equ	4	;# 
  6615     0005                     FSR0H           equ	5	;# 
  6616     0006                     FSR1L           equ	6	;# 
  6617     0007                     FSR1H           equ	7	;# 
  6618     0008                     BSR             equ	8	;# 
  6619     0009                     WREG            equ	9	;# 
  6620     000A                     PCLATH          equ	10	;# 
  6621     000B                     INTCON          equ	11	;# 
  6622     000C                     PORTA           equ	12	;# 
  6623     000D                     PORTB           equ	13	;# 
  6624     000E                     PORTC           equ	14	;# 
  6625     0010                     PORTE           equ	16	;# 
  6626     0012                     TRISA           equ	18	;# 
  6627     0013                     TRISB           equ	19	;# 
  6628     0014                     TRISC           equ	20	;# 
  6629     0016                     TRISE           equ	22	;# 
  6630     0018                     LATA            equ	24	;# 
  6631     0019                     LATB            equ	25	;# 
  6632     001A                     LATC            equ	26	;# 
  6633     008C                     ADLTH           equ	140	;# 
  6634     008C                     ADLTHL          equ	140	;# 
  6635     008D                     ADLTHH          equ	141	;# 
  6636     008E                     ADUTH           equ	142	;# 
  6637     008E                     ADUTHL          equ	142	;# 
  6638     008F                     ADUTHH          equ	143	;# 
  6639     0090                     ADERR           equ	144	;# 
  6640     0090                     ADERRL          equ	144	;# 
  6641     0091                     ADERRH          equ	145	;# 
  6642     0092                     ADSTPT          equ	146	;# 
  6643     0092                     ADSTPTL         equ	146	;# 
  6644     0093                     ADSTPTH         equ	147	;# 
  6645     0094                     ADFLTR          equ	148	;# 
  6646     0094                     ADFLTRL         equ	148	;# 
  6647     0095                     ADFLTRH         equ	149	;# 
  6648     0096                     ADACC           equ	150	;# 
  6649     0096                     ADACCL          equ	150	;# 
  6650     0097                     ADACCH          equ	151	;# 
  6651     0098                     ADACCU          equ	152	;# 
  6652     0099                     ADCNT           equ	153	;# 
  6653     009A                     ADRPT           equ	154	;# 
  6654     009B                     ADPREV          equ	155	;# 
  6655     009B                     ADPREVL         equ	155	;# 
  6656     009C                     ADPREVH         equ	156	;# 
  6657     009D                     ADRES           equ	157	;# 
  6658     009D                     ADRESL          equ	157	;# 
  6659     009E                     ADRESH          equ	158	;# 
  6660     009F                     ADPCH           equ	159	;# 
  6661     010C                     ADACQ           equ	268	;# 
  6662     010C                     ADACQL          equ	268	;# 
  6663     010D                     ADACQH          equ	269	;# 
  6664     010E                     ADCAP           equ	270	;# 
  6665     010F                     ADPRE           equ	271	;# 
  6666     010F                     ADPREL          equ	271	;# 
  6667     0110                     ADPREH          equ	272	;# 
  6668     0111                     ADCON0          equ	273	;# 
  6669     0112                     ADCON1          equ	274	;# 
  6670     0113                     ADCON2          equ	275	;# 
  6671     0114                     ADCON3          equ	276	;# 
  6672     0115                     ADSTAT          equ	277	;# 
  6673     0116                     ADREF           equ	278	;# 
  6674     0117                     ADACT           equ	279	;# 
  6675     0118                     ADCLK           equ	280	;# 
  6676     0119                     RC1REG          equ	281	;# 
  6677     0119                     RCREG           equ	281	;# 
  6678     0119                     RCREG1          equ	281	;# 
  6679     011A                     TX1REG          equ	282	;# 
  6680     011A                     TXREG1          equ	282	;# 
  6681     011A                     TXREG           equ	282	;# 
  6682     011B                     SP1BRG          equ	283	;# 
  6683     011B                     SPBRG           equ	283	;# 
  6684     011B                     SP1BRGL         equ	283	;# 
  6685     011B                     SPBRG1          equ	283	;# 
  6686     011B                     SPBRGL          equ	283	;# 
  6687     011C                     SP1BRGH         equ	284	;# 
  6688     011C                     SPBRGH          equ	284	;# 
  6689     011C                     SPBRGH1         equ	284	;# 
  6690     011D                     RC1STA          equ	285	;# 
  6691     011D                     RCSTA1          equ	285	;# 
  6692     011D                     RCSTA           equ	285	;# 
  6693     011E                     TX1STA          equ	286	;# 
  6694     011E                     TXSTA1          equ	286	;# 
  6695     011E                     TXSTA           equ	286	;# 
  6696     011F                     BAUD1CON        equ	287	;# 
  6697     011F                     BAUDCON1        equ	287	;# 
  6698     011F                     BAUDCTL1        equ	287	;# 
  6699     011F                     BAUDCON         equ	287	;# 
  6700     011F                     BAUDCTL         equ	287	;# 
  6701     018C                     SSP1BUF         equ	396	;# 
  6702     018D                     SSP1ADD         equ	397	;# 
  6703     018E                     SSP1MSK         equ	398	;# 
  6704     018F                     SSP1STAT        equ	399	;# 
  6705     0190                     SSP1CON1        equ	400	;# 
  6706     0191                     SSP1CON2        equ	401	;# 
  6707     0192                     SSP1CON3        equ	402	;# 
  6708     0196                     SSP2BUF         equ	406	;# 
  6709     0197                     SSP2ADD         equ	407	;# 
  6710     0198                     SSP2MSK         equ	408	;# 
  6711     0199                     SSP2STAT        equ	409	;# 
  6712     019A                     SSP2CON1        equ	410	;# 
  6713     019B                     SSP2CON2        equ	411	;# 
  6714     019C                     SSP2CON3        equ	412	;# 
  6715     020C                     TMR1            equ	524	;# 
  6716     020C                     TMR1L           equ	524	;# 
  6717     020D                     TMR1H           equ	525	;# 
  6718     020E                     T1CON           equ	526	;# 
  6719     020E                     TMR1CON         equ	526	;# 
  6720     020F                     T1GCON          equ	527	;# 
  6721     020F                     TMR1GCON        equ	527	;# 
  6722     0210                     T1GATE          equ	528	;# 
  6723     0210                     TMR1GATE        equ	528	;# 
  6724     0211                     T1CLK           equ	529	;# 
  6725     0211                     TMR1CLK         equ	529	;# 
  6726     0211                     PR1             equ	529	;# 
  6727     0212                     TMR3            equ	530	;# 
  6728     0212                     TMR3L           equ	530	;# 
  6729     0213                     TMR3H           equ	531	;# 
  6730     0214                     T3CON           equ	532	;# 
  6731     0214                     TMR3CON         equ	532	;# 
  6732     0215                     T3GCON          equ	533	;# 
  6733     0215                     TMR3GCON        equ	533	;# 
  6734     0216                     T3GATE          equ	534	;# 
  6735     0216                     TMR3GATE        equ	534	;# 
  6736     0217                     T3CLK           equ	535	;# 
  6737     0217                     TMR3CLK         equ	535	;# 
  6738     0217                     PR3             equ	535	;# 
  6739     0218                     TMR5            equ	536	;# 
  6740     0218                     TMR5L           equ	536	;# 
  6741     0219                     TMR5H           equ	537	;# 
  6742     021A                     T5CON           equ	538	;# 
  6743     021A                     TMR5CON         equ	538	;# 
  6744     021B                     T5GCON          equ	539	;# 
  6745     021B                     TMR5GCON        equ	539	;# 
  6746     021C                     T5GATE          equ	540	;# 
  6747     021C                     TMR5GATE        equ	540	;# 
  6748     021D                     T5CLK           equ	541	;# 
  6749     021D                     TMR5CLK         equ	541	;# 
  6750     021D                     PR5             equ	541	;# 
  6751     021E                     CCPTMRS0        equ	542	;# 
  6752     021F                     CCPTMRS1        equ	543	;# 
  6753     028C                     T2TMR           equ	652	;# 
  6754     028C                     TMR2            equ	652	;# 
  6755     028D                     T2PR            equ	653	;# 
  6756     028D                     PR2             equ	653	;# 
  6757     028E                     T2CON           equ	654	;# 
  6758     028F                     T2HLT           equ	655	;# 
  6759     0290                     T2CLKCON        equ	656	;# 
  6760     0291                     T2RST           equ	657	;# 
  6761     0292                     T4TMR           equ	658	;# 
  6762     0292                     TMR4            equ	658	;# 
  6763     0293                     T4PR            equ	659	;# 
  6764     0293                     PR4             equ	659	;# 
  6765     0294                     T4CON           equ	660	;# 
  6766     0295                     T4HLT           equ	661	;# 
  6767     0296                     T4CLKCON        equ	662	;# 
  6768     0297                     T4RST           equ	663	;# 
  6769     0298                     T6TMR           equ	664	;# 
  6770     0298                     TMR6            equ	664	;# 
  6771     0299                     T6PR            equ	665	;# 
  6772     0299                     PR6             equ	665	;# 
  6773     029A                     T6CON           equ	666	;# 
  6774     029B                     T6HLT           equ	667	;# 
  6775     029C                     T6CLKCON        equ	668	;# 
  6776     029D                     T6RST           equ	669	;# 
  6777     029F                     ADCPCON0        equ	671	;# 
  6778     030C                     CCPR1           equ	780	;# 
  6779     030C                     CCPR1L          equ	780	;# 
  6780     030D                     CCPR1H          equ	781	;# 
  6781     030E                     CCP1CON         equ	782	;# 
  6782     030F                     CCP1CAP         equ	783	;# 
  6783     0310                     CCPR2           equ	784	;# 
  6784     0310                     CCPR2L          equ	784	;# 
  6785     0311                     CCPR2H          equ	785	;# 
  6786     0312                     CCP2CON         equ	786	;# 
  6787     0313                     CCP2CAP         equ	787	;# 
  6788     0314                     CCPR3           equ	788	;# 
  6789     0314                     CCPR3L          equ	788	;# 
  6790     0315                     CCPR3H          equ	789	;# 
  6791     0316                     CCP3CON         equ	790	;# 
  6792     0317                     CCP3CAP         equ	791	;# 
  6793     0318                     CCPR4           equ	792	;# 
  6794     0318                     CCPR4L          equ	792	;# 
  6795     0319                     CCPR4H          equ	793	;# 
  6796     031A                     CCP4CON         equ	794	;# 
  6797     031B                     CCP4CAP         equ	795	;# 
  6798     031C                     CCPR5           equ	796	;# 
  6799     031C                     CCPR5L          equ	796	;# 
  6800     031D                     CCPR5H          equ	797	;# 
  6801     031E                     CCP5CON         equ	798	;# 
  6802     031F                     CCP5CAP         equ	799	;# 
  6803     038C                     PWM6DC          equ	908	;# 
  6804     038C                     PWM6DCL         equ	908	;# 
  6805     038D                     PWM6DCH         equ	909	;# 
  6806     038E                     PWM6CON         equ	910	;# 
  6807     0390                     PWM7DC          equ	912	;# 
  6808     0390                     PWM7DCL         equ	912	;# 
  6809     0391                     PWM7DCH         equ	913	;# 
  6810     0392                     PWM7CON         equ	914	;# 
  6811     048C                     SMT1TMR         equ	1164	;# 
  6812     048C                     SMT1TMRL        equ	1164	;# 
  6813     048D                     SMT1TMRH        equ	1165	;# 
  6814     048E                     SMT1TMRU        equ	1166	;# 
  6815     048F                     SMT1CPR         equ	1167	;# 
  6816     048F                     SMT1CPRL        equ	1167	;# 
  6817     0490                     SMT1CPRH        equ	1168	;# 
  6818     0491                     SMT1CPRU        equ	1169	;# 
  6819     0492                     SMT1CPW         equ	1170	;# 
  6820     0492                     SMT1CPWL        equ	1170	;# 
  6821     0493                     SMT1CPWH        equ	1171	;# 
  6822     0494                     SMT1CPWU        equ	1172	;# 
  6823     0495                     SMT1PR          equ	1173	;# 
  6824     0495                     SMT1PRL         equ	1173	;# 
  6825     0496                     SMT1PRH         equ	1174	;# 
  6826     0497                     SMT1PRU         equ	1175	;# 
  6827     0498                     SMT1CON0        equ	1176	;# 
  6828     0499                     SMT1CON1        equ	1177	;# 
  6829     049A                     SMT1STAT        equ	1178	;# 
  6830     049B                     SMT1CLK         equ	1179	;# 
  6831     049C                     SMT1SIG         equ	1180	;# 
  6832     049D                     SMT1WIN         equ	1181	;# 
  6833     050C                     SMT2TMR         equ	1292	;# 
  6834     050C                     SMT2TMRL        equ	1292	;# 
  6835     050D                     SMT2TMRH        equ	1293	;# 
  6836     050E                     SMT2TMRU        equ	1294	;# 
  6837     050F                     SMT2CPR         equ	1295	;# 
  6838     050F                     SMT2CPRL        equ	1295	;# 
  6839     0510                     SMT2CPRH        equ	1296	;# 
  6840     0511                     SMT2CPRU        equ	1297	;# 
  6841     0512                     SMT2CPW         equ	1298	;# 
  6842     0512                     SMT2CPWL        equ	1298	;# 
  6843     0513                     SMT2CPWH        equ	1299	;# 
  6844     0514                     SMT2CPWU        equ	1300	;# 
  6845     0515                     SMT2PR          equ	1301	;# 
  6846     0515                     SMT2PRL         equ	1301	;# 
  6847     0516                     SMT2PRH         equ	1302	;# 
  6848     0517                     SMT2PRU         equ	1303	;# 
  6849     0518                     SMT2CON0        equ	1304	;# 
  6850     0519                     SMT2CON1        equ	1305	;# 
  6851     051A                     SMT2STAT        equ	1306	;# 
  6852     051B                     SMT2CLK         equ	1307	;# 
  6853     051C                     SMT2SIG         equ	1308	;# 
  6854     051D                     SMT2WIN         equ	1309	;# 
  6855     058C                     NCO1ACC         equ	1420	;# 
  6856     058C                     NCO1ACCL        equ	1420	;# 
  6857     058D                     NCO1ACCH        equ	1421	;# 
  6858     058E                     NCO1ACCU        equ	1422	;# 
  6859     058F                     NCO1INC         equ	1423	;# 
  6860     058F                     NCO1INCL        equ	1423	;# 
  6861     0590                     NCO1INCH        equ	1424	;# 
  6862     0591                     NCO1INCU        equ	1425	;# 
  6863     0592                     NCO1CON         equ	1426	;# 
  6864     0593                     NCO1CLK         equ	1427	;# 
  6865     059C                     TMR0L           equ	1436	;# 
  6866     059C                     TMR0            equ	1436	;# 
  6867     059D                     TMR0H           equ	1437	;# 
  6868     059D                     PR0             equ	1437	;# 
  6869     059E                     T0CON0          equ	1438	;# 
  6870     059F                     T0CON1          equ	1439	;# 
  6871     060C                     CWG1CLK         equ	1548	;# 
  6872     060C                     CWG1CLKCON      equ	1548	;# 
  6873     060D                     CWG1ISM         equ	1549	;# 
  6874     060D                     CWG1DAT         equ	1549	;# 
  6875     060E                     CWG1DBR         equ	1550	;# 
  6876     060F                     CWG1DBF         equ	1551	;# 
  6877     0610                     CWG1CON0        equ	1552	;# 
  6878     0611                     CWG1CON1        equ	1553	;# 
  6879     0612                     CWG1AS0         equ	1554	;# 
  6880     0613                     CWG1AS1         equ	1555	;# 
  6881     0614                     CWG1STR         equ	1556	;# 
  6882     0616                     CWG2CLK         equ	1558	;# 
  6883     0616                     CWG2CLKCON      equ	1558	;# 
  6884     0617                     CWG2ISM         equ	1559	;# 
  6885     0617                     CWG2DAT         equ	1559	;# 
  6886     0618                     CWG2DBR         equ	1560	;# 
  6887     0619                     CWG2DBF         equ	1561	;# 
  6888     061A                     CWG2CON0        equ	1562	;# 
  6889     061B                     CWG2CON1        equ	1563	;# 
  6890     061C                     CWG2AS0         equ	1564	;# 
  6891     061D                     CWG2AS1         equ	1565	;# 
  6892     061E                     CWG2STR         equ	1566	;# 
  6893     068C                     CWG3CLK         equ	1676	;# 
  6894     068C                     CWG3CLKCON      equ	1676	;# 
  6895     068D                     CWG3ISM         equ	1677	;# 
  6896     068D                     CWG3DAT         equ	1677	;# 
  6897     068E                     CWG3DBR         equ	1678	;# 
  6898     068F                     CWG3DBF         equ	1679	;# 
  6899     0690                     CWG3CON0        equ	1680	;# 
  6900     0691                     CWG3CON1        equ	1681	;# 
  6901     0692                     CWG3AS0         equ	1682	;# 
  6902     0693                     CWG3AS1         equ	1683	;# 
  6903     0694                     CWG3STR         equ	1684	;# 
  6904     070C                     PIR0            equ	1804	;# 
  6905     070D                     PIR1            equ	1805	;# 
  6906     070E                     PIR2            equ	1806	;# 
  6907     070F                     PIR3            equ	1807	;# 
  6908     0710                     PIR4            equ	1808	;# 
  6909     0711                     PIR5            equ	1809	;# 
  6910     0712                     PIR6            equ	1810	;# 
  6911     0713                     PIR7            equ	1811	;# 
  6912     0714                     PIR8            equ	1812	;# 
  6913     0716                     PIE0            equ	1814	;# 
  6914     0717                     PIE1            equ	1815	;# 
  6915     0718                     PIE2            equ	1816	;# 
  6916     0719                     PIE3            equ	1817	;# 
  6917     071A                     PIE4            equ	1818	;# 
  6918     071B                     PIE5            equ	1819	;# 
  6919     071C                     PIE6            equ	1820	;# 
  6920     071D                     PIE7            equ	1821	;# 
  6921     071E                     PIE8            equ	1822	;# 
  6922     0796                     PMD0            equ	1942	;# 
  6923     0797                     PMD1            equ	1943	;# 
  6924     0798                     PMD2            equ	1944	;# 
  6925     0799                     PMD3            equ	1945	;# 
  6926     079A                     PMD4            equ	1946	;# 
  6927     079B                     PMD5            equ	1947	;# 
  6928     079C                     PMD6            equ	1948	;# 
  6929     079D                     PMD7            equ	1949	;# 
  6930     080C                     WDTCON0         equ	2060	;# 
  6931     080D                     WDTCON1         equ	2061	;# 
  6932     080E                     WDTPSL          equ	2062	;# 
  6933     080F                     WDTPSH          equ	2063	;# 
  6934     0810                     WDTTMR          equ	2064	;# 
  6935     0811                     BORCON          equ	2065	;# 
  6936     0813                     PCON0           equ	2067	;# 
  6937     0814                     PCON1           equ	2068	;# 
  6938     081A                     NVMADR          equ	2074	;# 
  6939     081A                     NVMADRL         equ	2074	;# 
  6940     081B                     NVMADRH         equ	2075	;# 
  6941     081C                     NVMDAT          equ	2076	;# 
  6942     081C                     NVMDATL         equ	2076	;# 
  6943     081D                     NVMDATH         equ	2077	;# 
  6944     081E                     NVMCON1         equ	2078	;# 
  6945     081F                     NVMCON2         equ	2079	;# 
  6946     088C                     CPUDOZE         equ	2188	;# 
  6947     088D                     OSCCON1         equ	2189	;# 
  6948     088E                     OSCCON2         equ	2190	;# 
  6949     088F                     OSCCON3         equ	2191	;# 
  6950     0890                     OSCSTAT         equ	2192	;# 
  6951     0891                     OSCEN           equ	2193	;# 
  6952     0892                     OSCTUNE         equ	2194	;# 
  6953     0893                     OSCFRQ          equ	2195	;# 
  6954     0895                     CLKRCON         equ	2197	;# 
  6955     0896                     CLKRCLK         equ	2198	;# 
  6956     0897                     MD1CON0         equ	2199	;# 
  6957     0898                     MD1CON1         equ	2200	;# 
  6958     0899                     MD1SRC          equ	2201	;# 
  6959     089A                     MD1CARL         equ	2202	;# 
  6960     089B                     MD1CARH         equ	2203	;# 
  6961     090C                     FVRCON          equ	2316	;# 
  6962     090E                     DAC1CON0        equ	2318	;# 
  6963     090F                     DAC1CON1        equ	2319	;# 
  6964     091F                     ZCDCON          equ	2335	;# 
  6965     098F                     CMOUT           equ	2447	;# 
  6966     098F                     CMSTAT          equ	2447	;# 
  6967     0990                     CM1CON0         equ	2448	;# 
  6968     0991                     CM1CON1         equ	2449	;# 
  6969     0992                     CM1NCH          equ	2450	;# 
  6970     0993                     CM1PCH          equ	2451	;# 
  6971     0994                     CM2CON0         equ	2452	;# 
  6972     0995                     CM2CON1         equ	2453	;# 
  6973     0996                     CM2NCH          equ	2454	;# 
  6974     0997                     CM2PCH          equ	2455	;# 
  6975     0A19                     RC2REG          equ	2585	;# 
  6976     0A19                     RCREG2          equ	2585	;# 
  6977     0A1A                     TX2REG          equ	2586	;# 
  6978     0A1A                     TXREG2          equ	2586	;# 
  6979     0A1B                     SP2BRG          equ	2587	;# 
  6980     0A1B                     SP2BRGL         equ	2587	;# 
  6981     0A1B                     SPBRG2          equ	2587	;# 
  6982     0A1C                     SP2BRGH         equ	2588	;# 
  6983     0A1C                     SPBRGH2         equ	2588	;# 
  6984     0A1D                     RC2STA          equ	2589	;# 
  6985     0A1D                     RCSTA2          equ	2589	;# 
  6986     0A1E                     TX2STA          equ	2590	;# 
  6987     0A1E                     TXSTA2          equ	2590	;# 
  6988     0A1F                     BAUD2CON        equ	2591	;# 
  6989     0A1F                     BAUDCON2        equ	2591	;# 
  6990     0A1F                     BAUDCTL2        equ	2591	;# 
  6991     1E0F                     CLCDATA         equ	7695	;# 
  6992     1E10                     CLC1CON         equ	7696	;# 
  6993     1E11                     CLC1POL         equ	7697	;# 
  6994     1E12                     CLC1SEL0        equ	7698	;# 
  6995     1E13                     CLC1SEL1        equ	7699	;# 
  6996     1E14                     CLC1SEL2        equ	7700	;# 
  6997     1E15                     CLC1SEL3        equ	7701	;# 
  6998     1E16                     CLC1GLS0        equ	7702	;# 
  6999     1E17                     CLC1GLS1        equ	7703	;# 
  7000     1E18                     CLC1GLS2        equ	7704	;# 
  7001     1E19                     CLC1GLS3        equ	7705	;# 
  7002     1E1A                     CLC2CON         equ	7706	;# 
  7003     1E1B                     CLC2POL         equ	7707	;# 
  7004     1E1C                     CLC2SEL0        equ	7708	;# 
  7005     1E1D                     CLC2SEL1        equ	7709	;# 
  7006     1E1E                     CLC2SEL2        equ	7710	;# 
  7007     1E1F                     CLC2SEL3        equ	7711	;# 
  7008     1E20                     CLC2GLS0        equ	7712	;# 
  7009     1E21                     CLC2GLS1        equ	7713	;# 
  7010     1E22                     CLC2GLS2        equ	7714	;# 
  7011     1E23                     CLC2GLS3        equ	7715	;# 
  7012     1E24                     CLC3CON         equ	7716	;# 
  7013     1E25                     CLC3POL         equ	7717	;# 
  7014     1E26                     CLC3SEL0        equ	7718	;# 
  7015     1E27                     CLC3SEL1        equ	7719	;# 
  7016     1E28                     CLC3SEL2        equ	7720	;# 
  7017     1E29                     CLC3SEL3        equ	7721	;# 
  7018     1E2A                     CLC3GLS0        equ	7722	;# 
  7019     1E2B                     CLC3GLS1        equ	7723	;# 
  7020     1E2C                     CLC3GLS2        equ	7724	;# 
  7021     1E2D                     CLC3GLS3        equ	7725	;# 
  7022     1E2E                     CLC4CON         equ	7726	;# 
  7023     1E2F                     CLC4POL         equ	7727	;# 
  7024     1E30                     CLC4SEL0        equ	7728	;# 
  7025     1E31                     CLC4SEL1        equ	7729	;# 
  7026     1E32                     CLC4SEL2        equ	7730	;# 
  7027     1E33                     CLC4SEL3        equ	7731	;# 
  7028     1E34                     CLC4GLS0        equ	7732	;# 
  7029     1E35                     CLC4GLS1        equ	7733	;# 
  7030     1E36                     CLC4GLS2        equ	7734	;# 
  7031     1E37                     CLC4GLS3        equ	7735	;# 
  7032     1E8F                     PPSLOCK         equ	7823	;# 
  7033     1E90                     INTPPS          equ	7824	;# 
  7034     1E91                     T0CKIPPS        equ	7825	;# 
  7035     1E92                     T1CKIPPS        equ	7826	;# 
  7036     1E93                     T1GPPS          equ	7827	;# 
  7037     1E94                     T3CKIPPS        equ	7828	;# 
  7038     1E95                     T3GPPS          equ	7829	;# 
  7039     1E96                     T5CKIPPS        equ	7830	;# 
  7040     1E97                     T5GPPS          equ	7831	;# 
  7041     1E9C                     T2INPPS         equ	7836	;# 
  7042     1E9D                     T4INPPS         equ	7837	;# 
  7043     1E9E                     T6INPPS         equ	7838	;# 
  7044     1EA1                     CCP1PPS         equ	7841	;# 
  7045     1EA2                     CCP2PPS         equ	7842	;# 
  7046     1EA3                     CCP3PPS         equ	7843	;# 
  7047     1EA4                     CCP4PPS         equ	7844	;# 
  7048     1EA5                     CCP5PPS         equ	7845	;# 
  7049     1EA9                     SMT1WINPPS      equ	7849	;# 
  7050     1EAA                     SMT1SIGPPS      equ	7850	;# 
  7051     1EAB                     SMT2WINPPS      equ	7851	;# 
  7052     1EAC                     SMT2SIGPPS      equ	7852	;# 
  7053     1EB1                     CWG1PPS         equ	7857	;# 
  7054     1EB2                     CWG2PPS         equ	7858	;# 
  7055     1EB3                     CWG3PPS         equ	7859	;# 
  7056     1EB8                     MDCARLPPS       equ	7864	;# 
  7057     1EB9                     MDCARHPPS       equ	7865	;# 
  7058     1EBA                     MDSRCPPS        equ	7866	;# 
  7059     1EBB                     CLCIN0PPS       equ	7867	;# 
  7060     1EBC                     CLCIN1PPS       equ	7868	;# 
  7061     1EBD                     CLCIN2PPS       equ	7869	;# 
  7062     1EBE                     CLCIN3PPS       equ	7870	;# 
  7063     1EC3                     ADACTPPS        equ	7875	;# 
  7064     1EC5                     SSP1CLKPPS      equ	7877	;# 
  7065     1EC6                     SSP1DATPPS      equ	7878	;# 
  7066     1EC7                     SSP1SSPPS       equ	7879	;# 
  7067     1EC8                     SSP2CLKPPS      equ	7880	;# 
  7068     1EC9                     SSP2DATPPS      equ	7881	;# 
  7069     1ECA                     SSP2SSPPS       equ	7882	;# 
  7070     1ECB                     RX1PPS          equ	7883	;# 
  7071     1ECC                     CK1PPS          equ	7884	;# 
  7072     1ECD                     RX2PPS          equ	7885	;# 
  7073     1ECE                     CK2PPS          equ	7886	;# 
  7074     1F10                     RA0PPS          equ	7952	;# 
  7075     1F11                     RA1PPS          equ	7953	;# 
  7076     1F12                     RA2PPS          equ	7954	;# 
  7077     1F13                     RA3PPS          equ	7955	;# 
  7078     1F14                     RA4PPS          equ	7956	;# 
  7079     1F15                     RA5PPS          equ	7957	;# 
  7080     1F16                     RA6PPS          equ	7958	;# 
  7081     1F17                     RA7PPS          equ	7959	;# 
  7082     1F18                     RB0PPS          equ	7960	;# 
  7083     1F19                     RB1PPS          equ	7961	;# 
  7084     1F1A                     RB2PPS          equ	7962	;# 
  7085     1F1B                     RB3PPS          equ	7963	;# 
  7086     1F1C                     RB4PPS          equ	7964	;# 
  7087     1F1D                     RB5PPS          equ	7965	;# 
  7088     1F1E                     RB6PPS          equ	7966	;# 
  7089     1F1F                     RB7PPS          equ	7967	;# 
  7090     1F20                     RC0PPS          equ	7968	;# 
  7091     1F21                     RC1PPS          equ	7969	;# 
  7092     1F22                     RC2PPS          equ	7970	;# 
  7093     1F23                     RC3PPS          equ	7971	;# 
  7094     1F24                     RC4PPS          equ	7972	;# 
  7095     1F25                     RC5PPS          equ	7973	;# 
  7096     1F26                     RC6PPS          equ	7974	;# 
  7097     1F27                     RC7PPS          equ	7975	;# 
  7098     1F38                     ANSELA          equ	7992	;# 
  7099     1F39                     WPUA            equ	7993	;# 
  7100     1F3A                     ODCONA          equ	7994	;# 
  7101     1F3B                     SLRCONA         equ	7995	;# 
  7102     1F3C                     INLVLA          equ	7996	;# 
  7103     1F3D                     IOCAP           equ	7997	;# 
  7104     1F3E                     IOCAN           equ	7998	;# 
  7105     1F3F                     IOCAF           equ	7999	;# 
  7106     1F43                     ANSELB          equ	8003	;# 
  7107     1F44                     WPUB            equ	8004	;# 
  7108     1F45                     ODCONB          equ	8005	;# 
  7109     1F46                     SLRCONB         equ	8006	;# 
  7110     1F47                     INLVLB          equ	8007	;# 
  7111     1F48                     IOCBP           equ	8008	;# 
  7112     1F49                     IOCBN           equ	8009	;# 
  7113     1F4A                     IOCBF           equ	8010	;# 
  7114     1F4E                     ANSELC          equ	8014	;# 
  7115     1F4F                     WPUC            equ	8015	;# 
  7116     1F50                     ODCONC          equ	8016	;# 
  7117     1F51                     SLRCONC         equ	8017	;# 
  7118     1F52                     INLVLC          equ	8018	;# 
  7119     1F53                     IOCCP           equ	8019	;# 
  7120     1F54                     IOCCN           equ	8020	;# 
  7121     1F55                     IOCCF           equ	8021	;# 
  7122     1F65                     WPUE            equ	8037	;# 
  7123     1F66                     ODCONE          equ	8038	;# 
  7124     1F67                     SLRCONE         equ	8039	;# 
  7125     1F68                     INLVLE          equ	8040	;# 
  7126     1F69                     IOCEP           equ	8041	;# 
  7127     1F6A                     IOCEN           equ	8042	;# 
  7128     1F6B                     IOCEF           equ	8043	;# 
  7129     1FE4                     STATUS_SHAD     equ	8164	;# 
  7130     1FE5                     WREG_SHAD       equ	8165	;# 
  7131     1FE6                     BSR_SHAD        equ	8166	;# 
  7132     1FE7                     PCLATH_SHAD     equ	8167	;# 
  7133     1FE8                     FSR0_SHAD       equ	8168	;# 
  7134     1FE8                     FSR0L_SHAD      equ	8168	;# 
  7135     1FE9                     FSR0H_SHAD      equ	8169	;# 
  7136     1FEA                     FSR1L_SHAD      equ	8170	;# 
  7137     1FEB                     FSR1H_SHAD      equ	8171	;# 
  7138     1FED                     STKPTR          equ	8173	;# 
  7139     1FEE                     TOSL            equ	8174	;# 
  7140     1FEF                     TOSH            equ	8175	;# 
  7141     0000                     INDF0           equ	0	;# 
  7142     0001                     INDF1           equ	1	;# 
  7143     0002                     PCL             equ	2	;# 
  7144     0003                     STATUS          equ	3	;# 
  7145     0004                     FSR0L           equ	4	;# 
  7146     0005                     FSR0H           equ	5	;# 
  7147     0006                     FSR1L           equ	6	;# 
  7148     0007                     FSR1H           equ	7	;# 
  7149     0008                     BSR             equ	8	;# 
  7150     0009                     WREG            equ	9	;# 
  7151     000A                     PCLATH          equ	10	;# 
  7152     000B                     INTCON          equ	11	;# 
  7153     000C                     PORTA           equ	12	;# 
  7154     000D                     PORTB           equ	13	;# 
  7155     000E                     PORTC           equ	14	;# 
  7156     0010                     PORTE           equ	16	;# 
  7157     0012                     TRISA           equ	18	;# 
  7158     0013                     TRISB           equ	19	;# 
  7159     0014                     TRISC           equ	20	;# 
  7160     0016                     TRISE           equ	22	;# 
  7161     0018                     LATA            equ	24	;# 
  7162     0019                     LATB            equ	25	;# 
  7163     001A                     LATC            equ	26	;# 
  7164     008C                     ADLTH           equ	140	;# 
  7165     008C                     ADLTHL          equ	140	;# 
  7166     008D                     ADLTHH          equ	141	;# 
  7167     008E                     ADUTH           equ	142	;# 
  7168     008E                     ADUTHL          equ	142	;# 
  7169     008F                     ADUTHH          equ	143	;# 
  7170     0090                     ADERR           equ	144	;# 
  7171     0090                     ADERRL          equ	144	;# 
  7172     0091                     ADERRH          equ	145	;# 
  7173     0092                     ADSTPT          equ	146	;# 
  7174     0092                     ADSTPTL         equ	146	;# 
  7175     0093                     ADSTPTH         equ	147	;# 
  7176     0094                     ADFLTR          equ	148	;# 
  7177     0094                     ADFLTRL         equ	148	;# 
  7178     0095                     ADFLTRH         equ	149	;# 
  7179     0096                     ADACC           equ	150	;# 
  7180     0096                     ADACCL          equ	150	;# 
  7181     0097                     ADACCH          equ	151	;# 
  7182     0098                     ADACCU          equ	152	;# 
  7183     0099                     ADCNT           equ	153	;# 
  7184     009A                     ADRPT           equ	154	;# 
  7185     009B                     ADPREV          equ	155	;# 
  7186     009B                     ADPREVL         equ	155	;# 
  7187     009C                     ADPREVH         equ	156	;# 
  7188     009D                     ADRES           equ	157	;# 
  7189     009D                     ADRESL          equ	157	;# 
  7190     009E                     ADRESH          equ	158	;# 
  7191     009F                     ADPCH           equ	159	;# 
  7192     010C                     ADACQ           equ	268	;# 
  7193     010C                     ADACQL          equ	268	;# 
  7194     010D                     ADACQH          equ	269	;# 
  7195     010E                     ADCAP           equ	270	;# 
  7196     010F                     ADPRE           equ	271	;# 
  7197     010F                     ADPREL          equ	271	;# 
  7198     0110                     ADPREH          equ	272	;# 
  7199     0111                     ADCON0          equ	273	;# 
  7200     0112                     ADCON1          equ	274	;# 
  7201     0113                     ADCON2          equ	275	;# 
  7202     0114                     ADCON3          equ	276	;# 
  7203     0115                     ADSTAT          equ	277	;# 
  7204     0116                     ADREF           equ	278	;# 
  7205     0117                     ADACT           equ	279	;# 
  7206     0118                     ADCLK           equ	280	;# 
  7207     0119                     RC1REG          equ	281	;# 
  7208     0119                     RCREG           equ	281	;# 
  7209     0119                     RCREG1          equ	281	;# 
  7210     011A                     TX1REG          equ	282	;# 
  7211     011A                     TXREG1          equ	282	;# 
  7212     011A                     TXREG           equ	282	;# 
  7213     011B                     SP1BRG          equ	283	;# 
  7214     011B                     SPBRG           equ	283	;# 
  7215     011B                     SP1BRGL         equ	283	;# 
  7216     011B                     SPBRG1          equ	283	;# 
  7217     011B                     SPBRGL          equ	283	;# 
  7218     011C                     SP1BRGH         equ	284	;# 
  7219     011C                     SPBRGH          equ	284	;# 
  7220     011C                     SPBRGH1         equ	284	;# 
  7221     011D                     RC1STA          equ	285	;# 
  7222     011D                     RCSTA1          equ	285	;# 
  7223     011D                     RCSTA           equ	285	;# 
  7224     011E                     TX1STA          equ	286	;# 
  7225     011E                     TXSTA1          equ	286	;# 
  7226     011E                     TXSTA           equ	286	;# 
  7227     011F                     BAUD1CON        equ	287	;# 
  7228     011F                     BAUDCON1        equ	287	;# 
  7229     011F                     BAUDCTL1        equ	287	;# 
  7230     011F                     BAUDCON         equ	287	;# 
  7231     011F                     BAUDCTL         equ	287	;# 
  7232     018C                     SSP1BUF         equ	396	;# 
  7233     018D                     SSP1ADD         equ	397	;# 
  7234     018E                     SSP1MSK         equ	398	;# 
  7235     018F                     SSP1STAT        equ	399	;# 
  7236     0190                     SSP1CON1        equ	400	;# 
  7237     0191                     SSP1CON2        equ	401	;# 
  7238     0192                     SSP1CON3        equ	402	;# 
  7239     0196                     SSP2BUF         equ	406	;# 
  7240     0197                     SSP2ADD         equ	407	;# 
  7241     0198                     SSP2MSK         equ	408	;# 
  7242     0199                     SSP2STAT        equ	409	;# 
  7243     019A                     SSP2CON1        equ	410	;# 
  7244     019B                     SSP2CON2        equ	411	;# 
  7245     019C                     SSP2CON3        equ	412	;# 
  7246     020C                     TMR1            equ	524	;# 
  7247     020C                     TMR1L           equ	524	;# 
  7248     020D                     TMR1H           equ	525	;# 
  7249     020E                     T1CON           equ	526	;# 
  7250     020E                     TMR1CON         equ	526	;# 
  7251     020F                     T1GCON          equ	527	;# 
  7252     020F                     TMR1GCON        equ	527	;# 
  7253     0210                     T1GATE          equ	528	;# 
  7254     0210                     TMR1GATE        equ	528	;# 
  7255     0211                     T1CLK           equ	529	;# 
  7256     0211                     TMR1CLK         equ	529	;# 
  7257     0211                     PR1             equ	529	;# 
  7258     0212                     TMR3            equ	530	;# 
  7259     0212                     TMR3L           equ	530	;# 
  7260     0213                     TMR3H           equ	531	;# 
  7261     0214                     T3CON           equ	532	;# 
  7262     0214                     TMR3CON         equ	532	;# 
  7263     0215                     T3GCON          equ	533	;# 
  7264     0215                     TMR3GCON        equ	533	;# 
  7265     0216                     T3GATE          equ	534	;# 
  7266     0216                     TMR3GATE        equ	534	;# 
  7267     0217                     T3CLK           equ	535	;# 
  7268     0217                     TMR3CLK         equ	535	;# 
  7269     0217                     PR3             equ	535	;# 
  7270     0218                     TMR5            equ	536	;# 
  7271     0218                     TMR5L           equ	536	;# 
  7272     0219                     TMR5H           equ	537	;# 
  7273     021A                     T5CON           equ	538	;# 
  7274     021A                     TMR5CON         equ	538	;# 
  7275     021B                     T5GCON          equ	539	;# 
  7276     021B                     TMR5GCON        equ	539	;# 
  7277     021C                     T5GATE          equ	540	;# 
  7278     021C                     TMR5GATE        equ	540	;# 
  7279     021D                     T5CLK           equ	541	;# 
  7280     021D                     TMR5CLK         equ	541	;# 
  7281     021D                     PR5             equ	541	;# 
  7282     021E                     CCPTMRS0        equ	542	;# 
  7283     021F                     CCPTMRS1        equ	543	;# 
  7284     028C                     T2TMR           equ	652	;# 
  7285     028C                     TMR2            equ	652	;# 
  7286     028D                     T2PR            equ	653	;# 
  7287     028D                     PR2             equ	653	;# 
  7288     028E                     T2CON           equ	654	;# 
  7289     028F                     T2HLT           equ	655	;# 
  7290     0290                     T2CLKCON        equ	656	;# 
  7291     0291                     T2RST           equ	657	;# 
  7292     0292                     T4TMR           equ	658	;# 
  7293     0292                     TMR4            equ	658	;# 
  7294     0293                     T4PR            equ	659	;# 
  7295     0293                     PR4             equ	659	;# 
  7296     0294                     T4CON           equ	660	;# 
  7297     0295                     T4HLT           equ	661	;# 
  7298     0296                     T4CLKCON        equ	662	;# 
  7299     0297                     T4RST           equ	663	;# 
  7300     0298                     T6TMR           equ	664	;# 
  7301     0298                     TMR6            equ	664	;# 
  7302     0299                     T6PR            equ	665	;# 
  7303     0299                     PR6             equ	665	;# 
  7304     029A                     T6CON           equ	666	;# 
  7305     029B                     T6HLT           equ	667	;# 
  7306     029C                     T6CLKCON        equ	668	;# 
  7307     029D                     T6RST           equ	669	;# 
  7308     029F                     ADCPCON0        equ	671	;# 
  7309     030C                     CCPR1           equ	780	;# 
  7310     030C                     CCPR1L          equ	780	;# 
  7311     030D                     CCPR1H          equ	781	;# 
  7312     030E                     CCP1CON         equ	782	;# 
  7313     030F                     CCP1CAP         equ	783	;# 
  7314     0310                     CCPR2           equ	784	;# 
  7315     0310                     CCPR2L          equ	784	;# 
  7316     0311                     CCPR2H          equ	785	;# 
  7317     0312                     CCP2CON         equ	786	;# 
  7318     0313                     CCP2CAP         equ	787	;# 
  7319     0314                     CCPR3           equ	788	;# 
  7320     0314                     CCPR3L          equ	788	;# 
  7321     0315                     CCPR3H          equ	789	;# 
  7322     0316                     CCP3CON         equ	790	;# 
  7323     0317                     CCP3CAP         equ	791	;# 
  7324     0318                     CCPR4           equ	792	;# 
  7325     0318                     CCPR4L          equ	792	;# 
  7326     0319                     CCPR4H          equ	793	;# 
  7327     031A                     CCP4CON         equ	794	;# 
  7328     031B                     CCP4CAP         equ	795	;# 
  7329     031C                     CCPR5           equ	796	;# 
  7330     031C                     CCPR5L          equ	796	;# 
  7331     031D                     CCPR5H          equ	797	;# 
  7332     031E                     CCP5CON         equ	798	;# 
  7333     031F                     CCP5CAP         equ	799	;# 
  7334     038C                     PWM6DC          equ	908	;# 
  7335     038C                     PWM6DCL         equ	908	;# 
  7336     038D                     PWM6DCH         equ	909	;# 
  7337     038E                     PWM6CON         equ	910	;# 
  7338     0390                     PWM7DC          equ	912	;# 
  7339     0390                     PWM7DCL         equ	912	;# 
  7340     0391                     PWM7DCH         equ	913	;# 
  7341     0392                     PWM7CON         equ	914	;# 
  7342     048C                     SMT1TMR         equ	1164	;# 
  7343     048C                     SMT1TMRL        equ	1164	;# 
  7344     048D                     SMT1TMRH        equ	1165	;# 
  7345     048E                     SMT1TMRU        equ	1166	;# 
  7346     048F                     SMT1CPR         equ	1167	;# 
  7347     048F                     SMT1CPRL        equ	1167	;# 
  7348     0490                     SMT1CPRH        equ	1168	;# 
  7349     0491                     SMT1CPRU        equ	1169	;# 
  7350     0492                     SMT1CPW         equ	1170	;# 
  7351     0492                     SMT1CPWL        equ	1170	;# 
  7352     0493                     SMT1CPWH        equ	1171	;# 
  7353     0494                     SMT1CPWU        equ	1172	;# 
  7354     0495                     SMT1PR          equ	1173	;# 
  7355     0495                     SMT1PRL         equ	1173	;# 
  7356     0496                     SMT1PRH         equ	1174	;# 
  7357     0497                     SMT1PRU         equ	1175	;# 
  7358     0498                     SMT1CON0        equ	1176	;# 
  7359     0499                     SMT1CON1        equ	1177	;# 
  7360     049A                     SMT1STAT        equ	1178	;# 
  7361     049B                     SMT1CLK         equ	1179	;# 
  7362     049C                     SMT1SIG         equ	1180	;# 
  7363     049D                     SMT1WIN         equ	1181	;# 
  7364     050C                     SMT2TMR         equ	1292	;# 
  7365     050C                     SMT2TMRL        equ	1292	;# 
  7366     050D                     SMT2TMRH        equ	1293	;# 
  7367     050E                     SMT2TMRU        equ	1294	;# 
  7368     050F                     SMT2CPR         equ	1295	;# 
  7369     050F                     SMT2CPRL        equ	1295	;# 
  7370     0510                     SMT2CPRH        equ	1296	;# 
  7371     0511                     SMT2CPRU        equ	1297	;# 
  7372     0512                     SMT2CPW         equ	1298	;# 
  7373     0512                     SMT2CPWL        equ	1298	;# 
  7374     0513                     SMT2CPWH        equ	1299	;# 
  7375     0514                     SMT2CPWU        equ	1300	;# 
  7376     0515                     SMT2PR          equ	1301	;# 
  7377     0515                     SMT2PRL         equ	1301	;# 
  7378     0516                     SMT2PRH         equ	1302	;# 
  7379     0517                     SMT2PRU         equ	1303	;# 
  7380     0518                     SMT2CON0        equ	1304	;# 
  7381     0519                     SMT2CON1        equ	1305	;# 
  7382     051A                     SMT2STAT        equ	1306	;# 
  7383     051B                     SMT2CLK         equ	1307	;# 
  7384     051C                     SMT2SIG         equ	1308	;# 
  7385     051D                     SMT2WIN         equ	1309	;# 
  7386     058C                     NCO1ACC         equ	1420	;# 
  7387     058C                     NCO1ACCL        equ	1420	;# 
  7388     058D                     NCO1ACCH        equ	1421	;# 
  7389     058E                     NCO1ACCU        equ	1422	;# 
  7390     058F                     NCO1INC         equ	1423	;# 
  7391     058F                     NCO1INCL        equ	1423	;# 
  7392     0590                     NCO1INCH        equ	1424	;# 
  7393     0591                     NCO1INCU        equ	1425	;# 
  7394     0592                     NCO1CON         equ	1426	;# 
  7395     0593                     NCO1CLK         equ	1427	;# 
  7396     059C                     TMR0L           equ	1436	;# 
  7397     059C                     TMR0            equ	1436	;# 
  7398     059D                     TMR0H           equ	1437	;# 
  7399     059D                     PR0             equ	1437	;# 
  7400     059E                     T0CON0          equ	1438	;# 
  7401     059F                     T0CON1          equ	1439	;# 
  7402     060C                     CWG1CLK         equ	1548	;# 
  7403     060C                     CWG1CLKCON      equ	1548	;# 
  7404     060D                     CWG1ISM         equ	1549	;# 
  7405     060D                     CWG1DAT         equ	1549	;# 
  7406     060E                     CWG1DBR         equ	1550	;# 
  7407     060F                     CWG1DBF         equ	1551	;# 
  7408     0610                     CWG1CON0        equ	1552	;# 
  7409     0611                     CWG1CON1        equ	1553	;# 
  7410     0612                     CWG1AS0         equ	1554	;# 
  7411     0613                     CWG1AS1         equ	1555	;# 
  7412     0614                     CWG1STR         equ	1556	;# 
  7413     0616                     CWG2CLK         equ	1558	;# 
  7414     0616                     CWG2CLKCON      equ	1558	;# 
  7415     0617                     CWG2ISM         equ	1559	;# 
  7416     0617                     CWG2DAT         equ	1559	;# 
  7417     0618                     CWG2DBR         equ	1560	;# 
  7418     0619                     CWG2DBF         equ	1561	;# 
  7419     061A                     CWG2CON0        equ	1562	;# 
  7420     061B                     CWG2CON1        equ	1563	;# 
  7421     061C                     CWG2AS0         equ	1564	;# 
  7422     061D                     CWG2AS1         equ	1565	;# 
  7423     061E                     CWG2STR         equ	1566	;# 
  7424     068C                     CWG3CLK         equ	1676	;# 
  7425     068C                     CWG3CLKCON      equ	1676	;# 
  7426     068D                     CWG3ISM         equ	1677	;# 
  7427     068D                     CWG3DAT         equ	1677	;# 
  7428     068E                     CWG3DBR         equ	1678	;# 
  7429     068F                     CWG3DBF         equ	1679	;# 
  7430     0690                     CWG3CON0        equ	1680	;# 
  7431     0691                     CWG3CON1        equ	1681	;# 
  7432     0692                     CWG3AS0         equ	1682	;# 
  7433     0693                     CWG3AS1         equ	1683	;# 
  7434     0694                     CWG3STR         equ	1684	;# 
  7435     070C                     PIR0            equ	1804	;# 
  7436     070D                     PIR1            equ	1805	;# 
  7437     070E                     PIR2            equ	1806	;# 
  7438     070F                     PIR3            equ	1807	;# 
  7439     0710                     PIR4            equ	1808	;# 
  7440     0711                     PIR5            equ	1809	;# 
  7441     0712                     PIR6            equ	1810	;# 
  7442     0713                     PIR7            equ	1811	;# 
  7443     0714                     PIR8            equ	1812	;# 
  7444     0716                     PIE0            equ	1814	;# 
  7445     0717                     PIE1            equ	1815	;# 
  7446     0718                     PIE2            equ	1816	;# 
  7447     0719                     PIE3            equ	1817	;# 
  7448     071A                     PIE4            equ	1818	;# 
  7449     071B                     PIE5            equ	1819	;# 
  7450     071C                     PIE6            equ	1820	;# 
  7451     071D                     PIE7            equ	1821	;# 
  7452     071E                     PIE8            equ	1822	;# 
  7453     0796                     PMD0            equ	1942	;# 
  7454     0797                     PMD1            equ	1943	;# 
  7455     0798                     PMD2            equ	1944	;# 
  7456     0799                     PMD3            equ	1945	;# 
  7457     079A                     PMD4            equ	1946	;# 
  7458     079B                     PMD5            equ	1947	;# 
  7459     079C                     PMD6            equ	1948	;# 
  7460     079D                     PMD7            equ	1949	;# 
  7461     080C                     WDTCON0         equ	2060	;# 
  7462     080D                     WDTCON1         equ	2061	;# 
  7463     080E                     WDTPSL          equ	2062	;# 
  7464     080F                     WDTPSH          equ	2063	;# 
  7465     0810                     WDTTMR          equ	2064	;# 
  7466     0811                     BORCON          equ	2065	;# 
  7467     0813                     PCON0           equ	2067	;# 
  7468     0814                     PCON1           equ	2068	;# 
  7469     081A                     NVMADR          equ	2074	;# 
  7470     081A                     NVMADRL         equ	2074	;# 
  7471     081B                     NVMADRH         equ	2075	;# 
  7472     081C                     NVMDAT          equ	2076	;# 
  7473     081C                     NVMDATL         equ	2076	;# 
  7474     081D                     NVMDATH         equ	2077	;# 
  7475     081E                     NVMCON1         equ	2078	;# 
  7476     081F                     NVMCON2         equ	2079	;# 
  7477     088C                     CPUDOZE         equ	2188	;# 
  7478     088D                     OSCCON1         equ	2189	;# 
  7479     088E                     OSCCON2         equ	2190	;# 
  7480     088F                     OSCCON3         equ	2191	;# 
  7481     0890                     OSCSTAT         equ	2192	;# 
  7482     0891                     OSCEN           equ	2193	;# 
  7483     0892                     OSCTUNE         equ	2194	;# 
  7484     0893                     OSCFRQ          equ	2195	;# 
  7485     0895                     CLKRCON         equ	2197	;# 
  7486     0896                     CLKRCLK         equ	2198	;# 
  7487     0897                     MD1CON0         equ	2199	;# 
  7488     0898                     MD1CON1         equ	2200	;# 
  7489     0899                     MD1SRC          equ	2201	;# 
  7490     089A                     MD1CARL         equ	2202	;# 
  7491     089B                     MD1CARH         equ	2203	;# 
  7492     090C                     FVRCON          equ	2316	;# 
  7493     090E                     DAC1CON0        equ	2318	;# 
  7494     090F                     DAC1CON1        equ	2319	;# 
  7495     091F                     ZCDCON          equ	2335	;# 
  7496     098F                     CMOUT           equ	2447	;# 
  7497     098F                     CMSTAT          equ	2447	;# 
  7498     0990                     CM1CON0         equ	2448	;# 
  7499     0991                     CM1CON1         equ	2449	;# 
  7500     0992                     CM1NCH          equ	2450	;# 
  7501     0993                     CM1PCH          equ	2451	;# 
  7502     0994                     CM2CON0         equ	2452	;# 
  7503     0995                     CM2CON1         equ	2453	;# 
  7504     0996                     CM2NCH          equ	2454	;# 
  7505     0997                     CM2PCH          equ	2455	;# 
  7506     0A19                     RC2REG          equ	2585	;# 
  7507     0A19                     RCREG2          equ	2585	;# 
  7508     0A1A                     TX2REG          equ	2586	;# 
  7509     0A1A                     TXREG2          equ	2586	;# 
  7510     0A1B                     SP2BRG          equ	2587	;# 
  7511     0A1B                     SP2BRGL         equ	2587	;# 
  7512     0A1B                     SPBRG2          equ	2587	;# 
  7513     0A1C                     SP2BRGH         equ	2588	;# 
  7514     0A1C                     SPBRGH2         equ	2588	;# 
  7515     0A1D                     RC2STA          equ	2589	;# 
  7516     0A1D                     RCSTA2          equ	2589	;# 
  7517     0A1E                     TX2STA          equ	2590	;# 
  7518     0A1E                     TXSTA2          equ	2590	;# 
  7519     0A1F                     BAUD2CON        equ	2591	;# 
  7520     0A1F                     BAUDCON2        equ	2591	;# 
  7521     0A1F                     BAUDCTL2        equ	2591	;# 
  7522     1E0F                     CLCDATA         equ	7695	;# 
  7523     1E10                     CLC1CON         equ	7696	;# 
  7524     1E11                     CLC1POL         equ	7697	;# 
  7525     1E12                     CLC1SEL0        equ	7698	;# 
  7526     1E13                     CLC1SEL1        equ	7699	;# 
  7527     1E14                     CLC1SEL2        equ	7700	;# 
  7528     1E15                     CLC1SEL3        equ	7701	;# 
  7529     1E16                     CLC1GLS0        equ	7702	;# 
  7530     1E17                     CLC1GLS1        equ	7703	;# 
  7531     1E18                     CLC1GLS2        equ	7704	;# 
  7532     1E19                     CLC1GLS3        equ	7705	;# 
  7533     1E1A                     CLC2CON         equ	7706	;# 
  7534     1E1B                     CLC2POL         equ	7707	;# 
  7535     1E1C                     CLC2SEL0        equ	7708	;# 
  7536     1E1D                     CLC2SEL1        equ	7709	;# 
  7537     1E1E                     CLC2SEL2        equ	7710	;# 
  7538     1E1F                     CLC2SEL3        equ	7711	;# 
  7539     1E20                     CLC2GLS0        equ	7712	;# 
  7540     1E21                     CLC2GLS1        equ	7713	;# 
  7541     1E22                     CLC2GLS2        equ	7714	;# 
  7542     1E23                     CLC2GLS3        equ	7715	;# 
  7543     1E24                     CLC3CON         equ	7716	;# 
  7544     1E25                     CLC3POL         equ	7717	;# 
  7545     1E26                     CLC3SEL0        equ	7718	;# 
  7546     1E27                     CLC3SEL1        equ	7719	;# 
  7547     1E28                     CLC3SEL2        equ	7720	;# 
  7548     1E29                     CLC3SEL3        equ	7721	;# 
  7549     1E2A                     CLC3GLS0        equ	7722	;# 
  7550     1E2B                     CLC3GLS1        equ	7723	;# 
  7551     1E2C                     CLC3GLS2        equ	7724	;# 
  7552     1E2D                     CLC3GLS3        equ	7725	;# 
  7553     1E2E                     CLC4CON         equ	7726	;# 
  7554     1E2F                     CLC4POL         equ	7727	;# 
  7555     1E30                     CLC4SEL0        equ	7728	;# 
  7556     1E31                     CLC4SEL1        equ	7729	;# 
  7557     1E32                     CLC4SEL2        equ	7730	;# 
  7558     1E33                     CLC4SEL3        equ	7731	;# 
  7559     1E34                     CLC4GLS0        equ	7732	;# 
  7560     1E35                     CLC4GLS1        equ	7733	;# 
  7561     1E36                     CLC4GLS2        equ	7734	;# 
  7562     1E37                     CLC4GLS3        equ	7735	;# 
  7563     1E8F                     PPSLOCK         equ	7823	;# 
  7564     1E90                     INTPPS          equ	7824	;# 
  7565     1E91                     T0CKIPPS        equ	7825	;# 
  7566     1E92                     T1CKIPPS        equ	7826	;# 
  7567     1E93                     T1GPPS          equ	7827	;# 
  7568     1E94                     T3CKIPPS        equ	7828	;# 
  7569     1E95                     T3GPPS          equ	7829	;# 
  7570     1E96                     T5CKIPPS        equ	7830	;# 
  7571     1E97                     T5GPPS          equ	7831	;# 
  7572     1E9C                     T2INPPS         equ	7836	;# 
  7573     1E9D                     T4INPPS         equ	7837	;# 
  7574     1E9E                     T6INPPS         equ	7838	;# 
  7575     1EA1                     CCP1PPS         equ	7841	;# 
  7576     1EA2                     CCP2PPS         equ	7842	;# 
  7577     1EA3                     CCP3PPS         equ	7843	;# 
  7578     1EA4                     CCP4PPS         equ	7844	;# 
  7579     1EA5                     CCP5PPS         equ	7845	;# 
  7580     1EA9                     SMT1WINPPS      equ	7849	;# 
  7581     1EAA                     SMT1SIGPPS      equ	7850	;# 
  7582     1EAB                     SMT2WINPPS      equ	7851	;# 
  7583     1EAC                     SMT2SIGPPS      equ	7852	;# 
  7584     1EB1                     CWG1PPS         equ	7857	;# 
  7585     1EB2                     CWG2PPS         equ	7858	;# 
  7586     1EB3                     CWG3PPS         equ	7859	;# 
  7587     1EB8                     MDCARLPPS       equ	7864	;# 
  7588     1EB9                     MDCARHPPS       equ	7865	;# 
  7589     1EBA                     MDSRCPPS        equ	7866	;# 
  7590     1EBB                     CLCIN0PPS       equ	7867	;# 
  7591     1EBC                     CLCIN1PPS       equ	7868	;# 
  7592     1EBD                     CLCIN2PPS       equ	7869	;# 
  7593     1EBE                     CLCIN3PPS       equ	7870	;# 
  7594     1EC3                     ADACTPPS        equ	7875	;# 
  7595     1EC5                     SSP1CLKPPS      equ	7877	;# 
  7596     1EC6                     SSP1DATPPS      equ	7878	;# 
  7597     1EC7                     SSP1SSPPS       equ	7879	;# 
  7598     1EC8                     SSP2CLKPPS      equ	7880	;# 
  7599     1EC9                     SSP2DATPPS      equ	7881	;# 
  7600     1ECA                     SSP2SSPPS       equ	7882	;# 
  7601     1ECB                     RX1PPS          equ	7883	;# 
  7602     1ECC                     CK1PPS          equ	7884	;# 
  7603     1ECD                     RX2PPS          equ	7885	;# 
  7604     1ECE                     CK2PPS          equ	7886	;# 
  7605     1F10                     RA0PPS          equ	7952	;# 
  7606     1F11                     RA1PPS          equ	7953	;# 
  7607     1F12                     RA2PPS          equ	7954	;# 
  7608     1F13                     RA3PPS          equ	7955	;# 
  7609     1F14                     RA4PPS          equ	7956	;# 
  7610     1F15                     RA5PPS          equ	7957	;# 
  7611     1F16                     RA6PPS          equ	7958	;# 
  7612     1F17                     RA7PPS          equ	7959	;# 
  7613     1F18                     RB0PPS          equ	7960	;# 
  7614     1F19                     RB1PPS          equ	7961	;# 
  7615     1F1A                     RB2PPS          equ	7962	;# 
  7616     1F1B                     RB3PPS          equ	7963	;# 
  7617     1F1C                     RB4PPS          equ	7964	;# 
  7618     1F1D                     RB5PPS          equ	7965	;# 
  7619     1F1E                     RB6PPS          equ	7966	;# 
  7620     1F1F                     RB7PPS          equ	7967	;# 
  7621     1F20                     RC0PPS          equ	7968	;# 
  7622     1F21                     RC1PPS          equ	7969	;# 
  7623     1F22                     RC2PPS          equ	7970	;# 
  7624     1F23                     RC3PPS          equ	7971	;# 
  7625     1F24                     RC4PPS          equ	7972	;# 
  7626     1F25                     RC5PPS          equ	7973	;# 
  7627     1F26                     RC6PPS          equ	7974	;# 
  7628     1F27                     RC7PPS          equ	7975	;# 
  7629     1F38                     ANSELA          equ	7992	;# 
  7630     1F39                     WPUA            equ	7993	;# 
  7631     1F3A                     ODCONA          equ	7994	;# 
  7632     1F3B                     SLRCONA         equ	7995	;# 
  7633     1F3C                     INLVLA          equ	7996	;# 
  7634     1F3D                     IOCAP           equ	7997	;# 
  7635     1F3E                     IOCAN           equ	7998	;# 
  7636     1F3F                     IOCAF           equ	7999	;# 
  7637     1F43                     ANSELB          equ	8003	;# 
  7638     1F44                     WPUB            equ	8004	;# 
  7639     1F45                     ODCONB          equ	8005	;# 
  7640     1F46                     SLRCONB         equ	8006	;# 
  7641     1F47                     INLVLB          equ	8007	;# 
  7642     1F48                     IOCBP           equ	8008	;# 
  7643     1F49                     IOCBN           equ	8009	;# 
  7644     1F4A                     IOCBF           equ	8010	;# 
  7645     1F4E                     ANSELC          equ	8014	;# 
  7646     1F4F                     WPUC            equ	8015	;# 
  7647     1F50                     ODCONC          equ	8016	;# 
  7648     1F51                     SLRCONC         equ	8017	;# 
  7649     1F52                     INLVLC          equ	8018	;# 
  7650     1F53                     IOCCP           equ	8019	;# 
  7651     1F54                     IOCCN           equ	8020	;# 
  7652     1F55                     IOCCF           equ	8021	;# 
  7653     1F65                     WPUE            equ	8037	;# 
  7654     1F66                     ODCONE          equ	8038	;# 
  7655     1F67                     SLRCONE         equ	8039	;# 
  7656     1F68                     INLVLE          equ	8040	;# 
  7657     1F69                     IOCEP           equ	8041	;# 
  7658     1F6A                     IOCEN           equ	8042	;# 
  7659     1F6B                     IOCEF           equ	8043	;# 
  7660     1FE4                     STATUS_SHAD     equ	8164	;# 
  7661     1FE5                     WREG_SHAD       equ	8165	;# 
  7662     1FE6                     BSR_SHAD        equ	8166	;# 
  7663     1FE7                     PCLATH_SHAD     equ	8167	;# 
  7664     1FE8                     FSR0_SHAD       equ	8168	;# 
  7665     1FE8                     FSR0L_SHAD      equ	8168	;# 
  7666     1FE9                     FSR0H_SHAD      equ	8169	;# 
  7667     1FEA                     FSR1L_SHAD      equ	8170	;# 
  7668     1FEB                     FSR1H_SHAD      equ	8171	;# 
  7669     1FED                     STKPTR          equ	8173	;# 
  7670     1FEE                     TOSL            equ	8174	;# 
  7671     1FEF                     TOSH            equ	8175	;# 
  7672     0000                     INDF0           equ	0	;# 
  7673     0001                     INDF1           equ	1	;# 
  7674     0002                     PCL             equ	2	;# 
  7675     0003                     STATUS          equ	3	;# 
  7676     0004                     FSR0L           equ	4	;# 
  7677     0005                     FSR0H           equ	5	;# 
  7678     0006                     FSR1L           equ	6	;# 
  7679     0007                     FSR1H           equ	7	;# 
  7680     0008                     BSR             equ	8	;# 
  7681     0009                     WREG            equ	9	;# 
  7682     000A                     PCLATH          equ	10	;# 
  7683     000B                     INTCON          equ	11	;# 
  7684     000C                     PORTA           equ	12	;# 
  7685     000D                     PORTB           equ	13	;# 
  7686     000E                     PORTC           equ	14	;# 
  7687     0010                     PORTE           equ	16	;# 
  7688     0012                     TRISA           equ	18	;# 
  7689     0013                     TRISB           equ	19	;# 
  7690     0014                     TRISC           equ	20	;# 
  7691     0016                     TRISE           equ	22	;# 
  7692     0018                     LATA            equ	24	;# 
  7693     0019                     LATB            equ	25	;# 
  7694     001A                     LATC            equ	26	;# 
  7695     008C                     ADLTH           equ	140	;# 
  7696     008C                     ADLTHL          equ	140	;# 
  7697     008D                     ADLTHH          equ	141	;# 
  7698     008E                     ADUTH           equ	142	;# 
  7699     008E                     ADUTHL          equ	142	;# 
  7700     008F                     ADUTHH          equ	143	;# 
  7701     0090                     ADERR           equ	144	;# 
  7702     0090                     ADERRL          equ	144	;# 
  7703     0091                     ADERRH          equ	145	;# 
  7704     0092                     ADSTPT          equ	146	;# 
  7705     0092                     ADSTPTL         equ	146	;# 
  7706     0093                     ADSTPTH         equ	147	;# 
  7707     0094                     ADFLTR          equ	148	;# 
  7708     0094                     ADFLTRL         equ	148	;# 
  7709     0095                     ADFLTRH         equ	149	;# 
  7710     0096                     ADACC           equ	150	;# 
  7711     0096                     ADACCL          equ	150	;# 
  7712     0097                     ADACCH          equ	151	;# 
  7713     0098                     ADACCU          equ	152	;# 
  7714     0099                     ADCNT           equ	153	;# 
  7715     009A                     ADRPT           equ	154	;# 
  7716     009B                     ADPREV          equ	155	;# 
  7717     009B                     ADPREVL         equ	155	;# 
  7718     009C                     ADPREVH         equ	156	;# 
  7719     009D                     ADRES           equ	157	;# 
  7720     009D                     ADRESL          equ	157	;# 
  7721     009E                     ADRESH          equ	158	;# 
  7722     009F                     ADPCH           equ	159	;# 
  7723     010C                     ADACQ           equ	268	;# 
  7724     010C                     ADACQL          equ	268	;# 
  7725     010D                     ADACQH          equ	269	;# 
  7726     010E                     ADCAP           equ	270	;# 
  7727     010F                     ADPRE           equ	271	;# 
  7728     010F                     ADPREL          equ	271	;# 
  7729     0110                     ADPREH          equ	272	;# 
  7730     0111                     ADCON0          equ	273	;# 
  7731     0112                     ADCON1          equ	274	;# 
  7732     0113                     ADCON2          equ	275	;# 
  7733     0114                     ADCON3          equ	276	;# 
  7734     0115                     ADSTAT          equ	277	;# 
  7735     0116                     ADREF           equ	278	;# 
  7736     0117                     ADACT           equ	279	;# 
  7737     0118                     ADCLK           equ	280	;# 
  7738     0119                     RC1REG          equ	281	;# 
  7739     0119                     RCREG           equ	281	;# 
  7740     0119                     RCREG1          equ	281	;# 
  7741     011A                     TX1REG          equ	282	;# 
  7742     011A                     TXREG1          equ	282	;# 
  7743     011A                     TXREG           equ	282	;# 
  7744     011B                     SP1BRG          equ	283	;# 
  7745     011B                     SPBRG           equ	283	;# 
  7746     011B                     SP1BRGL         equ	283	;# 
  7747     011B                     SPBRG1          equ	283	;# 
  7748     011B                     SPBRGL          equ	283	;# 
  7749     011C                     SP1BRGH         equ	284	;# 
  7750     011C                     SPBRGH          equ	284	;# 
  7751     011C                     SPBRGH1         equ	284	;# 
  7752     011D                     RC1STA          equ	285	;# 
  7753     011D                     RCSTA1          equ	285	;# 
  7754     011D                     RCSTA           equ	285	;# 
  7755     011E                     TX1STA          equ	286	;# 
  7756     011E                     TXSTA1          equ	286	;# 
  7757     011E                     TXSTA           equ	286	;# 
  7758     011F                     BAUD1CON        equ	287	;# 
  7759     011F                     BAUDCON1        equ	287	;# 
  7760     011F                     BAUDCTL1        equ	287	;# 
  7761     011F                     BAUDCON         equ	287	;# 
  7762     011F                     BAUDCTL         equ	287	;# 
  7763     018C                     SSP1BUF         equ	396	;# 
  7764     018D                     SSP1ADD         equ	397	;# 
  7765     018E                     SSP1MSK         equ	398	;# 
  7766     018F                     SSP1STAT        equ	399	;# 
  7767     0190                     SSP1CON1        equ	400	;# 
  7768     0191                     SSP1CON2        equ	401	;# 
  7769     0192                     SSP1CON3        equ	402	;# 
  7770     0196                     SSP2BUF         equ	406	;# 
  7771     0197                     SSP2ADD         equ	407	;# 
  7772     0198                     SSP2MSK         equ	408	;# 
  7773     0199                     SSP2STAT        equ	409	;# 
  7774     019A                     SSP2CON1        equ	410	;# 
  7775     019B                     SSP2CON2        equ	411	;# 
  7776     019C                     SSP2CON3        equ	412	;# 
  7777     020C                     TMR1            equ	524	;# 
  7778     020C                     TMR1L           equ	524	;# 
  7779     020D                     TMR1H           equ	525	;# 
  7780     020E                     T1CON           equ	526	;# 
  7781     020E                     TMR1CON         equ	526	;# 
  7782     020F                     T1GCON          equ	527	;# 
  7783     020F                     TMR1GCON        equ	527	;# 
  7784     0210                     T1GATE          equ	528	;# 
  7785     0210                     TMR1GATE        equ	528	;# 
  7786     0211                     T1CLK           equ	529	;# 
  7787     0211                     TMR1CLK         equ	529	;# 
  7788     0211                     PR1             equ	529	;# 
  7789     0212                     TMR3            equ	530	;# 
  7790     0212                     TMR3L           equ	530	;# 
  7791     0213                     TMR3H           equ	531	;# 
  7792     0214                     T3CON           equ	532	;# 
  7793     0214                     TMR3CON         equ	532	;# 
  7794     0215                     T3GCON          equ	533	;# 
  7795     0215                     TMR3GCON        equ	533	;# 
  7796     0216                     T3GATE          equ	534	;# 
  7797     0216                     TMR3GATE        equ	534	;# 
  7798     0217                     T3CLK           equ	535	;# 
  7799     0217                     TMR3CLK         equ	535	;# 
  7800     0217                     PR3             equ	535	;# 
  7801     0218                     TMR5            equ	536	;# 
  7802     0218                     TMR5L           equ	536	;# 
  7803     0219                     TMR5H           equ	537	;# 
  7804     021A                     T5CON           equ	538	;# 
  7805     021A                     TMR5CON         equ	538	;# 
  7806     021B                     T5GCON          equ	539	;# 
  7807     021B                     TMR5GCON        equ	539	;# 
  7808     021C                     T5GATE          equ	540	;# 
  7809     021C                     TMR5GATE        equ	540	;# 
  7810     021D                     T5CLK           equ	541	;# 
  7811     021D                     TMR5CLK         equ	541	;# 
  7812     021D                     PR5             equ	541	;# 
  7813     021E                     CCPTMRS0        equ	542	;# 
  7814     021F                     CCPTMRS1        equ	543	;# 
  7815     028C                     T2TMR           equ	652	;# 
  7816     028C                     TMR2            equ	652	;# 
  7817     028D                     T2PR            equ	653	;# 
  7818     028D                     PR2             equ	653	;# 
  7819     028E                     T2CON           equ	654	;# 
  7820     028F                     T2HLT           equ	655	;# 
  7821     0290                     T2CLKCON        equ	656	;# 
  7822     0291                     T2RST           equ	657	;# 
  7823     0292                     T4TMR           equ	658	;# 
  7824     0292                     TMR4            equ	658	;# 
  7825     0293                     T4PR            equ	659	;# 
  7826     0293                     PR4             equ	659	;# 
  7827     0294                     T4CON           equ	660	;# 
  7828     0295                     T4HLT           equ	661	;# 
  7829     0296                     T4CLKCON        equ	662	;# 
  7830     0297                     T4RST           equ	663	;# 
  7831     0298                     T6TMR           equ	664	;# 
  7832     0298                     TMR6            equ	664	;# 
  7833     0299                     T6PR            equ	665	;# 
  7834     0299                     PR6             equ	665	;# 
  7835     029A                     T6CON           equ	666	;# 
  7836     029B                     T6HLT           equ	667	;# 
  7837     029C                     T6CLKCON        equ	668	;# 
  7838     029D                     T6RST           equ	669	;# 
  7839     029F                     ADCPCON0        equ	671	;# 
  7840     030C                     CCPR1           equ	780	;# 
  7841     030C                     CCPR1L          equ	780	;# 
  7842     030D                     CCPR1H          equ	781	;# 
  7843     030E                     CCP1CON         equ	782	;# 
  7844     030F                     CCP1CAP         equ	783	;# 
  7845     0310                     CCPR2           equ	784	;# 
  7846     0310                     CCPR2L          equ	784	;# 
  7847     0311                     CCPR2H          equ	785	;# 
  7848     0312                     CCP2CON         equ	786	;# 
  7849     0313                     CCP2CAP         equ	787	;# 
  7850     0314                     CCPR3           equ	788	;# 
  7851     0314                     CCPR3L          equ	788	;# 
  7852     0315                     CCPR3H          equ	789	;# 
  7853     0316                     CCP3CON         equ	790	;# 
  7854     0317                     CCP3CAP         equ	791	;# 
  7855     0318                     CCPR4           equ	792	;# 
  7856     0318                     CCPR4L          equ	792	;# 
  7857     0319                     CCPR4H          equ	793	;# 
  7858     031A                     CCP4CON         equ	794	;# 
  7859     031B                     CCP4CAP         equ	795	;# 
  7860     031C                     CCPR5           equ	796	;# 
  7861     031C                     CCPR5L          equ	796	;# 
  7862     031D                     CCPR5H          equ	797	;# 
  7863     031E                     CCP5CON         equ	798	;# 
  7864     031F                     CCP5CAP         equ	799	;# 
  7865     038C                     PWM6DC          equ	908	;# 
  7866     038C                     PWM6DCL         equ	908	;# 
  7867     038D                     PWM6DCH         equ	909	;# 
  7868     038E                     PWM6CON         equ	910	;# 
  7869     0390                     PWM7DC          equ	912	;# 
  7870     0390                     PWM7DCL         equ	912	;# 
  7871     0391                     PWM7DCH         equ	913	;# 
  7872     0392                     PWM7CON         equ	914	;# 
  7873     048C                     SMT1TMR         equ	1164	;# 
  7874     048C                     SMT1TMRL        equ	1164	;# 
  7875     048D                     SMT1TMRH        equ	1165	;# 
  7876     048E                     SMT1TMRU        equ	1166	;# 
  7877     048F                     SMT1CPR         equ	1167	;# 
  7878     048F                     SMT1CPRL        equ	1167	;# 
  7879     0490                     SMT1CPRH        equ	1168	;# 
  7880     0491                     SMT1CPRU        equ	1169	;# 
  7881     0492                     SMT1CPW         equ	1170	;# 
  7882     0492                     SMT1CPWL        equ	1170	;# 
  7883     0493                     SMT1CPWH        equ	1171	;# 
  7884     0494                     SMT1CPWU        equ	1172	;# 
  7885     0495                     SMT1PR          equ	1173	;# 
  7886     0495                     SMT1PRL         equ	1173	;# 
  7887     0496                     SMT1PRH         equ	1174	;# 
  7888     0497                     SMT1PRU         equ	1175	;# 
  7889     0498                     SMT1CON0        equ	1176	;# 
  7890     0499                     SMT1CON1        equ	1177	;# 
  7891     049A                     SMT1STAT        equ	1178	;# 
  7892     049B                     SMT1CLK         equ	1179	;# 
  7893     049C                     SMT1SIG         equ	1180	;# 
  7894     049D                     SMT1WIN         equ	1181	;# 
  7895     050C                     SMT2TMR         equ	1292	;# 
  7896     050C                     SMT2TMRL        equ	1292	;# 
  7897     050D                     SMT2TMRH        equ	1293	;# 
  7898     050E                     SMT2TMRU        equ	1294	;# 
  7899     050F                     SMT2CPR         equ	1295	;# 
  7900     050F                     SMT2CPRL        equ	1295	;# 
  7901     0510                     SMT2CPRH        equ	1296	;# 
  7902     0511                     SMT2CPRU        equ	1297	;# 
  7903     0512                     SMT2CPW         equ	1298	;# 
  7904     0512                     SMT2CPWL        equ	1298	;# 
  7905     0513                     SMT2CPWH        equ	1299	;# 
  7906     0514                     SMT2CPWU        equ	1300	;# 
  7907     0515                     SMT2PR          equ	1301	;# 
  7908     0515                     SMT2PRL         equ	1301	;# 
  7909     0516                     SMT2PRH         equ	1302	;# 
  7910     0517                     SMT2PRU         equ	1303	;# 
  7911     0518                     SMT2CON0        equ	1304	;# 
  7912     0519                     SMT2CON1        equ	1305	;# 
  7913     051A                     SMT2STAT        equ	1306	;# 
  7914     051B                     SMT2CLK         equ	1307	;# 
  7915     051C                     SMT2SIG         equ	1308	;# 
  7916     051D                     SMT2WIN         equ	1309	;# 
  7917     058C                     NCO1ACC         equ	1420	;# 
  7918     058C                     NCO1ACCL        equ	1420	;# 
  7919     058D                     NCO1ACCH        equ	1421	;# 
  7920     058E                     NCO1ACCU        equ	1422	;# 
  7921     058F                     NCO1INC         equ	1423	;# 
  7922     058F                     NCO1INCL        equ	1423	;# 
  7923     0590                     NCO1INCH        equ	1424	;# 
  7924     0591                     NCO1INCU        equ	1425	;# 
  7925     0592                     NCO1CON         equ	1426	;# 
  7926     0593                     NCO1CLK         equ	1427	;# 
  7927     059C                     TMR0L           equ	1436	;# 
  7928     059C                     TMR0            equ	1436	;# 
  7929     059D                     TMR0H           equ	1437	;# 
  7930     059D                     PR0             equ	1437	;# 
  7931     059E                     T0CON0          equ	1438	;# 
  7932     059F                     T0CON1          equ	1439	;# 
  7933     060C                     CWG1CLK         equ	1548	;# 
  7934     060C                     CWG1CLKCON      equ	1548	;# 
  7935     060D                     CWG1ISM         equ	1549	;# 
  7936     060D                     CWG1DAT         equ	1549	;# 
  7937     060E                     CWG1DBR         equ	1550	;# 
  7938     060F                     CWG1DBF         equ	1551	;# 
  7939     0610                     CWG1CON0        equ	1552	;# 
  7940     0611                     CWG1CON1        equ	1553	;# 
  7941     0612                     CWG1AS0         equ	1554	;# 
  7942     0613                     CWG1AS1         equ	1555	;# 
  7943     0614                     CWG1STR         equ	1556	;# 
  7944     0616                     CWG2CLK         equ	1558	;# 
  7945     0616                     CWG2CLKCON      equ	1558	;# 
  7946     0617                     CWG2ISM         equ	1559	;# 
  7947     0617                     CWG2DAT         equ	1559	;# 
  7948     0618                     CWG2DBR         equ	1560	;# 
  7949     0619                     CWG2DBF         equ	1561	;# 
  7950     061A                     CWG2CON0        equ	1562	;# 
  7951     061B                     CWG2CON1        equ	1563	;# 
  7952     061C                     CWG2AS0         equ	1564	;# 
  7953     061D                     CWG2AS1         equ	1565	;# 
  7954     061E                     CWG2STR         equ	1566	;# 
  7955     068C                     CWG3CLK         equ	1676	;# 
  7956     068C                     CWG3CLKCON      equ	1676	;# 
  7957     068D                     CWG3ISM         equ	1677	;# 
  7958     068D                     CWG3DAT         equ	1677	;# 
  7959     068E                     CWG3DBR         equ	1678	;# 
  7960     068F                     CWG3DBF         equ	1679	;# 
  7961     0690                     CWG3CON0        equ	1680	;# 
  7962     0691                     CWG3CON1        equ	1681	;# 
  7963     0692                     CWG3AS0         equ	1682	;# 
  7964     0693                     CWG3AS1         equ	1683	;# 
  7965     0694                     CWG3STR         equ	1684	;# 
  7966     070C                     PIR0            equ	1804	;# 
  7967     070D                     PIR1            equ	1805	;# 
  7968     070E                     PIR2            equ	1806	;# 
  7969     070F                     PIR3            equ	1807	;# 
  7970     0710                     PIR4            equ	1808	;# 
  7971     0711                     PIR5            equ	1809	;# 
  7972     0712                     PIR6            equ	1810	;# 
  7973     0713                     PIR7            equ	1811	;# 
  7974     0714                     PIR8            equ	1812	;# 
  7975     0716                     PIE0            equ	1814	;# 
  7976     0717                     PIE1            equ	1815	;# 
  7977     0718                     PIE2            equ	1816	;# 
  7978     0719                     PIE3            equ	1817	;# 
  7979     071A                     PIE4            equ	1818	;# 
  7980     071B                     PIE5            equ	1819	;# 
  7981     071C                     PIE6            equ	1820	;# 
  7982     071D                     PIE7            equ	1821	;# 
  7983     071E                     PIE8            equ	1822	;# 
  7984     0796                     PMD0            equ	1942	;# 
  7985     0797                     PMD1            equ	1943	;# 
  7986     0798                     PMD2            equ	1944	;# 
  7987     0799                     PMD3            equ	1945	;# 
  7988     079A                     PMD4            equ	1946	;# 
  7989     079B                     PMD5            equ	1947	;# 
  7990     079C                     PMD6            equ	1948	;# 
  7991     079D                     PMD7            equ	1949	;# 
  7992     080C                     WDTCON0         equ	2060	;# 
  7993     080D                     WDTCON1         equ	2061	;# 
  7994     080E                     WDTPSL          equ	2062	;# 
  7995     080F                     WDTPSH          equ	2063	;# 
  7996     0810                     WDTTMR          equ	2064	;# 
  7997     0811                     BORCON          equ	2065	;# 
  7998     0813                     PCON0           equ	2067	;# 
  7999     0814                     PCON1           equ	2068	;# 
  8000     081A                     NVMADR          equ	2074	;# 
  8001     081A                     NVMADRL         equ	2074	;# 
  8002     081B                     NVMADRH         equ	2075	;# 
  8003     081C                     NVMDAT          equ	2076	;# 
  8004     081C                     NVMDATL         equ	2076	;# 
  8005     081D                     NVMDATH         equ	2077	;# 
  8006     081E                     NVMCON1         equ	2078	;# 
  8007     081F                     NVMCON2         equ	2079	;# 
  8008     088C                     CPUDOZE         equ	2188	;# 
  8009     088D                     OSCCON1         equ	2189	;# 
  8010     088E                     OSCCON2         equ	2190	;# 
  8011     088F                     OSCCON3         equ	2191	;# 
  8012     0890                     OSCSTAT         equ	2192	;# 
  8013     0891                     OSCEN           equ	2193	;# 
  8014     0892                     OSCTUNE         equ	2194	;# 
  8015     0893                     OSCFRQ          equ	2195	;# 
  8016     0895                     CLKRCON         equ	2197	;# 
  8017     0896                     CLKRCLK         equ	2198	;# 
  8018     0897                     MD1CON0         equ	2199	;# 
  8019     0898                     MD1CON1         equ	2200	;# 
  8020     0899                     MD1SRC          equ	2201	;# 
  8021     089A                     MD1CARL         equ	2202	;# 
  8022     089B                     MD1CARH         equ	2203	;# 
  8023     090C                     FVRCON          equ	2316	;# 
  8024     090E                     DAC1CON0        equ	2318	;# 
  8025     090F                     DAC1CON1        equ	2319	;# 
  8026     091F                     ZCDCON          equ	2335	;# 
  8027     098F                     CMOUT           equ	2447	;# 
  8028     098F                     CMSTAT          equ	2447	;# 
  8029     0990                     CM1CON0         equ	2448	;# 
  8030     0991                     CM1CON1         equ	2449	;# 
  8031     0992                     CM1NCH          equ	2450	;# 
  8032     0993                     CM1PCH          equ	2451	;# 
  8033     0994                     CM2CON0         equ	2452	;# 
  8034     0995                     CM2CON1         equ	2453	;# 
  8035     0996                     CM2NCH          equ	2454	;# 
  8036     0997                     CM2PCH          equ	2455	;# 
  8037     0A19                     RC2REG          equ	2585	;# 
  8038     0A19                     RCREG2          equ	2585	;# 
  8039     0A1A                     TX2REG          equ	2586	;# 
  8040     0A1A                     TXREG2          equ	2586	;# 
  8041     0A1B                     SP2BRG          equ	2587	;# 
  8042     0A1B                     SP2BRGL         equ	2587	;# 
  8043     0A1B                     SPBRG2          equ	2587	;# 
  8044     0A1C                     SP2BRGH         equ	2588	;# 
  8045     0A1C                     SPBRGH2         equ	2588	;# 
  8046     0A1D                     RC2STA          equ	2589	;# 
  8047     0A1D                     RCSTA2          equ	2589	;# 
  8048     0A1E                     TX2STA          equ	2590	;# 
  8049     0A1E                     TXSTA2          equ	2590	;# 
  8050     0A1F                     BAUD2CON        equ	2591	;# 
  8051     0A1F                     BAUDCON2        equ	2591	;# 
  8052     0A1F                     BAUDCTL2        equ	2591	;# 
  8053     1E0F                     CLCDATA         equ	7695	;# 
  8054     1E10                     CLC1CON         equ	7696	;# 
  8055     1E11                     CLC1POL         equ	7697	;# 
  8056     1E12                     CLC1SEL0        equ	7698	;# 
  8057     1E13                     CLC1SEL1        equ	7699	;# 
  8058     1E14                     CLC1SEL2        equ	7700	;# 
  8059     1E15                     CLC1SEL3        equ	7701	;# 
  8060     1E16                     CLC1GLS0        equ	7702	;# 
  8061     1E17                     CLC1GLS1        equ	7703	;# 
  8062     1E18                     CLC1GLS2        equ	7704	;# 
  8063     1E19                     CLC1GLS3        equ	7705	;# 
  8064     1E1A                     CLC2CON         equ	7706	;# 
  8065     1E1B                     CLC2POL         equ	7707	;# 
  8066     1E1C                     CLC2SEL0        equ	7708	;# 
  8067     1E1D                     CLC2SEL1        equ	7709	;# 
  8068     1E1E                     CLC2SEL2        equ	7710	;# 
  8069     1E1F                     CLC2SEL3        equ	7711	;# 
  8070     1E20                     CLC2GLS0        equ	7712	;# 
  8071     1E21                     CLC2GLS1        equ	7713	;# 
  8072     1E22                     CLC2GLS2        equ	7714	;# 
  8073     1E23                     CLC2GLS3        equ	7715	;# 
  8074     1E24                     CLC3CON         equ	7716	;# 
  8075     1E25                     CLC3POL         equ	7717	;# 
  8076     1E26                     CLC3SEL0        equ	7718	;# 
  8077     1E27                     CLC3SEL1        equ	7719	;# 
  8078     1E28                     CLC3SEL2        equ	7720	;# 
  8079     1E29                     CLC3SEL3        equ	7721	;# 
  8080     1E2A                     CLC3GLS0        equ	7722	;# 
  8081     1E2B                     CLC3GLS1        equ	7723	;# 
  8082     1E2C                     CLC3GLS2        equ	7724	;# 
  8083     1E2D                     CLC3GLS3        equ	7725	;# 
  8084     1E2E                     CLC4CON         equ	7726	;# 
  8085     1E2F                     CLC4POL         equ	7727	;# 
  8086     1E30                     CLC4SEL0        equ	7728	;# 
  8087     1E31                     CLC4SEL1        equ	7729	;# 
  8088     1E32                     CLC4SEL2        equ	7730	;# 
  8089     1E33                     CLC4SEL3        equ	7731	;# 
  8090     1E34                     CLC4GLS0        equ	7732	;# 
  8091     1E35                     CLC4GLS1        equ	7733	;# 
  8092     1E36                     CLC4GLS2        equ	7734	;# 
  8093     1E37                     CLC4GLS3        equ	7735	;# 
  8094     1E8F                     PPSLOCK         equ	7823	;# 
  8095     1E90                     INTPPS          equ	7824	;# 
  8096     1E91                     T0CKIPPS        equ	7825	;# 
  8097     1E92                     T1CKIPPS        equ	7826	;# 
  8098     1E93                     T1GPPS          equ	7827	;# 
  8099     1E94                     T3CKIPPS        equ	7828	;# 
  8100     1E95                     T3GPPS          equ	7829	;# 
  8101     1E96                     T5CKIPPS        equ	7830	;# 
  8102     1E97                     T5GPPS          equ	7831	;# 
  8103     1E9C                     T2INPPS         equ	7836	;# 
  8104     1E9D                     T4INPPS         equ	7837	;# 
  8105     1E9E                     T6INPPS         equ	7838	;# 
  8106     1EA1                     CCP1PPS         equ	7841	;# 
  8107     1EA2                     CCP2PPS         equ	7842	;# 
  8108     1EA3                     CCP3PPS         equ	7843	;# 
  8109     1EA4                     CCP4PPS         equ	7844	;# 
  8110     1EA5                     CCP5PPS         equ	7845	;# 
  8111     1EA9                     SMT1WINPPS      equ	7849	;# 
  8112     1EAA                     SMT1SIGPPS      equ	7850	;# 
  8113     1EAB                     SMT2WINPPS      equ	7851	;# 
  8114     1EAC                     SMT2SIGPPS      equ	7852	;# 
  8115     1EB1                     CWG1PPS         equ	7857	;# 
  8116     1EB2                     CWG2PPS         equ	7858	;# 
  8117     1EB3                     CWG3PPS         equ	7859	;# 
  8118     1EB8                     MDCARLPPS       equ	7864	;# 
  8119     1EB9                     MDCARHPPS       equ	7865	;# 
  8120     1EBA                     MDSRCPPS        equ	7866	;# 
  8121     1EBB                     CLCIN0PPS       equ	7867	;# 
  8122     1EBC                     CLCIN1PPS       equ	7868	;# 
  8123     1EBD                     CLCIN2PPS       equ	7869	;# 
  8124     1EBE                     CLCIN3PPS       equ	7870	;# 
  8125     1EC3                     ADACTPPS        equ	7875	;# 
  8126     1EC5                     SSP1CLKPPS      equ	7877	;# 
  8127     1EC6                     SSP1DATPPS      equ	7878	;# 
  8128     1EC7                     SSP1SSPPS       equ	7879	;# 
  8129     1EC8                     SSP2CLKPPS      equ	7880	;# 
  8130     1EC9                     SSP2DATPPS      equ	7881	;# 
  8131     1ECA                     SSP2SSPPS       equ	7882	;# 
  8132     1ECB                     RX1PPS          equ	7883	;# 
  8133     1ECC                     CK1PPS          equ	7884	;# 
  8134     1ECD                     RX2PPS          equ	7885	;# 
  8135     1ECE                     CK2PPS          equ	7886	;# 
  8136     1F10                     RA0PPS          equ	7952	;# 
  8137     1F11                     RA1PPS          equ	7953	;# 
  8138     1F12                     RA2PPS          equ	7954	;# 
  8139     1F13                     RA3PPS          equ	7955	;# 
  8140     1F14                     RA4PPS          equ	7956	;# 
  8141     1F15                     RA5PPS          equ	7957	;# 
  8142     1F16                     RA6PPS          equ	7958	;# 
  8143     1F17                     RA7PPS          equ	7959	;# 
  8144     1F18                     RB0PPS          equ	7960	;# 
  8145     1F19                     RB1PPS          equ	7961	;# 
  8146     1F1A                     RB2PPS          equ	7962	;# 
  8147     1F1B                     RB3PPS          equ	7963	;# 
  8148     1F1C                     RB4PPS          equ	7964	;# 
  8149     1F1D                     RB5PPS          equ	7965	;# 
  8150     1F1E                     RB6PPS          equ	7966	;# 
  8151     1F1F                     RB7PPS          equ	7967	;# 
  8152     1F20                     RC0PPS          equ	7968	;# 
  8153     1F21                     RC1PPS          equ	7969	;# 
  8154     1F22                     RC2PPS          equ	7970	;# 
  8155     1F23                     RC3PPS          equ	7971	;# 
  8156     1F24                     RC4PPS          equ	7972	;# 
  8157     1F25                     RC5PPS          equ	7973	;# 
  8158     1F26                     RC6PPS          equ	7974	;# 
  8159     1F27                     RC7PPS          equ	7975	;# 
  8160     1F38                     ANSELA          equ	7992	;# 
  8161     1F39                     WPUA            equ	7993	;# 
  8162     1F3A                     ODCONA          equ	7994	;# 
  8163     1F3B                     SLRCONA         equ	7995	;# 
  8164     1F3C                     INLVLA          equ	7996	;# 
  8165     1F3D                     IOCAP           equ	7997	;# 
  8166     1F3E                     IOCAN           equ	7998	;# 
  8167     1F3F                     IOCAF           equ	7999	;# 
  8168     1F43                     ANSELB          equ	8003	;# 
  8169     1F44                     WPUB            equ	8004	;# 
  8170     1F45                     ODCONB          equ	8005	;# 
  8171     1F46                     SLRCONB         equ	8006	;# 
  8172     1F47                     INLVLB          equ	8007	;# 
  8173     1F48                     IOCBP           equ	8008	;# 
  8174     1F49                     IOCBN           equ	8009	;# 
  8175     1F4A                     IOCBF           equ	8010	;# 
  8176     1F4E                     ANSELC          equ	8014	;# 
  8177     1F4F                     WPUC            equ	8015	;# 
  8178     1F50                     ODCONC          equ	8016	;# 
  8179     1F51                     SLRCONC         equ	8017	;# 
  8180     1F52                     INLVLC          equ	8018	;# 
  8181     1F53                     IOCCP           equ	8019	;# 
  8182     1F54                     IOCCN           equ	8020	;# 
  8183     1F55                     IOCCF           equ	8021	;# 
  8184     1F65                     WPUE            equ	8037	;# 
  8185     1F66                     ODCONE          equ	8038	;# 
  8186     1F67                     SLRCONE         equ	8039	;# 
  8187     1F68                     INLVLE          equ	8040	;# 
  8188     1F69                     IOCEP           equ	8041	;# 
  8189     1F6A                     IOCEN           equ	8042	;# 
  8190     1F6B                     IOCEF           equ	8043	;# 
  8191     1FE4                     STATUS_SHAD     equ	8164	;# 
  8192     1FE5                     WREG_SHAD       equ	8165	;# 
  8193     1FE6                     BSR_SHAD        equ	8166	;# 
  8194     1FE7                     PCLATH_SHAD     equ	8167	;# 
  8195     1FE8                     FSR0_SHAD       equ	8168	;# 
  8196     1FE8                     FSR0L_SHAD      equ	8168	;# 
  8197     1FE9                     FSR0H_SHAD      equ	8169	;# 
  8198     1FEA                     FSR1L_SHAD      equ	8170	;# 
  8199     1FEB                     FSR1H_SHAD      equ	8171	;# 
  8200     1FED                     STKPTR          equ	8173	;# 
  8201     1FEE                     TOSL            equ	8174	;# 
  8202     1FEF                     TOSH            equ	8175	;# 
  8203     0000                     INDF0           equ	0	;# 
  8204     0001                     INDF1           equ	1	;# 
  8205     0002                     PCL             equ	2	;# 
  8206     0003                     STATUS          equ	3	;# 
  8207     0004                     FSR0L           equ	4	;# 
  8208     0005                     FSR0H           equ	5	;# 
  8209     0006                     FSR1L           equ	6	;# 
  8210     0007                     FSR1H           equ	7	;# 
  8211     0008                     BSR             equ	8	;# 
  8212     0009                     WREG            equ	9	;# 
  8213     000A                     PCLATH          equ	10	;# 
  8214     000B                     INTCON          equ	11	;# 
  8215     000C                     PORTA           equ	12	;# 
  8216     000D                     PORTB           equ	13	;# 
  8217     000E                     PORTC           equ	14	;# 
  8218     0010                     PORTE           equ	16	;# 
  8219     0012                     TRISA           equ	18	;# 
  8220     0013                     TRISB           equ	19	;# 
  8221     0014                     TRISC           equ	20	;# 
  8222     0016                     TRISE           equ	22	;# 
  8223     0018                     LATA            equ	24	;# 
  8224     0019                     LATB            equ	25	;# 
  8225     001A                     LATC            equ	26	;# 
  8226     008C                     ADLTH           equ	140	;# 
  8227     008C                     ADLTHL          equ	140	;# 
  8228     008D                     ADLTHH          equ	141	;# 
  8229     008E                     ADUTH           equ	142	;# 
  8230     008E                     ADUTHL          equ	142	;# 
  8231     008F                     ADUTHH          equ	143	;# 
  8232     0090                     ADERR           equ	144	;# 
  8233     0090                     ADERRL          equ	144	;# 
  8234     0091                     ADERRH          equ	145	;# 
  8235     0092                     ADSTPT          equ	146	;# 
  8236     0092                     ADSTPTL         equ	146	;# 
  8237     0093                     ADSTPTH         equ	147	;# 
  8238     0094                     ADFLTR          equ	148	;# 
  8239     0094                     ADFLTRL         equ	148	;# 
  8240     0095                     ADFLTRH         equ	149	;# 
  8241     0096                     ADACC           equ	150	;# 
  8242     0096                     ADACCL          equ	150	;# 
  8243     0097                     ADACCH          equ	151	;# 
  8244     0098                     ADACCU          equ	152	;# 
  8245     0099                     ADCNT           equ	153	;# 
  8246     009A                     ADRPT           equ	154	;# 
  8247     009B                     ADPREV          equ	155	;# 
  8248     009B                     ADPREVL         equ	155	;# 
  8249     009C                     ADPREVH         equ	156	;# 
  8250     009D                     ADRES           equ	157	;# 
  8251     009D                     ADRESL          equ	157	;# 
  8252     009E                     ADRESH          equ	158	;# 
  8253     009F                     ADPCH           equ	159	;# 
  8254     010C                     ADACQ           equ	268	;# 
  8255     010C                     ADACQL          equ	268	;# 
  8256     010D                     ADACQH          equ	269	;# 
  8257     010E                     ADCAP           equ	270	;# 
  8258     010F                     ADPRE           equ	271	;# 
  8259     010F                     ADPREL          equ	271	;# 
  8260     0110                     ADPREH          equ	272	;# 
  8261     0111                     ADCON0          equ	273	;# 
  8262     0112                     ADCON1          equ	274	;# 
  8263     0113                     ADCON2          equ	275	;# 
  8264     0114                     ADCON3          equ	276	;# 
  8265     0115                     ADSTAT          equ	277	;# 
  8266     0116                     ADREF           equ	278	;# 
  8267     0117                     ADACT           equ	279	;# 
  8268     0118                     ADCLK           equ	280	;# 
  8269     0119                     RC1REG          equ	281	;# 
  8270     0119                     RCREG           equ	281	;# 
  8271     0119                     RCREG1          equ	281	;# 
  8272     011A                     TX1REG          equ	282	;# 
  8273     011A                     TXREG1          equ	282	;# 
  8274     011A                     TXREG           equ	282	;# 
  8275     011B                     SP1BRG          equ	283	;# 
  8276     011B                     SPBRG           equ	283	;# 
  8277     011B                     SP1BRGL         equ	283	;# 
  8278     011B                     SPBRG1          equ	283	;# 
  8279     011B                     SPBRGL          equ	283	;# 
  8280     011C                     SP1BRGH         equ	284	;# 
  8281     011C                     SPBRGH          equ	284	;# 
  8282     011C                     SPBRGH1         equ	284	;# 
  8283     011D                     RC1STA          equ	285	;# 
  8284     011D                     RCSTA1          equ	285	;# 
  8285     011D                     RCSTA           equ	285	;# 
  8286     011E                     TX1STA          equ	286	;# 
  8287     011E                     TXSTA1          equ	286	;# 
  8288     011E                     TXSTA           equ	286	;# 
  8289     011F                     BAUD1CON        equ	287	;# 
  8290     011F                     BAUDCON1        equ	287	;# 
  8291     011F                     BAUDCTL1        equ	287	;# 
  8292     011F                     BAUDCON         equ	287	;# 
  8293     011F                     BAUDCTL         equ	287	;# 
  8294     018C                     SSP1BUF         equ	396	;# 
  8295     018D                     SSP1ADD         equ	397	;# 
  8296     018E                     SSP1MSK         equ	398	;# 
  8297     018F                     SSP1STAT        equ	399	;# 
  8298     0190                     SSP1CON1        equ	400	;# 
  8299     0191                     SSP1CON2        equ	401	;# 
  8300     0192                     SSP1CON3        equ	402	;# 
  8301     0196                     SSP2BUF         equ	406	;# 
  8302     0197                     SSP2ADD         equ	407	;# 
  8303     0198                     SSP2MSK         equ	408	;# 
  8304     0199                     SSP2STAT        equ	409	;# 
  8305     019A                     SSP2CON1        equ	410	;# 
  8306     019B                     SSP2CON2        equ	411	;# 
  8307     019C                     SSP2CON3        equ	412	;# 
  8308     020C                     TMR1            equ	524	;# 
  8309     020C                     TMR1L           equ	524	;# 
  8310     020D                     TMR1H           equ	525	;# 
  8311     020E                     T1CON           equ	526	;# 
  8312     020E                     TMR1CON         equ	526	;# 
  8313     020F                     T1GCON          equ	527	;# 
  8314     020F                     TMR1GCON        equ	527	;# 
  8315     0210                     T1GATE          equ	528	;# 
  8316     0210                     TMR1GATE        equ	528	;# 
  8317     0211                     T1CLK           equ	529	;# 
  8318     0211                     TMR1CLK         equ	529	;# 
  8319     0211                     PR1             equ	529	;# 
  8320     0212                     TMR3            equ	530	;# 
  8321     0212                     TMR3L           equ	530	;# 
  8322     0213                     TMR3H           equ	531	;# 
  8323     0214                     T3CON           equ	532	;# 
  8324     0214                     TMR3CON         equ	532	;# 
  8325     0215                     T3GCON          equ	533	;# 
  8326     0215                     TMR3GCON        equ	533	;# 
  8327     0216                     T3GATE          equ	534	;# 
  8328     0216                     TMR3GATE        equ	534	;# 
  8329     0217                     T3CLK           equ	535	;# 
  8330     0217                     TMR3CLK         equ	535	;# 
  8331     0217                     PR3             equ	535	;# 
  8332     0218                     TMR5            equ	536	;# 
  8333     0218                     TMR5L           equ	536	;# 
  8334     0219                     TMR5H           equ	537	;# 
  8335     021A                     T5CON           equ	538	;# 
  8336     021A                     TMR5CON         equ	538	;# 
  8337     021B                     T5GCON          equ	539	;# 
  8338     021B                     TMR5GCON        equ	539	;# 
  8339     021C                     T5GATE          equ	540	;# 
  8340     021C                     TMR5GATE        equ	540	;# 
  8341     021D                     T5CLK           equ	541	;# 
  8342     021D                     TMR5CLK         equ	541	;# 
  8343     021D                     PR5             equ	541	;# 
  8344     021E                     CCPTMRS0        equ	542	;# 
  8345     021F                     CCPTMRS1        equ	543	;# 
  8346     028C                     T2TMR           equ	652	;# 
  8347     028C                     TMR2            equ	652	;# 
  8348     028D                     T2PR            equ	653	;# 
  8349     028D                     PR2             equ	653	;# 
  8350     028E                     T2CON           equ	654	;# 
  8351     028F                     T2HLT           equ	655	;# 
  8352     0290                     T2CLKCON        equ	656	;# 
  8353     0291                     T2RST           equ	657	;# 
  8354     0292                     T4TMR           equ	658	;# 
  8355     0292                     TMR4            equ	658	;# 
  8356     0293                     T4PR            equ	659	;# 
  8357     0293                     PR4             equ	659	;# 
  8358     0294                     T4CON           equ	660	;# 
  8359     0295                     T4HLT           equ	661	;# 
  8360     0296                     T4CLKCON        equ	662	;# 
  8361     0297                     T4RST           equ	663	;# 
  8362     0298                     T6TMR           equ	664	;# 
  8363     0298                     TMR6            equ	664	;# 
  8364     0299                     T6PR            equ	665	;# 
  8365     0299                     PR6             equ	665	;# 
  8366     029A                     T6CON           equ	666	;# 
  8367     029B                     T6HLT           equ	667	;# 
  8368     029C                     T6CLKCON        equ	668	;# 
  8369     029D                     T6RST           equ	669	;# 
  8370     029F                     ADCPCON0        equ	671	;# 
  8371     030C                     CCPR1           equ	780	;# 
  8372     030C                     CCPR1L          equ	780	;# 
  8373     030D                     CCPR1H          equ	781	;# 
  8374     030E                     CCP1CON         equ	782	;# 
  8375     030F                     CCP1CAP         equ	783	;# 
  8376     0310                     CCPR2           equ	784	;# 
  8377     0310                     CCPR2L          equ	784	;# 
  8378     0311                     CCPR2H          equ	785	;# 
  8379     0312                     CCP2CON         equ	786	;# 
  8380     0313                     CCP2CAP         equ	787	;# 
  8381     0314                     CCPR3           equ	788	;# 
  8382     0314                     CCPR3L          equ	788	;# 
  8383     0315                     CCPR3H          equ	789	;# 
  8384     0316                     CCP3CON         equ	790	;# 
  8385     0317                     CCP3CAP         equ	791	;# 
  8386     0318                     CCPR4           equ	792	;# 
  8387     0318                     CCPR4L          equ	792	;# 
  8388     0319                     CCPR4H          equ	793	;# 
  8389     031A                     CCP4CON         equ	794	;# 
  8390     031B                     CCP4CAP         equ	795	;# 
  8391     031C                     CCPR5           equ	796	;# 
  8392     031C                     CCPR5L          equ	796	;# 
  8393     031D                     CCPR5H          equ	797	;# 
  8394     031E                     CCP5CON         equ	798	;# 
  8395     031F                     CCP5CAP         equ	799	;# 
  8396     038C                     PWM6DC          equ	908	;# 
  8397     038C                     PWM6DCL         equ	908	;# 
  8398     038D                     PWM6DCH         equ	909	;# 
  8399     038E                     PWM6CON         equ	910	;# 
  8400     0390                     PWM7DC          equ	912	;# 
  8401     0390                     PWM7DCL         equ	912	;# 
  8402     0391                     PWM7DCH         equ	913	;# 
  8403     0392                     PWM7CON         equ	914	;# 
  8404     048C                     SMT1TMR         equ	1164	;# 
  8405     048C                     SMT1TMRL        equ	1164	;# 
  8406     048D                     SMT1TMRH        equ	1165	;# 
  8407     048E                     SMT1TMRU        equ	1166	;# 
  8408     048F                     SMT1CPR         equ	1167	;# 
  8409     048F                     SMT1CPRL        equ	1167	;# 
  8410     0490                     SMT1CPRH        equ	1168	;# 
  8411     0491                     SMT1CPRU        equ	1169	;# 
  8412     0492                     SMT1CPW         equ	1170	;# 
  8413     0492                     SMT1CPWL        equ	1170	;# 
  8414     0493                     SMT1CPWH        equ	1171	;# 
  8415     0494                     SMT1CPWU        equ	1172	;# 
  8416     0495                     SMT1PR          equ	1173	;# 
  8417     0495                     SMT1PRL         equ	1173	;# 
  8418     0496                     SMT1PRH         equ	1174	;# 
  8419     0497                     SMT1PRU         equ	1175	;# 
  8420     0498                     SMT1CON0        equ	1176	;# 
  8421     0499                     SMT1CON1        equ	1177	;# 
  8422     049A                     SMT1STAT        equ	1178	;# 
  8423     049B                     SMT1CLK         equ	1179	;# 
  8424     049C                     SMT1SIG         equ	1180	;# 
  8425     049D                     SMT1WIN         equ	1181	;# 
  8426     050C                     SMT2TMR         equ	1292	;# 
  8427     050C                     SMT2TMRL        equ	1292	;# 
  8428     050D                     SMT2TMRH        equ	1293	;# 
  8429     050E                     SMT2TMRU        equ	1294	;# 
  8430     050F                     SMT2CPR         equ	1295	;# 
  8431     050F                     SMT2CPRL        equ	1295	;# 
  8432     0510                     SMT2CPRH        equ	1296	;# 
  8433     0511                     SMT2CPRU        equ	1297	;# 
  8434     0512                     SMT2CPW         equ	1298	;# 
  8435     0512                     SMT2CPWL        equ	1298	;# 
  8436     0513                     SMT2CPWH        equ	1299	;# 
  8437     0514                     SMT2CPWU        equ	1300	;# 
  8438     0515                     SMT2PR          equ	1301	;# 
  8439     0515                     SMT2PRL         equ	1301	;# 
  8440     0516                     SMT2PRH         equ	1302	;# 
  8441     0517                     SMT2PRU         equ	1303	;# 
  8442     0518                     SMT2CON0        equ	1304	;# 
  8443     0519                     SMT2CON1        equ	1305	;# 
  8444     051A                     SMT2STAT        equ	1306	;# 
  8445     051B                     SMT2CLK         equ	1307	;# 
  8446     051C                     SMT2SIG         equ	1308	;# 
  8447     051D                     SMT2WIN         equ	1309	;# 
  8448     058C                     NCO1ACC         equ	1420	;# 
  8449     058C                     NCO1ACCL        equ	1420	;# 
  8450     058D                     NCO1ACCH        equ	1421	;# 
  8451     058E                     NCO1ACCU        equ	1422	;# 
  8452     058F                     NCO1INC         equ	1423	;# 
  8453     058F                     NCO1INCL        equ	1423	;# 
  8454     0590                     NCO1INCH        equ	1424	;# 
  8455     0591                     NCO1INCU        equ	1425	;# 
  8456     0592                     NCO1CON         equ	1426	;# 
  8457     0593                     NCO1CLK         equ	1427	;# 
  8458     059C                     TMR0L           equ	1436	;# 
  8459     059C                     TMR0            equ	1436	;# 
  8460     059D                     TMR0H           equ	1437	;# 
  8461     059D                     PR0             equ	1437	;# 
  8462     059E                     T0CON0          equ	1438	;# 
  8463     059F                     T0CON1          equ	1439	;# 
  8464     060C                     CWG1CLK         equ	1548	;# 
  8465     060C                     CWG1CLKCON      equ	1548	;# 
  8466     060D                     CWG1ISM         equ	1549	;# 
  8467     060D                     CWG1DAT         equ	1549	;# 
  8468     060E                     CWG1DBR         equ	1550	;# 
  8469     060F                     CWG1DBF         equ	1551	;# 
  8470     0610                     CWG1CON0        equ	1552	;# 
  8471     0611                     CWG1CON1        equ	1553	;# 
  8472     0612                     CWG1AS0         equ	1554	;# 
  8473     0613                     CWG1AS1         equ	1555	;# 
  8474     0614                     CWG1STR         equ	1556	;# 
  8475     0616                     CWG2CLK         equ	1558	;# 
  8476     0616                     CWG2CLKCON      equ	1558	;# 
  8477     0617                     CWG2ISM         equ	1559	;# 
  8478     0617                     CWG2DAT         equ	1559	;# 
  8479     0618                     CWG2DBR         equ	1560	;# 
  8480     0619                     CWG2DBF         equ	1561	;# 
  8481     061A                     CWG2CON0        equ	1562	;# 
  8482     061B                     CWG2CON1        equ	1563	;# 
  8483     061C                     CWG2AS0         equ	1564	;# 
  8484     061D                     CWG2AS1         equ	1565	;# 
  8485     061E                     CWG2STR         equ	1566	;# 
  8486     068C                     CWG3CLK         equ	1676	;# 
  8487     068C                     CWG3CLKCON      equ	1676	;# 
  8488     068D                     CWG3ISM         equ	1677	;# 
  8489     068D                     CWG3DAT         equ	1677	;# 
  8490     068E                     CWG3DBR         equ	1678	;# 
  8491     068F                     CWG3DBF         equ	1679	;# 
  8492     0690                     CWG3CON0        equ	1680	;# 
  8493     0691                     CWG3CON1        equ	1681	;# 
  8494     0692                     CWG3AS0         equ	1682	;# 
  8495     0693                     CWG3AS1         equ	1683	;# 
  8496     0694                     CWG3STR         equ	1684	;# 
  8497     070C                     PIR0            equ	1804	;# 
  8498     070D                     PIR1            equ	1805	;# 
  8499     070E                     PIR2            equ	1806	;# 
  8500     070F                     PIR3            equ	1807	;# 
  8501     0710                     PIR4            equ	1808	;# 
  8502     0711                     PIR5            equ	1809	;# 
  8503     0712                     PIR6            equ	1810	;# 
  8504     0713                     PIR7            equ	1811	;# 
  8505     0714                     PIR8            equ	1812	;# 
  8506     0716                     PIE0            equ	1814	;# 
  8507     0717                     PIE1            equ	1815	;# 
  8508     0718                     PIE2            equ	1816	;# 
  8509     0719                     PIE3            equ	1817	;# 
  8510     071A                     PIE4            equ	1818	;# 
  8511     071B                     PIE5            equ	1819	;# 
  8512     071C                     PIE6            equ	1820	;# 
  8513     071D                     PIE7            equ	1821	;# 
  8514     071E                     PIE8            equ	1822	;# 
  8515     0796                     PMD0            equ	1942	;# 
  8516     0797                     PMD1            equ	1943	;# 
  8517     0798                     PMD2            equ	1944	;# 
  8518     0799                     PMD3            equ	1945	;# 
  8519     079A                     PMD4            equ	1946	;# 
  8520     079B                     PMD5            equ	1947	;# 
  8521     079C                     PMD6            equ	1948	;# 
  8522     079D                     PMD7            equ	1949	;# 
  8523     080C                     WDTCON0         equ	2060	;# 
  8524     080D                     WDTCON1         equ	2061	;# 
  8525     080E                     WDTPSL          equ	2062	;# 
  8526     080F                     WDTPSH          equ	2063	;# 
  8527     0810                     WDTTMR          equ	2064	;# 
  8528     0811                     BORCON          equ	2065	;# 
  8529     0813                     PCON0           equ	2067	;# 
  8530     0814                     PCON1           equ	2068	;# 
  8531     081A                     NVMADR          equ	2074	;# 
  8532     081A                     NVMADRL         equ	2074	;# 
  8533     081B                     NVMADRH         equ	2075	;# 
  8534     081C                     NVMDAT          equ	2076	;# 
  8535     081C                     NVMDATL         equ	2076	;# 
  8536     081D                     NVMDATH         equ	2077	;# 
  8537     081E                     NVMCON1         equ	2078	;# 
  8538     081F                     NVMCON2         equ	2079	;# 
  8539     088C                     CPUDOZE         equ	2188	;# 
  8540     088D                     OSCCON1         equ	2189	;# 
  8541     088E                     OSCCON2         equ	2190	;# 
  8542     088F                     OSCCON3         equ	2191	;# 
  8543     0890                     OSCSTAT         equ	2192	;# 
  8544     0891                     OSCEN           equ	2193	;# 
  8545     0892                     OSCTUNE         equ	2194	;# 
  8546     0893                     OSCFRQ          equ	2195	;# 
  8547     0895                     CLKRCON         equ	2197	;# 
  8548     0896                     CLKRCLK         equ	2198	;# 
  8549     0897                     MD1CON0         equ	2199	;# 
  8550     0898                     MD1CON1         equ	2200	;# 
  8551     0899                     MD1SRC          equ	2201	;# 
  8552     089A                     MD1CARL         equ	2202	;# 
  8553     089B                     MD1CARH         equ	2203	;# 
  8554     090C                     FVRCON          equ	2316	;# 
  8555     090E                     DAC1CON0        equ	2318	;# 
  8556     090F                     DAC1CON1        equ	2319	;# 
  8557     091F                     ZCDCON          equ	2335	;# 
  8558     098F                     CMOUT           equ	2447	;# 
  8559     098F                     CMSTAT          equ	2447	;# 
  8560     0990                     CM1CON0         equ	2448	;# 
  8561     0991                     CM1CON1         equ	2449	;# 
  8562     0992                     CM1NCH          equ	2450	;# 
  8563     0993                     CM1PCH          equ	2451	;# 
  8564     0994                     CM2CON0         equ	2452	;# 
  8565     0995                     CM2CON1         equ	2453	;# 
  8566     0996                     CM2NCH          equ	2454	;# 
  8567     0997                     CM2PCH          equ	2455	;# 
  8568     0A19                     RC2REG          equ	2585	;# 
  8569     0A19                     RCREG2          equ	2585	;# 
  8570     0A1A                     TX2REG          equ	2586	;# 
  8571     0A1A                     TXREG2          equ	2586	;# 
  8572     0A1B                     SP2BRG          equ	2587	;# 
  8573     0A1B                     SP2BRGL         equ	2587	;# 
  8574     0A1B                     SPBRG2          equ	2587	;# 
  8575     0A1C                     SP2BRGH         equ	2588	;# 
  8576     0A1C                     SPBRGH2         equ	2588	;# 
  8577     0A1D                     RC2STA          equ	2589	;# 
  8578     0A1D                     RCSTA2          equ	2589	;# 
  8579     0A1E                     TX2STA          equ	2590	;# 
  8580     0A1E                     TXSTA2          equ	2590	;# 
  8581     0A1F                     BAUD2CON        equ	2591	;# 
  8582     0A1F                     BAUDCON2        equ	2591	;# 
  8583     0A1F                     BAUDCTL2        equ	2591	;# 
  8584     1E0F                     CLCDATA         equ	7695	;# 
  8585     1E10                     CLC1CON         equ	7696	;# 
  8586     1E11                     CLC1POL         equ	7697	;# 
  8587     1E12                     CLC1SEL0        equ	7698	;# 
  8588     1E13                     CLC1SEL1        equ	7699	;# 
  8589     1E14                     CLC1SEL2        equ	7700	;# 
  8590     1E15                     CLC1SEL3        equ	7701	;# 
  8591     1E16                     CLC1GLS0        equ	7702	;# 
  8592     1E17                     CLC1GLS1        equ	7703	;# 
  8593     1E18                     CLC1GLS2        equ	7704	;# 
  8594     1E19                     CLC1GLS3        equ	7705	;# 
  8595     1E1A                     CLC2CON         equ	7706	;# 
  8596     1E1B                     CLC2POL         equ	7707	;# 
  8597     1E1C                     CLC2SEL0        equ	7708	;# 
  8598     1E1D                     CLC2SEL1        equ	7709	;# 
  8599     1E1E                     CLC2SEL2        equ	7710	;# 
  8600     1E1F                     CLC2SEL3        equ	7711	;# 
  8601     1E20                     CLC2GLS0        equ	7712	;# 
  8602     1E21                     CLC2GLS1        equ	7713	;# 
  8603     1E22                     CLC2GLS2        equ	7714	;# 
  8604     1E23                     CLC2GLS3        equ	7715	;# 
  8605     1E24                     CLC3CON         equ	7716	;# 
  8606     1E25                     CLC3POL         equ	7717	;# 
  8607     1E26                     CLC3SEL0        equ	7718	;# 
  8608     1E27                     CLC3SEL1        equ	7719	;# 
  8609     1E28                     CLC3SEL2        equ	7720	;# 
  8610     1E29                     CLC3SEL3        equ	7721	;# 
  8611     1E2A                     CLC3GLS0        equ	7722	;# 
  8612     1E2B                     CLC3GLS1        equ	7723	;# 
  8613     1E2C                     CLC3GLS2        equ	7724	;# 
  8614     1E2D                     CLC3GLS3        equ	7725	;# 
  8615     1E2E                     CLC4CON         equ	7726	;# 
  8616     1E2F                     CLC4POL         equ	7727	;# 
  8617     1E30                     CLC4SEL0        equ	7728	;# 
  8618     1E31                     CLC4SEL1        equ	7729	;# 
  8619     1E32                     CLC4SEL2        equ	7730	;# 
  8620     1E33                     CLC4SEL3        equ	7731	;# 
  8621     1E34                     CLC4GLS0        equ	7732	;# 
  8622     1E35                     CLC4GLS1        equ	7733	;# 
  8623     1E36                     CLC4GLS2        equ	7734	;# 
  8624     1E37                     CLC4GLS3        equ	7735	;# 
  8625     1E8F                     PPSLOCK         equ	7823	;# 
  8626     1E90                     INTPPS          equ	7824	;# 
  8627     1E91                     T0CKIPPS        equ	7825	;# 
  8628     1E92                     T1CKIPPS        equ	7826	;# 
  8629     1E93                     T1GPPS          equ	7827	;# 
  8630     1E94                     T3CKIPPS        equ	7828	;# 
  8631     1E95                     T3GPPS          equ	7829	;# 
  8632     1E96                     T5CKIPPS        equ	7830	;# 
  8633     1E97                     T5GPPS          equ	7831	;# 
  8634     1E9C                     T2INPPS         equ	7836	;# 
  8635     1E9D                     T4INPPS         equ	7837	;# 
  8636     1E9E                     T6INPPS         equ	7838	;# 
  8637     1EA1                     CCP1PPS         equ	7841	;# 
  8638     1EA2                     CCP2PPS         equ	7842	;# 
  8639     1EA3                     CCP3PPS         equ	7843	;# 
  8640     1EA4                     CCP4PPS         equ	7844	;# 
  8641     1EA5                     CCP5PPS         equ	7845	;# 
  8642     1EA9                     SMT1WINPPS      equ	7849	;# 
  8643     1EAA                     SMT1SIGPPS      equ	7850	;# 
  8644     1EAB                     SMT2WINPPS      equ	7851	;# 
  8645     1EAC                     SMT2SIGPPS      equ	7852	;# 
  8646     1EB1                     CWG1PPS         equ	7857	;# 
  8647     1EB2                     CWG2PPS         equ	7858	;# 
  8648     1EB3                     CWG3PPS         equ	7859	;# 
  8649     1EB8                     MDCARLPPS       equ	7864	;# 
  8650     1EB9                     MDCARHPPS       equ	7865	;# 
  8651     1EBA                     MDSRCPPS        equ	7866	;# 
  8652     1EBB                     CLCIN0PPS       equ	7867	;# 
  8653     1EBC                     CLCIN1PPS       equ	7868	;# 
  8654     1EBD                     CLCIN2PPS       equ	7869	;# 
  8655     1EBE                     CLCIN3PPS       equ	7870	;# 
  8656     1EC3                     ADACTPPS        equ	7875	;# 
  8657     1EC5                     SSP1CLKPPS      equ	7877	;# 
  8658     1EC6                     SSP1DATPPS      equ	7878	;# 
  8659     1EC7                     SSP1SSPPS       equ	7879	;# 
  8660     1EC8                     SSP2CLKPPS      equ	7880	;# 
  8661     1EC9                     SSP2DATPPS      equ	7881	;# 
  8662     1ECA                     SSP2SSPPS       equ	7882	;# 
  8663     1ECB                     RX1PPS          equ	7883	;# 
  8664     1ECC                     CK1PPS          equ	7884	;# 
  8665     1ECD                     RX2PPS          equ	7885	;# 
  8666     1ECE                     CK2PPS          equ	7886	;# 
  8667     1F10                     RA0PPS          equ	7952	;# 
  8668     1F11                     RA1PPS          equ	7953	;# 
  8669     1F12                     RA2PPS          equ	7954	;# 
  8670     1F13                     RA3PPS          equ	7955	;# 
  8671     1F14                     RA4PPS          equ	7956	;# 
  8672     1F15                     RA5PPS          equ	7957	;# 
  8673     1F16                     RA6PPS          equ	7958	;# 
  8674     1F17                     RA7PPS          equ	7959	;# 
  8675     1F18                     RB0PPS          equ	7960	;# 
  8676     1F19                     RB1PPS          equ	7961	;# 
  8677     1F1A                     RB2PPS          equ	7962	;# 
  8678     1F1B                     RB3PPS          equ	7963	;# 
  8679     1F1C                     RB4PPS          equ	7964	;# 
  8680     1F1D                     RB5PPS          equ	7965	;# 
  8681     1F1E                     RB6PPS          equ	7966	;# 
  8682     1F1F                     RB7PPS          equ	7967	;# 
  8683     1F20                     RC0PPS          equ	7968	;# 
  8684     1F21                     RC1PPS          equ	7969	;# 
  8685     1F22                     RC2PPS          equ	7970	;# 
  8686     1F23                     RC3PPS          equ	7971	;# 
  8687     1F24                     RC4PPS          equ	7972	;# 
  8688     1F25                     RC5PPS          equ	7973	;# 
  8689     1F26                     RC6PPS          equ	7974	;# 
  8690     1F27                     RC7PPS          equ	7975	;# 
  8691     1F38                     ANSELA          equ	7992	;# 
  8692     1F39                     WPUA            equ	7993	;# 
  8693     1F3A                     ODCONA          equ	7994	;# 
  8694     1F3B                     SLRCONA         equ	7995	;# 
  8695     1F3C                     INLVLA          equ	7996	;# 
  8696     1F3D                     IOCAP           equ	7997	;# 
  8697     1F3E                     IOCAN           equ	7998	;# 
  8698     1F3F                     IOCAF           equ	7999	;# 
  8699     1F43                     ANSELB          equ	8003	;# 
  8700     1F44                     WPUB            equ	8004	;# 
  8701     1F45                     ODCONB          equ	8005	;# 
  8702     1F46                     SLRCONB         equ	8006	;# 
  8703     1F47                     INLVLB          equ	8007	;# 
  8704     1F48                     IOCBP           equ	8008	;# 
  8705     1F49                     IOCBN           equ	8009	;# 
  8706     1F4A                     IOCBF           equ	8010	;# 
  8707     1F4E                     ANSELC          equ	8014	;# 
  8708     1F4F                     WPUC            equ	8015	;# 
  8709     1F50                     ODCONC          equ	8016	;# 
  8710     1F51                     SLRCONC         equ	8017	;# 
  8711     1F52                     INLVLC          equ	8018	;# 
  8712     1F53                     IOCCP           equ	8019	;# 
  8713     1F54                     IOCCN           equ	8020	;# 
  8714     1F55                     IOCCF           equ	8021	;# 
  8715     1F65                     WPUE            equ	8037	;# 
  8716     1F66                     ODCONE          equ	8038	;# 
  8717     1F67                     SLRCONE         equ	8039	;# 
  8718     1F68                     INLVLE          equ	8040	;# 
  8719     1F69                     IOCEP           equ	8041	;# 
  8720     1F6A                     IOCEN           equ	8042	;# 
  8721     1F6B                     IOCEF           equ	8043	;# 
  8722     1FE4                     STATUS_SHAD     equ	8164	;# 
  8723     1FE5                     WREG_SHAD       equ	8165	;# 
  8724     1FE6                     BSR_SHAD        equ	8166	;# 
  8725     1FE7                     PCLATH_SHAD     equ	8167	;# 
  8726     1FE8                     FSR0_SHAD       equ	8168	;# 
  8727     1FE8                     FSR0L_SHAD      equ	8168	;# 
  8728     1FE9                     FSR0H_SHAD      equ	8169	;# 
  8729     1FEA                     FSR1L_SHAD      equ	8170	;# 
  8730     1FEB                     FSR1H_SHAD      equ	8171	;# 
  8731     1FED                     STKPTR          equ	8173	;# 
  8732     1FEE                     TOSL            equ	8174	;# 
  8733     1FEF                     TOSH            equ	8175	;# 
  8734     0000                     INDF0           equ	0	;# 
  8735     0001                     INDF1           equ	1	;# 
  8736     0002                     PCL             equ	2	;# 
  8737     0003                     STATUS          equ	3	;# 
  8738     0004                     FSR0L           equ	4	;# 
  8739     0005                     FSR0H           equ	5	;# 
  8740     0006                     FSR1L           equ	6	;# 
  8741     0007                     FSR1H           equ	7	;# 
  8742     0008                     BSR             equ	8	;# 
  8743     0009                     WREG            equ	9	;# 
  8744     000A                     PCLATH          equ	10	;# 
  8745     000B                     INTCON          equ	11	;# 
  8746     000C                     PORTA           equ	12	;# 
  8747     000D                     PORTB           equ	13	;# 
  8748     000E                     PORTC           equ	14	;# 
  8749     0010                     PORTE           equ	16	;# 
  8750     0012                     TRISA           equ	18	;# 
  8751     0013                     TRISB           equ	19	;# 
  8752     0014                     TRISC           equ	20	;# 
  8753     0016                     TRISE           equ	22	;# 
  8754     0018                     LATA            equ	24	;# 
  8755     0019                     LATB            equ	25	;# 
  8756     001A                     LATC            equ	26	;# 
  8757     008C                     ADLTH           equ	140	;# 
  8758     008C                     ADLTHL          equ	140	;# 
  8759     008D                     ADLTHH          equ	141	;# 
  8760     008E                     ADUTH           equ	142	;# 
  8761     008E                     ADUTHL          equ	142	;# 
  8762     008F                     ADUTHH          equ	143	;# 
  8763     0090                     ADERR           equ	144	;# 
  8764     0090                     ADERRL          equ	144	;# 
  8765     0091                     ADERRH          equ	145	;# 
  8766     0092                     ADSTPT          equ	146	;# 
  8767     0092                     ADSTPTL         equ	146	;# 
  8768     0093                     ADSTPTH         equ	147	;# 
  8769     0094                     ADFLTR          equ	148	;# 
  8770     0094                     ADFLTRL         equ	148	;# 
  8771     0095                     ADFLTRH         equ	149	;# 
  8772     0096                     ADACC           equ	150	;# 
  8773     0096                     ADACCL          equ	150	;# 
  8774     0097                     ADACCH          equ	151	;# 
  8775     0098                     ADACCU          equ	152	;# 
  8776     0099                     ADCNT           equ	153	;# 
  8777     009A                     ADRPT           equ	154	;# 
  8778     009B                     ADPREV          equ	155	;# 
  8779     009B                     ADPREVL         equ	155	;# 
  8780     009C                     ADPREVH         equ	156	;# 
  8781     009D                     ADRES           equ	157	;# 
  8782     009D                     ADRESL          equ	157	;# 
  8783     009E                     ADRESH          equ	158	;# 
  8784     009F                     ADPCH           equ	159	;# 
  8785     010C                     ADACQ           equ	268	;# 
  8786     010C                     ADACQL          equ	268	;# 
  8787     010D                     ADACQH          equ	269	;# 
  8788     010E                     ADCAP           equ	270	;# 
  8789     010F                     ADPRE           equ	271	;# 
  8790     010F                     ADPREL          equ	271	;# 
  8791     0110                     ADPREH          equ	272	;# 
  8792     0111                     ADCON0          equ	273	;# 
  8793     0112                     ADCON1          equ	274	;# 
  8794     0113                     ADCON2          equ	275	;# 
  8795     0114                     ADCON3          equ	276	;# 
  8796     0115                     ADSTAT          equ	277	;# 
  8797     0116                     ADREF           equ	278	;# 
  8798     0117                     ADACT           equ	279	;# 
  8799     0118                     ADCLK           equ	280	;# 
  8800     0119                     RC1REG          equ	281	;# 
  8801     0119                     RCREG           equ	281	;# 
  8802     0119                     RCREG1          equ	281	;# 
  8803     011A                     TX1REG          equ	282	;# 
  8804     011A                     TXREG1          equ	282	;# 
  8805     011A                     TXREG           equ	282	;# 
  8806     011B                     SP1BRG          equ	283	;# 
  8807     011B                     SPBRG           equ	283	;# 
  8808     011B                     SP1BRGL         equ	283	;# 
  8809     011B                     SPBRG1          equ	283	;# 
  8810     011B                     SPBRGL          equ	283	;# 
  8811     011C                     SP1BRGH         equ	284	;# 
  8812     011C                     SPBRGH          equ	284	;# 
  8813     011C                     SPBRGH1         equ	284	;# 
  8814     011D                     RC1STA          equ	285	;# 
  8815     011D                     RCSTA1          equ	285	;# 
  8816     011D                     RCSTA           equ	285	;# 
  8817     011E                     TX1STA          equ	286	;# 
  8818     011E                     TXSTA1          equ	286	;# 
  8819     011E                     TXSTA           equ	286	;# 
  8820     011F                     BAUD1CON        equ	287	;# 
  8821     011F                     BAUDCON1        equ	287	;# 
  8822     011F                     BAUDCTL1        equ	287	;# 
  8823     011F                     BAUDCON         equ	287	;# 
  8824     011F                     BAUDCTL         equ	287	;# 
  8825     018C                     SSP1BUF         equ	396	;# 
  8826     018D                     SSP1ADD         equ	397	;# 
  8827     018E                     SSP1MSK         equ	398	;# 
  8828     018F                     SSP1STAT        equ	399	;# 
  8829     0190                     SSP1CON1        equ	400	;# 
  8830     0191                     SSP1CON2        equ	401	;# 
  8831     0192                     SSP1CON3        equ	402	;# 
  8832     0196                     SSP2BUF         equ	406	;# 
  8833     0197                     SSP2ADD         equ	407	;# 
  8834     0198                     SSP2MSK         equ	408	;# 
  8835     0199                     SSP2STAT        equ	409	;# 
  8836     019A                     SSP2CON1        equ	410	;# 
  8837     019B                     SSP2CON2        equ	411	;# 
  8838     019C                     SSP2CON3        equ	412	;# 
  8839     020C                     TMR1            equ	524	;# 
  8840     020C                     TMR1L           equ	524	;# 
  8841     020D                     TMR1H           equ	525	;# 
  8842     020E                     T1CON           equ	526	;# 
  8843     020E                     TMR1CON         equ	526	;# 
  8844     020F                     T1GCON          equ	527	;# 
  8845     020F                     TMR1GCON        equ	527	;# 
  8846     0210                     T1GATE          equ	528	;# 
  8847     0210                     TMR1GATE        equ	528	;# 
  8848     0211                     T1CLK           equ	529	;# 
  8849     0211                     TMR1CLK         equ	529	;# 
  8850     0211                     PR1             equ	529	;# 
  8851     0212                     TMR3            equ	530	;# 
  8852     0212                     TMR3L           equ	530	;# 
  8853     0213                     TMR3H           equ	531	;# 
  8854     0214                     T3CON           equ	532	;# 
  8855     0214                     TMR3CON         equ	532	;# 
  8856     0215                     T3GCON          equ	533	;# 
  8857     0215                     TMR3GCON        equ	533	;# 
  8858     0216                     T3GATE          equ	534	;# 
  8859     0216                     TMR3GATE        equ	534	;# 
  8860     0217                     T3CLK           equ	535	;# 
  8861     0217                     TMR3CLK         equ	535	;# 
  8862     0217                     PR3             equ	535	;# 
  8863     0218                     TMR5            equ	536	;# 
  8864     0218                     TMR5L           equ	536	;# 
  8865     0219                     TMR5H           equ	537	;# 
  8866     021A                     T5CON           equ	538	;# 
  8867     021A                     TMR5CON         equ	538	;# 
  8868     021B                     T5GCON          equ	539	;# 
  8869     021B                     TMR5GCON        equ	539	;# 
  8870     021C                     T5GATE          equ	540	;# 
  8871     021C                     TMR5GATE        equ	540	;# 
  8872     021D                     T5CLK           equ	541	;# 
  8873     021D                     TMR5CLK         equ	541	;# 
  8874     021D                     PR5             equ	541	;# 
  8875     021E                     CCPTMRS0        equ	542	;# 
  8876     021F                     CCPTMRS1        equ	543	;# 
  8877     028C                     T2TMR           equ	652	;# 
  8878     028C                     TMR2            equ	652	;# 
  8879     028D                     T2PR            equ	653	;# 
  8880     028D                     PR2             equ	653	;# 
  8881     028E                     T2CON           equ	654	;# 
  8882     028F                     T2HLT           equ	655	;# 
  8883     0290                     T2CLKCON        equ	656	;# 
  8884     0291                     T2RST           equ	657	;# 
  8885     0292                     T4TMR           equ	658	;# 
  8886     0292                     TMR4            equ	658	;# 
  8887     0293                     T4PR            equ	659	;# 
  8888     0293                     PR4             equ	659	;# 
  8889     0294                     T4CON           equ	660	;# 
  8890     0295                     T4HLT           equ	661	;# 
  8891     0296                     T4CLKCON        equ	662	;# 
  8892     0297                     T4RST           equ	663	;# 
  8893     0298                     T6TMR           equ	664	;# 
  8894     0298                     TMR6            equ	664	;# 
  8895     0299                     T6PR            equ	665	;# 
  8896     0299                     PR6             equ	665	;# 
  8897     029A                     T6CON           equ	666	;# 
  8898     029B                     T6HLT           equ	667	;# 
  8899     029C                     T6CLKCON        equ	668	;# 
  8900     029D                     T6RST           equ	669	;# 
  8901     029F                     ADCPCON0        equ	671	;# 
  8902     030C                     CCPR1           equ	780	;# 
  8903     030C                     CCPR1L          equ	780	;# 
  8904     030D                     CCPR1H          equ	781	;# 
  8905     030E                     CCP1CON         equ	782	;# 
  8906     030F                     CCP1CAP         equ	783	;# 
  8907     0310                     CCPR2           equ	784	;# 
  8908     0310                     CCPR2L          equ	784	;# 
  8909     0311                     CCPR2H          equ	785	;# 
  8910     0312                     CCP2CON         equ	786	;# 
  8911     0313                     CCP2CAP         equ	787	;# 
  8912     0314                     CCPR3           equ	788	;# 
  8913     0314                     CCPR3L          equ	788	;# 
  8914     0315                     CCPR3H          equ	789	;# 
  8915     0316                     CCP3CON         equ	790	;# 
  8916     0317                     CCP3CAP         equ	791	;# 
  8917     0318                     CCPR4           equ	792	;# 
  8918     0318                     CCPR4L          equ	792	;# 
  8919     0319                     CCPR4H          equ	793	;# 
  8920     031A                     CCP4CON         equ	794	;# 
  8921     031B                     CCP4CAP         equ	795	;# 
  8922     031C                     CCPR5           equ	796	;# 
  8923     031C                     CCPR5L          equ	796	;# 
  8924     031D                     CCPR5H          equ	797	;# 
  8925     031E                     CCP5CON         equ	798	;# 
  8926     031F                     CCP5CAP         equ	799	;# 
  8927     038C                     PWM6DC          equ	908	;# 
  8928     038C                     PWM6DCL         equ	908	;# 
  8929     038D                     PWM6DCH         equ	909	;# 
  8930     038E                     PWM6CON         equ	910	;# 
  8931     0390                     PWM7DC          equ	912	;# 
  8932     0390                     PWM7DCL         equ	912	;# 
  8933     0391                     PWM7DCH         equ	913	;# 
  8934     0392                     PWM7CON         equ	914	;# 
  8935     048C                     SMT1TMR         equ	1164	;# 
  8936     048C                     SMT1TMRL        equ	1164	;# 
  8937     048D                     SMT1TMRH        equ	1165	;# 
  8938     048E                     SMT1TMRU        equ	1166	;# 
  8939     048F                     SMT1CPR         equ	1167	;# 
  8940     048F                     SMT1CPRL        equ	1167	;# 
  8941     0490                     SMT1CPRH        equ	1168	;# 
  8942     0491                     SMT1CPRU        equ	1169	;# 
  8943     0492                     SMT1CPW         equ	1170	;# 
  8944     0492                     SMT1CPWL        equ	1170	;# 
  8945     0493                     SMT1CPWH        equ	1171	;# 
  8946     0494                     SMT1CPWU        equ	1172	;# 
  8947     0495                     SMT1PR          equ	1173	;# 
  8948     0495                     SMT1PRL         equ	1173	;# 
  8949     0496                     SMT1PRH         equ	1174	;# 
  8950     0497                     SMT1PRU         equ	1175	;# 
  8951     0498                     SMT1CON0        equ	1176	;# 
  8952     0499                     SMT1CON1        equ	1177	;# 
  8953     049A                     SMT1STAT        equ	1178	;# 
  8954     049B                     SMT1CLK         equ	1179	;# 
  8955     049C                     SMT1SIG         equ	1180	;# 
  8956     049D                     SMT1WIN         equ	1181	;# 
  8957     050C                     SMT2TMR         equ	1292	;# 
  8958     050C                     SMT2TMRL        equ	1292	;# 
  8959     050D                     SMT2TMRH        equ	1293	;# 
  8960     050E                     SMT2TMRU        equ	1294	;# 
  8961     050F                     SMT2CPR         equ	1295	;# 
  8962     050F                     SMT2CPRL        equ	1295	;# 
  8963     0510                     SMT2CPRH        equ	1296	;# 
  8964     0511                     SMT2CPRU        equ	1297	;# 
  8965     0512                     SMT2CPW         equ	1298	;# 
  8966     0512                     SMT2CPWL        equ	1298	;# 
  8967     0513                     SMT2CPWH        equ	1299	;# 
  8968     0514                     SMT2CPWU        equ	1300	;# 
  8969     0515                     SMT2PR          equ	1301	;# 
  8970     0515                     SMT2PRL         equ	1301	;# 
  8971     0516                     SMT2PRH         equ	1302	;# 
  8972     0517                     SMT2PRU         equ	1303	;# 
  8973     0518                     SMT2CON0        equ	1304	;# 
  8974     0519                     SMT2CON1        equ	1305	;# 
  8975     051A                     SMT2STAT        equ	1306	;# 
  8976     051B                     SMT2CLK         equ	1307	;# 
  8977     051C                     SMT2SIG         equ	1308	;# 
  8978     051D                     SMT2WIN         equ	1309	;# 
  8979     058C                     NCO1ACC         equ	1420	;# 
  8980     058C                     NCO1ACCL        equ	1420	;# 
  8981     058D                     NCO1ACCH        equ	1421	;# 
  8982     058E                     NCO1ACCU        equ	1422	;# 
  8983     058F                     NCO1INC         equ	1423	;# 
  8984     058F                     NCO1INCL        equ	1423	;# 
  8985     0590                     NCO1INCH        equ	1424	;# 
  8986     0591                     NCO1INCU        equ	1425	;# 
  8987     0592                     NCO1CON         equ	1426	;# 
  8988     0593                     NCO1CLK         equ	1427	;# 
  8989     059C                     TMR0L           equ	1436	;# 
  8990     059C                     TMR0            equ	1436	;# 
  8991     059D                     TMR0H           equ	1437	;# 
  8992     059D                     PR0             equ	1437	;# 
  8993     059E                     T0CON0          equ	1438	;# 
  8994     059F                     T0CON1          equ	1439	;# 
  8995     060C                     CWG1CLK         equ	1548	;# 
  8996     060C                     CWG1CLKCON      equ	1548	;# 
  8997     060D                     CWG1ISM         equ	1549	;# 
  8998     060D                     CWG1DAT         equ	1549	;# 
  8999     060E                     CWG1DBR         equ	1550	;# 
  9000     060F                     CWG1DBF         equ	1551	;# 
  9001     0610                     CWG1CON0        equ	1552	;# 
  9002     0611                     CWG1CON1        equ	1553	;# 
  9003     0612                     CWG1AS0         equ	1554	;# 
  9004     0613                     CWG1AS1         equ	1555	;# 
  9005     0614                     CWG1STR         equ	1556	;# 
  9006     0616                     CWG2CLK         equ	1558	;# 
  9007     0616                     CWG2CLKCON      equ	1558	;# 
  9008     0617                     CWG2ISM         equ	1559	;# 
  9009     0617                     CWG2DAT         equ	1559	;# 
  9010     0618                     CWG2DBR         equ	1560	;# 
  9011     0619                     CWG2DBF         equ	1561	;# 
  9012     061A                     CWG2CON0        equ	1562	;# 
  9013     061B                     CWG2CON1        equ	1563	;# 
  9014     061C                     CWG2AS0         equ	1564	;# 
  9015     061D                     CWG2AS1         equ	1565	;# 
  9016     061E                     CWG2STR         equ	1566	;# 
  9017     068C                     CWG3CLK         equ	1676	;# 
  9018     068C                     CWG3CLKCON      equ	1676	;# 
  9019     068D                     CWG3ISM         equ	1677	;# 
  9020     068D                     CWG3DAT         equ	1677	;# 
  9021     068E                     CWG3DBR         equ	1678	;# 
  9022     068F                     CWG3DBF         equ	1679	;# 
  9023     0690                     CWG3CON0        equ	1680	;# 
  9024     0691                     CWG3CON1        equ	1681	;# 
  9025     0692                     CWG3AS0         equ	1682	;# 
  9026     0693                     CWG3AS1         equ	1683	;# 
  9027     0694                     CWG3STR         equ	1684	;# 
  9028     070C                     PIR0            equ	1804	;# 
  9029     070D                     PIR1            equ	1805	;# 
  9030     070E                     PIR2            equ	1806	;# 
  9031     070F                     PIR3            equ	1807	;# 
  9032     0710                     PIR4            equ	1808	;# 
  9033     0711                     PIR5            equ	1809	;# 
  9034     0712                     PIR6            equ	1810	;# 
  9035     0713                     PIR7            equ	1811	;# 
  9036     0714                     PIR8            equ	1812	;# 
  9037     0716                     PIE0            equ	1814	;# 
  9038     0717                     PIE1            equ	1815	;# 
  9039     0718                     PIE2            equ	1816	;# 
  9040     0719                     PIE3            equ	1817	;# 
  9041     071A                     PIE4            equ	1818	;# 
  9042     071B                     PIE5            equ	1819	;# 
  9043     071C                     PIE6            equ	1820	;# 
  9044     071D                     PIE7            equ	1821	;# 
  9045     071E                     PIE8            equ	1822	;# 
  9046     0796                     PMD0            equ	1942	;# 
  9047     0797                     PMD1            equ	1943	;# 
  9048     0798                     PMD2            equ	1944	;# 
  9049     0799                     PMD3            equ	1945	;# 
  9050     079A                     PMD4            equ	1946	;# 
  9051     079B                     PMD5            equ	1947	;# 
  9052     079C                     PMD6            equ	1948	;# 
  9053     079D                     PMD7            equ	1949	;# 
  9054     080C                     WDTCON0         equ	2060	;# 
  9055     080D                     WDTCON1         equ	2061	;# 
  9056     080E                     WDTPSL          equ	2062	;# 
  9057     080F                     WDTPSH          equ	2063	;# 
  9058     0810                     WDTTMR          equ	2064	;# 
  9059     0811                     BORCON          equ	2065	;# 
  9060     0813                     PCON0           equ	2067	;# 
  9061     0814                     PCON1           equ	2068	;# 
  9062     081A                     NVMADR          equ	2074	;# 
  9063     081A                     NVMADRL         equ	2074	;# 
  9064     081B                     NVMADRH         equ	2075	;# 
  9065     081C                     NVMDAT          equ	2076	;# 
  9066     081C                     NVMDATL         equ	2076	;# 
  9067     081D                     NVMDATH         equ	2077	;# 
  9068     081E                     NVMCON1         equ	2078	;# 
  9069     081F                     NVMCON2         equ	2079	;# 
  9070     088C                     CPUDOZE         equ	2188	;# 
  9071     088D                     OSCCON1         equ	2189	;# 
  9072     088E                     OSCCON2         equ	2190	;# 
  9073     088F                     OSCCON3         equ	2191	;# 
  9074     0890                     OSCSTAT         equ	2192	;# 
  9075     0891                     OSCEN           equ	2193	;# 
  9076     0892                     OSCTUNE         equ	2194	;# 
  9077     0893                     OSCFRQ          equ	2195	;# 
  9078     0895                     CLKRCON         equ	2197	;# 
  9079     0896                     CLKRCLK         equ	2198	;# 
  9080     0897                     MD1CON0         equ	2199	;# 
  9081     0898                     MD1CON1         equ	2200	;# 
  9082     0899                     MD1SRC          equ	2201	;# 
  9083     089A                     MD1CARL         equ	2202	;# 
  9084     089B                     MD1CARH         equ	2203	;# 
  9085     090C                     FVRCON          equ	2316	;# 
  9086     090E                     DAC1CON0        equ	2318	;# 
  9087     090F                     DAC1CON1        equ	2319	;# 
  9088     091F                     ZCDCON          equ	2335	;# 
  9089     098F                     CMOUT           equ	2447	;# 
  9090     098F                     CMSTAT          equ	2447	;# 
  9091     0990                     CM1CON0         equ	2448	;# 
  9092     0991                     CM1CON1         equ	2449	;# 
  9093     0992                     CM1NCH          equ	2450	;# 
  9094     0993                     CM1PCH          equ	2451	;# 
  9095     0994                     CM2CON0         equ	2452	;# 
  9096     0995                     CM2CON1         equ	2453	;# 
  9097     0996                     CM2NCH          equ	2454	;# 
  9098     0997                     CM2PCH          equ	2455	;# 
  9099     0A19                     RC2REG          equ	2585	;# 
  9100     0A19                     RCREG2          equ	2585	;# 
  9101     0A1A                     TX2REG          equ	2586	;# 
  9102     0A1A                     TXREG2          equ	2586	;# 
  9103     0A1B                     SP2BRG          equ	2587	;# 
  9104     0A1B                     SP2BRGL         equ	2587	;# 
  9105     0A1B                     SPBRG2          equ	2587	;# 
  9106     0A1C                     SP2BRGH         equ	2588	;# 
  9107     0A1C                     SPBRGH2         equ	2588	;# 
  9108     0A1D                     RC2STA          equ	2589	;# 
  9109     0A1D                     RCSTA2          equ	2589	;# 
  9110     0A1E                     TX2STA          equ	2590	;# 
  9111     0A1E                     TXSTA2          equ	2590	;# 
  9112     0A1F                     BAUD2CON        equ	2591	;# 
  9113     0A1F                     BAUDCON2        equ	2591	;# 
  9114     0A1F                     BAUDCTL2        equ	2591	;# 
  9115     1E0F                     CLCDATA         equ	7695	;# 
  9116     1E10                     CLC1CON         equ	7696	;# 
  9117     1E11                     CLC1POL         equ	7697	;# 
  9118     1E12                     CLC1SEL0        equ	7698	;# 
  9119     1E13                     CLC1SEL1        equ	7699	;# 
  9120     1E14                     CLC1SEL2        equ	7700	;# 
  9121     1E15                     CLC1SEL3        equ	7701	;# 
  9122     1E16                     CLC1GLS0        equ	7702	;# 
  9123     1E17                     CLC1GLS1        equ	7703	;# 
  9124     1E18                     CLC1GLS2        equ	7704	;# 
  9125     1E19                     CLC1GLS3        equ	7705	;# 
  9126     1E1A                     CLC2CON         equ	7706	;# 
  9127     1E1B                     CLC2POL         equ	7707	;# 
  9128     1E1C                     CLC2SEL0        equ	7708	;# 
  9129     1E1D                     CLC2SEL1        equ	7709	;# 
  9130     1E1E                     CLC2SEL2        equ	7710	;# 
  9131     1E1F                     CLC2SEL3        equ	7711	;# 
  9132     1E20                     CLC2GLS0        equ	7712	;# 
  9133     1E21                     CLC2GLS1        equ	7713	;# 
  9134     1E22                     CLC2GLS2        equ	7714	;# 
  9135     1E23                     CLC2GLS3        equ	7715	;# 
  9136     1E24                     CLC3CON         equ	7716	;# 
  9137     1E25                     CLC3POL         equ	7717	;# 
  9138     1E26                     CLC3SEL0        equ	7718	;# 
  9139     1E27                     CLC3SEL1        equ	7719	;# 
  9140     1E28                     CLC3SEL2        equ	7720	;# 
  9141     1E29                     CLC3SEL3        equ	7721	;# 
  9142     1E2A                     CLC3GLS0        equ	7722	;# 
  9143     1E2B                     CLC3GLS1        equ	7723	;# 
  9144     1E2C                     CLC3GLS2        equ	7724	;# 
  9145     1E2D                     CLC3GLS3        equ	7725	;# 
  9146     1E2E                     CLC4CON         equ	7726	;# 
  9147     1E2F                     CLC4POL         equ	7727	;# 
  9148     1E30                     CLC4SEL0        equ	7728	;# 
  9149     1E31                     CLC4SEL1        equ	7729	;# 
  9150     1E32                     CLC4SEL2        equ	7730	;# 
  9151     1E33                     CLC4SEL3        equ	7731	;# 
  9152     1E34                     CLC4GLS0        equ	7732	;# 
  9153     1E35                     CLC4GLS1        equ	7733	;# 
  9154     1E36                     CLC4GLS2        equ	7734	;# 
  9155     1E37                     CLC4GLS3        equ	7735	;# 
  9156     1E8F                     PPSLOCK         equ	7823	;# 
  9157     1E90                     INTPPS          equ	7824	;# 
  9158     1E91                     T0CKIPPS        equ	7825	;# 
  9159     1E92                     T1CKIPPS        equ	7826	;# 
  9160     1E93                     T1GPPS          equ	7827	;# 
  9161     1E94                     T3CKIPPS        equ	7828	;# 
  9162     1E95                     T3GPPS          equ	7829	;# 
  9163     1E96                     T5CKIPPS        equ	7830	;# 
  9164     1E97                     T5GPPS          equ	7831	;# 
  9165     1E9C                     T2INPPS         equ	7836	;# 
  9166     1E9D                     T4INPPS         equ	7837	;# 
  9167     1E9E                     T6INPPS         equ	7838	;# 
  9168     1EA1                     CCP1PPS         equ	7841	;# 
  9169     1EA2                     CCP2PPS         equ	7842	;# 
  9170     1EA3                     CCP3PPS         equ	7843	;# 
  9171     1EA4                     CCP4PPS         equ	7844	;# 
  9172     1EA5                     CCP5PPS         equ	7845	;# 
  9173     1EA9                     SMT1WINPPS      equ	7849	;# 
  9174     1EAA                     SMT1SIGPPS      equ	7850	;# 
  9175     1EAB                     SMT2WINPPS      equ	7851	;# 
  9176     1EAC                     SMT2SIGPPS      equ	7852	;# 
  9177     1EB1                     CWG1PPS         equ	7857	;# 
  9178     1EB2                     CWG2PPS         equ	7858	;# 
  9179     1EB3                     CWG3PPS         equ	7859	;# 
  9180     1EB8                     MDCARLPPS       equ	7864	;# 
  9181     1EB9                     MDCARHPPS       equ	7865	;# 
  9182     1EBA                     MDSRCPPS        equ	7866	;# 
  9183     1EBB                     CLCIN0PPS       equ	7867	;# 
  9184     1EBC                     CLCIN1PPS       equ	7868	;# 
  9185     1EBD                     CLCIN2PPS       equ	7869	;# 
  9186     1EBE                     CLCIN3PPS       equ	7870	;# 
  9187     1EC3                     ADACTPPS        equ	7875	;# 
  9188     1EC5                     SSP1CLKPPS      equ	7877	;# 
  9189     1EC6                     SSP1DATPPS      equ	7878	;# 
  9190     1EC7                     SSP1SSPPS       equ	7879	;# 
  9191     1EC8                     SSP2CLKPPS      equ	7880	;# 
  9192     1EC9                     SSP2DATPPS      equ	7881	;# 
  9193     1ECA                     SSP2SSPPS       equ	7882	;# 
  9194     1ECB                     RX1PPS          equ	7883	;# 
  9195     1ECC                     CK1PPS          equ	7884	;# 
  9196     1ECD                     RX2PPS          equ	7885	;# 
  9197     1ECE                     CK2PPS          equ	7886	;# 
  9198     1F10                     RA0PPS          equ	7952	;# 
  9199     1F11                     RA1PPS          equ	7953	;# 
  9200     1F12                     RA2PPS          equ	7954	;# 
  9201     1F13                     RA3PPS          equ	7955	;# 
  9202     1F14                     RA4PPS          equ	7956	;# 
  9203     1F15                     RA5PPS          equ	7957	;# 
  9204     1F16                     RA6PPS          equ	7958	;# 
  9205     1F17                     RA7PPS          equ	7959	;# 
  9206     1F18                     RB0PPS          equ	7960	;# 
  9207     1F19                     RB1PPS          equ	7961	;# 
  9208     1F1A                     RB2PPS          equ	7962	;# 
  9209     1F1B                     RB3PPS          equ	7963	;# 
  9210     1F1C                     RB4PPS          equ	7964	;# 
  9211     1F1D                     RB5PPS          equ	7965	;# 
  9212     1F1E                     RB6PPS          equ	7966	;# 
  9213     1F1F                     RB7PPS          equ	7967	;# 
  9214     1F20                     RC0PPS          equ	7968	;# 
  9215     1F21                     RC1PPS          equ	7969	;# 
  9216     1F22                     RC2PPS          equ	7970	;# 
  9217     1F23                     RC3PPS          equ	7971	;# 
  9218     1F24                     RC4PPS          equ	7972	;# 
  9219     1F25                     RC5PPS          equ	7973	;# 
  9220     1F26                     RC6PPS          equ	7974	;# 
  9221     1F27                     RC7PPS          equ	7975	;# 
  9222     1F38                     ANSELA          equ	7992	;# 
  9223     1F39                     WPUA            equ	7993	;# 
  9224     1F3A                     ODCONA          equ	7994	;# 
  9225     1F3B                     SLRCONA         equ	7995	;# 
  9226     1F3C                     INLVLA          equ	7996	;# 
  9227     1F3D                     IOCAP           equ	7997	;# 
  9228     1F3E                     IOCAN           equ	7998	;# 
  9229     1F3F                     IOCAF           equ	7999	;# 
  9230     1F43                     ANSELB          equ	8003	;# 
  9231     1F44                     WPUB            equ	8004	;# 
  9232     1F45                     ODCONB          equ	8005	;# 
  9233     1F46                     SLRCONB         equ	8006	;# 
  9234     1F47                     INLVLB          equ	8007	;# 
  9235     1F48                     IOCBP           equ	8008	;# 
  9236     1F49                     IOCBN           equ	8009	;# 
  9237     1F4A                     IOCBF           equ	8010	;# 
  9238     1F4E                     ANSELC          equ	8014	;# 
  9239     1F4F                     WPUC            equ	8015	;# 
  9240     1F50                     ODCONC          equ	8016	;# 
  9241     1F51                     SLRCONC         equ	8017	;# 
  9242     1F52                     INLVLC          equ	8018	;# 
  9243     1F53                     IOCCP           equ	8019	;# 
  9244     1F54                     IOCCN           equ	8020	;# 
  9245     1F55                     IOCCF           equ	8021	;# 
  9246     1F65                     WPUE            equ	8037	;# 
  9247     1F66                     ODCONE          equ	8038	;# 
  9248     1F67                     SLRCONE         equ	8039	;# 
  9249     1F68                     INLVLE          equ	8040	;# 
  9250     1F69                     IOCEP           equ	8041	;# 
  9251     1F6A                     IOCEN           equ	8042	;# 
  9252     1F6B                     IOCEF           equ	8043	;# 
  9253     1FE4                     STATUS_SHAD     equ	8164	;# 
  9254     1FE5                     WREG_SHAD       equ	8165	;# 
  9255     1FE6                     BSR_SHAD        equ	8166	;# 
  9256     1FE7                     PCLATH_SHAD     equ	8167	;# 
  9257     1FE8                     FSR0_SHAD       equ	8168	;# 
  9258     1FE8                     FSR0L_SHAD      equ	8168	;# 
  9259     1FE9                     FSR0H_SHAD      equ	8169	;# 
  9260     1FEA                     FSR1L_SHAD      equ	8170	;# 
  9261     1FEB                     FSR1H_SHAD      equ	8171	;# 
  9262     1FED                     STKPTR          equ	8173	;# 
  9263     1FEE                     TOSL            equ	8174	;# 
  9264     1FEF                     TOSH            equ	8175	;# 
  9265     0000                     INDF0           equ	0	;# 
  9266     0001                     INDF1           equ	1	;# 
  9267     0002                     PCL             equ	2	;# 
  9268     0003                     STATUS          equ	3	;# 
  9269     0004                     FSR0L           equ	4	;# 
  9270     0005                     FSR0H           equ	5	;# 
  9271     0006                     FSR1L           equ	6	;# 
  9272     0007                     FSR1H           equ	7	;# 
  9273     0008                     BSR             equ	8	;# 
  9274     0009                     WREG            equ	9	;# 
  9275     000A                     PCLATH          equ	10	;# 
  9276     000B                     INTCON          equ	11	;# 
  9277     000C                     PORTA           equ	12	;# 
  9278     000D                     PORTB           equ	13	;# 
  9279     000E                     PORTC           equ	14	;# 
  9280     0010                     PORTE           equ	16	;# 
  9281     0012                     TRISA           equ	18	;# 
  9282     0013                     TRISB           equ	19	;# 
  9283     0014                     TRISC           equ	20	;# 
  9284     0016                     TRISE           equ	22	;# 
  9285     0018                     LATA            equ	24	;# 
  9286     0019                     LATB            equ	25	;# 
  9287     001A                     LATC            equ	26	;# 
  9288     008C                     ADLTH           equ	140	;# 
  9289     008C                     ADLTHL          equ	140	;# 
  9290     008D                     ADLTHH          equ	141	;# 
  9291     008E                     ADUTH           equ	142	;# 
  9292     008E                     ADUTHL          equ	142	;# 
  9293     008F                     ADUTHH          equ	143	;# 
  9294     0090                     ADERR           equ	144	;# 
  9295     0090                     ADERRL          equ	144	;# 
  9296     0091                     ADERRH          equ	145	;# 
  9297     0092                     ADSTPT          equ	146	;# 
  9298     0092                     ADSTPTL         equ	146	;# 
  9299     0093                     ADSTPTH         equ	147	;# 
  9300     0094                     ADFLTR          equ	148	;# 
  9301     0094                     ADFLTRL         equ	148	;# 
  9302     0095                     ADFLTRH         equ	149	;# 
  9303     0096                     ADACC           equ	150	;# 
  9304     0096                     ADACCL          equ	150	;# 
  9305     0097                     ADACCH          equ	151	;# 
  9306     0098                     ADACCU          equ	152	;# 
  9307     0099                     ADCNT           equ	153	;# 
  9308     009A                     ADRPT           equ	154	;# 
  9309     009B                     ADPREV          equ	155	;# 
  9310     009B                     ADPREVL         equ	155	;# 
  9311     009C                     ADPREVH         equ	156	;# 
  9312     009D                     ADRES           equ	157	;# 
  9313     009D                     ADRESL          equ	157	;# 
  9314     009E                     ADRESH          equ	158	;# 
  9315     009F                     ADPCH           equ	159	;# 
  9316     010C                     ADACQ           equ	268	;# 
  9317     010C                     ADACQL          equ	268	;# 
  9318     010D                     ADACQH          equ	269	;# 
  9319     010E                     ADCAP           equ	270	;# 
  9320     010F                     ADPRE           equ	271	;# 
  9321     010F                     ADPREL          equ	271	;# 
  9322     0110                     ADPREH          equ	272	;# 
  9323     0111                     ADCON0          equ	273	;# 
  9324     0112                     ADCON1          equ	274	;# 
  9325     0113                     ADCON2          equ	275	;# 
  9326     0114                     ADCON3          equ	276	;# 
  9327     0115                     ADSTAT          equ	277	;# 
  9328     0116                     ADREF           equ	278	;# 
  9329     0117                     ADACT           equ	279	;# 
  9330     0118                     ADCLK           equ	280	;# 
  9331     0119                     RC1REG          equ	281	;# 
  9332     0119                     RCREG           equ	281	;# 
  9333     0119                     RCREG1          equ	281	;# 
  9334     011A                     TX1REG          equ	282	;# 
  9335     011A                     TXREG1          equ	282	;# 
  9336     011A                     TXREG           equ	282	;# 
  9337     011B                     SP1BRG          equ	283	;# 
  9338     011B                     SPBRG           equ	283	;# 
  9339     011B                     SP1BRGL         equ	283	;# 
  9340     011B                     SPBRG1          equ	283	;# 
  9341     011B                     SPBRGL          equ	283	;# 
  9342     011C                     SP1BRGH         equ	284	;# 
  9343     011C                     SPBRGH          equ	284	;# 
  9344     011C                     SPBRGH1         equ	284	;# 
  9345     011D                     RC1STA          equ	285	;# 
  9346     011D                     RCSTA1          equ	285	;# 
  9347     011D                     RCSTA           equ	285	;# 
  9348     011E                     TX1STA          equ	286	;# 
  9349     011E                     TXSTA1          equ	286	;# 
  9350     011E                     TXSTA           equ	286	;# 
  9351     011F                     BAUD1CON        equ	287	;# 
  9352     011F                     BAUDCON1        equ	287	;# 
  9353     011F                     BAUDCTL1        equ	287	;# 
  9354     011F                     BAUDCON         equ	287	;# 
  9355     011F                     BAUDCTL         equ	287	;# 
  9356     018C                     SSP1BUF         equ	396	;# 
  9357     018D                     SSP1ADD         equ	397	;# 
  9358     018E                     SSP1MSK         equ	398	;# 
  9359     018F                     SSP1STAT        equ	399	;# 
  9360     0190                     SSP1CON1        equ	400	;# 
  9361     0191                     SSP1CON2        equ	401	;# 
  9362     0192                     SSP1CON3        equ	402	;# 
  9363     0196                     SSP2BUF         equ	406	;# 
  9364     0197                     SSP2ADD         equ	407	;# 
  9365     0198                     SSP2MSK         equ	408	;# 
  9366     0199                     SSP2STAT        equ	409	;# 
  9367     019A                     SSP2CON1        equ	410	;# 
  9368     019B                     SSP2CON2        equ	411	;# 
  9369     019C                     SSP2CON3        equ	412	;# 
  9370     020C                     TMR1            equ	524	;# 
  9371     020C                     TMR1L           equ	524	;# 
  9372     020D                     TMR1H           equ	525	;# 
  9373     020E                     T1CON           equ	526	;# 
  9374     020E                     TMR1CON         equ	526	;# 
  9375     020F                     T1GCON          equ	527	;# 
  9376     020F                     TMR1GCON        equ	527	;# 
  9377     0210                     T1GATE          equ	528	;# 
  9378     0210                     TMR1GATE        equ	528	;# 
  9379     0211                     T1CLK           equ	529	;# 
  9380     0211                     TMR1CLK         equ	529	;# 
  9381     0211                     PR1             equ	529	;# 
  9382     0212                     TMR3            equ	530	;# 
  9383     0212                     TMR3L           equ	530	;# 
  9384     0213                     TMR3H           equ	531	;# 
  9385     0214                     T3CON           equ	532	;# 
  9386     0214                     TMR3CON         equ	532	;# 
  9387     0215                     T3GCON          equ	533	;# 
  9388     0215                     TMR3GCON        equ	533	;# 
  9389     0216                     T3GATE          equ	534	;# 
  9390     0216                     TMR3GATE        equ	534	;# 
  9391     0217                     T3CLK           equ	535	;# 
  9392     0217                     TMR3CLK         equ	535	;# 
  9393     0217                     PR3             equ	535	;# 
  9394     0218                     TMR5            equ	536	;# 
  9395     0218                     TMR5L           equ	536	;# 
  9396     0219                     TMR5H           equ	537	;# 
  9397     021A                     T5CON           equ	538	;# 
  9398     021A                     TMR5CON         equ	538	;# 
  9399     021B                     T5GCON          equ	539	;# 
  9400     021B                     TMR5GCON        equ	539	;# 
  9401     021C                     T5GATE          equ	540	;# 
  9402     021C                     TMR5GATE        equ	540	;# 
  9403     021D                     T5CLK           equ	541	;# 
  9404     021D                     TMR5CLK         equ	541	;# 
  9405     021D                     PR5             equ	541	;# 
  9406     021E                     CCPTMRS0        equ	542	;# 
  9407     021F                     CCPTMRS1        equ	543	;# 
  9408     028C                     T2TMR           equ	652	;# 
  9409     028C                     TMR2            equ	652	;# 
  9410     028D                     T2PR            equ	653	;# 
  9411     028D                     PR2             equ	653	;# 
  9412     028E                     T2CON           equ	654	;# 
  9413     028F                     T2HLT           equ	655	;# 
  9414     0290                     T2CLKCON        equ	656	;# 
  9415     0291                     T2RST           equ	657	;# 
  9416     0292                     T4TMR           equ	658	;# 
  9417     0292                     TMR4            equ	658	;# 
  9418     0293                     T4PR            equ	659	;# 
  9419     0293                     PR4             equ	659	;# 
  9420     0294                     T4CON           equ	660	;# 
  9421     0295                     T4HLT           equ	661	;# 
  9422     0296                     T4CLKCON        equ	662	;# 
  9423     0297                     T4RST           equ	663	;# 
  9424     0298                     T6TMR           equ	664	;# 
  9425     0298                     TMR6            equ	664	;# 
  9426     0299                     T6PR            equ	665	;# 
  9427     0299                     PR6             equ	665	;# 
  9428     029A                     T6CON           equ	666	;# 
  9429     029B                     T6HLT           equ	667	;# 
  9430     029C                     T6CLKCON        equ	668	;# 
  9431     029D                     T6RST           equ	669	;# 
  9432     029F                     ADCPCON0        equ	671	;# 
  9433     030C                     CCPR1           equ	780	;# 
  9434     030C                     CCPR1L          equ	780	;# 
  9435     030D                     CCPR1H          equ	781	;# 
  9436     030E                     CCP1CON         equ	782	;# 
  9437     030F                     CCP1CAP         equ	783	;# 
  9438     0310                     CCPR2           equ	784	;# 
  9439     0310                     CCPR2L          equ	784	;# 
  9440     0311                     CCPR2H          equ	785	;# 
  9441     0312                     CCP2CON         equ	786	;# 
  9442     0313                     CCP2CAP         equ	787	;# 
  9443     0314                     CCPR3           equ	788	;# 
  9444     0314                     CCPR3L          equ	788	;# 
  9445     0315                     CCPR3H          equ	789	;# 
  9446     0316                     CCP3CON         equ	790	;# 
  9447     0317                     CCP3CAP         equ	791	;# 
  9448     0318                     CCPR4           equ	792	;# 
  9449     0318                     CCPR4L          equ	792	;# 
  9450     0319                     CCPR4H          equ	793	;# 
  9451     031A                     CCP4CON         equ	794	;# 
  9452     031B                     CCP4CAP         equ	795	;# 
  9453     031C                     CCPR5           equ	796	;# 
  9454     031C                     CCPR5L          equ	796	;# 
  9455     031D                     CCPR5H          equ	797	;# 
  9456     031E                     CCP5CON         equ	798	;# 
  9457     031F                     CCP5CAP         equ	799	;# 
  9458     038C                     PWM6DC          equ	908	;# 
  9459     038C                     PWM6DCL         equ	908	;# 
  9460     038D                     PWM6DCH         equ	909	;# 
  9461     038E                     PWM6CON         equ	910	;# 
  9462     0390                     PWM7DC          equ	912	;# 
  9463     0390                     PWM7DCL         equ	912	;# 
  9464     0391                     PWM7DCH         equ	913	;# 
  9465     0392                     PWM7CON         equ	914	;# 
  9466     048C                     SMT1TMR         equ	1164	;# 
  9467     048C                     SMT1TMRL        equ	1164	;# 
  9468     048D                     SMT1TMRH        equ	1165	;# 
  9469     048E                     SMT1TMRU        equ	1166	;# 
  9470     048F                     SMT1CPR         equ	1167	;# 
  9471     048F                     SMT1CPRL        equ	1167	;# 
  9472     0490                     SMT1CPRH        equ	1168	;# 
  9473     0491                     SMT1CPRU        equ	1169	;# 
  9474     0492                     SMT1CPW         equ	1170	;# 
  9475     0492                     SMT1CPWL        equ	1170	;# 
  9476     0493                     SMT1CPWH        equ	1171	;# 
  9477     0494                     SMT1CPWU        equ	1172	;# 
  9478     0495                     SMT1PR          equ	1173	;# 
  9479     0495                     SMT1PRL         equ	1173	;# 
  9480     0496                     SMT1PRH         equ	1174	;# 
  9481     0497                     SMT1PRU         equ	1175	;# 
  9482     0498                     SMT1CON0        equ	1176	;# 
  9483     0499                     SMT1CON1        equ	1177	;# 
  9484     049A                     SMT1STAT        equ	1178	;# 
  9485     049B                     SMT1CLK         equ	1179	;# 
  9486     049C                     SMT1SIG         equ	1180	;# 
  9487     049D                     SMT1WIN         equ	1181	;# 
  9488     050C                     SMT2TMR         equ	1292	;# 
  9489     050C                     SMT2TMRL        equ	1292	;# 
  9490     050D                     SMT2TMRH        equ	1293	;# 
  9491     050E                     SMT2TMRU        equ	1294	;# 
  9492     050F                     SMT2CPR         equ	1295	;# 
  9493     050F                     SMT2CPRL        equ	1295	;# 
  9494     0510                     SMT2CPRH        equ	1296	;# 
  9495     0511                     SMT2CPRU        equ	1297	;# 
  9496     0512                     SMT2CPW         equ	1298	;# 
  9497     0512                     SMT2CPWL        equ	1298	;# 
  9498     0513                     SMT2CPWH        equ	1299	;# 
  9499     0514                     SMT2CPWU        equ	1300	;# 
  9500     0515                     SMT2PR          equ	1301	;# 
  9501     0515                     SMT2PRL         equ	1301	;# 
  9502     0516                     SMT2PRH         equ	1302	;# 
  9503     0517                     SMT2PRU         equ	1303	;# 
  9504     0518                     SMT2CON0        equ	1304	;# 
  9505     0519                     SMT2CON1        equ	1305	;# 
  9506     051A                     SMT2STAT        equ	1306	;# 
  9507     051B                     SMT2CLK         equ	1307	;# 
  9508     051C                     SMT2SIG         equ	1308	;# 
  9509     051D                     SMT2WIN         equ	1309	;# 
  9510     058C                     NCO1ACC         equ	1420	;# 
  9511     058C                     NCO1ACCL        equ	1420	;# 
  9512     058D                     NCO1ACCH        equ	1421	;# 
  9513     058E                     NCO1ACCU        equ	1422	;# 
  9514     058F                     NCO1INC         equ	1423	;# 
  9515     058F                     NCO1INCL        equ	1423	;# 
  9516     0590                     NCO1INCH        equ	1424	;# 
  9517     0591                     NCO1INCU        equ	1425	;# 
  9518     0592                     NCO1CON         equ	1426	;# 
  9519     0593                     NCO1CLK         equ	1427	;# 
  9520     059C                     TMR0L           equ	1436	;# 
  9521     059C                     TMR0            equ	1436	;# 
  9522     059D                     TMR0H           equ	1437	;# 
  9523     059D                     PR0             equ	1437	;# 
  9524     059E                     T0CON0          equ	1438	;# 
  9525     059F                     T0CON1          equ	1439	;# 
  9526     060C                     CWG1CLK         equ	1548	;# 
  9527     060C                     CWG1CLKCON      equ	1548	;# 
  9528     060D                     CWG1ISM         equ	1549	;# 
  9529     060D                     CWG1DAT         equ	1549	;# 
  9530     060E                     CWG1DBR         equ	1550	;# 
  9531     060F                     CWG1DBF         equ	1551	;# 
  9532     0610                     CWG1CON0        equ	1552	;# 
  9533     0611                     CWG1CON1        equ	1553	;# 
  9534     0612                     CWG1AS0         equ	1554	;# 
  9535     0613                     CWG1AS1         equ	1555	;# 
  9536     0614                     CWG1STR         equ	1556	;# 
  9537     0616                     CWG2CLK         equ	1558	;# 
  9538     0616                     CWG2CLKCON      equ	1558	;# 
  9539     0617                     CWG2ISM         equ	1559	;# 
  9540     0617                     CWG2DAT         equ	1559	;# 
  9541     0618                     CWG2DBR         equ	1560	;# 
  9542     0619                     CWG2DBF         equ	1561	;# 
  9543     061A                     CWG2CON0        equ	1562	;# 
  9544     061B                     CWG2CON1        equ	1563	;# 
  9545     061C                     CWG2AS0         equ	1564	;# 
  9546     061D                     CWG2AS1         equ	1565	;# 
  9547     061E                     CWG2STR         equ	1566	;# 
  9548     068C                     CWG3CLK         equ	1676	;# 
  9549     068C                     CWG3CLKCON      equ	1676	;# 
  9550     068D                     CWG3ISM         equ	1677	;# 
  9551     068D                     CWG3DAT         equ	1677	;# 
  9552     068E                     CWG3DBR         equ	1678	;# 
  9553     068F                     CWG3DBF         equ	1679	;# 
  9554     0690                     CWG3CON0        equ	1680	;# 
  9555     0691                     CWG3CON1        equ	1681	;# 
  9556     0692                     CWG3AS0         equ	1682	;# 
  9557     0693                     CWG3AS1         equ	1683	;# 
  9558     0694                     CWG3STR         equ	1684	;# 
  9559     070C                     PIR0            equ	1804	;# 
  9560     070D                     PIR1            equ	1805	;# 
  9561     070E                     PIR2            equ	1806	;# 
  9562     070F                     PIR3            equ	1807	;# 
  9563     0710                     PIR4            equ	1808	;# 
  9564     0711                     PIR5            equ	1809	;# 
  9565     0712                     PIR6            equ	1810	;# 
  9566     0713                     PIR7            equ	1811	;# 
  9567     0714                     PIR8            equ	1812	;# 
  9568     0716                     PIE0            equ	1814	;# 
  9569     0717                     PIE1            equ	1815	;# 
  9570     0718                     PIE2            equ	1816	;# 
  9571     0719                     PIE3            equ	1817	;# 
  9572     071A                     PIE4            equ	1818	;# 
  9573     071B                     PIE5            equ	1819	;# 
  9574     071C                     PIE6            equ	1820	;# 
  9575     071D                     PIE7            equ	1821	;# 
  9576     071E                     PIE8            equ	1822	;# 
  9577     0796                     PMD0            equ	1942	;# 
  9578     0797                     PMD1            equ	1943	;# 
  9579     0798                     PMD2            equ	1944	;# 
  9580     0799                     PMD3            equ	1945	;# 
  9581     079A                     PMD4            equ	1946	;# 
  9582     079B                     PMD5            equ	1947	;# 
  9583     079C                     PMD6            equ	1948	;# 
  9584     079D                     PMD7            equ	1949	;# 
  9585     080C                     WDTCON0         equ	2060	;# 
  9586     080D                     WDTCON1         equ	2061	;# 
  9587     080E                     WDTPSL          equ	2062	;# 
  9588     080F                     WDTPSH          equ	2063	;# 
  9589     0810                     WDTTMR          equ	2064	;# 
  9590     0811                     BORCON          equ	2065	;# 
  9591     0813                     PCON0           equ	2067	;# 
  9592     0814                     PCON1           equ	2068	;# 
  9593     081A                     NVMADR          equ	2074	;# 
  9594     081A                     NVMADRL         equ	2074	;# 
  9595     081B                     NVMADRH         equ	2075	;# 
  9596     081C                     NVMDAT          equ	2076	;# 
  9597     081C                     NVMDATL         equ	2076	;# 
  9598     081D                     NVMDATH         equ	2077	;# 
  9599     081E                     NVMCON1         equ	2078	;# 
  9600     081F                     NVMCON2         equ	2079	;# 
  9601     088C                     CPUDOZE         equ	2188	;# 
  9602     088D                     OSCCON1         equ	2189	;# 
  9603     088E                     OSCCON2         equ	2190	;# 
  9604     088F                     OSCCON3         equ	2191	;# 
  9605     0890                     OSCSTAT         equ	2192	;# 
  9606     0891                     OSCEN           equ	2193	;# 
  9607     0892                     OSCTUNE         equ	2194	;# 
  9608     0893                     OSCFRQ          equ	2195	;# 
  9609     0895                     CLKRCON         equ	2197	;# 
  9610     0896                     CLKRCLK         equ	2198	;# 
  9611     0897                     MD1CON0         equ	2199	;# 
  9612     0898                     MD1CON1         equ	2200	;# 
  9613     0899                     MD1SRC          equ	2201	;# 
  9614     089A                     MD1CARL         equ	2202	;# 
  9615     089B                     MD1CARH         equ	2203	;# 
  9616     090C                     FVRCON          equ	2316	;# 
  9617     090E                     DAC1CON0        equ	2318	;# 
  9618     090F                     DAC1CON1        equ	2319	;# 
  9619     091F                     ZCDCON          equ	2335	;# 
  9620     098F                     CMOUT           equ	2447	;# 
  9621     098F                     CMSTAT          equ	2447	;# 
  9622     0990                     CM1CON0         equ	2448	;# 
  9623     0991                     CM1CON1         equ	2449	;# 
  9624     0992                     CM1NCH          equ	2450	;# 
  9625     0993                     CM1PCH          equ	2451	;# 
  9626     0994                     CM2CON0         equ	2452	;# 
  9627     0995                     CM2CON1         equ	2453	;# 
  9628     0996                     CM2NCH          equ	2454	;# 
  9629     0997                     CM2PCH          equ	2455	;# 
  9630     0A19                     RC2REG          equ	2585	;# 
  9631     0A19                     RCREG2          equ	2585	;# 
  9632     0A1A                     TX2REG          equ	2586	;# 
  9633     0A1A                     TXREG2          equ	2586	;# 
  9634     0A1B                     SP2BRG          equ	2587	;# 
  9635     0A1B                     SP2BRGL         equ	2587	;# 
  9636     0A1B                     SPBRG2          equ	2587	;# 
  9637     0A1C                     SP2BRGH         equ	2588	;# 
  9638     0A1C                     SPBRGH2         equ	2588	;# 
  9639     0A1D                     RC2STA          equ	2589	;# 
  9640     0A1D                     RCSTA2          equ	2589	;# 
  9641     0A1E                     TX2STA          equ	2590	;# 
  9642     0A1E                     TXSTA2          equ	2590	;# 
  9643     0A1F                     BAUD2CON        equ	2591	;# 
  9644     0A1F                     BAUDCON2        equ	2591	;# 
  9645     0A1F                     BAUDCTL2        equ	2591	;# 
  9646     1E0F                     CLCDATA         equ	7695	;# 
  9647     1E10                     CLC1CON         equ	7696	;# 
  9648     1E11                     CLC1POL         equ	7697	;# 
  9649     1E12                     CLC1SEL0        equ	7698	;# 
  9650     1E13                     CLC1SEL1        equ	7699	;# 
  9651     1E14                     CLC1SEL2        equ	7700	;# 
  9652     1E15                     CLC1SEL3        equ	7701	;# 
  9653     1E16                     CLC1GLS0        equ	7702	;# 
  9654     1E17                     CLC1GLS1        equ	7703	;# 
  9655     1E18                     CLC1GLS2        equ	7704	;# 
  9656     1E19                     CLC1GLS3        equ	7705	;# 
  9657     1E1A                     CLC2CON         equ	7706	;# 
  9658     1E1B                     CLC2POL         equ	7707	;# 
  9659     1E1C                     CLC2SEL0        equ	7708	;# 
  9660     1E1D                     CLC2SEL1        equ	7709	;# 
  9661     1E1E                     CLC2SEL2        equ	7710	;# 
  9662     1E1F                     CLC2SEL3        equ	7711	;# 
  9663     1E20                     CLC2GLS0        equ	7712	;# 
  9664     1E21                     CLC2GLS1        equ	7713	;# 
  9665     1E22                     CLC2GLS2        equ	7714	;# 
  9666     1E23                     CLC2GLS3        equ	7715	;# 
  9667     1E24                     CLC3CON         equ	7716	;# 
  9668     1E25                     CLC3POL         equ	7717	;# 
  9669     1E26                     CLC3SEL0        equ	7718	;# 
  9670     1E27                     CLC3SEL1        equ	7719	;# 
  9671     1E28                     CLC3SEL2        equ	7720	;# 
  9672     1E29                     CLC3SEL3        equ	7721	;# 
  9673     1E2A                     CLC3GLS0        equ	7722	;# 
  9674     1E2B                     CLC3GLS1        equ	7723	;# 
  9675     1E2C                     CLC3GLS2        equ	7724	;# 
  9676     1E2D                     CLC3GLS3        equ	7725	;# 
  9677     1E2E                     CLC4CON         equ	7726	;# 
  9678     1E2F                     CLC4POL         equ	7727	;# 
  9679     1E30                     CLC4SEL0        equ	7728	;# 
  9680     1E31                     CLC4SEL1        equ	7729	;# 
  9681     1E32                     CLC4SEL2        equ	7730	;# 
  9682     1E33                     CLC4SEL3        equ	7731	;# 
  9683     1E34                     CLC4GLS0        equ	7732	;# 
  9684     1E35                     CLC4GLS1        equ	7733	;# 
  9685     1E36                     CLC4GLS2        equ	7734	;# 
  9686     1E37                     CLC4GLS3        equ	7735	;# 
  9687     1E8F                     PPSLOCK         equ	7823	;# 
  9688     1E90                     INTPPS          equ	7824	;# 
  9689     1E91                     T0CKIPPS        equ	7825	;# 
  9690     1E92                     T1CKIPPS        equ	7826	;# 
  9691     1E93                     T1GPPS          equ	7827	;# 
  9692     1E94                     T3CKIPPS        equ	7828	;# 
  9693     1E95                     T3GPPS          equ	7829	;# 
  9694     1E96                     T5CKIPPS        equ	7830	;# 
  9695     1E97                     T5GPPS          equ	7831	;# 
  9696     1E9C                     T2INPPS         equ	7836	;# 
  9697     1E9D                     T4INPPS         equ	7837	;# 
  9698     1E9E                     T6INPPS         equ	7838	;# 
  9699     1EA1                     CCP1PPS         equ	7841	;# 
  9700     1EA2                     CCP2PPS         equ	7842	;# 
  9701     1EA3                     CCP3PPS         equ	7843	;# 
  9702     1EA4                     CCP4PPS         equ	7844	;# 
  9703     1EA5                     CCP5PPS         equ	7845	;# 
  9704     1EA9                     SMT1WINPPS      equ	7849	;# 
  9705     1EAA                     SMT1SIGPPS      equ	7850	;# 
  9706     1EAB                     SMT2WINPPS      equ	7851	;# 
  9707     1EAC                     SMT2SIGPPS      equ	7852	;# 
  9708     1EB1                     CWG1PPS         equ	7857	;# 
  9709     1EB2                     CWG2PPS         equ	7858	;# 
  9710     1EB3                     CWG3PPS         equ	7859	;# 
  9711     1EB8                     MDCARLPPS       equ	7864	;# 
  9712     1EB9                     MDCARHPPS       equ	7865	;# 
  9713     1EBA                     MDSRCPPS        equ	7866	;# 
  9714     1EBB                     CLCIN0PPS       equ	7867	;# 
  9715     1EBC                     CLCIN1PPS       equ	7868	;# 
  9716     1EBD                     CLCIN2PPS       equ	7869	;# 
  9717     1EBE                     CLCIN3PPS       equ	7870	;# 
  9718     1EC3                     ADACTPPS        equ	7875	;# 
  9719     1EC5                     SSP1CLKPPS      equ	7877	;# 
  9720     1EC6                     SSP1DATPPS      equ	7878	;# 
  9721     1EC7                     SSP1SSPPS       equ	7879	;# 
  9722     1EC8                     SSP2CLKPPS      equ	7880	;# 
  9723     1EC9                     SSP2DATPPS      equ	7881	;# 
  9724     1ECA                     SSP2SSPPS       equ	7882	;# 
  9725     1ECB                     RX1PPS          equ	7883	;# 
  9726     1ECC                     CK1PPS          equ	7884	;# 
  9727     1ECD                     RX2PPS          equ	7885	;# 
  9728     1ECE                     CK2PPS          equ	7886	;# 
  9729     1F10                     RA0PPS          equ	7952	;# 
  9730     1F11                     RA1PPS          equ	7953	;# 
  9731     1F12                     RA2PPS          equ	7954	;# 
  9732     1F13                     RA3PPS          equ	7955	;# 
  9733     1F14                     RA4PPS          equ	7956	;# 
  9734     1F15                     RA5PPS          equ	7957	;# 
  9735     1F16                     RA6PPS          equ	7958	;# 
  9736     1F17                     RA7PPS          equ	7959	;# 
  9737     1F18                     RB0PPS          equ	7960	;# 
  9738     1F19                     RB1PPS          equ	7961	;# 
  9739     1F1A                     RB2PPS          equ	7962	;# 
  9740     1F1B                     RB3PPS          equ	7963	;# 
  9741     1F1C                     RB4PPS          equ	7964	;# 
  9742     1F1D                     RB5PPS          equ	7965	;# 
  9743     1F1E                     RB6PPS          equ	7966	;# 
  9744     1F1F                     RB7PPS          equ	7967	;# 
  9745     1F20                     RC0PPS          equ	7968	;# 
  9746     1F21                     RC1PPS          equ	7969	;# 
  9747     1F22                     RC2PPS          equ	7970	;# 
  9748     1F23                     RC3PPS          equ	7971	;# 
  9749     1F24                     RC4PPS          equ	7972	;# 
  9750     1F25                     RC5PPS          equ	7973	;# 
  9751     1F26                     RC6PPS          equ	7974	;# 
  9752     1F27                     RC7PPS          equ	7975	;# 
  9753     1F38                     ANSELA          equ	7992	;# 
  9754     1F39                     WPUA            equ	7993	;# 
  9755     1F3A                     ODCONA          equ	7994	;# 
  9756     1F3B                     SLRCONA         equ	7995	;# 
  9757     1F3C                     INLVLA          equ	7996	;# 
  9758     1F3D                     IOCAP           equ	7997	;# 
  9759     1F3E                     IOCAN           equ	7998	;# 
  9760     1F3F                     IOCAF           equ	7999	;# 
  9761     1F43                     ANSELB          equ	8003	;# 
  9762     1F44                     WPUB            equ	8004	;# 
  9763     1F45                     ODCONB          equ	8005	;# 
  9764     1F46                     SLRCONB         equ	8006	;# 
  9765     1F47                     INLVLB          equ	8007	;# 
  9766     1F48                     IOCBP           equ	8008	;# 
  9767     1F49                     IOCBN           equ	8009	;# 
  9768     1F4A                     IOCBF           equ	8010	;# 
  9769     1F4E                     ANSELC          equ	8014	;# 
  9770     1F4F                     WPUC            equ	8015	;# 
  9771     1F50                     ODCONC          equ	8016	;# 
  9772     1F51                     SLRCONC         equ	8017	;# 
  9773     1F52                     INLVLC          equ	8018	;# 
  9774     1F53                     IOCCP           equ	8019	;# 
  9775     1F54                     IOCCN           equ	8020	;# 
  9776     1F55                     IOCCF           equ	8021	;# 
  9777     1F65                     WPUE            equ	8037	;# 
  9778     1F66                     ODCONE          equ	8038	;# 
  9779     1F67                     SLRCONE         equ	8039	;# 
  9780     1F68                     INLVLE          equ	8040	;# 
  9781     1F69                     IOCEP           equ	8041	;# 
  9782     1F6A                     IOCEN           equ	8042	;# 
  9783     1F6B                     IOCEF           equ	8043	;# 
  9784     1FE4                     STATUS_SHAD     equ	8164	;# 
  9785     1FE5                     WREG_SHAD       equ	8165	;# 
  9786     1FE6                     BSR_SHAD        equ	8166	;# 
  9787     1FE7                     PCLATH_SHAD     equ	8167	;# 
  9788     1FE8                     FSR0_SHAD       equ	8168	;# 
  9789     1FE8                     FSR0L_SHAD      equ	8168	;# 
  9790     1FE9                     FSR0H_SHAD      equ	8169	;# 
  9791     1FEA                     FSR1L_SHAD      equ	8170	;# 
  9792     1FEB                     FSR1H_SHAD      equ	8171	;# 
  9793     1FED                     STKPTR          equ	8173	;# 
  9794     1FEE                     TOSL            equ	8174	;# 
  9795     1FEF                     TOSH            equ	8175	;# 
  9796                           
  9797 ;; Function _RN487X_is_tx_done is unused but had its address taken
  9798     0000                     _RN487X_is_tx_done equ	0
  9799                           
  9800 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  9801     0000                     _EUSART1_is_tx_ready equ	0
  9802                           
  9803 ;; Function _EUSART1_is_tx_done is unused but had its address taken
  9804     0000                     _EUSART1_is_tx_done equ	0
  9805                           
  9806 ;; Function _do_I2C_RESET is unused but had its address taken
  9807     0000                     _do_I2C_RESET   equ	0
  9808                           
  9809 ;; Function _do_I2C_IDLE is unused but had its address taken
  9810     0000                     _do_I2C_IDLE    equ	0
  9811                           
  9812 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
  9813     0000                     _do_I2C_SEND_RESTART_READ equ	0
  9814                           
  9815 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
  9816     0000                     _do_I2C_SEND_RESTART_WRITE equ	0
  9817                           
  9818 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
  9819     0000                     _do_I2C_SEND_RESTART equ	0
  9820                           
  9821 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
  9822     0000                     _do_I2C_SEND_STOP equ	0
  9823                           
  9824 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
  9825     0000                     _do_I2C_SEND_ADR_READ equ	0
  9826                           
  9827 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
  9828     0000                     _do_I2C_SEND_ADR_WRITE equ	0
  9829                           
  9830 ;; Function _do_I2C_RCEN is unused but had its address taken
  9831     0000                     _do_I2C_RCEN    equ	0
  9832                           
  9833 ;; Function _do_I2C_DO_ACK is unused but had its address taken
  9834     0000                     _do_I2C_DO_ACK  equ	0
  9835                           
  9836 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
  9837     0000                     _do_I2C_DO_NACK_STOP equ	0
  9838                           
  9839 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
  9840     0000                     _do_I2C_DO_NACK_RESTART equ	0
  9841                           
  9842 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
  9843     0000                     _do_I2C_DO_ADDRESS_NACK equ	0
  9844                           
  9845 ;; Function _do_I2C_TX is unused but had its address taken
  9846     0000                     _do_I2C_TX      equ	0
  9847                           
  9848 ;; Function _do_I2C_RX is unused but had its address taken
  9849     0000                     _do_I2C_RX      equ	0
  9850                           
  9851 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
  9852     0000                     _do_I2C_TX_EMPTY equ	0
  9853                           
  9854 ;; Function _i2c_ISR is unused but had its address taken
  9855     0000                     _i2c_ISR        equ	0
  9856                           
  9857 ;; Function _i2c_busCollisionISR is unused but had its address taken
  9858     0000                     _i2c_busCollisionISR equ	0
  9859                           
  9860 ;; Function _returnStop is unused but had its address taken
  9861     0000                     _returnStop     equ	0
  9862                           
  9863 ;; Function _returnReset is unused but had its address taken
  9864     0000                     _returnReset    equ	0
  9865                           
  9866                           	psect	idataBANK3
  9867     0A01                     __pidataBANK3:
  9868                           
  9869                           ;initializer for __hex
  9870     0A01  3430               	retlw	48
  9871     0A02  3431               	retlw	49
  9872     0A03  3432               	retlw	50
  9873     0A04  3433               	retlw	51
  9874     0A05  3434               	retlw	52
  9875     0A06  3435               	retlw	53
  9876     0A07  3436               	retlw	54
  9877     0A08  3437               	retlw	55
  9878     0A09  3438               	retlw	56
  9879     0A0A  3439               	retlw	57
  9880     0A0B  3441               	retlw	65
  9881     0A0C  3442               	retlw	66
  9882     0A0D  3443               	retlw	67
  9883     0A0E  3444               	retlw	68
  9884     0A0F  3445               	retlw	69
  9885     0A10  3446               	retlw	70
  9886     0A11  3400               	retlw	0
  9887                           
  9888                           	psect	stringtext1
  9889     1000                     __pstringtext1:
  9890     1000                     _uart:
  9891     1000  34CB               	retlw	low _EUSART1_Read
  9892     1001  340C               	retlw	high _EUSART1_Read
  9893     1002  34EF               	retlw	low _EUSART1_Write
  9894     1003  340C               	retlw	high _EUSART1_Write
  9895     1004  3400               	retlw	0
  9896     1005  3400               	retlw	0
  9897     1006  34AF               	retlw	low _EUSART1_is_rx_ready
  9898     1007  3408               	retlw	high _EUSART1_is_rx_ready
  9899     1008  344D               	retlw	low _EUSART1_SetTxInterruptHandler
  9900     1009  3408               	retlw	high _EUSART1_SetTxInterruptHandler
  9901     100A  3495               	retlw	low _EUSART1_Receive_ISR
  9902     100B  3407               	retlw	high _EUSART1_Receive_ISR
  9903     100C  3447               	retlw	low _EUSART1_SetRxInterruptHandler
  9904     100D  3408               	retlw	high _EUSART1_SetRxInterruptHandler
  9905     100E  3400               	retlw	0
  9906     100F  3400               	retlw	0
  9907     1010  340E               	retlw	low _EUSART1_Transmit_ISR
  9908     1011  340C               	retlw	high _EUSART1_Transmit_ISR
  9909     1012  341B               	retlw	low _EUSART1_Initialize
  9910     1013  3407               	retlw	high _EUSART1_Initialize
  9911     1014  34CB               	retlw	low _EUSART1_Read
  9912     1015  340C               	retlw	high _EUSART1_Read
  9913     1016  34EF               	retlw	low _EUSART1_Write
  9914     1017  340C               	retlw	high _EUSART1_Write
  9915     1018  3400               	retlw	0
  9916     1019  3400               	retlw	0
  9917     101A  34AF               	retlw	low _EUSART1_is_rx_ready
  9918     101B  3408               	retlw	high _EUSART1_is_rx_ready
  9919     101C  344D               	retlw	low _EUSART1_SetTxInterruptHandler
  9920     101D  3408               	retlw	high _EUSART1_SetTxInterruptHandler
  9921     101E  3495               	retlw	low _EUSART1_Receive_ISR
  9922     101F  3407               	retlw	high _EUSART1_Receive_ISR
  9923     1020  3447               	retlw	low _EUSART1_SetRxInterruptHandler
  9924     1021  3408               	retlw	high _EUSART1_SetRxInterruptHandler
  9925     1022  3400               	retlw	0
  9926     1023  3400               	retlw	0
  9927     1024  340E               	retlw	low _EUSART1_Transmit_ISR
  9928     1025  340C               	retlw	high _EUSART1_Transmit_ISR
  9929     1026  341B               	retlw	low _EUSART1_Initialize
  9930     1027  3407               	retlw	high _EUSART1_Initialize
  9931     1028                     __end_of_uart:
  9932                           
  9933                           	psect	stringtext2
  9934     1028                     __pstringtext2:
  9935     1028                     _fsmStateTable:
  9936     1028  3400               	retlw	0
  9937     1029  3400               	retlw	0
  9938     102A  3400               	retlw	0
  9939     102B  3400               	retlw	0
  9940     102C  3400               	retlw	0
  9941     102D  3400               	retlw	0
  9942     102E  3400               	retlw	0
  9943     102F  3400               	retlw	0
  9944     1030  3400               	retlw	0
  9945     1031  3400               	retlw	0
  9946     1032  3400               	retlw	0
  9947     1033  3400               	retlw	0
  9948     1034  3400               	retlw	0
  9949     1035  3400               	retlw	0
  9950     1036  3400               	retlw	0
  9951     1037  3400               	retlw	0
  9952     1038  3400               	retlw	0
  9953     1039  3400               	retlw	0
  9954     103A  3400               	retlw	0
  9955     103B  3400               	retlw	0
  9956     103C  3400               	retlw	0
  9957     103D  3400               	retlw	0
  9958     103E  3400               	retlw	0
  9959     103F  3400               	retlw	0
  9960     1040  3400               	retlw	0
  9961     1041  3400               	retlw	0
  9962     1042  3400               	retlw	0
  9963     1043  3400               	retlw	0
  9964     1044  3400               	retlw	0
  9965     1045  3400               	retlw	0
  9966     1046  3400               	retlw	0
  9967     1047  3400               	retlw	0
  9968     1048                     __end_of_fsmStateTable:
  9969                           
  9970                           	psect	stringtext3
  9971     1048                     __pstringtext3:
  9972     1048                     _i2c1_fsmStateTable:
  9973     1048  34DD               	retlw	low _I2C1_DO_IDLE
  9974     1049  3417               	retlw	high _I2C1_DO_IDLE
  9975     104A  34A6               	retlw	low _I2C1_DO_SEND_ADR_READ
  9976     104B  3408               	retlw	high _I2C1_DO_SEND_ADR_READ
  9977     104C  3496               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  9978     104D  3408               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  9979     104E  3434               	retlw	low _I2C1_DO_TX
  9980     104F  3404               	retlw	high _I2C1_DO_TX
  9981     1050  3498               	retlw	low _I2C1_DO_RX
  9982     1051  3406               	retlw	high _I2C1_DO_RX
  9983     1052  348F               	retlw	low _I2C1_DO_RCEN
  9984     1053  3408               	retlw	high _I2C1_DO_RCEN
  9985     1054  3454               	retlw	low _I2C1_DO_TX_EMPTY
  9986     1055  340E               	retlw	high _I2C1_DO_TX_EMPTY
  9987     1056  34E2               	retlw	low _I2C1_DO_SEND_RESTART_READ
  9988     1057  3417               	retlw	high _I2C1_DO_SEND_RESTART_READ
  9989     1058  34E7               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  9990     1059  3417               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  9991     105A  34EC               	retlw	low _I2C1_DO_SEND_RESTART
  9992     105B  3417               	retlw	high _I2C1_DO_SEND_RESTART
  9993     105C  34F1               	retlw	low _I2C1_DO_SEND_STOP
  9994     105D  3417               	retlw	high _I2C1_DO_SEND_STOP
  9995     105E  34F6               	retlw	low _I2C1_DO_RX_ACK
  9996     105F  3417               	retlw	high _I2C1_DO_RX_ACK
  9997     1060  34FB               	retlw	low _I2C1_DO_RX_NACK_STOP
  9998     1061  3417               	retlw	high _I2C1_DO_RX_NACK_STOP
  9999     1062  3403               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10000     1063  3408               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10001     1064  3408               	retlw	low _I2C1_DO_RESET
 10002     1065  3408               	retlw	high _I2C1_DO_RESET
 10003     1066  34FD               	retlw	low _I2C1_DO_ADDRESS_NACK
 10004     1067  340D               	retlw	high _I2C1_DO_ADDRESS_NACK
 10005     1068                     __end_of_i2c1_fsmStateTable:
 10006                           
 10007                           	psect	stringtext4
 10008     1068                     __pstringtext4:
 10009     1068                     _RN487X:
 10010     1068  34FF               	retlw	low _RN487X_Write
 10011     1069  3408               	retlw	high _RN487X_Write
 10012     106A  34C1               	retlw	low _RN487X_Read@rn487x_interface$F545
 10013     106B  3408               	retlw	high _RN487X_Read@rn487x_interface$F545
 10014     106C  3400               	retlw	0
 10015     106D  3400               	retlw	0
 10016     106E  34CB               	retlw	low _RN487X_is_rx_ready
 10017     106F  3408               	retlw	high _RN487X_is_rx_ready
 10018     1070  34E9               	retlw	low _RN487X_IndicateRx
 10019     1071  3408               	retlw	high _RN487X_IndicateRx
 10020     1072  34F4               	retlw	low _RN487X_Reset
 10021     1073  3408               	retlw	high _RN487X_Reset
 10022     1074  3417               	retlw	low _RN487X_SetSystemMode
 10023     1075  3409               	retlw	high _RN487X_SetSystemMode
 10024     1076  349E               	retlw	low _RN487X_Delay
 10025     1077  3408               	retlw	high _RN487X_Delay
 10026     1078  348B               	retlw	low _RN487X_MessageHandler
 10027     1079  340F               	retlw	high _RN487X_MessageHandler
 10028     107A                     __end_of_RN487X:
 10029                           
 10030                           	psect	stringtext5
 10031     1800                     __pstringtext5:
 10032     1800                     _spi2_configuration:
 10033     1800  3422               	retlw	34
 10034     1801  3440               	retlw	64
 10035     1802  3401               	retlw	1
 10036     1803  3400               	retlw	0
 10037     1804                     __end_of_spi2_configuration:
 10038                           
 10039                           	psect	stringtext6
 10040     1804                     __pstringtext6:
 10041     1804                     _protocol_version_number:
 10042     1804  3491               	retlw	low (STR_1| (0+32768))
 10043     1805  3490               	retlw	high (STR_1| (0+32768))
 10044     1806                     __end_of_protocol_version_number:
 10045                           
 10046                           	psect	stringtext7
 10047     1806                     __pstringtext7:
 10048     1806                     _rn487x_driver_version:
 10049     1806  3491               	retlw	low (STR_1| (0+32768))
 10050     1807  3490               	retlw	high (STR_1| (0+32768))
 10051     1808                     __end_of_rn487x_driver_version:
 10052                           
 10053                           	psect	nvBANK1
 10054     00C6                     __pnvBANK1:
 10055     00C6                     _TMR0_InterruptHandler:
 10056     00C6                     	ds	2
 10057     00C8                     _IOCAF7_InterruptHandler:
 10058     00C8                     	ds	2
 10059     00CA                     _IOCAF6_InterruptHandler:
 10060     00CA                     	ds	2
 10061     00CC                     _EUSART1_TxDefaultInterruptHandler:
 10062     00CC                     	ds	2
 10063     00CE                     _EUSART2_RxDefaultInterruptHandler:
 10064     00CE                     	ds	2
 10065     00D0                     _EUSART2_TxDefaultInterruptHandler:
 10066     00D0                     	ds	2
 10067                           
 10068                           	psect	nvBANK2
 10069     0154                     __pnvBANK2:
 10070     0154                     _EUSART2_ErrorHandler:
 10071     0154                     	ds	2
 10072     0156                     _EUSART2_OverrunErrorHandler:
 10073     0156                     	ds	2
 10074     0158                     _EUSART2_FramingErrorHandler:
 10075     0158                     	ds	2
 10076     015A                     _EUSART1_ErrorHandler:
 10077     015A                     	ds	2
 10078     015C                     _EUSART1_OverrunErrorHandler:
 10079     015C                     	ds	2
 10080     015E                     _EUSART1_FramingErrorHandler:
 10081     015E                     	ds	2
 10082     0160                     _EUSART1_RxDefaultInterruptHandler:
 10083     0160                     	ds	2
 10084     000C                     _PORTAbits      set	12
 10085     0014                     _TRISCbits      set	20
 10086     0014                     _TRISC          set	20
 10087     0013                     _TRISB          set	19
 10088     0012                     _TRISA          set	18
 10089     0016                     _TRISE          set	22
 10090     001A                     _LATC           set	26
 10091     0019                     _LATB           set	25
 10092     0018                     _LATA           set	24
 10093     0012                     _TRISAbits      set	18
 10094     001A                     _LATCbits       set	26
 10095     0018                     _LATAbits       set	24
 10096     000B                     _INTCONbits     set	11
 10097     0119                     _RC1REG         set	281
 10098     011D                     _RC1STAbits     set	285
 10099     011A                     _TX1REG         set	282
 10100     011E                     _TX1STAbits     set	286
 10101     011C                     _SP1BRGH        set	284
 10102     011B                     _SP1BRGL        set	283
 10103     011E                     _TX1STA         set	286
 10104     011D                     _RC1STA         set	285
 10105     011F                     _BAUD1CON       set	287
 10106     018E                     _SSP1MSK        set	398
 10107     0196                     _SSP2BUF        set	406
 10108     019B                     _SSP2CON2       set	411
 10109     019A                     _SSP2CON1bits   set	410
 10110     0197                     _SSP2ADD        set	407
 10111     019A                     _SSP2CON1       set	410
 10112     0199                     _SSP2STAT       set	409
 10113     018F                     _SSP1STATbits   set	399
 10114     0191                     _SSP1CON2bits   set	401
 10115     018C                     _SSP1BUF        set	396
 10116     0190                     _SSP1CON1bits   set	400
 10117     018D                     _SSP1ADD        set	397
 10118     0191                     _SSP1CON2       set	401
 10119     0190                     _SSP1CON1       set	400
 10120     018F                     _SSP1STAT       set	399
 10121     059E                     _T0CON0bits     set	1438
 10122     059E                     _T0CON0         set	1438
 10123     059C                     _TMR0L          set	1436
 10124     059D                     _TMR0H          set	1437
 10125     059F                     _T0CON1         set	1439
 10126     070F                     _PIR3bits       set	1807
 10127     0719                     _PIE3bits       set	1817
 10128     070C                     _PIR0bits       set	1804
 10129     0716                     _PIE0bits       set	1814
 10130     079D                     _PMD7           set	1949
 10131     079C                     _PMD6           set	1948
 10132     079B                     _PMD5           set	1947
 10133     079A                     _PMD4           set	1946
 10134     0799                     _PMD3           set	1945
 10135     0798                     _PMD2           set	1944
 10136     0797                     _PMD1           set	1943
 10137     0796                     _PMD0           set	1942
 10138     0892                     _OSCTUNE        set	2194
 10139     0890                     _OSCSTAT        set	2192
 10140     0893                     _OSCFRQ         set	2195
 10141     0891                     _OSCEN          set	2193
 10142     088F                     _OSCCON3        set	2191
 10143     088D                     _OSCCON1        set	2189
 10144     0A19                     _RC2REG         set	2585
 10145     0A1D                     _RC2STAbits     set	2589
 10146     0A1A                     _TX2REG         set	2586
 10147     0A1E                     _TX2STAbits     set	2590
 10148     0A1C                     _SP2BRGH        set	2588
 10149     0A1B                     _SP2BRGL        set	2587
 10150     0A1E                     _TX2STA         set	2590
 10151     0A1D                     _RC2STA         set	2589
 10152     0A1F                     _BAUD2CON       set	2591
 10153     1EC8                     _SSP2CLKPPS     set	7880
 10154     1EC6                     _SSP1DATPPS     set	7878
 10155     1EC9                     _SSP2DATPPS     set	7881
 10156     1EC5                     _SSP1CLKPPS     set	7877
 10157     1F22                     _RC2PPS         set	7970
 10158     1F1C                     _RB4PPS         set	7964
 10159     1F24                     _RC4PPS         set	7972
 10160     1F21                     _RC1PPS         set	7969
 10161     1F1A                     _RB2PPS         set	7962
 10162     1F19                     _RB1PPS         set	7961
 10163     1F3D                     _IOCAPbits      set	7997
 10164     1F3E                     _IOCANbits      set	7998
 10165     1F3F                     _IOCAFbits      set	7999
 10166     1F52                     _INLVLC         set	8018
 10167     1F47                     _INLVLB         set	8007
 10168     1F3C                     _INLVLA         set	7996
 10169     1F51                     _SLRCONC        set	8017
 10170     1F46                     _SLRCONB        set	8006
 10171     1F3B                     _SLRCONA        set	7995
 10172     1F50                     _ODCONC         set	8016
 10173     1F45                     _ODCONB         set	8005
 10174     1F3A                     _ODCONA         set	7994
 10175     1F66                     _ODCONE         set	8038
 10176     1F4F                     _WPUC           set	8015
 10177     1F39                     _WPUA           set	7993
 10178     1F44                     _WPUB           set	8004
 10179     1F65                     _WPUE           set	8037
 10180     1F38                     _ANSELA         set	7992
 10181     1F43                     _ANSELB         set	8003
 10182     1F4E                     _ANSELC         set	8014
 10183                           
 10184                           	psect	stringtext8
 10185     107A                     __pstringtext8:
 10186     107A                     STR_4:
 10187     107A  3453               	retlw	83	;'S'
 10188     107B  3454               	retlw	84	;'T'
 10189     107C  3452               	retlw	82	;'R'
 10190     107D  3445               	retlw	69	;'E'
 10191     107E  3441               	retlw	65	;'A'
 10192     107F  344D               	retlw	77	;'M'
 10193     1080  345F               	retlw	95	;'_'
 10194     1081  344F               	retlw	79	;'O'
 10195     1082  3450               	retlw	80	;'P'
 10196     1083  3445               	retlw	69	;'E'
 10197     1084  344E               	retlw	78	;'N'
 10198     1085  3400               	retlw	0
 10199                           
 10200                           	psect	stringtext9
 10201     1086                     __pstringtext9:
 10202     1086                     STR_2:
 10203     1086  3444               	retlw	68	;'D'
 10204     1087  3449               	retlw	73	;'I'
 10205     1088  3453               	retlw	83	;'S'
 10206     1089  3443               	retlw	67	;'C'
 10207     108A  344F               	retlw	79	;'O'
 10208     108B  344E               	retlw	78	;'N'
 10209     108C  344E               	retlw	78	;'N'
 10210     108D  3445               	retlw	69	;'E'
 10211     108E  3443               	retlw	67	;'C'
 10212     108F  3454               	retlw	84	;'T'
 10213     1090  3400               	retlw	0
 10214                           
 10215                           	psect	stringtext10
 10216     1091                     __pstringtext10:
 10217     1091                     STR_1:
 10218     1091  3431               	retlw	49	;'1'
 10219     1092  342E               	retlw	46	;'.'
 10220     1093  3431               	retlw	49	;'1'
 10221     1094  342E               	retlw	46	;'.'
 10222     1095  3430               	retlw	48	;'0'
 10223     1096  3400               	retlw	0
 10224                           
 10225                           	psect	stringtext11
 10226     0000                     __pstringtext11:
 10227     1086                     STR_3           equ	STR_2
 10228     107A                     STR_5           equ	STR_4
 10229     1091                     STR_6           equ	STR_1
 10230                           
 10231                           	psect	cinit
 10232     0063                     start_initialization:	
 10233                           ; #config settings
 10234                           
 10235     0063                     __initialization:
 10236                           
 10237                           ; Initialize objects allocated to BANK3
 10238     0063  3001               	movlw	low __pidataBANK3
 10239     0064  0084               	movwf	4
 10240     0065  308A               	movlw	(high __pidataBANK3)| (0+128)
 10241     0066  0085               	movwf	5
 10242     0067  30C4               	movlw	low __pdataBANK3
 10243     0068  0086               	movwf	6
 10244     0069  3001               	movlw	high __pdataBANK3
 10245     006A  0087               	movwf	7
 10246     006B  3011               	movlw	17
 10247     006C  3188  2089  3180   	fcall	init_ram
 10248                           
 10249                           ; Clear objects allocated to BANK0
 10250     006F  3048               	movlw	low __pbssBANK0
 10251     0070  0084               	movwf	4
 10252     0071  3000               	movlw	high __pbssBANK0
 10253     0072  0085               	movwf	5
 10254     0073  3027               	movlw	39
 10255     0074  3188  2083  3180   	fcall	clear_ram0
 10256                           
 10257                           ; Clear objects allocated to BANK1
 10258     0077  30A0               	movlw	low __pbssBANK1
 10259     0078  0084               	movwf	4
 10260     0079  3000               	movlw	high __pbssBANK1
 10261     007A  0085               	movwf	5
 10262     007B  3026               	movlw	38
 10263     007C  3188  2083  3180   	fcall	clear_ram0
 10264                           
 10265                           ; Clear objects allocated to BANK2
 10266     007F  3020               	movlw	low __pbssBANK2
 10267     0080  0084               	movwf	4
 10268     0081  3001               	movlw	high __pbssBANK2
 10269     0082  0085               	movwf	5
 10270     0083  3034               	movlw	52
 10271     0084  3188  2083  3180   	fcall	clear_ram0
 10272                           
 10273                           ; Clear objects allocated to BANK3
 10274     0087  30A0               	movlw	low __pbssBANK3
 10275     0088  0084               	movwf	4
 10276     0089  3001               	movlw	high __pbssBANK3
 10277     008A  0085               	movwf	5
 10278     008B  3024               	movlw	36
 10279     008C  3188  2083  3180   	fcall	clear_ram0
 10280                           
 10281                           ; Clear objects allocated to BANK4
 10282     008F  3020               	movlw	low __pbssBANK4
 10283     0090  0084               	movwf	4
 10284     0091  3002               	movlw	high __pbssBANK4
 10285     0092  0085               	movwf	5
 10286     0093  3050               	movlw	80
 10287     0094  3188  2083  3180   	fcall	clear_ram0
 10288                           
 10289                           ; Clear objects allocated to BANK5
 10290     0097  30A0               	movlw	low __pbssBANK5
 10291     0098  0084               	movwf	4
 10292     0099  3002               	movlw	high __pbssBANK5
 10293     009A  0085               	movwf	5
 10294     009B  3040               	movlw	64
 10295     009C  3188  2083  3180   	fcall	clear_ram0
 10296                           
 10297                           ; Clear objects allocated to BANK6
 10298     009F  3020               	movlw	low __pbssBANK6
 10299     00A0  0084               	movwf	4
 10300     00A1  3003               	movlw	high __pbssBANK6
 10301     00A2  0085               	movwf	5
 10302     00A3  3050               	movlw	80
 10303     00A4  3188  2083  3180   	fcall	clear_ram0
 10304                           
 10305                           ; Clear objects allocated to BANK7
 10306     00A7  30A0               	movlw	low __pbssBANK7
 10307     00A8  0084               	movwf	4
 10308     00A9  3003               	movlw	high __pbssBANK7
 10309     00AA  0085               	movwf	5
 10310     00AB  3050               	movlw	80
 10311     00AC  3188  2083  3180   	fcall	clear_ram0
 10312                           
 10313                           ; Clear objects allocated to BANK8
 10314     00AF  3020               	movlw	low __pbssBANK8
 10315     00B0  0084               	movwf	4
 10316     00B1  3004               	movlw	high __pbssBANK8
 10317     00B2  0085               	movwf	5
 10318     00B3  3050               	movlw	80
 10319     00B4  3188  2083  3180   	fcall	clear_ram0
 10320                           
 10321                           ; Clear objects allocated to BANK9
 10322     00B7  30A0               	movlw	low __pbssBANK9
 10323     00B8  0084               	movwf	4
 10324     00B9  3004               	movlw	high __pbssBANK9
 10325     00BA  0085               	movwf	5
 10326     00BB  3050               	movlw	80
 10327     00BC  3188  2083  3180   	fcall	clear_ram0
 10328     00BF                     end_of_initialization:	
 10329                           ;End of C runtime variable initialization code
 10330                           
 10331     00BF                     __end_of__initialization:
 10332     00BF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10333     00C0  0140               	movlb	0
 10334     00C1  3181  298E         	ljmp	_main	;jump to C main() function
 10335                           
 10336                           	psect	bssBANK0
 10337     0048                     __pbssBANK0:
 10338     0048                     _i2c1_driver_busCollisionISR:
 10339     0048                     	ds	2
 10340     004A                     LIGHTBLUE_ParseIncomingPacket@data:
 10341     004A                     	ds	2
 10342     004C                     _bitMap:
 10343     004C                     	ds	2
 10344     004E                     _rad:
 10345     004E                     	ds	1
 10346     004F                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10347     004F                     	ds	1
 10348     0050                     LIGHTBLUE_ParseIncomingPacket@length:
 10349     0050                     	ds	1
 10350     0051                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10351     0051                     	ds	1
 10352     0052                     _sequenceNumber:
 10353     0052                     	ds	1
 10354     0053                     _serialIndex@main$F2768:
 10355     0053                     	ds	1
 10356     0054                     _eusart2RxLastError:
 10357     0054                     	ds	1
 10358     0055                     _eusart2RxCount:
 10359     0055                     	ds	1
 10360     0056                     _eusart2RxTail:
 10361     0056                     	ds	1
 10362     0057                     _eusart2RxHead:
 10363     0057                     	ds	1
 10364     0058                     _eusart2TxBufferRemaining:
 10365     0058                     	ds	1
 10366     0059                     _eusart2TxTail:
 10367     0059                     	ds	1
 10368     005A                     _eusart2TxHead:
 10369     005A                     	ds	1
 10370     005B                     _eusart1RxLastError:
 10371     005B                     	ds	1
 10372     005C                     _eusart1RxCount:
 10373     005C                     	ds	1
 10374     005D                     _eusart1RxTail:
 10375     005D                     	ds	1
 10376     005E                     _eusart1RxHead:
 10377     005E                     	ds	1
 10378     005F                     _eusart1TxBufferRemaining:
 10379     005F                     	ds	1
 10380     0060                     _eusart1TxTail:
 10381     0060                     	ds	1
 10382     0061                     _eusart1TxHead:
 10383     0061                     	ds	1
 10384     0062                     _flats:
 10385     0062                     	ds	1
 10386     0063                     _serialIndex:
 10387     0063                     	ds	1
 10388     0064                     _sendSpiReadRequest:
 10389     0064                     	ds	1
 10390     0065                     _pushed:
 10391     0065                     	ds	1
 10392     0066                     _accelerometerInterruptBits:
 10393     0066                     	ds	1
 10394     0067                     _connected:
 10395     0067                     	ds	1
 10396     0068                     RN487X_FilterData@asyncBuffering:
 10397     0068                     	ds	1
 10398     0069                     _dataReady:
 10399     0069                     	ds	1
 10400     006A                     _peek:
 10401     006A                     	ds	1
 10402     006B                     _pHead:
 10403     006B                     	ds	1
 10404     006C                     _asyncBufferSize:
 10405     006C                     	ds	1
 10406     006D                     _asyncBuffer:
 10407     006D                     	ds	1
 10408     006E                     _INTERRUPTbits:
 10409     006E                     	ds	1
 10410                           
 10411                           	psect	bssBANK1
 10412     00A0                     __pbssBANK1:
 10413     00A0                     _eusart2RxStatusBuffer:
 10414     00A0                     	ds	8
 10415     00A8                     _eusart1RxStatusBuffer:
 10416     00A8                     	ds	8
 10417     00B0                     _eusart1RxBuffer:
 10418     00B0                     	ds	8
 10419     00B8                     _eusart1TxBuffer:
 10420     00B8                     	ds	8
 10421     00C0                     _i2c1_driver_i2cISR:
 10422     00C0                     	ds	2
 10423     00C2                     send_spi_read@data:
 10424     00C2                     	ds	4
 10425                           
 10426                           	psect	bssBANK2
 10427     0120                     __pbssBANK2:
 10428     0120                     _i2c_status:
 10429     0120                     	ds	36
 10430     0144                     _eusart2RxBuffer:
 10431     0144                     	ds	8
 10432     014C                     _eusart2TxBuffer:
 10433     014C                     	ds	8
 10434                           
 10435                           	psect	bssBANK3
 10436     01A0                     __pbssBANK3:
 10437     01A0                     _I2C1_Status:
 10438     01A0                     	ds	36
 10439                           
 10440                           	psect	dataBANK3
 10441     01C4                     __pdataBANK3:
 10442     01C4                     __hex:
 10443     01C4                     	ds	17
 10444                           
 10445                           	psect	bssBANK4
 10446     0220                     __pbssBANK4:
 10447     0220                     _lightBlueSerial@main$F2767:
 10448     0220                     	ds	80
 10449                           
 10450                           	psect	bssBANK5
 10451     02A0                     __pbssBANK5:
 10452     02A0                     _cmdBuf:
 10453     02A0                     	ds	64
 10454                           
 10455                           	psect	bssBANK6
 10456     0320                     __pbssBANK6:
 10457     0320                     _statusBuffer:
 10458     0320                     	ds	80
 10459                           
 10460                           	psect	bssBANK7
 10461     03A0                     __pbssBANK7:
 10462     03A0                     _statusBuffer@main$F1076:
 10463     03A0                     	ds	80
 10464                           
 10465                           	psect	bssBANK8
 10466     0420                     __pbssBANK8:
 10467     0420                     _lightBlueSerial:
 10468     0420                     	ds	80
 10469                           
 10470                           	psect	bssBANK9
 10471     04A0                     __pbssBANK9:
 10472     04A0                     _statusBuffer@main$F2766:
 10473     04A0                     	ds	80
 10474                           
 10475                           	psect	inittext
 10476     0889                     init_ram:
 10477     0889  00FE               	movwf	btemp
 10478     088A                     initloop:
 10479     088A  0012               	moviw fsr0++
 10480     088B  001E               	movwi fsr1++
 10481     088C  0BFE               	decfsz	btemp,f
 10482     088D  288A               	goto	initloop
 10483     088E  3400               	retlw	0
 10484                           
 10485                           	psect	clrtext
 10486     0883                     clear_ram0:	
 10487                           ;	Called with FSR0 containing the base address, and
 10488                           ;	WREG with the size to clear
 10489                           
 10490     0883  0064               	clrwdt	;clear the watchdog before getting into this loop
 10491     0884                     clrloop0:
 10492     0884  0180               	clrf	0	;clear RAM location pointed to by FSR
 10493     0885  3101               	addfsr 0,1
 10494     0886  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10495     0887  2884               	goto	clrloop0	;have we reached the end yet?
 10496     0888  3400               	retlw	0	;all done for this memory range, return
 10497                           
 10498                           	psect	cstackCOMMON
 10499     0070                     __pcstackCOMMON:
 10500     0070                     ?_EUSART1_Read:
 10501     0070                     ?_EUSART1_Write:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504     0070                     ?_EUSART1_is_rx_ready:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507     0070                     ?_EUSART1_SetTxInterruptHandler:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510     0070                     ?_EUSART1_Receive_ISR:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513     0070                     ?_EUSART1_SetRxInterruptHandler:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516     0070                     ?_EUSART1_Transmit_ISR:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519     0070                     ?_EUSART1_Initialize:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522     0070                     ?_I2C1_Open:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525     0070                     ?_I2C1_SetBuffer:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528     0070                     ?_I2C1_MasterWrite:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531     0070                     ?_I2C1_Close:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534     0070                     ?_RN487X_IsConnected:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537     0070                     ?_RN487X_Read:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540     0070                     ?_RN487X_DataReady:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543     0070                     ?_RN487X_FilterData:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546     0070                     ?_RN487X_Read@rn487x_interface$F546:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549     0070                     ?_RN487X_is_rx_ready:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552     0070                     ?_RN487X_IndicateRx:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555     0070                     ?_RN487X_Reset:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558     0070                     ?_RN487X_SetSystemMode:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561     0070                     ?_DELAY_milliseconds:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564     0070                     ?_strcpy:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567     0070                     ?_TMR0_ISR:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570     0070                     ?_PIN_MANAGER_IOC:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573     0070                     ?_IOCAF6_SetInterruptHandler:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579     0070                     ?_IOCAF7_SetInterruptHandler:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582     0070                     ?_IOCAF7_DefaultInterruptHandler:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585     0070                     ?_IOCAF6_ISR:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588     0070                     ?_IOCAF7_ISR:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591     0070                     ?_I2C1_DO_IDLE:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600     0070                     ?_I2C1_DO_TX:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603     0070                     ?_I2C1_DO_RX:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606     0070                     ?_I2C1_DO_RCEN:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609     0070                     ?_I2C1_DO_TX_EMPTY:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618     0070                     ?_I2C1_DO_SEND_RESTART:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621     0070                     ?_I2C1_DO_SEND_STOP:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624     0070                     ?_I2C1_DO_RX_ACK:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633     0070                     ?_I2C1_DO_RESET:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639     0070                     ?_I2C1_MasterClearIrq:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642     0070                     ?_I2C1_MasterOpen:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645     0070                     ?_I2C1_MasterDisableIrq:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648     0070                     ?_I2C1_MasterClose:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651     0070                     ?_I2C1_MasterStart:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654     0070                     ?_I2C1_Poller:	
 10655                           ; 1 bytes @ 0x0
 10656                           
 10657     0070                     ?_I2C1_SetCallback:	
 10658                           ; 1 bytes @ 0x0
 10659                           
 10660     0070                     ?_I2C1_MasterWaitForEvent:	
 10661                           ; 1 bytes @ 0x0
 10662                           
 10663     0070                     ?_I2C1_MasterFsm:	
 10664                           ; 1 bytes @ 0x0
 10665                           
 10666     0070                     ?_I2C1_MasterIsNack:	
 10667                           ; 1 bytes @ 0x0
 10668                           
 10669     0070                     ?_I2C1_MasterSendTxData:	
 10670                           ; 1 bytes @ 0x0
 10671                           
 10672     0070                     ?_I2C1_MasterGetRxData:	
 10673                           ; 1 bytes @ 0x0
 10674                           
 10675     0070                     ?_I2C1_MasterSendAck:	
 10676                           ; 1 bytes @ 0x0
 10677                           
 10678     0070                     ?_I2C1_MasterStartRx:	
 10679                           ; 1 bytes @ 0x0
 10680                           
 10681     0070                     ?_I2C1_MasterSetIrq:	
 10682                           ; 1 bytes @ 0x0
 10683                           
 10684     0070                     ?_I2C1_MasterEnableRestart:	
 10685                           ; 1 bytes @ 0x0
 10686                           
 10687     0070                     ?_I2C1_MasterStop:	
 10688                           ; 1 bytes @ 0x0
 10689                           
 10690     0070                     ?_I2C1_MasterSendNack:	
 10691                           ; 1 bytes @ 0x0
 10692                           
 10693     0070                     ?_PMD_Initialize:	
 10694                           ; 1 bytes @ 0x0
 10695                           
 10696     0070                     ?_SPI2_Initialize:	
 10697                           ; 1 bytes @ 0x0
 10698                           
 10699     0070                     ?_OSCILLATOR_Initialize:	
 10700                           ; 1 bytes @ 0x0
 10701                           
 10702     0070                     ?_TMR0_Initialize:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705     0070                     ?_EUSART2_Initialize:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708     0070                     ?_TMR0_SetInterruptHandler:	
 10709                           ; 1 bytes @ 0x0
 10710                           
 10711     0070                     ?_TMR0_DefaultInterruptHandler:	
 10712                           ; 1 bytes @ 0x0
 10713                           
 10714     0070                     ?_EUSART1_SetFramingErrorHandler:	
 10715                           ; 1 bytes @ 0x0
 10716                           
 10717     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10718                           ; 1 bytes @ 0x0
 10719                           
 10720     0070                     ?_EUSART1_SetOverrunErrorHandler:	
 10721                           ; 1 bytes @ 0x0
 10722                           
 10723     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10724                           ; 1 bytes @ 0x0
 10725                           
 10726     0070                     ?_EUSART1_SetErrorHandler:	
 10727                           ; 1 bytes @ 0x0
 10728                           
 10729     0070                     ?_EUSART1_DefaultErrorHandler:	
 10730                           ; 1 bytes @ 0x0
 10731                           
 10732     0070                     ?_EUSART1_RxDataHandler:	
 10733                           ; 1 bytes @ 0x0
 10734                           
 10735     0070                     ?_EUSART2_SetRxInterruptHandler:	
 10736                           ; 1 bytes @ 0x0
 10737                           
 10738     0070                     ?_EUSART2_Receive_ISR:	
 10739                           ; 1 bytes @ 0x0
 10740                           
 10741     0070                     ?_EUSART2_SetTxInterruptHandler:	
 10742                           ; 1 bytes @ 0x0
 10743                           
 10744     0070                     ?_EUSART2_Transmit_ISR:	
 10745                           ; 1 bytes @ 0x0
 10746                           
 10747     0070                     ?_EUSART2_SetFramingErrorHandler:	
 10748                           ; 1 bytes @ 0x0
 10749                           
 10750     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10751                           ; 1 bytes @ 0x0
 10752                           
 10753     0070                     ?_EUSART2_SetOverrunErrorHandler:	
 10754                           ; 1 bytes @ 0x0
 10755                           
 10756     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10757                           ; 1 bytes @ 0x0
 10758                           
 10759     0070                     ?_EUSART2_SetErrorHandler:	
 10760                           ; 1 bytes @ 0x0
 10761                           
 10762     0070                     ?_EUSART2_DefaultErrorHandler:	
 10763                           ; 1 bytes @ 0x0
 10764                           
 10765     0070                     ?_EUSART2_RxDataHandler:	
 10766                           ; 1 bytes @ 0x0
 10767                           
 10768     0070                     ?_LIGHTBLUE_Initialize:	
 10769                           ; 1 bytes @ 0x0
 10770                           
 10771     0070                     ?_service_acceleremoterInterrupt:	
 10772                           ; 1 bytes @ 0x0
 10773                           
 10774     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 10775                           ; 1 bytes @ 0x0
 10776                           
 10777     0070                     ?_LIGHTBLUE_AccelSensor:	
 10778                           ; 1 bytes @ 0x0
 10779                           
 10780     0070                     ?_LIGHTBLUE_PushButton:	
 10781                           ; 1 bytes @ 0x0
 10782                           
 10783     0070                     ?_LIGHTBLUE_LedState:	
 10784                           ; 1 bytes @ 0x0
 10785                           
 10786     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 10787                           ; 1 bytes @ 0x0
 10788                           
 10789     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 10790                           ; 1 bytes @ 0x0
 10791                           
 10792     0070                     ?_LIGHTBLUE_AccState:	
 10793                           ; 1 bytes @ 0x0
 10794                           
 10795     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10796                           ; 1 bytes @ 0x0
 10797                           
 10798     0070                     ?_LIGHTBLUE_GetAccState:	
 10799                           ; 1 bytes @ 0x0
 10800                           
 10801     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10802                           ; 1 bytes @ 0x0
 10803                           
 10804     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10805                           ; 1 bytes @ 0x0
 10806                           
 10807     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10808                           ; 1 bytes @ 0x0
 10809                           
 10810     0070                     ?_BMA253_NewAccelDataRdyX:	
 10811                           ; 1 bytes @ 0x0
 10812                           
 10813     0070                     ?_BMA253_NewAccelDataRdyY:	
 10814                           ; 1 bytes @ 0x0
 10815                           
 10816     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10817                           ; 1 bytes @ 0x0
 10818                           
 10819     0070                     ?_strchr:	
 10820                           ; 1 bytes @ 0x0
 10821                           
 10822     0070                     ?_RN487X_Init:	
 10823                           ; 1 bytes @ 0x0
 10824                           
 10825     0070                     ?_rn487x_PrintMessageStart:	
 10826                           ; 1 bytes @ 0x0
 10827                           
 10828     0070                     ?_rn487x_PrintMessageEnd:	
 10829                           ; 1 bytes @ 0x0
 10830                           
 10831     0070                     ?_rn487x_PrintIndicatorCharacters:	
 10832                           ; 1 bytes @ 0x0
 10833                           
 10834     0070                     ?_INTERRUPT_InterruptManager:	
 10835                           ; 1 bytes @ 0x0
 10836                           
 10837     0070                     ?_PIN_MANAGER_Initialize:	
 10838                           ; 1 bytes @ 0x0
 10839                           
 10840     0070                     ?_I2C1_Initialize:	
 10841                           ; 1 bytes @ 0x0
 10842                           
 10843     0070                     ?_I2C1_MasterOperation:	
 10844                           ; 1 bytes @ 0x0
 10845                           
 10846     0070                     ?_SYSTEM_Initialize:	
 10847                           ; 1 bytes @ 0x0
 10848                           
 10849     0070                     ?_main:	
 10850                           ; 1 bytes @ 0x0
 10851                           
 10852     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 10853                           ; 1 bytes @ 0x0
 10854                           
 10855     0070                     ?_strlen:	
 10856                           ; 1 bytes @ 0x0
 10857                           
 10858     0070                     ?_strncmp:	
 10859                           ; 2 bytes @ 0x0
 10860                           
 10861     0070                     RN487X_Reset@value:	
 10862                           ; 2 bytes @ 0x0
 10863                           
 10864     0070                     RN487X_IndicateRx@value:	
 10865                           ; 1 bytes @ 0x0
 10866                           
 10867     0070                     RN487X_SetSystemMode@mode:	
 10868                           ; 1 bytes @ 0x0
 10869                           
 10870     0070                     I2C1_Open@address:	
 10871                           ; 1 bytes @ 0x0
 10872                           
 10873     0070                     I2C1_Close@returnValue:	
 10874                           ; 1 bytes @ 0x0
 10875                           
 10876     0070                     I2C1_MasterSendTxData@data:	
 10877                           ; 1 bytes @ 0x0
 10878                           
 10879     0070                     EUSART1_Read@readValue:	
 10880                           ; 1 bytes @ 0x0
 10881                           
 10882     0070                     EUSART1_Write@txData:	
 10883                           ; 1 bytes @ 0x0
 10884                           
 10885     0070                     strcpy@dest:	
 10886                           ; 1 bytes @ 0x0
 10887                           
 10888     0070                     strchr@s:	
 10889                           ; 1 bytes @ 0x0
 10890                           
 10891     0070                     strncmp@l:	
 10892                           ; 1 bytes @ 0x0
 10893                           
 10894     0070                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 10895                           ; 1 bytes @ 0x0
 10896                           
 10897     0070                     IOCAF7_SetInterruptHandler@InterruptHandler:	
 10898                           ; 2 bytes @ 0x0
 10899                           
 10900     0070                     I2C1_SetBuffer@buffer:	
 10901                           ; 2 bytes @ 0x0
 10902                           
 10903     0070                     I2C1_SetCallback@cb:	
 10904                           ; 2 bytes @ 0x0
 10905                           
 10906     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
 10907                           ; 2 bytes @ 0x0
 10908                           
 10909     0070                     DELAY_milliseconds@milliseconds:	
 10910                           ; 2 bytes @ 0x0
 10911                           
 10912     0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10913                           ; 2 bytes @ 0x0
 10914                           
 10915     0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10916                           ; 2 bytes @ 0x0
 10917                           
 10918     0070                     EUSART1_SetErrorHandler@interruptHandler:	
 10919                           ; 2 bytes @ 0x0
 10920                           
 10921     0070                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 10922                           ; 2 bytes @ 0x0
 10923                           
 10924     0070                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10925                           ; 2 bytes @ 0x0
 10926                           
 10927     0070                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 10928                           ; 2 bytes @ 0x0
 10929                           
 10930     0070                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 10931                           ; 2 bytes @ 0x0
 10932                           
 10933     0070                     EUSART2_SetErrorHandler@interruptHandler:	
 10934                           ; 2 bytes @ 0x0
 10935                           
 10936     0070                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 10937                           ; 2 bytes @ 0x0
 10938                           
 10939     0070                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 10940                           ; 2 bytes @ 0x0
 10941                           
 10942     0070                     strlen@s:	
 10943                           ; 2 bytes @ 0x0
 10944                           
 10945     0070                     ??_EUSART1_Read:	
 10946                           ; 2 bytes @ 0x0
 10947                           
 10948     0070                     ??_EUSART1_is_rx_ready:	
 10949                           ; 1 bytes @ 0x0
 10950                           
 10951     0070                     ??_EUSART1_Receive_ISR:	
 10952                           ; 1 bytes @ 0x0
 10953                           
 10954     0070                     ??_EUSART1_Transmit_ISR:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957     0070                     ??_I2C1_Open:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960     0070                     ??_I2C1_Close:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963     0070                     ??_RN487X_IsConnected:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966     0070                     ??_RN487X_is_rx_ready:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969     0070                     ??_TMR0_ISR:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972     0070                     ??_PIN_MANAGER_IOC:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978     0070                     ??_IOCAF7_DefaultInterruptHandler:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981     0070                     ??_IOCAF6_ISR:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984     0070                     ??_IOCAF7_ISR:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987     0070                     ??_I2C1_DO_IDLE:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990     0070                     ??_I2C1_DO_SEND_ADR_READ:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993     0070                     ??_I2C1_DO_RCEN:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996     0070                     ??_I2C1_DO_SEND_RESTART_READ:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999     0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002     0070                     ??_I2C1_DO_SEND_RESTART:	
 11003                           ; 1 bytes @ 0x0
 11004                           
 11005     0070                     ??_I2C1_DO_SEND_STOP:	
 11006                           ; 1 bytes @ 0x0
 11007                           
 11008     0070                     ??_I2C1_DO_RX_ACK:	
 11009                           ; 1 bytes @ 0x0
 11010                           
 11011     0070                     ??_I2C1_DO_RX_NACK_STOP:	
 11012                           ; 1 bytes @ 0x0
 11013                           
 11014     0070                     ??_I2C1_DO_RX_NACK_RESTART:	
 11015                           ; 1 bytes @ 0x0
 11016                           
 11017     0070                     ??_I2C1_DO_RESET:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020     0070                     ??_I2C1_MasterClearIrq:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023     0070                     ??_I2C1_MasterOpen:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026     0070                     ??_I2C1_MasterDisableIrq:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029     0070                     ??_I2C1_MasterClose:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032     0070                     ??_I2C1_MasterStart:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035     0070                     ??_I2C1_MasterWaitForEvent:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038     0070                     ??_I2C1_MasterIsNack:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041     0070                     ??_I2C1_MasterSendTxData:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044     0070                     ??_I2C1_MasterGetRxData:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047     0070                     ??_I2C1_MasterSendAck:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050     0070                     ??_I2C1_MasterStartRx:	
 11051                           ; 1 bytes @ 0x0
 11052                           
 11053     0070                     ??_I2C1_MasterSetIrq:	
 11054                           ; 1 bytes @ 0x0
 11055                           
 11056     0070                     ??_I2C1_MasterEnableRestart:	
 11057                           ; 1 bytes @ 0x0
 11058                           
 11059     0070                     ??_I2C1_MasterStop:	
 11060                           ; 1 bytes @ 0x0
 11061                           
 11062     0070                     ??_I2C1_MasterSendNack:	
 11063                           ; 1 bytes @ 0x0
 11064                           
 11065     0070                     ??_PMD_Initialize:	
 11066                           ; 1 bytes @ 0x0
 11067                           
 11068     0070                     ??_SPI2_Initialize:	
 11069                           ; 1 bytes @ 0x0
 11070                           
 11071     0070                     ??_OSCILLATOR_Initialize:	
 11072                           ; 1 bytes @ 0x0
 11073                           
 11074     0070                     ??_TMR0_DefaultInterruptHandler:	
 11075                           ; 1 bytes @ 0x0
 11076                           
 11077     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11078                           ; 1 bytes @ 0x0
 11079                           
 11080     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11081                           ; 1 bytes @ 0x0
 11082                           
 11083     0070                     ??_EUSART1_DefaultErrorHandler:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086     0070                     ??_EUSART1_RxDataHandler:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089     0070                     ??_EUSART2_Receive_ISR:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092     0070                     ??_EUSART2_Transmit_ISR:	
 11093                           ; 1 bytes @ 0x0
 11094                           
 11095     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11096                           ; 1 bytes @ 0x0
 11097                           
 11098     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11099                           ; 1 bytes @ 0x0
 11100                           
 11101     0070                     ??_EUSART2_DefaultErrorHandler:	
 11102                           ; 1 bytes @ 0x0
 11103                           
 11104     0070                     ??_EUSART2_RxDataHandler:	
 11105                           ; 1 bytes @ 0x0
 11106                           
 11107     0070                     ??_LIGHTBLUE_Initialize:	
 11108                           ; 1 bytes @ 0x0
 11109                           
 11110     0070                     ??_LIGHTBLUE_GetButtonValue:	
 11111                           ; 1 bytes @ 0x0
 11112                           
 11113     0070                     ??_LIGHTBLUE_GetAccState:	
 11114                           ; 1 bytes @ 0x0
 11115                           
 11116     0070                     ??_LIGHTBLUE_GetDataLedValue:	
 11117                           ; 1 bytes @ 0x0
 11118                           
 11119     0070                     ??_LIGHTBLUE_GetErrorLedValue:	
 11120                           ; 1 bytes @ 0x0
 11121                           
 11122     0070                     ??_LIGHTBLUE_UpdateErrorLed:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125     0070                     ??_INTERRUPT_InterruptManager:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128     0070                     ??_I2C1_Initialize:	
 11129                           ; 1 bytes @ 0x0
 11130                           
 11131     0070                     ??_LIGHTBLUE_SetErrorLedValue:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134                           
 11135                           ; 1 bytes @ 0x0
 11136     0070                     	ds	1
 11137     0071                     rn487x_PrintIndicatorCharacters@messageType:
 11138     0071                     I2C1_Open@returnValue:	
 11139                           ; 1 bytes @ 0x1
 11140                           
 11141     0071                     LIGHTBLUE_SetErrorLedValue@value:	
 11142                           ; 1 bytes @ 0x1
 11143                           
 11144     0071                     strcpy@src:	
 11145                           ; 1 bytes @ 0x1
 11146                           
 11147     0071                     strchr@c:	
 11148                           ; 1 bytes @ 0x1
 11149                           
 11150     0071                     strncmp@r:	
 11151                           ; 2 bytes @ 0x1
 11152                           
 11153     0071                     ??_EUSART1_Write:	
 11154                           ; 2 bytes @ 0x1
 11155                           
 11156     0071                     ??_RN487X_Read@rn487x_interface$F548:	
 11157                           ; 1 bytes @ 0x1
 11158                           
 11159     0071                     ??_RN487X_IndicateRx:	
 11160                           ; 1 bytes @ 0x1
 11161                           
 11162     0071                     ??_RN487X_Reset:	
 11163                           ; 1 bytes @ 0x1
 11164                           
 11165     0071                     ??_RN487X_SetSystemMode:	
 11166                           ; 1 bytes @ 0x1
 11167                           
 11168     0071                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11169                           ; 1 bytes @ 0x1
 11170                           
 11171     0071                     ??_rn487x_PrintMessageStart:	
 11172                           ; 1 bytes @ 0x1
 11173                           
 11174     0071                     ??_rn487x_PrintMessageEnd:	
 11175                           ; 1 bytes @ 0x1
 11176                           
 11177     0071                     ??_rn487x_PrintIndicatorCharacters:	
 11178                           ; 1 bytes @ 0x1
 11179                           
 11180                           
 11181                           ; 1 bytes @ 0x1
 11182     0071                     	ds	1
 11183     0072                     ?_RN487X_Delay:
 11184     0072                     ?_LIGHTBLUE_PerformAction:	
 11185                           ; 1 bytes @ 0x2
 11186                           
 11187     0072                     LIGHTBLUE_PerformAction@data:	
 11188                           ; 1 bytes @ 0x2
 11189                           
 11190     0072                     strcpy@d:	
 11191                           ; 1 bytes @ 0x2
 11192                           
 11193     0072                     RN487X_Delay@delayCount:	
 11194                           ; 1 bytes @ 0x2
 11195                           
 11196     0072                     I2C1_SetBuffer@bufferSize:	
 11197                           ; 2 bytes @ 0x2
 11198                           
 11199     0072                     I2C1_SetCallback@ptr:	
 11200                           ; 2 bytes @ 0x2
 11201                           
 11202     0072                     ??_EUSART1_SetTxInterruptHandler:	
 11203                           ; 2 bytes @ 0x2
 11204                           
 11205     0072                     ??_EUSART1_SetRxInterruptHandler:	
 11206                           ; 1 bytes @ 0x2
 11207                           
 11208     0072                     ??_EUSART1_Initialize:	
 11209                           ; 1 bytes @ 0x2
 11210                           
 11211     0072                     ??_DELAY_milliseconds:	
 11212                           ; 1 bytes @ 0x2
 11213                           
 11214     0072                     ??_strcpy:	
 11215                           ; 1 bytes @ 0x2
 11216                           
 11217     0072                     ??_strlen:	
 11218                           ; 1 bytes @ 0x2
 11219                           
 11220     0072                     ??_IOCAF6_SetInterruptHandler:	
 11221                           ; 1 bytes @ 0x2
 11222                           
 11223     0072                     ??_IOCAF7_SetInterruptHandler:	
 11224                           ; 1 bytes @ 0x2
 11225                           
 11226     0072                     ??_TMR0_Initialize:	
 11227                           ; 1 bytes @ 0x2
 11228                           
 11229     0072                     ??_EUSART2_Initialize:	
 11230                           ; 1 bytes @ 0x2
 11231                           
 11232     0072                     ??_TMR0_SetInterruptHandler:	
 11233                           ; 1 bytes @ 0x2
 11234                           
 11235     0072                     ??_EUSART1_SetFramingErrorHandler:	
 11236                           ; 1 bytes @ 0x2
 11237                           
 11238     0072                     ??_EUSART1_SetOverrunErrorHandler:	
 11239                           ; 1 bytes @ 0x2
 11240                           
 11241     0072                     ??_EUSART1_SetErrorHandler:	
 11242                           ; 1 bytes @ 0x2
 11243                           
 11244     0072                     ??_EUSART2_SetRxInterruptHandler:	
 11245                           ; 1 bytes @ 0x2
 11246                           
 11247     0072                     ??_EUSART2_SetTxInterruptHandler:	
 11248                           ; 1 bytes @ 0x2
 11249                           
 11250     0072                     ??_EUSART2_SetFramingErrorHandler:	
 11251                           ; 1 bytes @ 0x2
 11252                           
 11253     0072                     ??_EUSART2_SetOverrunErrorHandler:	
 11254                           ; 1 bytes @ 0x2
 11255                           
 11256     0072                     ??_EUSART2_SetErrorHandler:	
 11257                           ; 1 bytes @ 0x2
 11258                           
 11259     0072                     ??_PIN_MANAGER_Initialize:	
 11260                           ; 1 bytes @ 0x2
 11261                           
 11262     0072                     ??_SYSTEM_Initialize:	
 11263                           ; 1 bytes @ 0x2
 11264                           
 11265                           
 11266                           ; 1 bytes @ 0x2
 11267     0072                     	ds	1
 11268     0073                     strlen@a:
 11269     0073                     strncmp@n:	
 11270                           ; 2 bytes @ 0x3
 11271                           
 11272     0073                     ??_LIGHTBLUE_PerformAction:	
 11273                           ; 2 bytes @ 0x3
 11274                           
 11275     0073                     ??_strchr:	
 11276                           ; 1 bytes @ 0x3
 11277                           
 11278                           
 11279                           ; 1 bytes @ 0x3
 11280     0073                     	ds	1
 11281     0074                     I2C1_SetCallback@idx:
 11282     0074                     LIGHTBLUE_PerformAction@id:	
 11283                           ; 1 bytes @ 0x4
 11284                           
 11285     0074                     ??_I2C1_SetBuffer:	
 11286                           ; 1 bytes @ 0x4
 11287                           
 11288     0074                     ??_RN487X_Delay:	
 11289                           ; 1 bytes @ 0x4
 11290                           
 11291     0074                     ??_I2C1_SetCallback:	
 11292                           ; 1 bytes @ 0x4
 11293                           
 11294     0074                     ??_RN487X_Init:	
 11295                           ; 1 bytes @ 0x4
 11296                           
 11297                           
 11298                           ; 1 bytes @ 0x4
 11299     0074                     	ds	1
 11300     0075                     ?_I2C1_SetDataCompleteCallback:
 11301     0075                     ?_I2C1_SetAddressNackCallback:	
 11302                           ; 1 bytes @ 0x5
 11303                           
 11304     0075                     ?_RN487X_Write:	
 11305                           ; 1 bytes @ 0x5
 11306                           
 11307     0075                     ?_LIGHTBLUE_SplitByte:	
 11308                           ; 1 bytes @ 0x5
 11309                           
 11310     0075                     ?_rn487x_PrintMessage:	
 11311                           ; 1 bytes @ 0x5
 11312                           
 11313     0075                     RN487X_Write@txData:	
 11314                           ; 1 bytes @ 0x5
 11315                           
 11316     0075                     rn487x_PrintMessage@passedMessage:	
 11317                           ; 1 bytes @ 0x5
 11318                           
 11319     0075                     LIGHTBLUE_SplitByte@payload:	
 11320                           ; 1 bytes @ 0x5
 11321                           
 11322     0075                     LIGHTBLUE_PerformAction@led:	
 11323                           ; 1 bytes @ 0x5
 11324                           
 11325     0075                     I2C1_SetDataCompleteCallback@cb:	
 11326                           ; 1 bytes @ 0x5
 11327                           
 11328     0075                     I2C1_SetAddressNackCallback@cb:	
 11329                           ; 2 bytes @ 0x5
 11330                           
 11331     0075                     ??_strncmp:	
 11332                           ; 2 bytes @ 0x5
 11333                           
 11334                           
 11335                           ; 1 bytes @ 0x5
 11336     0075                     	ds	1
 11337     0076                     ?_strstr:
 11338     0076                     ?_LIGHTBLUE_SendSerialData:	
 11339                           ; 1 bytes @ 0x6
 11340                           
 11341     0076                     ?_LIGHTBLUE_SendPacket:	
 11342                           ; 1 bytes @ 0x6
 11343                           
 11344     0076                     LIGHTBLUE_SendSerialData@serialData:	
 11345                           ; 1 bytes @ 0x6
 11346                           
 11347     0076                     LIGHTBLUE_SendPacket@payload:	
 11348                           ; 1 bytes @ 0x6
 11349                           
 11350     0076                     LIGHTBLUE_SplitByte@value:	
 11351                           ; 1 bytes @ 0x6
 11352                           
 11353     0076                     strstr@h:	
 11354                           ; 1 bytes @ 0x6
 11355                           
 11356     0076                     ??_RN487X_Write:	
 11357                           ; 1 bytes @ 0x6
 11358                           
 11359     0076                     ??_LIGHTBLUE_ParseIncomingPacket:	
 11360                           ; 1 bytes @ 0x6
 11361                           
 11362     0076                     ??_rn487x_PrintMessage:	
 11363                           ; 1 bytes @ 0x6
 11364                           
 11365                           
 11366                           ; 1 bytes @ 0x6
 11367     0076                     	ds	1
 11368     0077                     I2C1_SetDataCompleteCallback@ptr:
 11369     0077                     I2C1_SetAddressNackCallback@ptr:	
 11370                           ; 2 bytes @ 0x7
 11371                           
 11372     0077                     strstr@n:	
 11373                           ; 2 bytes @ 0x7
 11374                           
 11375     0077                     ??_LIGHTBLUE_SendSerialData:	
 11376                           ; 2 bytes @ 0x7
 11377                           
 11378     0077                     ??_LIGHTBLUE_SendPacket:	
 11379                           ; 1 bytes @ 0x7
 11380                           
 11381     0077                     ??_LIGHTBLUE_SplitByte:	
 11382                           ; 1 bytes @ 0x7
 11383                           
 11384                           
 11385                           ; 1 bytes @ 0x7
 11386     0077                     	ds	1
 11387     0078                     ?_LIGHTBLUE_SplitWord:
 11388     0078                     LIGHTBLUE_SendSerialData@length:	
 11389                           ; 1 bytes @ 0x8
 11390                           
 11391     0078                     LIGHTBLUE_SplitWord@payload:	
 11392                           ; 1 bytes @ 0x8
 11393                           
 11394                           
 11395                           ; 1 bytes @ 0x8
 11396     0078                     	ds	1
 11397     0079                     ?_rd1RegCompleteHandler:
 11398     0079                     ?_rd2RegCompleteHandler:	
 11399                           ; 1 bytes @ 0x9
 11400                           
 11401     0079                     ?_wr1RegCompleteHandler:	
 11402                           ; 1 bytes @ 0x9
 11403                           
 11404     0079                     ?_wr2RegCompleteHandler:	
 11405                           ; 1 bytes @ 0x9
 11406                           
 11407     0079                     ?_rdBlkRegCompleteHandler:	
 11408                           ; 1 bytes @ 0x9
 11409                           
 11410     0079                     ?_I2C1_CallbackReturnStop:	
 11411                           ; 1 bytes @ 0x9
 11412                           
 11413     0079                     ?_I2C1_CallbackReturnReset:	
 11414                           ; 1 bytes @ 0x9
 11415                           
 11416     0079                     ?_wr1RegCompleteHandler@i2c_simple_master$F3572:	
 11417                           ; 1 bytes @ 0x9
 11418                           
 11419     0079                     ?_rd1RegCompleteHandler@i2c_simple_master$F3582:	
 11420                           ; 1 bytes @ 0x9
 11421                           
 11422     0079                     ?_rd2RegCompleteHandler@i2c_simple_master$F3590:	
 11423                           ; 1 bytes @ 0x9
 11424                           
 11425     0079                     ?_wr2RegCompleteHandler@i2c_simple_master$F3596:	
 11426                           ; 1 bytes @ 0x9
 11427                           
 11428     0079                     ?_rdBlkRegCompleteHandler@i2c_simple_master$F3602:	
 11429                           ; 1 bytes @ 0x9
 11430                           
 11431     0079                     LIGHTBLUE_SendPacket@packetID:	
 11432                           ; 1 bytes @ 0x9
 11433                           
 11434     0079                     rd1RegCompleteHandler@ptr:	
 11435                           ; 1 bytes @ 0x9
 11436                           
 11437     0079                     rd2RegCompleteHandler@ptr:	
 11438                           ; 2 bytes @ 0x9
 11439                           
 11440     0079                     wr1RegCompleteHandler@ptr:	
 11441                           ; 2 bytes @ 0x9
 11442                           
 11443     0079                     wr2RegCompleteHandler@ptr:	
 11444                           ; 2 bytes @ 0x9
 11445                           
 11446     0079                     rdBlkRegCompleteHandler@ptr:	
 11447                           ; 2 bytes @ 0x9
 11448                           
 11449     0079                     I2C1_CallbackReturnStop@funPtr:	
 11450                           ; 2 bytes @ 0x9
 11451                           
 11452     0079                     I2C1_CallbackReturnReset@funPtr:	
 11453                           ; 2 bytes @ 0x9
 11454                           
 11455     0079                     LIGHTBLUE_SplitWord@value:	
 11456                           ; 2 bytes @ 0x9
 11457                           
 11458     0079                     wr1RegCompleteHandler@i2c_simple_master$F3572@p:	
 11459                           ; 2 bytes @ 0x9
 11460                           
 11461     0079                     rd1RegCompleteHandler@i2c_simple_master$F3582@p:	
 11462                           ; 2 bytes @ 0x9
 11463                           
 11464     0079                     rd2RegCompleteHandler@i2c_simple_master$F3590@p:	
 11465                           ; 2 bytes @ 0x9
 11466                           
 11467     0079                     wr2RegCompleteHandler@i2c_simple_master$F3596@p:	
 11468                           ; 2 bytes @ 0x9
 11469                           
 11470     0079                     rdBlkRegCompleteHandler@i2c_simple_master$F3602@p:	
 11471                           ; 2 bytes @ 0x9
 11472                           
 11473     0079                     ??_I2C1_SetDataCompleteCallback:	
 11474                           ; 2 bytes @ 0x9
 11475                           
 11476     0079                     ??_I2C1_SetAddressNackCallback:	
 11477                           ; 1 bytes @ 0x9
 11478                           
 11479     0079                     ??_strstr:	
 11480                           ; 1 bytes @ 0x9
 11481                           
 11482                           
 11483                           ; 1 bytes @ 0x9
 11484     0079                     	ds	1
 11485     007A                     LIGHTBLUE_PushButton@payload:
 11486     007A                     LIGHTBLUE_AccState@payload:	
 11487                           ; 3 bytes @ 0xA
 11488                           
 11489     007A                     LIGHTBLUE_LedState@payload:	
 11490                           ; 3 bytes @ 0xA
 11491                           
 11492     007A                     ??_LIGHTBLUE_PushButton:	
 11493                           ; 3 bytes @ 0xA
 11494                           
 11495     007A                     ??_LIGHTBLUE_LedState:	
 11496                           ; 1 bytes @ 0xA
 11497                           
 11498     007A                     ??_LIGHTBLUE_SendProtocolVersion:	
 11499                           ; 1 bytes @ 0xA
 11500                           
 11501     007A                     ??_LIGHTBLUE_AccState:	
 11502                           ; 1 bytes @ 0xA
 11503                           
 11504                           
 11505                           ; 1 bytes @ 0xA
 11506     007A                     	ds	1
 11507     007B                     strstr@nl:
 11508     007B                     ??_rd1RegCompleteHandler:	
 11509                           ; 2 bytes @ 0xB
 11510                           
 11511     007B                     ??_rd2RegCompleteHandler:	
 11512                           ; 1 bytes @ 0xB
 11513                           
 11514     007B                     ??_wr1RegCompleteHandler:	
 11515                           ; 1 bytes @ 0xB
 11516                           
 11517     007B                     ??_wr2RegCompleteHandler:	
 11518                           ; 1 bytes @ 0xB
 11519                           
 11520     007B                     ??_rdBlkRegCompleteHandler:	
 11521                           ; 1 bytes @ 0xB
 11522                           
 11523     007B                     ??_I2C1_DO_TX:	
 11524                           ; 1 bytes @ 0xB
 11525                           
 11526     007B                     ??_I2C1_DO_RX:	
 11527                           ; 1 bytes @ 0xB
 11528                           
 11529     007B                     ??_I2C1_DO_TX_EMPTY:	
 11530                           ; 1 bytes @ 0xB
 11531                           
 11532     007B                     ??_I2C1_DO_ADDRESS_NACK:	
 11533                           ; 1 bytes @ 0xB
 11534                           
 11535     007B                     ??_I2C1_CallbackReturnStop:	
 11536                           ; 1 bytes @ 0xB
 11537                           
 11538     007B                     ??_I2C1_CallbackReturnReset:	
 11539                           ; 1 bytes @ 0xB
 11540                           
 11541     007B                     ??_LIGHTBLUE_SplitWord:	
 11542                           ; 1 bytes @ 0xB
 11543                           
 11544     007B                     ??_wr1RegCompleteHandler@i2c_simple_master$F3572:	
 11545                           ; 1 bytes @ 0xB
 11546                           
 11547     007B                     ??_rd1RegCompleteHandler@i2c_simple_master$F3582:	
 11548                           ; 1 bytes @ 0xB
 11549                           
 11550     007B                     ??_rd2RegCompleteHandler@i2c_simple_master$F3590:	
 11551                           ; 1 bytes @ 0xB
 11552                           
 11553     007B                     ??_wr2RegCompleteHandler@i2c_simple_master$F3596:	
 11554                           ; 1 bytes @ 0xB
 11555                           
 11556     007B                     ??_rdBlkRegCompleteHandler@i2c_simple_master$F3602:	
 11557                           ; 1 bytes @ 0xB
 11558                           
 11559                           
 11560                           ; 1 bytes @ 0xB
 11561     007B                     	ds	2
 11562     007D                     ?_RN487X_MessageHandler:
 11563     007D                     ?_i2c_read1ByteRegister:	
 11564                           ; 1 bytes @ 0xD
 11565                           
 11566     007D                     RN487X_MessageHandler@message:	
 11567                           ; 1 bytes @ 0xD
 11568                           
 11569     007D                     LIGHTBLUE_PushButton@button:	
 11570                           ; 1 bytes @ 0xD
 11571                           
 11572     007D                     LIGHTBLUE_AccState@acc:	
 11573                           ; 1 bytes @ 0xD
 11574                           
 11575     007D                     LIGHTBLUE_LedState@led:	
 11576                           ; 1 bytes @ 0xD
 11577                           
 11578     007D                     i2c_read1ByteRegister@reg:	
 11579                           ; 1 bytes @ 0xD
 11580                           
 11581     007D                     ??_I2C1_MasterWrite:	
 11582                           ; 1 bytes @ 0xD
 11583                           
 11584     007D                     ??_I2C1_Poller:	
 11585                           ; 1 bytes @ 0xD
 11586                           
 11587     007D                     ??_LIGHTBLUE_TemperatureSensor:	
 11588                           ; 1 bytes @ 0xD
 11589                           
 11590     007D                     ??_MCP9844_GetTemperatureValue:	
 11591                           ; 1 bytes @ 0xD
 11592                           
 11593     007D                     ??_I2C1_MasterOperation:	
 11594                           ; 1 bytes @ 0xD
 11595                           
 11596                           
 11597                           ; 1 bytes @ 0xD
 11598     007D                     	ds	1
 11599     007E                     ??_RN487X_Read:
 11600     007E                     ??_RN487X_DataReady:	
 11601                           ; 1 bytes @ 0xE
 11602                           
 11603     007E                     ??_RN487X_FilterData:	
 11604                           ; 1 bytes @ 0xE
 11605                           
 11606     007E                     ??_RN487X_MessageHandler:	
 11607                           ; 1 bytes @ 0xE
 11608                           
 11609     007E                     ??_service_acceleremoterInterrupt:	
 11610                           ; 1 bytes @ 0xE
 11611                           
 11612     007E                     ??_LIGHTBLUE_AccelSensor:	
 11613                           ; 1 bytes @ 0xE
 11614                           
 11615     007E                     ??_BMA253_GetAccelDataXYZ:	
 11616                           ; 1 bytes @ 0xE
 11617                           
 11618     007E                     ??_i2c_read1ByteRegister:	
 11619                           ; 1 bytes @ 0xE
 11620                           
 11621     007E                     ??_BMA253_NewAccelDataRdyX:	
 11622                           ; 1 bytes @ 0xE
 11623                           
 11624     007E                     ??_BMA253_NewAccelDataRdyY:	
 11625                           ; 1 bytes @ 0xE
 11626                           
 11627     007E                     ??_BMA253_NewAccelDataRdyZ:	
 11628                           ; 1 bytes @ 0xE
 11629                           
 11630                           
 11631                           	psect	cstackBANK0
 11632     0020                     __pcstackBANK0:	
 11633                           ; 1 bytes @ 0xE
 11634                           
 11635     0020                     _LIGHTBLUE_ParseIncomingPacket$3099:
 11636     0020                     LIGHTBLUE_SendProtocolVersion@payload:	
 11637                           ; 2 bytes @ 0x0
 11638                           
 11639     0020                     rn487x_PrintMessage@printCharacter:	
 11640                           ; 19 bytes @ 0x0
 11641                           
 11642     0020                     ??_I2C1_MasterFsm:	
 11643                           ; 32 bytes @ 0x0
 11644                           
 11645                           
 11646                           ; 1 bytes @ 0x0
 11647     0020                     	ds	2
 11648     0022                     I2C1_MasterOperation@read:
 11649     0022                     _LIGHTBLUE_ParseIncomingPacket$3100:	
 11650                           ; 1 bytes @ 0x2
 11651                           
 11652                           
 11653                           ; 2 bytes @ 0x2
 11654     0022                     	ds	1
 11655     0023                     I2C1_MasterOperation@returnValue:
 11656                           
 11657                           ; 1 bytes @ 0x3
 11658     0023                     	ds	1
 11659     0024                     ?_i2c_read2ByteRegister:
 11660     0024                     i2c_read1ByteRegister@address:	
 11661                           ; 2 bytes @ 0x4
 11662                           
 11663     0024                     i2c_read2ByteRegister@reg:	
 11664                           ; 1 bytes @ 0x4
 11665                           
 11666     0024                     _LIGHTBLUE_ParseIncomingPacket$3101:	
 11667                           ; 1 bytes @ 0x4
 11668                           
 11669                           
 11670                           ; 2 bytes @ 0x4
 11671     0024                     	ds	1
 11672     0025                     i2c_read1ByteRegister@e:
 11673                           
 11674                           ; 1 bytes @ 0x5
 11675     0025                     	ds	1
 11676     0026                     LIGHTBLUE_ParseIncomingPacket@receivedByte:
 11677     0026                     i2c_read1ByteRegister@x:	
 11678                           ; 1 bytes @ 0x6
 11679                           
 11680     0026                     ??_i2c_read2ByteRegister:	
 11681                           ; 2 bytes @ 0x6
 11682                           
 11683                           
 11684                           ; 1 bytes @ 0x6
 11685     0026                     	ds	2
 11686     0028                     i2c_read1ByteRegister@d2:
 11687                           
 11688                           ; 1 bytes @ 0x8
 11689     0028                     	ds	1
 11690     0029                     BMA253_NewAccelDataRdyX@xNewData:
 11691     0029                     BMA253_NewAccelDataRdyY@yNewData:	
 11692                           ; 1 bytes @ 0x9
 11693                           
 11694     0029                     BMA253_NewAccelDataRdyZ@zNewData:	
 11695                           ; 1 bytes @ 0x9
 11696                           
 11697                           
 11698                           ; 1 bytes @ 0x9
 11699     0029                     	ds	1
 11700     002A                     ?_BMA253_GetAccelDataX:
 11701     002A                     ?_BMA253_GetAccelDataY:	
 11702                           ; 1 bytes @ 0xA
 11703                           
 11704     002A                     ?_BMA253_GetAccelDataZ:	
 11705                           ; 1 bytes @ 0xA
 11706                           
 11707     002A                     BMA253_GetAccelDataX@xAccelData:	
 11708                           ; 1 bytes @ 0xA
 11709                           
 11710     002A                     BMA253_GetAccelDataY@yAccelData:	
 11711                           ; 1 bytes @ 0xA
 11712                           
 11713     002A                     BMA253_GetAccelDataZ@zAccelData:	
 11714                           ; 1 bytes @ 0xA
 11715                           
 11716     002A                     i2c_read2ByteRegister@address:	
 11717                           ; 1 bytes @ 0xA
 11718                           
 11719                           
 11720                           ; 1 bytes @ 0xA
 11721     002A                     	ds	1
 11722     002B                     i2c_read2ByteRegister@result:
 11723     002B                     ??_BMA253_GetAccelDataX:	
 11724                           ; 2 bytes @ 0xB
 11725                           
 11726     002B                     ??_BMA253_GetAccelDataY:	
 11727                           ; 1 bytes @ 0xB
 11728                           
 11729     002B                     ??_BMA253_GetAccelDataZ:	
 11730                           ; 1 bytes @ 0xB
 11731                           
 11732                           
 11733                           ; 1 bytes @ 0xB
 11734     002B                     	ds	2
 11735     002D                     ?_MCP9844_CalcTemperature:
 11736     002D                     BMA253_GetAccelDataX@lsbData:	
 11737                           ; 2 bytes @ 0xD
 11738                           
 11739     002D                     BMA253_GetAccelDataY@lsbData:	
 11740                           ; 1 bytes @ 0xD
 11741                           
 11742     002D                     BMA253_GetAccelDataZ@lsbData:	
 11743                           ; 1 bytes @ 0xD
 11744                           
 11745                           
 11746                           ; 1 bytes @ 0xD
 11747     002D                     	ds	1
 11748     002E                     BMA253_GetAccelDataX@msbData:
 11749     002E                     BMA253_GetAccelDataY@msbData:	
 11750                           ; 1 bytes @ 0xE
 11751                           
 11752     002E                     BMA253_GetAccelDataZ@msbData:	
 11753                           ; 1 bytes @ 0xE
 11754                           
 11755                           
 11756                           ; 1 bytes @ 0xE
 11757     002E                     	ds	1
 11758     002F                     ?_BMA253_GetAccelDataXYZ:
 11759     002F                     BMA253_GetAccelDataXYZ@accelData:	
 11760                           ; 1 bytes @ 0xF
 11761                           
 11762     002F                     ??_MCP9844_CalcTemperature:	
 11763                           ; 2 bytes @ 0xF
 11764                           
 11765                           
 11766                           ; 1 bytes @ 0xF
 11767     002F                     	ds	2
 11768     0031                     BMA253_GetAccelDataXYZ@sensorValue:
 11769                           
 11770                           ; 2 bytes @ 0x11
 11771     0031                     	ds	2
 11772     0033                     LIGHTBLUE_SendProtocolVersion@value:
 11773     0033                     LIGHTBLUE_AccelSensor@payload:	
 11774                           ; 1 bytes @ 0x13
 11775                           
 11776                           
 11777                           ; 13 bytes @ 0x13
 11778     0033                     	ds	1
 11779     0034                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 11780     0034                     MCP9844_CalcTemperature@upperByte:	
 11781                           ; 1 bytes @ 0x14
 11782                           
 11783                           
 11784                           ; 1 bytes @ 0x14
 11785     0034                     	ds	1
 11786     0035                     MCP9844_CalcTemperature@lowerByte:
 11787                           
 11788                           ; 1 bytes @ 0x15
 11789     0035                     	ds	1
 11790     0036                     MCP9844_CalcTemperature@temperatureData:
 11791                           
 11792                           ; 2 bytes @ 0x16
 11793     0036                     	ds	2
 11794     0038                     ?_MCP9844_GetTemperatureValue:
 11795     0038                     MCP9844_GetTemperatureValue@temperature:	
 11796                           ; 1 bytes @ 0x18
 11797                           
 11798                           
 11799                           ; 1 bytes @ 0x18
 11800     0038                     	ds	1
 11801     0039                     LIGHTBLUE_TemperatureSensor@payload:
 11802                           
 11803                           ; 5 bytes @ 0x19
 11804     0039                     	ds	5
 11805     003E                     LIGHTBLUE_TemperatureSensor@temperature:
 11806                           
 11807                           ; 2 bytes @ 0x1E
 11808     003E                     	ds	2
 11809     0040                     rn487x_PrintMessage@messageIndex:
 11810     0040                     LIGHTBLUE_AccelSensor@accelData:	
 11811                           ; 1 bytes @ 0x20
 11812                           
 11813                           
 11814                           ; 6 bytes @ 0x20
 11815     0040                     	ds	1
 11816     0041                     RN487X_MessageHandler@messageType:
 11817                           
 11818                           ; 1 bytes @ 0x21
 11819     0041                     	ds	1
 11820     0042                     RN487X_FilterData@readChar:
 11821                           
 11822                           ; 1 bytes @ 0x22
 11823     0042                     	ds	4
 11824     0046                     ??_main:
 11825                           
 11826                           ; 1 bytes @ 0x26
 11827     0046                     	ds	1
 11828     0047                     _main$4879:
 11829                           
 11830                           ; 1 bytes @ 0x27
 11831     0047                     	ds	1
 11832                           
 11833                           	psect	maintext
 11834     018E                     __pmaintext:	
 11835 ;;
 11836 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11837 ;;
 11838 ;; *************** function _main *****************
 11839 ;; Defined at:
 11840 ;;		line 52 in file "main.c"
 11841 ;; Parameters:    Size  Location     Type
 11842 ;;		None
 11843 ;; Auto vars:     Size  Location     Type
 11844 ;;		None
 11845 ;; Return value:  Size  Location     Type
 11846 ;;                  1    wreg      void 
 11847 ;; Registers used:
 11848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11849 ;; Tracked objects:
 11850 ;;		On entry : B3F/0
 11851 ;;		On exit  : 0/0
 11852 ;;		Unchanged: 0/0
 11853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11858 ;;Total ram usage:        2 bytes
 11859 ;; Hardware stack levels required when called: 17
 11860 ;; This function calls:
 11861 ;;		_EUSART1_Read
 11862 ;;		_EUSART1_Write
 11863 ;;		_EUSART1_is_rx_ready
 11864 ;;		_LIGHTBLUE_AccelSensor
 11865 ;;		_LIGHTBLUE_Initialize
 11866 ;;		_LIGHTBLUE_LedState
 11867 ;;		_LIGHTBLUE_ParseIncomingPacket
 11868 ;;		_LIGHTBLUE_PushButton
 11869 ;;		_LIGHTBLUE_SendProtocolVersion
 11870 ;;		_LIGHTBLUE_SendSerialData
 11871 ;;		_LIGHTBLUE_TemperatureSensor
 11872 ;;		_RN487X_DataReady
 11873 ;;		_RN487X_Init
 11874 ;;		_RN487X_IsConnected
 11875 ;;		_RN487X_Read
 11876 ;;		_RN487X_Write
 11877 ;;		_SYSTEM_Initialize
 11878 ;;		_service_acceleremoterInterrupt
 11879 ;; This function is called by:
 11880 ;;		Startup code after reset
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884     018E                     _main:	
 11885                           ;psect for function _main
 11886                           
 11887     018E                     l8292:	
 11888                           ;incstack = 0
 11889 ;; hardware stack exceeded
 11890                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11891                           
 11892                           
 11893                           ;main.c: 54:     SYSTEM_Initialize();
 11894     018E  318B  23D9  3181   	fcall	_SYSTEM_Initialize
 11895     0191                     l8294:
 11896                           
 11897                           ;main.c: 60:     (INTCONbits.GIE = 1);
 11898     0191  178B               	bsf	11,7	;volatile
 11899     0192                     l8296:
 11900                           
 11901                           ;main.c: 63:     (INTCONbits.PEIE = 1);
 11902     0192  170B               	bsf	11,6	;volatile
 11903     0193                     l8298:
 11904                           
 11905                           ;main.c: 81:     RN487X_Init();
 11906     0193  3183  237F  3181   	fcall	_RN487X_Init
 11907     0196                     l8300:
 11908                           
 11909                           ;main.c: 82:     LIGHTBLUE_Initialize();
 11910     0196  3188  2023  3181   	fcall	_LIGHTBLUE_Initialize
 11911     0199                     l8302:
 11912                           
 11913                           ;main.c: 84:         if (RN487X_IsConnected() == 1) {
 11914     0199  3197  27B9  3181   	fcall	_RN487X_IsConnected
 11915     019C  3A01               	xorlw	1
 11916     019D  1D03               	skipz
 11917     019E  29A0               	goto	u4431
 11918     019F  29A1               	goto	u4430
 11919     01A0                     u4431:
 11920     01A0  2A26               	goto	l1437
 11921     01A1                     u4430:
 11922     01A1                     l8304:
 11923                           
 11924                           ;main.c: 85:             service_acceleremoterInterrupt();
 11925     01A1  318B  2362  3181   	fcall	_service_acceleremoterInterrupt
 11926     01A4                     l8306:
 11927                           
 11928                           ;main.c: 86:             if ((PIR0bits.TMR0IF) == 1) {
 11929     01A4  014E               	movlb	14	; select bank14
 11930     01A5  1E8C               	btfss	12,5	;volatile
 11931     01A6  29A8               	goto	u4441
 11932     01A7  29A9               	goto	u4440
 11933     01A8                     u4441:
 11934     01A8  29C0               	goto	l1426
 11935     01A9                     u4440:
 11936     01A9                     l8308:
 11937                           
 11938                           ;main.c: 87:                 (PIR0bits.TMR0IF = 0);
 11939     01A9  128C               	bcf	12,5	;volatile
 11940     01AA                     l8310:
 11941                           
 11942                           ;main.c: 89:                 LIGHTBLUE_TemperatureSensor();
 11943     01AA  318B  2390  3181   	fcall	_LIGHTBLUE_TemperatureSensor
 11944                           
 11945                           ;main.c: 90:                 LIGHTBLUE_AccelSensor();
 11946     01AD  318E  26E6  3181   	fcall	_LIGHTBLUE_AccelSensor
 11947                           
 11948                           ;main.c: 91:                 LIGHTBLUE_PushButton();
 11949     01B0  318A  2224  3181   	fcall	_LIGHTBLUE_PushButton
 11950                           
 11951                           ;main.c: 92:                 LIGHTBLUE_LedState();
 11952     01B3  318D  2539  3181   	fcall	_LIGHTBLUE_LedState
 11953                           
 11954                           ;main.c: 93:                 LIGHTBLUE_SendProtocolVersion();
 11955     01B6  318E  2683  3181   	fcall	_LIGHTBLUE_SendProtocolVersion
 11956                           
 11957                           ;main.c: 94:             } else {
 11958     01B9  2999               	goto	l8302
 11959     01BA                     l8312:
 11960                           
 11961                           ;main.c: 96:                     LIGHTBLUE_ParseIncomingPacket(RN487X_Read());
 11962     01BA  3189  2123  3181   	fcall	_RN487X_Read
 11963     01BD  3180  20C3  3181   	fcall	_LIGHTBLUE_ParseIncomingPacket
 11964     01C0                     l1426:	
 11965                           ;main.c: 97:                 }
 11966                           
 11967                           
 11968                           ;main.c: 95:                 while (RN487X_DataReady()) {
 11969     01C0  318B  23F2  3181   	fcall	_RN487X_DataReady
 11970     01C3  3A00               	xorlw	0
 11971     01C4  1D03               	skipz
 11972     01C5  29C7               	goto	u4451
 11973     01C6  29C8               	goto	u4450
 11974     01C7                     u4451:
 11975     01C7  29BA               	goto	l8312
 11976     01C8                     u4450:
 11977     01C8  2A07               	goto	l8330
 11978     01C9                     l8314:
 11979                           
 11980                           ;main.c: 99:                     lightBlueSerial[serialIndex] = uart[UART_CDC].Read();
 11981     01C9  3000               	movlw	low (_uart| (0+32768))
 11982     01CA  0084               	movwf	4
 11983     01CB  3090               	movlw	high (_uart| (0+32768))
 11984     01CC  0085               	movwf	5
 11985     01CD  3F01               	moviw [1]fsr0
 11986     01CE  008A               	movwf	10
 11987     01CF  3F00               	moviw [0]fsr0
 11988     01D0  000A               	callw
 11989     01D1  3181               	pagesel	$
 11990     01D2  0140               	movlb	0	; select bank0
 11991     01D3  00C6               	movwf	??_main
 11992     01D4  0853               	movf	_serialIndex@main$F2768,w
 11993     01D5  3E20               	addlw	(low (_lightBlueSerial@main$F2767| (0+512)))& (0+255)
 11994     01D6  0086               	movwf	6
 11995     01D7  3002               	movlw	2	; select bank4/5
 11996     01D8  0087               	movwf	7
 11997     01D9  0846               	movf	??_main,w
 11998     01DA  0081               	movwf	1
 11999     01DB                     l8316:
 12000                           
 12001                           ;main.c: 100:                     if ((lightBlueSerial[serialIndex] == '\r')
 12002     01DB  0853               	movf	_serialIndex@main$F2768,w
 12003     01DC  3E20               	addlw	(low (_lightBlueSerial@main$F2767| (0+512)))& (0+255)
 12004     01DD  0086               	movwf	6
 12005     01DE  3002               	movlw	2	; select bank4/5
 12006     01DF  0087               	movwf	7
 12007     01E0  300D               	movlw	13
 12008     01E1  0601               	xorwf	1,w
 12009     01E2  1903               	btfsc	3,2
 12010     01E3  29E5               	goto	u4461
 12011     01E4  29E6               	goto	u4460
 12012     01E5                     u4461:
 12013     01E5  29F7               	goto	l8322
 12014     01E6                     u4460:
 12015     01E6                     l8318:
 12016     01E6  0853               	movf	_serialIndex@main$F2768,w
 12017     01E7  3E20               	addlw	(low (_lightBlueSerial@main$F2767| (0+512)))& (0+255)
 12018     01E8  0086               	movwf	6
 12019     01E9  3002               	movlw	2	; select bank4/5
 12020     01EA  0087               	movwf	7
 12021     01EB  300A               	movlw	10
 12022     01EC  0601               	xorwf	1,w
 12023     01ED  1903               	btfsc	3,2
 12024     01EE  29F0               	goto	u4471
 12025     01EF  29F1               	goto	u4470
 12026     01F0                     u4471:
 12027     01F0  29F7               	goto	l8322
 12028     01F1                     u4470:
 12029     01F1                     l8320:
 12030     01F1  304F               	movlw	79
 12031     01F2  0653               	xorwf	_serialIndex@main$F2768,w
 12032     01F3  1D03               	btfss	3,2
 12033     01F4  29F6               	goto	u4481
 12034     01F5  29F7               	goto	u4480
 12035     01F6                     u4481:
 12036     01F6  2A05               	goto	l8328
 12037     01F7                     u4480:
 12038     01F7                     l8322:
 12039                           
 12040                           ;main.c: 102:                             || (serialIndex == (sizeof (lightBlueSerial) -
      +                           1))) {;main.c: 103:                         lightBlueSerial[serialIndex] = '\0';
 12041     01F7  0853               	movf	_serialIndex@main$F2768,w
 12042     01F8  3E20               	addlw	(low (_lightBlueSerial@main$F2767| (0+512)))& (0+255)
 12043     01F9  0086               	movwf	6
 12044     01FA  3002               	movlw	2	; select bank4/5
 12045     01FB  0087               	movwf	7
 12046     01FC  0181               	clrf	1
 12047     01FD                     l8324:
 12048                           
 12049                           ;main.c: 104:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12050     01FD  3020               	movlw	(low (_lightBlueSerial@main$F2767| (0+512)))& (0+255)
 12051     01FE  00F6               	movwf	LIGHTBLUE_SendSerialData@serialData
 12052     01FF  3182  2253  3181   	fcall	_LIGHTBLUE_SendSerialData
 12053     0202                     l8326:
 12054                           
 12055                           ;main.c: 105:                         serialIndex = 0;
 12056     0202  0140               	movlb	0	; select bank0
 12057     0203  01D3               	clrf	_serialIndex@main$F2768
 12058                           
 12059                           ;main.c: 106:                     } else {
 12060     0204  2A07               	goto	l8330
 12061     0205                     l8328:
 12062                           
 12063                           ;main.c: 107:                         serialIndex++;
 12064     0205  3001               	movlw	1
 12065     0206  07D3               	addwf	_serialIndex@main$F2768,f
 12066     0207                     l8330:
 12067                           
 12068                           ;main.c: 98:                 while (uart[UART_CDC].DataReady()) {
 12069     0207  3006               	movlw	low ((_uart+6)| (0+32768))
 12070     0208  0084               	movwf	4
 12071     0209  3090               	movlw	high ((_uart+6)| (0+32768))
 12072     020A  0085               	movwf	5
 12073     020B  3F01               	moviw [1]fsr0
 12074     020C  008A               	movwf	10
 12075     020D  3F00               	moviw [0]fsr0
 12076     020E  000A               	callw
 12077     020F  3181               	pagesel	$
 12078     0210  3A00               	xorlw	0
 12079     0211  1D03               	skipz
 12080     0212  2A14               	goto	u4491
 12081     0213  2A15               	goto	u4490
 12082     0214                     u4491:
 12083     0214  29C9               	goto	l8314
 12084     0215                     u4490:
 12085     0215  2999               	goto	l8302
 12086     0216                     l8332:
 12087                           
 12088                           ;main.c: 114:                 uart[UART_CDC].Write(RN487X_Read());
 12089     0216  3189  2123  3181   	fcall	_RN487X_Read
 12090     0219  0140               	movlb	0	; select bank0
 12091     021A  00C7               	movwf	_main$4879
 12092                           
 12093                           ;main.c: 114:                 uart[UART_CDC].Write(RN487X_Read());
 12094     021B  0847               	movf	_main$4879,w
 12095     021C  00F0               	movwf	EUSART1_Write@txData
 12096     021D  3002               	movlw	low ((_uart+2)| (0+32768))
 12097     021E  0084               	movwf	4
 12098     021F  3090               	movlw	high ((_uart+2)| (0+32768))
 12099     0220  0085               	movwf	5
 12100     0221  3F01               	moviw [1]fsr0
 12101     0222  008A               	movwf	10
 12102     0223  3F00               	moviw [0]fsr0
 12103     0224  000A               	callw
 12104     0225  3181               	pagesel	$
 12105     0226                     l1437:	
 12106                           ;main.c: 115:             }
 12107                           
 12108                           
 12109                           ;main.c: 113:             while (RN487X_DataReady()) {
 12110     0226  318B  23F2  3181   	fcall	_RN487X_DataReady
 12111     0229  3A00               	xorlw	0
 12112     022A  1D03               	skipz
 12113     022B  2A2D               	goto	u4501
 12114     022C  2A2E               	goto	u4500
 12115     022D                     u4501:
 12116     022D  2A16               	goto	l8332
 12117     022E                     u4500:
 12118     022E  2A42               	goto	l8336
 12119     022F                     l8334:
 12120                           
 12121                           ;main.c: 117:                 RN487X.Write(uart[UART_CDC].Read());
 12122     022F  3000               	movlw	low (_uart| (0+32768))
 12123     0230  0084               	movwf	4
 12124     0231  3090               	movlw	high (_uart| (0+32768))
 12125     0232  0085               	movwf	5
 12126     0233  3F01               	moviw [1]fsr0
 12127     0234  008A               	movwf	10
 12128     0235  3F00               	moviw [0]fsr0
 12129     0236  000A               	callw
 12130     0237  3181               	pagesel	$
 12131     0238  00F5               	movwf	RN487X_Write@txData
 12132     0239  3068               	movlw	low (_RN487X| (0+32768))
 12133     023A  0084               	movwf	4
 12134     023B  3090               	movlw	high (_RN487X| (0+32768))
 12135     023C  0085               	movwf	5
 12136     023D  3F01               	moviw [1]fsr0
 12137     023E  008A               	movwf	10
 12138     023F  3F00               	moviw [0]fsr0
 12139     0240  000A               	callw
 12140     0241  3181               	pagesel	$
 12141     0242                     l8336:
 12142                           
 12143                           ;main.c: 116:             while (uart[UART_CDC].DataReady()) {
 12144     0242  3006               	movlw	low ((_uart+6)| (0+32768))
 12145     0243  0084               	movwf	4
 12146     0244  3090               	movlw	high ((_uart+6)| (0+32768))
 12147     0245  0085               	movwf	5
 12148     0246  3F01               	moviw [1]fsr0
 12149     0247  008A               	movwf	10
 12150     0248  3F00               	moviw [0]fsr0
 12151     0249  000A               	callw
 12152     024A  3181               	pagesel	$
 12153     024B  3A00               	xorlw	0
 12154     024C  1D03               	skipz
 12155     024D  2A4F               	goto	u4511
 12156     024E  2A50               	goto	u4510
 12157     024F                     u4511:
 12158     024F  2A2F               	goto	l8334
 12159     0250                     u4510:
 12160     0250  2999               	goto	l8302
 12161     0251  3180  2861         	ljmp	start
 12162     0253                     __end_of_main:
 12163                           
 12164                           	psect	text1
 12165     0B62                     __ptext1:	
 12166 ;; *************** function _service_acceleremoterInterrupt *****************
 12167 ;; Defined at:
 12168 ;;		line 124 in file "main.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12186 ;;Total ram usage:        0 bytes
 12187 ;; Hardware stack levels used: 1
 12188 ;; Hardware stack levels required when called: 8
 12189 ;; This function calls:
 12190 ;;		_LIGHTBLUE_AccState
 12191 ;; This function is called by:
 12192 ;;		_main
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196     0B62                     _service_acceleremoterInterrupt:	
 12197                           ;psect for function _service_acceleremoterInterrupt
 12198                           
 12199     0B62                     l6490:	
 12200                           ;incstack = 0
 12201                           ; Regs used in _service_acceleremoterInterrupt: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12202                           
 12203                           
 12204                           ;main.c: 125:     if ((INTERRUPTbits.ACC == 1)) {
 12205     0B62  0140               	movlb	0	; select bank0
 12206     0B63  1C6E               	btfss	_INTERRUPTbits,0	;volatile
 12207     0B64  2B66               	goto	u2991
 12208     0B65  2B67               	goto	u2990
 12209     0B66                     u2991:
 12210     0B66  2B77               	goto	l1450
 12211     0B67                     u2990:
 12212     0B67                     l6492:
 12213                           
 12214                           ;main.c: 126:         (INTERRUPTbits.ACC = 0);
 12215     0B67  106E               	bcf	_INTERRUPTbits,0	;volatile
 12216                           
 12217                           ;main.c: 127:         accelerometerInterruptBits.FLAT = 1;
 12218     0B68  17E6               	bsf	_accelerometerInterruptBits,7	;volatile
 12219     0B69                     l6494:
 12220                           
 12221                           ;main.c: 128:         flats++;
 12222     0B69  3001               	movlw	1
 12223     0B6A  07E2               	addwf	_flats,f
 12224     0B6B                     l6496:
 12225                           
 12226                           ;main.c: 129:         if (flats > 1) {
 12227     0B6B  3002               	movlw	2
 12228     0B6C  0262               	subwf	_flats,w
 12229     0B6D  1C03               	skipc
 12230     0B6E  2B70               	goto	u3001
 12231     0B6F  2B71               	goto	u3000
 12232     0B70                     u3001:
 12233     0B70  2B77               	goto	l1450
 12234     0B71                     u3000:
 12235     0B71                     l6498:
 12236                           
 12237                           ;main.c: 130:             LIGHTBLUE_AccState();
 12238     0B71  318A  224A  318B   	fcall	_LIGHTBLUE_AccState
 12239     0B74                     l6500:
 12240                           
 12241                           ;main.c: 131:             flats = 0;
 12242     0B74  0140               	movlb	0	; select bank0
 12243     0B75  01E2               	clrf	_flats
 12244     0B76                     l6502:
 12245                           
 12246                           ;main.c: 132:             accelerometerInterruptBits.FLAT = 0;
 12247     0B76  13E6               	bcf	_accelerometerInterruptBits,7	;volatile
 12248     0B77                     l1450:
 12249     0B77  0008               	return
 12250     0B78                     __end_of_service_acceleremoterInterrupt:
 12251                           
 12252                           	psect	text2
 12253     0A4A                     __ptext2:	
 12254 ;; *************** function _LIGHTBLUE_AccState *****************
 12255 ;; Defined at:
 12256 ;;		line 356 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;		None
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;  payload         3   10[COMMON] unsigned char [3]
 12261 ;;  acc             1   13[COMMON] unsigned char 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  1    wreg      void 
 12264 ;; Registers used:
 12265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12275 ;;Total ram usage:        4 bytes
 12276 ;; Hardware stack levels used: 1
 12277 ;; Hardware stack levels required when called: 7
 12278 ;; This function calls:
 12279 ;;		_LIGHTBLUE_GetAccState
 12280 ;;		_LIGHTBLUE_SendPacket
 12281 ;;		_LIGHTBLUE_SplitByte
 12282 ;; This function is called by:
 12283 ;;		_service_acceleremoterInterrupt
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287     0A4A                     _LIGHTBLUE_AccState:	
 12288                           ;psect for function _LIGHTBLUE_AccState
 12289                           
 12290     0A4A                     l6246:	
 12291                           ;incstack = 0
 12292                           ; Regs used in _LIGHTBLUE_AccState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12293                           
 12294                           
 12295                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 359:     uint8_t acc = LIGHTBLUE_GetAccStat
      +                          e();
 12296     0A4A  3188  2000  318A   	fcall	_LIGHTBLUE_GetAccState
 12297     0A4D  00FD               	movwf	LIGHTBLUE_AccState@acc
 12298     0A4E                     l6248:
 12299                           
 12300                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     *payload = '\0';
 12301     0A4E  01FA               	clrf	LIGHTBLUE_AccState@payload
 12302     0A4F                     l6250:
 12303                           
 12304                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 362:     LIGHTBLUE_SplitByte(paylo
      +                          ad, acc);
 12305     0A4F  307A               	movlw	(low (LIGHTBLUE_AccState@payload| 0))& (0+255)
 12306     0A50  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 12307     0A51  087D               	movf	LIGHTBLUE_AccState@acc,w
 12308     0A52  00F6               	movwf	LIGHTBLUE_SplitByte@value
 12309     0A53  318E  2628  318A   	fcall	_LIGHTBLUE_SplitByte
 12310     0A56                     l6252:
 12311                           
 12312                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     LIGHTBLUE_SendPacket(ACC_
      +                          STATE, payload);
 12313     0A56  307A               	movlw	(low (LIGHTBLUE_AccState@payload| 0))& (0+255)
 12314     0A57  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 12315     0A58  3041               	movlw	65
 12316     0A59  3182  22F7  318A   	fcall	_LIGHTBLUE_SendPacket
 12317     0A5C                     l1519:
 12318     0A5C  0008               	return
 12319     0A5D                     __end_of_LIGHTBLUE_AccState:
 12320                           
 12321                           	psect	text3
 12322     0800                     __ptext3:	
 12323 ;; *************** function _LIGHTBLUE_GetAccState *****************
 12324 ;; Defined at:
 12325 ;;		line 514 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;		None
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;		None
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  1    wreg      unsigned char 
 12332 ;; Registers used:
 12333 ;;		wreg
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12343 ;;Total ram usage:        0 bytes
 12344 ;; Hardware stack levels used: 1
 12345 ;; Hardware stack levels required when called: 4
 12346 ;; This function calls:
 12347 ;;		Nothing
 12348 ;; This function is called by:
 12349 ;;		_LIGHTBLUE_AccState
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353     0800                     _LIGHTBLUE_GetAccState:	
 12354                           ;psect for function _LIGHTBLUE_GetAccState
 12355                           
 12356     0800                     l5998:	
 12357                           ;incstack = 0
 12358                           ; Regs used in _LIGHTBLUE_GetAccState: [wreg]
 12359                           
 12360                           
 12361                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:     return accelerometerInter
      +                          ruptBits.AccelerometerInterruptBits;
 12362     0800  0140               	movlb	0	; select bank0
 12363     0801  0866               	movf	_accelerometerInterruptBits,w	;volatile
 12364     0802                     l1594:
 12365     0802  0008               	return
 12366     0803                     __end_of_LIGHTBLUE_GetAccState:
 12367                           
 12368                           	psect	text4
 12369     0BD9                     __ptext4:	
 12370 ;; *************** function _SYSTEM_Initialize *****************
 12371 ;; Defined at:
 12372 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;		None
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2, status,0, pclath, cstack
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12390 ;;Total ram usage:        0 bytes
 12391 ;; Hardware stack levels used: 1
 12392 ;; Hardware stack levels required when called: 6
 12393 ;; This function calls:
 12394 ;;		_EUSART1_Initialize
 12395 ;;		_EUSART2_Initialize
 12396 ;;		_I2C1_Initialize
 12397 ;;		_OSCILLATOR_Initialize
 12398 ;;		_PIN_MANAGER_Initialize
 12399 ;;		_PMD_Initialize
 12400 ;;		_SPI2_Initialize
 12401 ;;		_TMR0_Initialize
 12402 ;; This function is called by:
 12403 ;;		_main
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407     0BD9                     _SYSTEM_Initialize:	
 12408                           ;psect for function _SYSTEM_Initialize
 12409                           
 12410     0BD9                     l6388:	
 12411                           ;incstack = 0
 12412                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12413                           
 12414                           
 12415                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12416     0BD9  3188  20DF  318B   	fcall	_PMD_Initialize
 12417                           
 12418                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 12419     0BDC  3188  20B8  318B   	fcall	_I2C1_Initialize
 12420                           
 12421                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 12422     0BDF  318B  234C  318B   	fcall	_SPI2_Initialize
 12423     0BE2                     l6390:
 12424                           
 12425                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12426     0BE2  3183  23DD  318B   	fcall	_PIN_MANAGER_Initialize
 12427     0BE5                     l6392:
 12428                           
 12429                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12430     0BE5  3188  20D5  318B   	fcall	_OSCILLATOR_Initialize
 12431                           
 12432                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 12433     0BE8  318A  225D  318B   	fcall	_TMR0_Initialize
 12434                           
 12435                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
 12436     0BEB  3187  271B  318B   	fcall	_EUSART1_Initialize
 12437                           
 12438                           ;mcc_generated_files/mcc.c: 59:     EUSART2_Initialize();
 12439     0BEE  3186  26DE  318B   	fcall	_EUSART2_Initialize
 12440     0BF1                     l927:
 12441     0BF1  0008               	return
 12442     0BF2                     __end_of_SYSTEM_Initialize:
 12443                           
 12444                           	psect	text5
 12445     0A5D                     __ptext5:	
 12446 ;; *************** function _TMR0_Initialize *****************
 12447 ;; Defined at:
 12448 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12449 ;; Parameters:    Size  Location     Type
 12450 ;;		None
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;		None
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  1    wreg      void 
 12455 ;; Registers used:
 12456 ;;		wreg, status,2, status,0, pclath, cstack
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12466 ;;Total ram usage:        0 bytes
 12467 ;; Hardware stack levels used: 1
 12468 ;; Hardware stack levels required when called: 5
 12469 ;; This function calls:
 12470 ;;		_TMR0_SetInterruptHandler
 12471 ;; This function is called by:
 12472 ;;		_SYSTEM_Initialize
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476     0A5D                     _TMR0_Initialize:	
 12477                           ;psect for function _TMR0_Initialize
 12478                           
 12479     0A5D                     l6168:	
 12480                           ;incstack = 0
 12481                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12482                           
 12483                           
 12484                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x09;
 12485     0A5D  3009               	movlw	9
 12486     0A5E  014B               	movlb	11	; select bank11
 12487     0A5F  009F               	movwf	31	;volatile
 12488                           
 12489                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xC2;
 12490     0A60  30C2               	movlw	194
 12491     0A61  009D               	movwf	29	;volatile
 12492     0A62                     l6170:
 12493                           
 12494                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12495     0A62  019C               	clrf	28	;volatile
 12496     0A63                     l6172:
 12497                           
 12498                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12499     0A63  014E               	movlb	14	; select bank14
 12500     0A64  128C               	bcf	12,5	;volatile
 12501     0A65                     l6174:
 12502                           
 12503                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12504     0A65  1696               	bsf	22,5	;volatile
 12505     0A66                     l6176:
 12506                           
 12507                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12508     0A66  309B               	movlw	low _TMR0_DefaultInterruptHandler
 12509     0A67  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12510     0A68  3017               	movlw	high _TMR0_DefaultInterruptHandler
 12511     0A69  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12512     0A6A  3188  207D  318A   	fcall	_TMR0_SetInterruptHandler
 12513     0A6D                     l6178:
 12514                           
 12515                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12516     0A6D  3080               	movlw	128
 12517     0A6E  014B               	movlb	11	; select bank11
 12518     0A6F  009E               	movwf	30	;volatile
 12519     0A70                     l1025:
 12520     0A70  0008               	return
 12521     0A71                     __end_of_TMR0_Initialize:
 12522                           
 12523                           	psect	text6
 12524     087D                     __ptext6:	
 12525 ;; *************** function _TMR0_SetInterruptHandler *****************
 12526 ;; Defined at:
 12527 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12530 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;		None
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      void 
 12535 ;; Registers used:
 12536 ;;		wreg
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12546 ;;Total ram usage:        2 bytes
 12547 ;; Hardware stack levels used: 1
 12548 ;; Hardware stack levels required when called: 4
 12549 ;; This function calls:
 12550 ;;		Nothing
 12551 ;; This function is called by:
 12552 ;;		_TMR0_Initialize
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556     087D                     _TMR0_SetInterruptHandler:	
 12557                           ;psect for function _TMR0_SetInterruptHandler
 12558                           
 12559     087D                     l5926:	
 12560                           ;incstack = 0
 12561                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12562                           
 12563                           
 12564                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 12565     087D  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12566     087E  0141               	movlb	1	; select bank1
 12567     087F  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 12568     0880  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12569     0881  00C6               	movwf	_TMR0_InterruptHandler^(0+128)
 12570     0882                     l1047:
 12571     0882  0008               	return
 12572     0883                     __end_of_TMR0_SetInterruptHandler:
 12573                           
 12574                           	psect	text7
 12575     0B4C                     __ptext7:	
 12576 ;; *************** function _SPI2_Initialize *****************
 12577 ;; Defined at:
 12578 ;;		line 62 in file "mcc_generated_files/spi2.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;		None
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;		None
 12583 ;; Return value:  Size  Location     Type
 12584 ;;                  1    wreg      void 
 12585 ;; Registers used:
 12586 ;;		None
 12587 ;; Tracked objects:
 12588 ;;		On entry : 0/0
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12596 ;;Total ram usage:        0 bytes
 12597 ;; Hardware stack levels used: 1
 12598 ;; Hardware stack levels required when called: 4
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_SYSTEM_Initialize
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606     0B4C                     _SPI2_Initialize:	
 12607                           ;psect for function _SPI2_Initialize
 12608                           
 12609     0B4C                     l6160:	
 12610                           ;incstack = 0
 12611                           ; Regs used in _SPI2_Initialize: []
 12612                           
 12613                           
 12614                           ;mcc_generated_files/spi2.c: 65:     SSP2CLKPPS = 17;
 12615     0B4C  3011               	movlw	17
 12616     0B4D  017D               	movlb	61	; select bank61
 12617     0B4E  00C8               	movwf	72	;volatile
 12618                           
 12619                           ;mcc_generated_files/spi2.c: 66:     SSP2DATPPS = 19;
 12620     0B4F  3013               	movlw	19
 12621     0B50  00C9               	movwf	73	;volatile
 12622                           
 12623                           ;mcc_generated_files/spi2.c: 67:     RC1PPS = 21;
 12624     0B51  3015               	movlw	21
 12625     0B52  017E               	movlb	62	; select bank62
 12626     0B53  00A1               	movwf	33	;volatile
 12627                           
 12628                           ;mcc_generated_files/spi2.c: 68:     RC2PPS = 22;
 12629     0B54  3016               	movlw	22
 12630     0B55  00A2               	movwf	34	;volatile
 12631                           
 12632                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x40;
 12633     0B56  3040               	movlw	64
 12634     0B57  0143               	movlb	3	; select bank3
 12635     0B58  0099               	movwf	25	;volatile
 12636                           
 12637                           ;mcc_generated_files/spi2.c: 71:     SSP2CON1 = 0x22;
 12638     0B59  3022               	movlw	34
 12639     0B5A  009A               	movwf	26	;volatile
 12640                           
 12641                           ;mcc_generated_files/spi2.c: 72:     SSP2ADD = 0x01;
 12642     0B5B  3001               	movlw	1
 12643     0B5C  0097               	movwf	23	;volatile
 12644                           
 12645                           ;mcc_generated_files/spi2.c: 73:     TRISCbits.TRISC1 = 0;
 12646     0B5D  0140               	movlb	0	; select bank0
 12647     0B5E  1094               	bcf	20,1	;volatile
 12648                           
 12649                           ;mcc_generated_files/spi2.c: 74:     SSP2CON1bits.SSPEN = 0;
 12650     0B5F  0143               	movlb	3	; select bank3
 12651     0B60  129A               	bcf	26,5	;volatile
 12652     0B61                     l962:
 12653     0B61  0008               	return
 12654     0B62                     __end_of_SPI2_Initialize:
 12655                           
 12656                           	psect	text8
 12657     08DF                     __ptext8:	
 12658 ;; *************** function _PMD_Initialize *****************
 12659 ;; Defined at:
 12660 ;;		line 78 in file "mcc_generated_files/mcc.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		status,2
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12678 ;;Total ram usage:        0 bytes
 12679 ;; Hardware stack levels used: 1
 12680 ;; Hardware stack levels required when called: 4
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_SYSTEM_Initialize
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688     08DF                     _PMD_Initialize:	
 12689                           ;psect for function _PMD_Initialize
 12690                           
 12691     08DF                     l6158:	
 12692                           ;incstack = 0
 12693                           ; Regs used in _PMD_Initialize: [status,2]
 12694                           
 12695                           
 12696                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 12697     08DF  014F               	movlb	15	; select bank15
 12698     08E0  0196               	clrf	22	;volatile
 12699                           
 12700                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 12701     08E1  0197               	clrf	23	;volatile
 12702                           
 12703                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 12704     08E2  0198               	clrf	24	;volatile
 12705                           
 12706                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 12707     08E3  0199               	clrf	25	;volatile
 12708                           
 12709                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 12710     08E4  019A               	clrf	26	;volatile
 12711                           
 12712                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 12713     08E5  019B               	clrf	27	;volatile
 12714                           
 12715                           ;mcc_generated_files/mcc.c: 93:     PMD6 = 0x00;
 12716     08E6  019C               	clrf	28	;volatile
 12717                           
 12718                           ;mcc_generated_files/mcc.c: 95:     PMD7 = 0x00;
 12719     08E7  019D               	clrf	29	;volatile
 12720     08E8                     l933:
 12721     08E8  0008               	return
 12722     08E9                     __end_of_PMD_Initialize:
 12723                           
 12724                           	psect	text9
 12725     03DD                     __ptext9:	
 12726 ;; *************** function _PIN_MANAGER_Initialize *****************
 12727 ;; Defined at:
 12728 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
 12729 ;; Parameters:    Size  Location     Type
 12730 ;;		None
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;		None
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  1    wreg      void 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0, pclath, cstack
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;Total ram usage:        0 bytes
 12747 ;; Hardware stack levels used: 1
 12748 ;; Hardware stack levels required when called: 5
 12749 ;; This function calls:
 12750 ;;		_IOCAF6_SetInterruptHandler
 12751 ;;		_IOCAF7_SetInterruptHandler
 12752 ;; This function is called by:
 12753 ;;		_SYSTEM_Initialize
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757     03DD                     _PIN_MANAGER_Initialize:	
 12758                           ;psect for function _PIN_MANAGER_Initialize
 12759                           
 12760     03DD                     l6068:	
 12761                           ;incstack = 0
 12762                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12763                           
 12764                           
 12765                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x01;
 12766     03DD  3001               	movlw	1
 12767     03DE  0140               	movlb	0	; select bank0
 12768     03DF  0098               	movwf	24	;volatile
 12769     03E0                     l6070:
 12770                           
 12771                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12772     03E0  0199               	clrf	25	;volatile
 12773                           
 12774                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x00;
 12775     03E1  019A               	clrf	26	;volatile
 12776     03E2                     l6072:
 12777                           
 12778                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x08;
 12779     03E2  3008               	movlw	8
 12780     03E3  0096               	movwf	22	;volatile
 12781     03E4                     l6074:
 12782                           
 12783                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0xDE;
 12784     03E4  30DE               	movlw	222
 12785     03E5  0092               	movwf	18	;volatile
 12786     03E6                     l6076:
 12787                           
 12788                           ;mcc_generated_files/pin_manager.c: 74:     TRISB = 0xEF;
 12789     03E6  30EF               	movlw	239
 12790     03E7  0093               	movwf	19	;volatile
 12791     03E8                     l6078:
 12792                           
 12793                           ;mcc_generated_files/pin_manager.c: 75:     TRISC = 0xA8;
 12794     03E8  30A8               	movlw	168
 12795     03E9  0094               	movwf	20	;volatile
 12796     03EA                     l6080:
 12797                           
 12798                           ;mcc_generated_files/pin_manager.c: 80:     ANSELC = 0x80;
 12799     03EA  3080               	movlw	128
 12800     03EB  017E               	movlb	62	; select bank62
 12801     03EC  00CE               	movwf	78	;volatile
 12802     03ED                     l6082:
 12803                           
 12804                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0xE1;
 12805     03ED  30E1               	movlw	225
 12806     03EE  00C3               	movwf	67	;volatile
 12807     03EF                     l6084:
 12808                           
 12809                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x1E;
 12810     03EF  301E               	movlw	30
 12811     03F0  00B8               	movwf	56	;volatile
 12812                           
 12813                           ;mcc_generated_files/pin_manager.c: 87:     WPUE = 0x00;
 12814     03F1  01E5               	clrf	101	;volatile
 12815                           
 12816                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x00;
 12817     03F2  01C4               	clrf	68	;volatile
 12818                           
 12819                           ;mcc_generated_files/pin_manager.c: 89:     WPUA = 0x00;
 12820     03F3  01B9               	clrf	57	;volatile
 12821     03F4                     l6086:
 12822                           
 12823                           ;mcc_generated_files/pin_manager.c: 90:     WPUC = 0x01;
 12824     03F4  3001               	movlw	1
 12825     03F5  00CF               	movwf	79	;volatile
 12826                           
 12827                           ;mcc_generated_files/pin_manager.c: 95:     ODCONE = 0x00;
 12828     03F6  01E6               	clrf	102	;volatile
 12829                           
 12830                           ;mcc_generated_files/pin_manager.c: 96:     ODCONA = 0x00;
 12831     03F7  01BA               	clrf	58	;volatile
 12832                           
 12833                           ;mcc_generated_files/pin_manager.c: 97:     ODCONB = 0x00;
 12834     03F8  01C5               	clrf	69	;volatile
 12835                           
 12836                           ;mcc_generated_files/pin_manager.c: 98:     ODCONC = 0x00;
 12837     03F9  01D0               	clrf	80	;volatile
 12838     03FA                     l6088:
 12839                           
 12840                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONA = 0x7E;
 12841     03FA  307E               	movlw	126
 12842     03FB  00BB               	movwf	59	;volatile
 12843     03FC                     l6090:
 12844                           
 12845                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONB = 0xFF;
 12846     03FC  30FF               	movlw	255
 12847     03FD  00C6               	movwf	70	;volatile
 12848     03FE                     l6092:
 12849                           
 12850                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONC = 0xBF;
 12851     03FE  30BF               	movlw	191
 12852     03FF  00D1               	movwf	81	;volatile
 12853     0400                     l6094:
 12854                           
 12855                           ;mcc_generated_files/pin_manager.c: 110:     INLVLA = 0x3F;
 12856     0400  303F               	movlw	63
 12857     0401  00BC               	movwf	60	;volatile
 12858     0402                     l6096:
 12859                           
 12860                           ;mcc_generated_files/pin_manager.c: 111:     INLVLB = 0x3F;
 12861     0402  303F               	movlw	63
 12862     0403  00C7               	movwf	71	;volatile
 12863     0404                     l6098:
 12864                           
 12865                           ;mcc_generated_files/pin_manager.c: 112:     INLVLC = 0x3F;
 12866     0404  303F               	movlw	63
 12867     0405  00D2               	movwf	82	;volatile
 12868     0406                     l6100:
 12869                           
 12870                           ;mcc_generated_files/pin_manager.c: 119:     IOCAFbits.IOCAF6 = 0;
 12871     0406  133F               	bcf	63,6	;volatile
 12872     0407                     l6102:
 12873                           
 12874                           ;mcc_generated_files/pin_manager.c: 121:     IOCAFbits.IOCAF7 = 0;
 12875     0407  13BF               	bcf	63,7	;volatile
 12876     0408                     l6104:
 12877                           
 12878                           ;mcc_generated_files/pin_manager.c: 123:     IOCANbits.IOCAN6 = 0;
 12879     0408  133E               	bcf	62,6	;volatile
 12880     0409                     l6106:
 12881                           
 12882                           ;mcc_generated_files/pin_manager.c: 125:     IOCANbits.IOCAN7 = 1;
 12883     0409  17BE               	bsf	62,7	;volatile
 12884     040A                     l6108:
 12885                           
 12886                           ;mcc_generated_files/pin_manager.c: 127:     IOCAPbits.IOCAP6 = 1;
 12887     040A  173D               	bsf	61,6	;volatile
 12888     040B                     l6110:
 12889                           
 12890                           ;mcc_generated_files/pin_manager.c: 129:     IOCAPbits.IOCAP7 = 0;
 12891     040B  13BD               	bcf	61,7	;volatile
 12892     040C                     l6112:
 12893                           
 12894                           ;mcc_generated_files/pin_manager.c: 134:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 12895     040C  309A               	movlw	low _IOCAF6_DefaultInterruptHandler
 12896     040D  00F0               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 12897     040E  3017               	movlw	high _IOCAF6_DefaultInterruptHandler
 12898     040F  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 12899     0410  3188  2071  3183   	fcall	_IOCAF6_SetInterruptHandler
 12900     0413                     l6114:
 12901                           
 12902                           ;mcc_generated_files/pin_manager.c: 135:     IOCAF7_SetInterruptHandler(IOCAF7_DefaultIn
      +                          terruptHandler);
 12903     0413  30CC               	movlw	low _IOCAF7_DefaultInterruptHandler
 12904     0414  00F0               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler
 12905     0415  3017               	movlw	high _IOCAF7_DefaultInterruptHandler
 12906     0416  00F1               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler+1
 12907     0417  3188  2077  3183   	fcall	_IOCAF7_SetInterruptHandler
 12908     041A                     l6116:
 12909                           
 12910                           ;mcc_generated_files/pin_manager.c: 138:     PIE0bits.IOCIE = 1;
 12911     041A  014E               	movlb	14	; select bank14
 12912     041B  1616               	bsf	22,4	;volatile
 12913     041C                     l6118:
 12914                           
 12915                           ;mcc_generated_files/pin_manager.c: 141:     SSP1CLKPPS = 0x09;
 12916     041C  3009               	movlw	9
 12917     041D  017D               	movlb	61	; select bank61
 12918     041E  00C5               	movwf	69	;volatile
 12919     041F                     l6120:
 12920                           
 12921                           ;mcc_generated_files/pin_manager.c: 142:     SSP2DATPPS = 0x13;
 12922     041F  3013               	movlw	19
 12923     0420  00C9               	movwf	73	;volatile
 12924     0421                     l6122:
 12925                           
 12926                           ;mcc_generated_files/pin_manager.c: 143:     RB1PPS = 0x13;
 12927     0421  3013               	movlw	19
 12928     0422  017E               	movlb	62	; select bank62
 12929     0423  0099               	movwf	25	;volatile
 12930     0424                     l6124:
 12931                           
 12932                           ;mcc_generated_files/pin_manager.c: 144:     RB2PPS = 0x14;
 12933     0424  3014               	movlw	20
 12934     0425  009A               	movwf	26	;volatile
 12935     0426                     l6126:
 12936                           
 12937                           ;mcc_generated_files/pin_manager.c: 145:     RC1PPS = 0x15;
 12938     0426  3015               	movlw	21
 12939     0427  00A1               	movwf	33	;volatile
 12940     0428                     l6128:
 12941                           
 12942                           ;mcc_generated_files/pin_manager.c: 146:     RC4PPS = 0x25;
 12943     0428  3025               	movlw	37
 12944     0429  00A4               	movwf	36	;volatile
 12945     042A                     l6130:
 12946                           
 12947                           ;mcc_generated_files/pin_manager.c: 147:     RB4PPS = 0x0F;
 12948     042A  300F               	movlw	15
 12949     042B  009C               	movwf	28	;volatile
 12950     042C                     l6132:
 12951                           
 12952                           ;mcc_generated_files/pin_manager.c: 148:     RC2PPS = 0x16;
 12953     042C  3016               	movlw	22
 12954     042D  00A2               	movwf	34	;volatile
 12955     042E                     l6134:
 12956                           
 12957                           ;mcc_generated_files/pin_manager.c: 150:     SSP1DATPPS = 0x0A;
 12958     042E  300A               	movlw	10
 12959     042F  017D               	movlb	61	; select bank61
 12960     0430  00C6               	movwf	70	;volatile
 12961     0431                     l6136:
 12962                           
 12963                           ;mcc_generated_files/pin_manager.c: 152:     SSP2CLKPPS = 0x11;
 12964     0431  3011               	movlw	17
 12965     0432  00C8               	movwf	72	;volatile
 12966     0433                     l518:
 12967     0433  0008               	return
 12968     0434                     __end_of_PIN_MANAGER_Initialize:
 12969                           
 12970                           	psect	text10
 12971     0877                     __ptext10:	
 12972 ;; *************** function _IOCAF7_SetInterruptHandler *****************
 12973 ;; Defined at:
 12974 ;;		line 217 in file "mcc_generated_files/pin_manager.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12977 ;;		 -> IOCAF7_DefaultInterruptHandler(1), 
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;		None
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      void 
 12982 ;; Registers used:
 12983 ;;		wreg
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12993 ;;Total ram usage:        2 bytes
 12994 ;; Hardware stack levels used: 1
 12995 ;; Hardware stack levels required when called: 4
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_PIN_MANAGER_Initialize
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003     0877                     _IOCAF7_SetInterruptHandler:	
 13004                           ;psect for function _IOCAF7_SetInterruptHandler
 13005                           
 13006     0877                     l5922:	
 13007                           ;incstack = 0
 13008                           ; Regs used in _IOCAF7_SetInterruptHandler: [wreg]
 13009                           
 13010                           
 13011                           ;mcc_generated_files/pin_manager.c: 218:     IOCAF7_InterruptHandler = InterruptHandler;
 13012     0877  0871               	movf	IOCAF7_SetInterruptHandler@InterruptHandler+1,w
 13013     0878  0141               	movlb	1	; select bank1
 13014     0879  00C9               	movwf	(_IOCAF7_InterruptHandler+1)^(0+128)
 13015     087A  0870               	movf	IOCAF7_SetInterruptHandler@InterruptHandler,w
 13016     087B  00C8               	movwf	_IOCAF7_InterruptHandler^(0+128)
 13017     087C                     l540:
 13018     087C  0008               	return
 13019     087D                     __end_of_IOCAF7_SetInterruptHandler:
 13020                           
 13021                           	psect	text11
 13022     0871                     __ptext11:	
 13023 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 13024 ;; Defined at:
 13025 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 13028 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;		None
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		wreg
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;Total ram usage:        2 bytes
 13045 ;; Hardware stack levels used: 1
 13046 ;; Hardware stack levels required when called: 4
 13047 ;; This function calls:
 13048 ;;		Nothing
 13049 ;; This function is called by:
 13050 ;;		_PIN_MANAGER_Initialize
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054     0871                     _IOCAF6_SetInterruptHandler:	
 13055                           ;psect for function _IOCAF6_SetInterruptHandler
 13056                           
 13057     0871                     l5920:	
 13058                           ;incstack = 0
 13059                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 13060                           
 13061                           
 13062                           ;mcc_generated_files/pin_manager.c: 188:     IOCAF6_InterruptHandler = InterruptHandler;
 13063     0871  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 13064     0872  0141               	movlb	1	; select bank1
 13065     0873  00CB               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 13066     0874  0870               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 13067     0875  00CA               	movwf	_IOCAF6_InterruptHandler^(0+128)
 13068     0876                     l530:
 13069     0876  0008               	return
 13070     0877                     __end_of_IOCAF6_SetInterruptHandler:
 13071                           
 13072                           	psect	text12
 13073     08D5                     __ptext12:	
 13074 ;; *************** function _OSCILLATOR_Initialize *****************
 13075 ;; Defined at:
 13076 ;;		line 62 in file "mcc_generated_files/mcc.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;		None
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  1    wreg      void 
 13083 ;; Registers used:
 13084 ;;		status,2
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;Total ram usage:        0 bytes
 13095 ;; Hardware stack levels used: 1
 13096 ;; Hardware stack levels required when called: 4
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_SYSTEM_Initialize
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104     08D5                     _OSCILLATOR_Initialize:	
 13105                           ;psect for function _OSCILLATOR_Initialize
 13106                           
 13107     08D5                     l6162:	
 13108                           ;incstack = 0
 13109                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
 13110                           
 13111                           
 13112                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x62;
 13113     08D5  3062               	movlw	98
 13114     08D6  0151               	movlb	17	; select bank17
 13115     08D7  008D               	movwf	13	;volatile
 13116     08D8                     l6164:
 13117                           
 13118                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 13119     08D8  018F               	clrf	15	;volatile
 13120                           
 13121                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 13122     08D9  0191               	clrf	17	;volatile
 13123     08DA                     l6166:
 13124                           
 13125                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
 13126     08DA  3002               	movlw	2
 13127     08DB  0093               	movwf	19	;volatile
 13128                           
 13129                           ;mcc_generated_files/mcc.c: 73:     OSCSTAT = 0x00;
 13130     08DC  0190               	clrf	16	;volatile
 13131                           
 13132                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13133     08DD  0192               	clrf	18	;volatile
 13134     08DE                     l930:
 13135     08DE  0008               	return
 13136     08DF                     __end_of_OSCILLATOR_Initialize:
 13137                           
 13138                           	psect	text13
 13139     08B8                     __ptext13:	
 13140 ;; *************** function _I2C1_Initialize *****************
 13141 ;; Defined at:
 13142 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;		None
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1    wreg      void 
 13149 ;; Registers used:
 13150 ;;		status,2
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13160 ;;Total ram usage:        0 bytes
 13161 ;; Hardware stack levels used: 1
 13162 ;; Hardware stack levels required when called: 4
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_SYSTEM_Initialize
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170     08B8                     _I2C1_Initialize:	
 13171                           ;psect for function _I2C1_Initialize
 13172                           
 13173     08B8                     l6150:	
 13174                           ;incstack = 0
 13175                           ; Regs used in _I2C1_Initialize: [status,2]
 13176                           
 13177                           
 13178                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 13179     08B8  0143               	movlb	3	; select bank3
 13180     08B9  018F               	clrf	15	;volatile
 13181     08BA                     l6152:
 13182                           
 13183                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 13184     08BA  3008               	movlw	8
 13185     08BB  0090               	movwf	16	;volatile
 13186                           
 13187                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 13188     08BC  0191               	clrf	17	;volatile
 13189     08BD                     l6154:
 13190                           
 13191                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 13192     08BD  3003               	movlw	3
 13193     08BE  008D               	movwf	13	;volatile
 13194     08BF                     l6156:
 13195                           
 13196                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 13197     08BF  1290               	bcf	16,5	;volatile
 13198     08C0                     l648:
 13199     08C0  0008               	return
 13200     08C1                     __end_of_I2C1_Initialize:
 13201                           
 13202                           	psect	text14
 13203     06DE                     __ptext14:	
 13204 ;; *************** function _EUSART2_Initialize *****************
 13205 ;; Defined at:
 13206 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      void 
 13213 ;; Registers used:
 13214 ;;		wreg, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 5
 13227 ;; This function calls:
 13228 ;;		_EUSART2_SetErrorHandler
 13229 ;;		_EUSART2_SetFramingErrorHandler
 13230 ;;		_EUSART2_SetOverrunErrorHandler
 13231 ;;		_EUSART2_SetRxInterruptHandler
 13232 ;;		_EUSART2_SetTxInterruptHandler
 13233 ;; This function is called by:
 13234 ;;		_SYSTEM_Initialize
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238     06DE                     _EUSART2_Initialize:	
 13239                           ;psect for function _EUSART2_Initialize
 13240                           
 13241     06DE                     l6206:	
 13242                           ;incstack = 0
 13243                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13244                           
 13245                           
 13246                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 13247     06DE  014E               	movlb	14	; select bank14
 13248     06DF  1399               	bcf	25,7	;volatile
 13249     06E0                     l6208:
 13250                           
 13251                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 13252     06E0  3058               	movlw	low _EUSART2_Receive_ISR
 13253     06E1  00F0               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 13254     06E2  3007               	movlw	high _EUSART2_Receive_ISR
 13255     06E3  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 13256     06E4  3188  2065  3186   	fcall	_EUSART2_SetRxInterruptHandler
 13257     06E7                     l6210:
 13258                           
 13259                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 13260     06E7  014E               	movlb	14	; select bank14
 13261     06E8  1319               	bcf	25,6	;volatile
 13262                           
 13263                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 13264     06E9  3068               	movlw	low _EUSART2_Transmit_ISR
 13265     06EA  00F0               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 13266     06EB  300C               	movlw	high _EUSART2_Transmit_ISR
 13267     06EC  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 13268     06ED  3188  206B  3186   	fcall	_EUSART2_SetTxInterruptHandler
 13269     06F0                     l6212:
 13270                           
 13271                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 13272     06F0  3008               	movlw	8
 13273     06F1  0154               	movlb	20	; select bank20
 13274     06F2  009F               	movwf	31	;volatile
 13275     06F3                     l6214:
 13276                           
 13277                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 13278     06F3  3090               	movlw	144
 13279     06F4  009D               	movwf	29	;volatile
 13280     06F5                     l6216:
 13281                           
 13282                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 13283     06F5  3024               	movlw	36
 13284     06F6  009E               	movwf	30	;volatile
 13285     06F7                     l6218:
 13286                           
 13287                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x19;
 13288     06F7  3019               	movlw	25
 13289     06F8  009B               	movwf	27	;volatile
 13290     06F9                     l6220:
 13291                           
 13292                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x00;
 13293     06F9  019C               	clrf	28	;volatile
 13294     06FA                     l6222:
 13295                           
 13296                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 13297     06FA  3099               	movlw	low _EUSART2_DefaultFramingErrorHandler
 13298     06FB  00F0               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 13299     06FC  3017               	movlw	high _EUSART2_DefaultFramingErrorHandler
 13300     06FD  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 13301     06FE  3188  2059  3186   	fcall	_EUSART2_SetFramingErrorHandler
 13302     0701                     l6224:
 13303                           
 13304                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 13305     0701  30C8               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 13306     0702  00F0               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 13307     0703  3017               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 13308     0704  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 13309     0705  3188  205F  3186   	fcall	_EUSART2_SetOverrunErrorHandler
 13310     0708                     l6226:
 13311                           
 13312                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 13313     0708  30C4               	movlw	low _EUSART2_DefaultErrorHandler
 13314     0709  00F0               	movwf	EUSART2_SetErrorHandler@interruptHandler
 13315     070A  3017               	movlw	high _EUSART2_DefaultErrorHandler
 13316     070B  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 13317     070C  3188  2053  3186   	fcall	_EUSART2_SetErrorHandler
 13318                           
 13319                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 13320     070F  0140               	movlb	0	; select bank0
 13321     0710  01D4               	clrf	_eusart2RxLastError	;volatile
 13322                           
 13323                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 13324     0711  01DA               	clrf	_eusart2TxHead	;volatile
 13325                           
 13326                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 13327     0712  01D9               	clrf	_eusart2TxTail	;volatile
 13328     0713                     l6228:
 13329                           
 13330                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 13331     0713  3008               	movlw	8
 13332     0714  00D8               	movwf	_eusart2TxBufferRemaining	;volatile
 13333                           
 13334                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 13335     0715  01D7               	clrf	_eusart2RxHead	;volatile
 13336                           
 13337                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 13338     0716  01D6               	clrf	_eusart2RxTail	;volatile
 13339                           
 13340                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 13341     0717  01D5               	clrf	_eusart2RxCount	;volatile
 13342     0718                     l6230:
 13343                           
 13344                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 13345     0718  014E               	movlb	14	; select bank14
 13346     0719  1799               	bsf	25,7	;volatile
 13347     071A                     l1286:
 13348     071A  0008               	return
 13349     071B                     __end_of_EUSART2_Initialize:
 13350                           
 13351                           	psect	text15
 13352     086B                     __ptext15:	
 13353 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 13354 ;; Defined at:
 13355 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13358 ;;		 -> EUSART2_Transmit_ISR(1), 
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;		None
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      void 
 13363 ;; Registers used:
 13364 ;;		wreg
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13374 ;;Total ram usage:        2 bytes
 13375 ;; Hardware stack levels used: 1
 13376 ;; Hardware stack levels required when called: 4
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_EUSART2_Initialize
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384     086B                     _EUSART2_SetTxInterruptHandler:	
 13385                           ;psect for function _EUSART2_SetTxInterruptHandler
 13386                           
 13387     086B                     l5950:	
 13388                           ;incstack = 0
 13389                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 13390                           
 13391                           
 13392                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13393     086B  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 13394     086C  0141               	movlb	1	; select bank1
 13395     086D  00D1               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 13396     086E  0870               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 13397     086F  00D0               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 13398     0870                     l1352:
 13399     0870  0008               	return
 13400     0871                     __end_of_EUSART2_SetTxInterruptHandler:
 13401                           
 13402                           	psect	text16
 13403     0865                     __ptext16:	
 13404 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 13405 ;; Defined at:
 13406 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13409 ;;		 -> EUSART2_Receive_ISR(1), 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;Total ram usage:        2 bytes
 13426 ;; Hardware stack levels used: 1
 13427 ;; Hardware stack levels required when called: 4
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_EUSART2_Initialize
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435     0865                     _EUSART2_SetRxInterruptHandler:	
 13436                           ;psect for function _EUSART2_SetRxInterruptHandler
 13437                           
 13438     0865                     l5948:	
 13439                           ;incstack = 0
 13440                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 13441                           
 13442                           
 13443                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13444     0865  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 13445     0866  0141               	movlb	1	; select bank1
 13446     0867  00CF               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 13447     0868  0870               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 13448     0869  00CE               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 13449     086A                     l1355:
 13450     086A  0008               	return
 13451     086B                     __end_of_EUSART2_SetRxInterruptHandler:
 13452                           
 13453                           	psect	text17
 13454     085F                     __ptext17:	
 13455 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 13456 ;; Defined at:
 13457 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13460 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      void 
 13465 ;; Registers used:
 13466 ;;		wreg
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;Total ram usage:        2 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 4
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		_EUSART2_Initialize
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486     085F                     _EUSART2_SetOverrunErrorHandler:	
 13487                           ;psect for function _EUSART2_SetOverrunErrorHandler
 13488                           
 13489     085F                     l5954:	
 13490                           ;incstack = 0
 13491                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 13492                           
 13493                           
 13494                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 13495     085F  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 13496     0860  0142               	movlb	2	; select bank2
 13497     0861  00D7               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 13498     0862  0870               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 13499     0863  00D6               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 13500     0864                     l1346:
 13501     0864  0008               	return
 13502     0865                     __end_of_EUSART2_SetOverrunErrorHandler:
 13503                           
 13504                           	psect	text18
 13505     0859                     __ptext18:	
 13506 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 13507 ;; Defined at:
 13508 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 13509 ;; Parameters:    Size  Location     Type
 13510 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13511 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      void 
 13516 ;; Registers used:
 13517 ;;		wreg
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13527 ;;Total ram usage:        2 bytes
 13528 ;; Hardware stack levels used: 1
 13529 ;; Hardware stack levels required when called: 4
 13530 ;; This function calls:
 13531 ;;		Nothing
 13532 ;; This function is called by:
 13533 ;;		_EUSART2_Initialize
 13534 ;; This function uses a non-reentrant model
 13535 ;;
 13536                           
 13537     0859                     _EUSART2_SetFramingErrorHandler:	
 13538                           ;psect for function _EUSART2_SetFramingErrorHandler
 13539                           
 13540     0859                     l5952:	
 13541                           ;incstack = 0
 13542                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 13543                           
 13544                           
 13545                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 13546     0859  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 13547     085A  0142               	movlb	2	; select bank2
 13548     085B  00D9               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 13549     085C  0870               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 13550     085D  00D8               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 13551     085E                     l1343:
 13552     085E  0008               	return
 13553     085F                     __end_of_EUSART2_SetFramingErrorHandler:
 13554                           
 13555                           	psect	text19
 13556     0853                     __ptext19:	
 13557 ;; *************** function _EUSART2_SetErrorHandler *****************
 13558 ;; Defined at:
 13559 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13562 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      void 
 13567 ;; Registers used:
 13568 ;;		wreg
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13578 ;;Total ram usage:        2 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 4
 13581 ;; This function calls:
 13582 ;;		Nothing
 13583 ;; This function is called by:
 13584 ;;		_EUSART2_Initialize
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588     0853                     _EUSART2_SetErrorHandler:	
 13589                           ;psect for function _EUSART2_SetErrorHandler
 13590                           
 13591     0853                     l5956:	
 13592                           ;incstack = 0
 13593                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 13594                           
 13595                           
 13596                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 13597     0853  0871               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 13598     0854  0142               	movlb	2	; select bank2
 13599     0855  00D5               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 13600     0856  0870               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 13601     0857  00D4               	movwf	_EUSART2_ErrorHandler^(0+256)
 13602     0858                     l1349:
 13603     0858  0008               	return
 13604     0859                     __end_of_EUSART2_SetErrorHandler:
 13605                           
 13606                           	psect	text20
 13607     071B                     __ptext20:	
 13608 ;; *************** function _EUSART1_Initialize *****************
 13609 ;; Defined at:
 13610 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;		None
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;		None
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0, pclath, cstack
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;Total ram usage:        0 bytes
 13629 ;; Hardware stack levels used: 1
 13630 ;; Hardware stack levels required when called: 5
 13631 ;; This function calls:
 13632 ;;		_EUSART1_SetErrorHandler
 13633 ;;		_EUSART1_SetFramingErrorHandler
 13634 ;;		_EUSART1_SetOverrunErrorHandler
 13635 ;;		_EUSART1_SetRxInterruptHandler
 13636 ;;		_EUSART1_SetTxInterruptHandler
 13637 ;; This function is called by:
 13638 ;;		_SYSTEM_Initialize
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642     071B                     _EUSART1_Initialize:	
 13643                           ;psect for function _EUSART1_Initialize
 13644                           
 13645     071B                     l6180:	
 13646                           ;incstack = 0
 13647                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13648                           
 13649                           
 13650                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 13651     071B  014E               	movlb	14	; select bank14
 13652     071C  1299               	bcf	25,5	;volatile
 13653     071D                     l6182:
 13654                           
 13655                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13656     071D  3095               	movlw	low _EUSART1_Receive_ISR
 13657     071E  00F0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13658     071F  3007               	movlw	high _EUSART1_Receive_ISR
 13659     0720  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13660     0721  3188  2047  3187   	fcall	_EUSART1_SetRxInterruptHandler
 13661     0724                     l6184:
 13662                           
 13663                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 13664     0724  014E               	movlb	14	; select bank14
 13665     0725  1219               	bcf	25,4	;volatile
 13666                           
 13667                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 13668     0726  300E               	movlw	low _EUSART1_Transmit_ISR
 13669     0727  00F0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 13670     0728  300C               	movlw	high _EUSART1_Transmit_ISR
 13671     0729  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 13672     072A  3188  204D  3187   	fcall	_EUSART1_SetTxInterruptHandler
 13673     072D                     l6186:
 13674                           
 13675                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 13676     072D  3008               	movlw	8
 13677     072E  0142               	movlb	2	; select bank2
 13678     072F  009F               	movwf	31	;volatile
 13679     0730                     l6188:
 13680                           
 13681                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 13682     0730  3090               	movlw	144
 13683     0731  009D               	movwf	29	;volatile
 13684     0732                     l6190:
 13685                           
 13686                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 13687     0732  3024               	movlw	36
 13688     0733  009E               	movwf	30	;volatile
 13689     0734                     l6192:
 13690                           
 13691                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x19;
 13692     0734  3019               	movlw	25
 13693     0735  009B               	movwf	27	;volatile
 13694     0736                     l6194:
 13695                           
 13696                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 13697     0736  019C               	clrf	28	;volatile
 13698     0737                     l6196:
 13699                           
 13700                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13701     0737  3098               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13702     0738  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13703     0739  3017               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13704     073A  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13705     073B  3188  203B  3187   	fcall	_EUSART1_SetFramingErrorHandler
 13706     073E                     l6198:
 13707                           
 13708                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13709     073E  30C0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13710     073F  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13711     0740  3017               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13712     0741  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13713     0742  3188  2041  3187   	fcall	_EUSART1_SetOverrunErrorHandler
 13714     0745                     l6200:
 13715                           
 13716                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13717     0745  30BC               	movlw	low _EUSART1_DefaultErrorHandler
 13718     0746  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13719     0747  3017               	movlw	high _EUSART1_DefaultErrorHandler
 13720     0748  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13721     0749  3188  2035  3187   	fcall	_EUSART1_SetErrorHandler
 13722                           
 13723                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 13724     074C  0140               	movlb	0	; select bank0
 13725     074D  01DB               	clrf	_eusart1RxLastError	;volatile
 13726                           
 13727                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 13728     074E  01E1               	clrf	_eusart1TxHead	;volatile
 13729                           
 13730                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 13731     074F  01E0               	clrf	_eusart1TxTail	;volatile
 13732     0750                     l6202:
 13733                           
 13734                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 13735     0750  3008               	movlw	8
 13736     0751  00DF               	movwf	_eusart1TxBufferRemaining	;volatile
 13737                           
 13738                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 13739     0752  01DE               	clrf	_eusart1RxHead	;volatile
 13740                           
 13741                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 13742     0753  01DD               	clrf	_eusart1RxTail	;volatile
 13743                           
 13744                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 13745     0754  01DC               	clrf	_eusart1RxCount	;volatile
 13746     0755                     l6204:
 13747                           
 13748                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 13749     0755  014E               	movlb	14	; select bank14
 13750     0756  1699               	bsf	25,5	;volatile
 13751     0757                     l1142:
 13752     0757  0008               	return
 13753     0758                     __end_of_EUSART1_Initialize:
 13754                           
 13755                           	psect	text21
 13756     084D                     __ptext21:	
 13757 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 13758 ;; Defined at:
 13759 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13762 ;;		 -> EUSART1_Transmit_ISR(1), 
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;		None
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      void 
 13767 ;; Registers used:
 13768 ;;		wreg
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13778 ;;Total ram usage:        2 bytes
 13779 ;; Hardware stack levels used: 1
 13780 ;; Hardware stack levels required when called: 4
 13781 ;; This function calls:
 13782 ;;		Nothing
 13783 ;; This function is called by:
 13784 ;;		_EUSART1_Initialize
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788     084D                     _EUSART1_SetTxInterruptHandler:	
 13789                           ;psect for function _EUSART1_SetTxInterruptHandler
 13790                           
 13791     084D                     l5930:	
 13792                           ;incstack = 0
 13793                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 13794                           
 13795                           
 13796                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13797     084D  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 13798     084E  0141               	movlb	1	; select bank1
 13799     084F  00CD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
 13800     0850  0870               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 13801     0851  00CC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
 13802     0852                     l1208:
 13803     0852  0008               	return
 13804     0853                     __end_of_EUSART1_SetTxInterruptHandler:
 13805                           
 13806                           	psect	text22
 13807     0847                     __ptext22:	
 13808 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13809 ;; Defined at:
 13810 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13813 ;;		 -> EUSART1_Receive_ISR(1), 
 13814 ;; Auto vars:     Size  Location     Type
 13815 ;;		None
 13816 ;; Return value:  Size  Location     Type
 13817 ;;                  1    wreg      void 
 13818 ;; Registers used:
 13819 ;;		wreg
 13820 ;; Tracked objects:
 13821 ;;		On entry : 0/0
 13822 ;;		On exit  : 0/0
 13823 ;;		Unchanged: 0/0
 13824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13829 ;;Total ram usage:        2 bytes
 13830 ;; Hardware stack levels used: 1
 13831 ;; Hardware stack levels required when called: 4
 13832 ;; This function calls:
 13833 ;;		Nothing
 13834 ;; This function is called by:
 13835 ;;		_EUSART1_Initialize
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839     0847                     _EUSART1_SetRxInterruptHandler:	
 13840                           ;psect for function _EUSART1_SetRxInterruptHandler
 13841                           
 13842     0847                     l5928:	
 13843                           ;incstack = 0
 13844                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13845                           
 13846                           
 13847                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13848     0847  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13849     0848  0142               	movlb	2	; select bank2
 13850     0849  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13851     084A  0870               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13852     084B  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13853     084C                     l1211:
 13854     084C  0008               	return
 13855     084D                     __end_of_EUSART1_SetRxInterruptHandler:
 13856                           
 13857                           	psect	text23
 13858     0841                     __ptext23:	
 13859 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13860 ;; Defined at:
 13861 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13864 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13880 ;;Total ram usage:        2 bytes
 13881 ;; Hardware stack levels used: 1
 13882 ;; Hardware stack levels required when called: 4
 13883 ;; This function calls:
 13884 ;;		Nothing
 13885 ;; This function is called by:
 13886 ;;		_EUSART1_Initialize
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890     0841                     _EUSART1_SetOverrunErrorHandler:	
 13891                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13892                           
 13893     0841                     l5934:	
 13894                           ;incstack = 0
 13895                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13896                           
 13897                           
 13898                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 13899     0841  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13900     0842  0142               	movlb	2	; select bank2
 13901     0843  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 13902     0844  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13903     0845  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 13904     0846                     l1202:
 13905     0846  0008               	return
 13906     0847                     __end_of_EUSART1_SetOverrunErrorHandler:
 13907                           
 13908                           	psect	text24
 13909     083B                     __ptext24:	
 13910 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13911 ;; Defined at:
 13912 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13915 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;		None
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  1    wreg      void 
 13920 ;; Registers used:
 13921 ;;		wreg
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13931 ;;Total ram usage:        2 bytes
 13932 ;; Hardware stack levels used: 1
 13933 ;; Hardware stack levels required when called: 4
 13934 ;; This function calls:
 13935 ;;		Nothing
 13936 ;; This function is called by:
 13937 ;;		_EUSART1_Initialize
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941     083B                     _EUSART1_SetFramingErrorHandler:	
 13942                           ;psect for function _EUSART1_SetFramingErrorHandler
 13943                           
 13944     083B                     l5932:	
 13945                           ;incstack = 0
 13946                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13947                           
 13948                           
 13949                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 13950     083B  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13951     083C  0142               	movlb	2	; select bank2
 13952     083D  00DF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 13953     083E  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13954     083F  00DE               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 13955     0840                     l1199:
 13956     0840  0008               	return
 13957     0841                     __end_of_EUSART1_SetFramingErrorHandler:
 13958                           
 13959                           	psect	text25
 13960     0835                     __ptext25:	
 13961 ;; *************** function _EUSART1_SetErrorHandler *****************
 13962 ;; Defined at:
 13963 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13966 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      void 
 13971 ;; Registers used:
 13972 ;;		wreg
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;Total ram usage:        2 bytes
 13983 ;; Hardware stack levels used: 1
 13984 ;; Hardware stack levels required when called: 4
 13985 ;; This function calls:
 13986 ;;		Nothing
 13987 ;; This function is called by:
 13988 ;;		_EUSART1_Initialize
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992     0835                     _EUSART1_SetErrorHandler:	
 13993                           ;psect for function _EUSART1_SetErrorHandler
 13994                           
 13995     0835                     l5936:	
 13996                           ;incstack = 0
 13997                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13998                           
 13999                           
 14000                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 14001     0835  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 14002     0836  0142               	movlb	2	; select bank2
 14003     0837  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 14004     0838  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 14005     0839  00DA               	movwf	_EUSART1_ErrorHandler^(0+256)
 14006     083A                     l1205:
 14007     083A  0008               	return
 14008     083B                     __end_of_EUSART1_SetErrorHandler:
 14009                           
 14010                           	psect	text26
 14011     0923                     __ptext26:	
 14012 ;; *************** function _RN487X_Read *****************
 14013 ;; Defined at:
 14014 ;;		line 181 in file "mcc_generated_files/rn487x/rn487x.c"
 14015 ;; Parameters:    Size  Location     Type
 14016 ;;		None
 14017 ;; Auto vars:     Size  Location     Type
 14018 ;;		None
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  1    wreg      unsigned char 
 14021 ;; Registers used:
 14022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;Total ram usage:        0 bytes
 14033 ;; Hardware stack levels used: 1
 14034 ;; Hardware stack levels required when called: 9
 14035 ;; This function calls:
 14036 ;;		_RN487X_DataReady
 14037 ;; This function is called by:
 14038 ;;		_main
 14039 ;;		_RN487X_Example_TransparentUart
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043     0923                     _RN487X_Read:	
 14044                           ;psect for function _RN487X_Read
 14045                           
 14046     0923                     l6348:	
 14047                           ;incstack = 0
 14048                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14049                           
 14050     0923                     l6350:	
 14051                           ;mcc_generated_files/rn487x/rn487x.c: 183:     while(RN487X_DataReady() == 0);
 14052                           
 14053     0923  318B  23F2  3189   	fcall	_RN487X_DataReady
 14054     0926  3A00               	xorlw	0
 14055     0927  1903               	skipnz
 14056     0928  292A               	goto	u2801
 14057     0929  292B               	goto	u2800
 14058     092A                     u2801:
 14059     092A  2923               	goto	l6350
 14060     092B                     u2800:
 14061     092B                     l6352:
 14062                           
 14063                           ;mcc_generated_files/rn487x/rn487x.c: 184:     dataReady = 0;
 14064     092B  0140               	movlb	0	; select bank0
 14065     092C  01E9               	clrf	_dataReady
 14066     092D                     l6354:
 14067                           
 14068                           ;mcc_generated_files/rn487x/rn487x.c: 185:     return peek;
 14069     092D  086A               	movf	_peek,w
 14070     092E                     l237:
 14071     092E  0008               	return
 14072     092F                     __end_of_RN487X_Read:
 14073                           
 14074                           	psect	text27
 14075     0BF2                     __ptext27:	
 14076 ;; *************** function _RN487X_DataReady *****************
 14077 ;; Defined at:
 14078 ;;		line 167 in file "mcc_generated_files/rn487x/rn487x.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;		None
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      _Bool 
 14085 ;; Registers used:
 14086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14096 ;;Total ram usage:        0 bytes
 14097 ;; Hardware stack levels used: 1
 14098 ;; Hardware stack levels required when called: 8
 14099 ;; This function calls:
 14100 ;;		_RN487X_FilterData
 14101 ;;		_RN487X_is_rx_ready
 14102 ;; This function is called by:
 14103 ;;		_RN487X_Read
 14104 ;;		_main
 14105 ;;		_RN487X_Example_TransparentUart
 14106 ;; This function uses a non-reentrant model
 14107 ;;
 14108                           
 14109     0BF2                     _RN487X_DataReady:	
 14110                           ;psect for function _RN487X_DataReady
 14111                           
 14112     0BF2                     l6042:	
 14113                           ;incstack = 0
 14114                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14115                           
 14116                           
 14117                           ;mcc_generated_files/rn487x/rn487x.c: 169:     if (dataReady)
 14118     0BF2  0140               	movlb	0	; select bank0
 14119     0BF3  0869               	movf	_dataReady,w
 14120     0BF4  1903               	btfsc	3,2
 14121     0BF5  2BF7               	goto	u2641
 14122     0BF6  2BF8               	goto	u2640
 14123     0BF7                     u2641:
 14124     0BF7  2BFA               	goto	l6048
 14125     0BF8                     u2640:
 14126     0BF8                     l6044:
 14127                           
 14128                           ;mcc_generated_files/rn487x/rn487x.c: 170:     {;mcc_generated_files/rn487x/rn487x.c: 17
      +                          1:         return 1;
 14129     0BF8  3001               	movlw	1
 14130     0BF9  2C0D               	goto	l230
 14131     0BFA                     l6048:
 14132                           
 14133                           ;mcc_generated_files/rn487x/rn487x.c: 174:     if (RN487X.DataReady())
 14134     0BFA  306E               	movlw	low ((_RN487X+6)| (0+32768))
 14135     0BFB  0084               	movwf	4
 14136     0BFC  3090               	movlw	high ((_RN487X+6)| (0+32768))
 14137     0BFD  0085               	movwf	5
 14138     0BFE  3F01               	moviw [1]fsr0
 14139     0BFF  008A               	movwf	10
 14140     0C00  3F00               	moviw [0]fsr0
 14141     0C01  000A               	callw
 14142     0C02  318B               	pagesel	$
 14143     0C03  3A00               	xorlw	0
 14144     0C04  1903               	skipnz
 14145     0C05  2C07               	goto	u2651
 14146     0C06  2C08               	goto	u2650
 14147     0C07                     u2651:
 14148     0C07  2C0C               	goto	l6054
 14149     0C08                     u2650:
 14150     0C08                     l6050:
 14151                           
 14152                           ;mcc_generated_files/rn487x/rn487x.c: 175:     {;mcc_generated_files/rn487x/rn487x.c: 17
      +                          6:         return RN487X_FilterData();
 14153     0C08  3185  2577  318B   	fcall	_RN487X_FilterData
 14154     0C0B  2C0D               	goto	l230
 14155     0C0C                     l6054:
 14156                           
 14157                           ;mcc_generated_files/rn487x/rn487x.c: 178:     return 0;
 14158     0C0C  3000               	movlw	0
 14159     0C0D                     l230:
 14160     0C0D  0008               	return
 14161     0C0E                     __end_of_RN487X_DataReady:
 14162                           
 14163                           	psect	text28
 14164     0577                     __ptext28:	
 14165 ;; *************** function _RN487X_FilterData *****************
 14166 ;; Defined at:
 14167 ;;		line 188 in file "mcc_generated_files/rn487x/rn487x.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;		None
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  readChar        1   34[BANK0 ] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  1    wreg      _Bool 
 14174 ;; Registers used:
 14175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;Total ram usage:        1 bytes
 14186 ;; Hardware stack levels used: 1
 14187 ;; Hardware stack levels required when called: 7
 14188 ;; This function calls:
 14189 ;;		_RN487X_MessageHandler
 14190 ;;		_RN487X_Read@rn487x_interface$F545
 14191 ;; This function is called by:
 14192 ;;		_RN487X_DataReady
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196     0577                     _RN487X_FilterData:	
 14197                           ;psect for function _RN487X_FilterData
 14198                           
 14199     0577                     l5882:	
 14200                           ;incstack = 0
 14201                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14202                           
 14203                           
 14204                           ;mcc_generated_files/rn487x/rn487x.c: 190:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 192:     uint8_t readChar = RN487X.Read();
 14205     0577  306A               	movlw	low ((_RN487X+2)| (0+32768))
 14206     0578  0084               	movwf	4
 14207     0579  3090               	movlw	high ((_RN487X+2)| (0+32768))
 14208     057A  0085               	movwf	5
 14209     057B  3F01               	moviw [1]fsr0
 14210     057C  008A               	movwf	10
 14211     057D  3F00               	moviw [0]fsr0
 14212     057E  000A               	callw
 14213     057F  3185               	pagesel	$
 14214     0580  0140               	movlb	0	; select bank0
 14215     0581  00C2               	movwf	RN487X_FilterData@readChar
 14216     0582                     l5884:
 14217                           
 14218                           ;mcc_generated_files/rn487x/rn487x.c: 194:     if(asyncBuffering == 1)
 14219     0582  0368               	decf	RN487X_FilterData@asyncBuffering,w
 14220     0583  1D03               	btfss	3,2
 14221     0584  2D86               	goto	u2521
 14222     0585  2D87               	goto	u2520
 14223     0586                     u2521:
 14224     0586  2DAF               	goto	l5900
 14225     0587                     u2520:
 14226     0587                     l5886:
 14227                           
 14228                           ;mcc_generated_files/rn487x/rn487x.c: 195:     {;mcc_generated_files/rn487x/rn487x.c: 19
      +                          6:         if(readChar == ('%'))
 14229     0587  3025               	movlw	37
 14230     0588  0642               	xorwf	RN487X_FilterData@readChar,w
 14231     0589  1D03               	btfss	3,2
 14232     058A  2D8C               	goto	u2531
 14233     058B  2D8D               	goto	u2530
 14234     058C                     u2531:
 14235     058C  2D9F               	goto	l5894
 14236     058D                     u2530:
 14237     058D                     l5888:
 14238                           
 14239                           ;mcc_generated_files/rn487x/rn487x.c: 197:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 198:             asyncBuffering = 0;
 14240     058D  01E8               	clrf	RN487X_FilterData@asyncBuffering
 14241     058E                     l5890:
 14242                           
 14243                           ;mcc_generated_files/rn487x/rn487x.c: 199:             *pHead = '\0';
 14244     058E  086B               	movf	_pHead,w
 14245     058F  0086               	movwf	6
 14246     0590  3003               	movlw	3	; select bank6/7
 14247     0591  0087               	movwf	7
 14248     0592  0181               	clrf	1
 14249     0593                     l5892:
 14250                           
 14251                           ;mcc_generated_files/rn487x/rn487x.c: 200:             RN487X.AsyncHandler(asyncBuffer);
 14252     0593  086D               	movf	_asyncBuffer,w
 14253     0594  00FD               	movwf	RN487X_MessageHandler@message
 14254     0595  3078               	movlw	low ((_RN487X+16)| (0+32768))
 14255     0596  0084               	movwf	4
 14256     0597  3090               	movlw	high ((_RN487X+16)| (0+32768))
 14257     0598  0085               	movwf	5
 14258     0599  3F01               	moviw [1]fsr0
 14259     059A  008A               	movwf	10
 14260     059B  3F00               	moviw [0]fsr0
 14261     059C  000A               	callw
 14262     059D  3185               	pagesel	$
 14263                           
 14264                           ;mcc_generated_files/rn487x/rn487x.c: 201:         }
 14265     059E  2DBE               	goto	l246
 14266     059F                     l5894:
 14267     059F  086D               	movf	_asyncBuffer,w
 14268     05A0  076C               	addwf	_asyncBufferSize,w
 14269     05A1  026B               	subwf	_pHead,w
 14270     05A2  1803               	skipnc
 14271     05A3  2DA5               	goto	u2541
 14272     05A4  2DA6               	goto	u2540
 14273     05A5                     u2541:
 14274     05A5  2DBE               	goto	l246
 14275     05A6                     u2540:
 14276     05A6                     l5896:
 14277                           
 14278                           ;mcc_generated_files/rn487x/rn487x.c: 203:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 204:             *pHead++ = readChar;
 14279     05A6  086B               	movf	_pHead,w
 14280     05A7  0086               	movwf	6
 14281     05A8  3003               	movlw	3	; select bank6/7
 14282     05A9  0087               	movwf	7
 14283     05AA  0842               	movf	RN487X_FilterData@readChar,w
 14284     05AB  0081               	movwf	1
 14285     05AC                     l5898:
 14286     05AC  3001               	movlw	1
 14287     05AD  07EB               	addwf	_pHead,f
 14288     05AE  2DBE               	goto	l246
 14289     05AF                     l5900:
 14290                           
 14291                           ;mcc_generated_files/rn487x/rn487x.c: 208:     {;mcc_generated_files/rn487x/rn487x.c: 20
      +                          9:         if (readChar == ('%'))
 14292     05AF  3025               	movlw	37
 14293     05B0  0642               	xorwf	RN487X_FilterData@readChar,w
 14294     05B1  1D03               	btfss	3,2
 14295     05B2  2DB4               	goto	u2551
 14296     05B3  2DB5               	goto	u2550
 14297     05B4                     u2551:
 14298     05B4  2DBA               	goto	l247
 14299     05B5                     u2550:
 14300     05B5                     l5902:
 14301                           
 14302                           ;mcc_generated_files/rn487x/rn487x.c: 210:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 211:             asyncBuffering = 1;
 14303     05B5  3001               	movlw	1
 14304     05B6  00E8               	movwf	RN487X_FilterData@asyncBuffering
 14305     05B7                     l5904:
 14306                           
 14307                           ;mcc_generated_files/rn487x/rn487x.c: 212:             pHead = asyncBuffer;
 14308     05B7  086D               	movf	_asyncBuffer,w
 14309     05B8  00EB               	movwf	_pHead
 14310                           
 14311                           ;mcc_generated_files/rn487x/rn487x.c: 213:         }
 14312     05B9  2DBE               	goto	l246
 14313     05BA                     l247:	
 14314                           ;mcc_generated_files/rn487x/rn487x.c: 214:         else
 14315                           
 14316                           
 14317                           ;mcc_generated_files/rn487x/rn487x.c: 215:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 216:             dataReady = 1;
 14318     05BA  3001               	movlw	1
 14319     05BB  00E9               	movwf	_dataReady
 14320     05BC                     l5906:
 14321                           
 14322                           ;mcc_generated_files/rn487x/rn487x.c: 217:             peek = readChar;
 14323     05BC  0842               	movf	RN487X_FilterData@readChar,w
 14324     05BD  00EA               	movwf	_peek
 14325     05BE                     l246:	
 14326                           ;mcc_generated_files/rn487x/rn487x.c: 219:     }
 14327                           
 14328                           
 14329                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return dataReady;
 14330     05BE  0140               	movlb	0	; select bank0
 14331     05BF  0869               	movf	_dataReady,w
 14332     05C0                     l249:
 14333     05C0  0008               	return
 14334     05C1                     __end_of_RN487X_FilterData:
 14335                           
 14336                           	psect	text29
 14337     0F8B                     __ptext29:	
 14338 ;; *************** function _RN487X_MessageHandler *****************
 14339 ;; Defined at:
 14340 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  message         1   13[COMMON] PTR unsigned char 
 14343 ;;		 -> statusBuffer(80), NULL(0), 
 14344 ;; Auto vars:     Size  Location     Type
 14345 ;;  messageType     1   33[BANK0 ] enum E13210
 14346 ;; Return value:  Size  Location     Type
 14347 ;;                  1    wreg      void 
 14348 ;; Registers used:
 14349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14350 ;; Tracked objects:
 14351 ;;		On entry : 0/0
 14352 ;;		On exit  : 0/0
 14353 ;;		Unchanged: 0/0
 14354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14355 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14358 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14359 ;;Total ram usage:        2 bytes
 14360 ;; Hardware stack levels used: 1
 14361 ;; Hardware stack levels required when called: 6
 14362 ;; This function calls:
 14363 ;;		_rn487x_PrintIndicatorCharacters
 14364 ;;		_rn487x_PrintMessage
 14365 ;;		_rn487x_PrintMessageEnd
 14366 ;;		_rn487x_PrintMessageStart
 14367 ;;		_strstr
 14368 ;; This function is called by:
 14369 ;;		_RN487X_FilterData
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373     0F8B                     _RN487X_MessageHandler:	
 14374                           ;psect for function _RN487X_MessageHandler
 14375                           
 14376     0F8B                     l5832:	
 14377                           ;incstack = 0
 14378                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14379                           
 14380                           
 14381                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 14382     0F8B  3187  27D2  318F   	fcall	_rn487x_PrintMessageStart
 14383                           
 14384                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 14385     0F8E  087D               	movf	RN487X_MessageHandler@message,w
 14386     0F8F  00F6               	movwf	strstr@h
 14387     0F90  3086               	movlw	low (STR_2| (0+32768))
 14388     0F91  00F7               	movwf	strstr@n
 14389     0F92  3090               	movlw	high (STR_2| (0+32768))
 14390     0F93  00F8               	movwf	strstr@n+1
 14391     0F94  3185  25C1  318F   	fcall	_strstr
 14392     0F97  3A00               	xorlw	0
 14393     0F98  1903               	skipnz
 14394     0F99  2F9B               	goto	u2401
 14395     0F9A  2F9C               	goto	u2400
 14396     0F9B                     u2401:
 14397     0F9B  2FA0               	goto	l5836
 14398     0F9C                     u2400:
 14399     0F9C                     l5834:
 14400                           
 14401                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 14402     0F9C  0140               	movlb	0	; select bank0
 14403     0F9D  01C1               	clrf	RN487X_MessageHandler@messageType
 14404                           
 14405                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 14406     0F9E  01E7               	clrf	_connected
 14407                           
 14408                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 14409     0F9F  2FB7               	goto	l5840
 14410     0FA0                     l5836:
 14411     0FA0  087D               	movf	RN487X_MessageHandler@message,w
 14412     0FA1  00F6               	movwf	strstr@h
 14413     0FA2  307A               	movlw	low (STR_4| (0+32768))
 14414     0FA3  00F7               	movwf	strstr@n
 14415     0FA4  3090               	movlw	high (STR_4| (0+32768))
 14416     0FA5  00F8               	movwf	strstr@n+1
 14417     0FA6  3185  25C1  318F   	fcall	_strstr
 14418     0FA9  3A00               	xorlw	0
 14419     0FAA  1903               	skipnz
 14420     0FAB  2FAD               	goto	u2411
 14421     0FAC  2FAE               	goto	u2410
 14422     0FAD                     u2411:
 14423     0FAD  2FB4               	goto	l362
 14424     0FAE                     u2410:
 14425     0FAE                     l5838:
 14426                           
 14427                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 14428     0FAE  3001               	movlw	1
 14429     0FAF  0140               	movlb	0	; select bank0
 14430     0FB0  00C1               	movwf	RN487X_MessageHandler@messageType
 14431                           
 14432                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 14433     0FB1  3001               	movlw	1
 14434     0FB2  00E7               	movwf	_connected
 14435                           
 14436                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 14437     0FB3  2FB7               	goto	l5840
 14438     0FB4                     l362:	
 14439                           ;mcc_generated_files/rn487x/rn487x_interface.c: 382:     else
 14440                           
 14441                           
 14442                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 14443     0FB4  3002               	movlw	2
 14444     0FB5  0140               	movlb	0	; select bank0
 14445     0FB6  00C1               	movwf	RN487X_MessageHandler@messageType
 14446     0FB7                     l5840:
 14447                           
 14448                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 14449     0FB7  087D               	movf	RN487X_MessageHandler@message,w
 14450     0FB8  00F5               	movwf	rn487x_PrintMessage@passedMessage
 14451     0FB9  318E  26B4  318F   	fcall	_rn487x_PrintMessage
 14452                           
 14453                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 14454     0FBC  3185  2529  318F   	fcall	_rn487x_PrintMessageEnd
 14455                           
 14456                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 14457     0FBF  0140               	movlb	0	; select bank0
 14458     0FC0  0841               	movf	RN487X_MessageHandler@messageType,w
 14459     0FC1  318C  24A8  318F   	fcall	_rn487x_PrintIndicatorCharacters
 14460     0FC4                     l364:
 14461     0FC4  0008               	return
 14462     0FC5                     __end_of_RN487X_MessageHandler:
 14463                           
 14464                           	psect	text30
 14465     05C1                     __ptext30:	
 14466 ;; *************** function _strstr *****************
 14467 ;; Defined at:
 14468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;  h               1    6[COMMON] PTR const unsigned char 
 14471 ;;		 -> statusBuffer(80), NULL(0), 
 14472 ;;  n               2    7[COMMON] PTR const unsigned char 
 14473 ;;		 -> STR_5(12), STR_3(11), 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  nl              2   11[COMMON] unsigned int 
 14476 ;; Return value:  Size  Location     Type
 14477 ;;                  1    6[COMMON] PTR unsigned char 
 14478 ;; Registers used:
 14479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14489 ;;Total ram usage:        7 bytes
 14490 ;; Hardware stack levels used: 1
 14491 ;; Hardware stack levels required when called: 5
 14492 ;; This function calls:
 14493 ;;		_strchr
 14494 ;;		_strlen
 14495 ;;		_strncmp
 14496 ;; This function is called by:
 14497 ;;		_RN487X_MessageHandler
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501     05C1                     _strstr:	
 14502                           ;psect for function _strstr
 14503                           
 14504     05C1                     l5754:	
 14505                           ;incstack = 0
 14506                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14507                           
 14508     05C1  0877               	movf	strstr@n,w
 14509     05C2  0478               	iorwf	strstr@n+1,w
 14510     05C3  1903               	btfsc	3,2
 14511     05C4  2DC6               	goto	u2301
 14512     05C5  2DC7               	goto	u2300
 14513     05C6                     u2301:
 14514     05C6  2E08               	goto	l5770
 14515     05C7                     u2300:
 14516     05C7                     l5756:
 14517     05C7  0878               	movf	strstr@n+1,w
 14518     05C8  00F1               	movwf	strlen@s+1
 14519     05C9  0877               	movf	strstr@n,w
 14520     05CA  00F0               	movwf	strlen@s
 14521     05CB  318B  23C0  3185   	fcall	_strlen
 14522     05CE  0871               	movf	?_strlen+1,w
 14523     05CF  00FC               	movwf	strstr@nl+1
 14524     05D0  0870               	movf	?_strlen,w
 14525     05D1  00FB               	movwf	strstr@nl
 14526     05D2  2DFA               	goto	l5766
 14527     05D3                     l5758:
 14528     05D3  0876               	movf	strstr@h,w
 14529     05D4  00F0               	movwf	strncmp@l
 14530     05D5  0878               	movf	strstr@n+1,w
 14531     05D6  00F2               	movwf	strncmp@r+1
 14532     05D7  0877               	movf	strstr@n,w
 14533     05D8  00F1               	movwf	strncmp@r
 14534     05D9  087C               	movf	strstr@nl+1,w
 14535     05DA  00F4               	movwf	strncmp@n+1
 14536     05DB  087B               	movf	strstr@nl,w
 14537     05DC  00F3               	movwf	strncmp@n
 14538     05DD  3184  2489  3185   	fcall	_strncmp
 14539     05E0  0870               	movf	?_strncmp,w
 14540     05E1  0471               	iorwf	?_strncmp+1,w
 14541     05E2  1D03               	btfss	3,2
 14542     05E3  2DE5               	goto	u2311
 14543     05E4  2DE6               	goto	u2310
 14544     05E5                     u2311:
 14545     05E5  2DE8               	goto	l5764
 14546     05E6                     u2310:
 14547     05E6                     l5760:
 14548     05E6  0876               	movf	strstr@h,w
 14549     05E7  2E09               	goto	l2794
 14550     05E8                     l5764:
 14551     05E8  0876               	movf	strstr@h,w
 14552     05E9  3E01               	addlw	1
 14553     05EA  00F0               	movwf	strchr@s
 14554     05EB  0877               	movf	strstr@n,w
 14555     05EC  0084               	movwf	4
 14556     05ED  0878               	movf	strstr@n+1,w
 14557     05EE  0085               	movwf	5
 14558     05EF  0800               	movf	0,w	;code access
 14559     05F0  00F9               	movwf	??_strstr
 14560     05F1  01FA               	clrf	??_strstr+1
 14561     05F2  0879               	movf	??_strstr,w
 14562     05F3  00F1               	movwf	strchr@c
 14563     05F4  087A               	movf	??_strstr+1,w
 14564     05F5  00F2               	movwf	strchr@c+1
 14565     05F6  318B  23A8  3185   	fcall	_strchr
 14566     05F9  00F6               	movwf	strstr@h
 14567     05FA                     l5766:
 14568     05FA  0876               	movf	strstr@h,w
 14569     05FB  1903               	btfsc	3,2
 14570     05FC  2DFE               	goto	u2321
 14571     05FD  2DFF               	goto	u2320
 14572     05FE                     u2321:
 14573     05FE  2E08               	goto	l5770
 14574     05FF                     u2320:
 14575     05FF                     l5768:
 14576     05FF  0876               	movf	strstr@h,w
 14577     0600  0086               	movwf	6
 14578     0601  3003               	movlw	3	; select bank6/7
 14579     0602  0087               	movwf	7
 14580     0603  0801               	movf	1,w
 14581     0604  1D03               	btfss	3,2
 14582     0605  2E07               	goto	u2331
 14583     0606  2E08               	goto	u2330
 14584     0607                     u2331:
 14585     0607  2DD3               	goto	l5758
 14586     0608                     u2330:
 14587     0608                     l5770:
 14588     0608  3000               	movlw	0
 14589     0609                     l2794:
 14590     0609  0008               	return
 14591     060A                     __end_of_strstr:
 14592                           
 14593                           	psect	text31
 14594     0489                     __ptext31:	
 14595 ;; *************** function _strncmp *****************
 14596 ;; Defined at:
 14597 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  l               1    0[COMMON] PTR const unsigned char 
 14600 ;;		 -> statusBuffer(80), NULL(0), 
 14601 ;;  r               2    1[COMMON] PTR const unsigned char 
 14602 ;;		 -> STR_5(12), STR_3(11), 
 14603 ;;  n               2    3[COMMON] unsigned int 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  2    0[COMMON] int 
 14608 ;; Registers used:
 14609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14615 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14619 ;;Total ram usage:        6 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 4
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_strstr
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629     0489                     _strncmp:	
 14630                           ;psect for function _strncmp
 14631                           
 14632     0489                     l5696:	
 14633                           ;incstack = 0
 14634                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 14635                           
 14636     0489  3001               	movlw	1
 14637     048A  02F3               	subwf	strncmp@n,f
 14638     048B  3000               	movlw	0
 14639     048C  3BF4               	subwfb	strncmp@n+1,f
 14640     048D  0A73               	incf	strncmp@n,w
 14641     048E  1D03               	skipz
 14642     048F  2C94               	goto	u2201
 14643     0490  0A74               	incf	strncmp@n+1,w
 14644     0491  1D03               	btfss	3,2
 14645     0492  2C94               	goto	u2201
 14646     0493  2C95               	goto	u2200
 14647     0494                     u2201:
 14648     0494  2CA2               	goto	l5708
 14649     0495                     u2200:
 14650     0495                     l5698:
 14651     0495  01F0               	clrf	?_strncmp
 14652     0496  01F1               	clrf	?_strncmp+1
 14653     0497  2CD8               	goto	l2807
 14654     0498                     l5702:
 14655     0498  3001               	movlw	1
 14656     0499  07F0               	addwf	strncmp@l,f
 14657     049A                     l5704:
 14658     049A  3001               	movlw	1
 14659     049B  07F1               	addwf	strncmp@r,f
 14660     049C  3000               	movlw	0
 14661     049D  3DF2               	addwfc	strncmp@r+1,f
 14662     049E                     l5706:
 14663     049E  3001               	movlw	1
 14664     049F  02F3               	subwf	strncmp@n,f
 14665     04A0  3000               	movlw	0
 14666     04A1  3BF4               	subwfb	strncmp@n+1,f
 14667     04A2                     l5708:
 14668     04A2  0870               	movf	strncmp@l,w
 14669     04A3  0086               	movwf	6
 14670     04A4  3003               	movlw	3	; select bank6/7
 14671     04A5  0087               	movwf	7
 14672     04A6  0801               	movf	1,w
 14673     04A7  1903               	btfsc	3,2
 14674     04A8  2CAA               	goto	u2211
 14675     04A9  2CAB               	goto	u2210
 14676     04AA                     u2211:
 14677     04AA  2CCA               	goto	l5716
 14678     04AB                     u2210:
 14679     04AB                     l5710:
 14680     04AB  0871               	movf	strncmp@r,w
 14681     04AC  0084               	movwf	4
 14682     04AD  0872               	movf	strncmp@r+1,w
 14683     04AE  0085               	movwf	5
 14684     04AF  0012               	moviw fsr0++
 14685     04B0  1903               	btfsc	3,2
 14686     04B1  2CB3               	goto	u2221
 14687     04B2  2CB4               	goto	u2220
 14688     04B3                     u2221:
 14689     04B3  2CCA               	goto	l5716
 14690     04B4                     u2220:
 14691     04B4                     l5712:
 14692     04B4  0873               	movf	strncmp@n,w
 14693     04B5  0474               	iorwf	strncmp@n+1,w
 14694     04B6  1903               	btfsc	3,2
 14695     04B7  2CB9               	goto	u2231
 14696     04B8  2CBA               	goto	u2230
 14697     04B9                     u2231:
 14698     04B9  2CCA               	goto	l5716
 14699     04BA                     u2230:
 14700     04BA                     l5714:
 14701     04BA  0871               	movf	strncmp@r,w
 14702     04BB  0084               	movwf	4
 14703     04BC  0872               	movf	strncmp@r+1,w
 14704     04BD  0085               	movwf	5
 14705     04BE  0800               	movf	0,w	;code access
 14706     04BF  00F5               	movwf	??_strncmp
 14707     04C0  0870               	movf	strncmp@l,w
 14708     04C1  0086               	movwf	6
 14709     04C2  3003               	movlw	3	; select bank6/7
 14710     04C3  0087               	movwf	7
 14711     04C4  0801               	movf	1,w
 14712     04C5  0675               	xorwf	??_strncmp,w
 14713     04C6  1903               	skipnz
 14714     04C7  2CC9               	goto	u2241
 14715     04C8  2CCA               	goto	u2240
 14716     04C9                     u2241:
 14717     04C9  2C98               	goto	l5702
 14718     04CA                     u2240:
 14719     04CA                     l5716:
 14720     04CA  0870               	movf	strncmp@l,w
 14721     04CB  0086               	movwf	6
 14722     04CC  3003               	movlw	3	; select bank6/7
 14723     04CD  0087               	movwf	7
 14724     04CE  0871               	movf	strncmp@r,w
 14725     04CF  0084               	movwf	4
 14726     04D0  0872               	movf	strncmp@r+1,w
 14727     04D1  0085               	movwf	5
 14728     04D2  0800               	movf	0,w	;code access
 14729     04D3  0201               	subwf	1,w
 14730     04D4  00F0               	movwf	?_strncmp
 14731     04D5  01F1               	clrf	?_strncmp+1
 14732     04D6  1C03               	skipc
 14733     04D7  03F1               	decf	?_strncmp+1,f
 14734     04D8                     l2807:
 14735     04D8  0008               	return
 14736     04D9                     __end_of_strncmp:
 14737                           
 14738                           	psect	text32
 14739     0BA8                     __ptext32:	
 14740 ;; *************** function _strchr *****************
 14741 ;; Defined at:
 14742 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;  s               1    0[COMMON] PTR const unsigned char 
 14745 ;;		 -> statusBuffer(80), NULL(0), 
 14746 ;;  c               2    1[COMMON] int 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    0[COMMON] PTR unsigned char 
 14751 ;; Registers used:
 14752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14762 ;;Total ram usage:        3 bytes
 14763 ;; Hardware stack levels used: 1
 14764 ;; Hardware stack levels required when called: 4
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		_strstr
 14769 ;; This function uses a non-reentrant model
 14770 ;;
 14771                           
 14772     0BA8                     _strchr:	
 14773                           ;psect for function _strchr
 14774                           
 14775     0BA8                     l2800:	
 14776                           ;incstack = 0
 14777                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 14778                           
 14779     0BA8                     l5720:
 14780     0BA8  0870               	movf	strchr@s,w
 14781     0BA9  0086               	movwf	6
 14782     0BAA  3003               	movlw	3	; select bank6/7
 14783     0BAB  0087               	movwf	7
 14784     0BAC  0801               	movf	1,w
 14785     0BAD  0671               	xorwf	strchr@c,w
 14786     0BAE  1D03               	skipz
 14787     0BAF  2BB1               	goto	u2251
 14788     0BB0  2BB2               	goto	u2250
 14789     0BB1                     u2251:
 14790     0BB1  2BB4               	goto	l5726
 14791     0BB2                     u2250:
 14792     0BB2                     l5722:
 14793     0BB2  0870               	movf	strchr@s,w
 14794     0BB3  2BBF               	goto	l2802
 14795     0BB4                     l5726:
 14796     0BB4  0870               	movf	strchr@s,w
 14797     0BB5  0086               	movwf	6
 14798     0BB6  3003               	movlw	3	; select bank6/7
 14799     0BB7  0087               	movwf	7
 14800     0BB8  0AF0               	incf	strchr@s,f
 14801     0BB9  0801               	movf	1,w
 14802     0BBA  1D03               	btfss	3,2
 14803     0BBB  2BBD               	goto	u2261
 14804     0BBC  2BBE               	goto	u2260
 14805     0BBD                     u2261:
 14806     0BBD  2BA8               	goto	l2800
 14807     0BBE                     u2260:
 14808     0BBE                     l5728:
 14809     0BBE  3000               	movlw	0
 14810     0BBF                     l2802:
 14811     0BBF  0008               	return
 14812     0BC0                     __end_of_strchr:
 14813                           
 14814                           	psect	text33
 14815     07D2                     __ptext33:	
 14816 ;; *************** function _rn487x_PrintMessageStart *****************
 14817 ;; Defined at:
 14818 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14819 ;; Parameters:    Size  Location     Type
 14820 ;;		None
 14821 ;; Auto vars:     Size  Location     Type
 14822 ;;		None
 14823 ;; Return value:  Size  Location     Type
 14824 ;;                  1    wreg      void 
 14825 ;; Registers used:
 14826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14827 ;; Tracked objects:
 14828 ;;		On entry : 0/0
 14829 ;;		On exit  : 0/0
 14830 ;;		Unchanged: 0/0
 14831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14836 ;;Total ram usage:        0 bytes
 14837 ;; Hardware stack levels used: 1
 14838 ;; Hardware stack levels required when called: 5
 14839 ;; This function calls:
 14840 ;;		_EUSART1_Write
 14841 ;; This function is called by:
 14842 ;;		_RN487X_MessageHandler
 14843 ;; This function uses a non-reentrant model
 14844 ;;
 14845                           
 14846     07D2                     _rn487x_PrintMessageStart:	
 14847                           ;psect for function _rn487x_PrintMessageStart
 14848                           
 14849     07D2                     l5732:	
 14850                           ;incstack = 0
 14851                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14852                           
 14853                           
 14854                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 14855     07D2  303C               	movlw	60
 14856     07D3  00F0               	movwf	EUSART1_Write@txData
 14857     07D4  3002               	movlw	low ((_uart+2)| (0+32768))
 14858     07D5  0084               	movwf	4
 14859     07D6  3090               	movlw	high ((_uart+2)| (0+32768))
 14860     07D7  0085               	movwf	5
 14861     07D8  3F01               	moviw [1]fsr0
 14862     07D9  008A               	movwf	10
 14863     07DA  3F00               	moviw [0]fsr0
 14864     07DB  000A               	callw
 14865     07DC  3187               	pagesel	$
 14866                           
 14867                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 14868     07DD  303C               	movlw	60
 14869     07DE  00F0               	movwf	EUSART1_Write@txData
 14870     07DF  3002               	movlw	low ((_uart+2)| (0+32768))
 14871     07E0  0084               	movwf	4
 14872     07E1  3090               	movlw	high ((_uart+2)| (0+32768))
 14873     07E2  0085               	movwf	5
 14874     07E3  3F01               	moviw [1]fsr0
 14875     07E4  008A               	movwf	10
 14876     07E5  3F00               	moviw [0]fsr0
 14877     07E6  000A               	callw
 14878     07E7  3187               	pagesel	$
 14879                           
 14880                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 14881     07E8  303C               	movlw	60
 14882     07E9  00F0               	movwf	EUSART1_Write@txData
 14883     07EA  3002               	movlw	low ((_uart+2)| (0+32768))
 14884     07EB  0084               	movwf	4
 14885     07EC  3090               	movlw	high ((_uart+2)| (0+32768))
 14886     07ED  0085               	movwf	5
 14887     07EE  3F01               	moviw [1]fsr0
 14888     07EF  008A               	movwf	10
 14889     07F0  3F00               	moviw [0]fsr0
 14890     07F1  000A               	callw
 14891     07F2  3187               	pagesel	$
 14892                           
 14893                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 14894     07F3  3020               	movlw	32
 14895     07F4  00F0               	movwf	EUSART1_Write@txData
 14896     07F5  3002               	movlw	low ((_uart+2)| (0+32768))
 14897     07F6  0084               	movwf	4
 14898     07F7  3090               	movlw	high ((_uart+2)| (0+32768))
 14899     07F8  0085               	movwf	5
 14900     07F9  3F01               	moviw [1]fsr0
 14901     07FA  008A               	movwf	10
 14902     07FB  3F00               	moviw [0]fsr0
 14903     07FC  000A               	callw
 14904     07FD  3187               	pagesel	$
 14905     07FE                     l341:
 14906     07FE  0008               	return
 14907     07FF                     __end_of_rn487x_PrintMessageStart:
 14908                           
 14909                           	psect	text34
 14910     0529                     __ptext34:	
 14911 ;; *************** function _rn487x_PrintMessageEnd *****************
 14912 ;; Defined at:
 14913 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 5
 14934 ;; This function calls:
 14935 ;;		_EUSART1_Write
 14936 ;; This function is called by:
 14937 ;;		_RN487X_MessageHandler
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941     0529                     _rn487x_PrintMessageEnd:	
 14942                           ;psect for function _rn487x_PrintMessageEnd
 14943                           
 14944     0529                     l5734:	
 14945                           ;incstack = 0
 14946                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14947                           
 14948                           
 14949                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 14950     0529  3020               	movlw	32
 14951     052A  00F0               	movwf	EUSART1_Write@txData
 14952     052B  3002               	movlw	low ((_uart+2)| (0+32768))
 14953     052C  0084               	movwf	4
 14954     052D  3090               	movlw	high ((_uart+2)| (0+32768))
 14955     052E  0085               	movwf	5
 14956     052F  3F01               	moviw [1]fsr0
 14957     0530  008A               	movwf	10
 14958     0531  3F00               	moviw [0]fsr0
 14959     0532  000A               	callw
 14960     0533  3185               	pagesel	$
 14961                           
 14962                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 14963     0534  303E               	movlw	62
 14964     0535  00F0               	movwf	EUSART1_Write@txData
 14965     0536  3002               	movlw	low ((_uart+2)| (0+32768))
 14966     0537  0084               	movwf	4
 14967     0538  3090               	movlw	high ((_uart+2)| (0+32768))
 14968     0539  0085               	movwf	5
 14969     053A  3F01               	moviw [1]fsr0
 14970     053B  008A               	movwf	10
 14971     053C  3F00               	moviw [0]fsr0
 14972     053D  000A               	callw
 14973     053E  3185               	pagesel	$
 14974                           
 14975                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 14976     053F  303E               	movlw	62
 14977     0540  00F0               	movwf	EUSART1_Write@txData
 14978     0541  3002               	movlw	low ((_uart+2)| (0+32768))
 14979     0542  0084               	movwf	4
 14980     0543  3090               	movlw	high ((_uart+2)| (0+32768))
 14981     0544  0085               	movwf	5
 14982     0545  3F01               	moviw [1]fsr0
 14983     0546  008A               	movwf	10
 14984     0547  3F00               	moviw [0]fsr0
 14985     0548  000A               	callw
 14986     0549  3185               	pagesel	$
 14987                           
 14988                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 14989     054A  303E               	movlw	62
 14990     054B  00F0               	movwf	EUSART1_Write@txData
 14991     054C  3002               	movlw	low ((_uart+2)| (0+32768))
 14992     054D  0084               	movwf	4
 14993     054E  3090               	movlw	high ((_uart+2)| (0+32768))
 14994     054F  0085               	movwf	5
 14995     0550  3F01               	moviw [1]fsr0
 14996     0551  008A               	movwf	10
 14997     0552  3F00               	moviw [0]fsr0
 14998     0553  000A               	callw
 14999     0554  3185               	pagesel	$
 15000                           
 15001                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 15002     0555  3020               	movlw	32
 15003     0556  00F0               	movwf	EUSART1_Write@txData
 15004     0557  3002               	movlw	low ((_uart+2)| (0+32768))
 15005     0558  0084               	movwf	4
 15006     0559  3090               	movlw	high ((_uart+2)| (0+32768))
 15007     055A  0085               	movwf	5
 15008     055B  3F01               	moviw [1]fsr0
 15009     055C  008A               	movwf	10
 15010     055D  3F00               	moviw [0]fsr0
 15011     055E  000A               	callw
 15012     055F  3185               	pagesel	$
 15013                           
 15014                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 15015     0560  300D               	movlw	13
 15016     0561  00F0               	movwf	EUSART1_Write@txData
 15017     0562  3002               	movlw	low ((_uart+2)| (0+32768))
 15018     0563  0084               	movwf	4
 15019     0564  3090               	movlw	high ((_uart+2)| (0+32768))
 15020     0565  0085               	movwf	5
 15021     0566  3F01               	moviw [1]fsr0
 15022     0567  008A               	movwf	10
 15023     0568  3F00               	moviw [0]fsr0
 15024     0569  000A               	callw
 15025     056A  3185               	pagesel	$
 15026                           
 15027                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 15028     056B  300A               	movlw	10
 15029     056C  00F0               	movwf	EUSART1_Write@txData
 15030     056D  3002               	movlw	low ((_uart+2)| (0+32768))
 15031     056E  0084               	movwf	4
 15032     056F  3090               	movlw	high ((_uart+2)| (0+32768))
 15033     0570  0085               	movwf	5
 15034     0571  3F01               	moviw [1]fsr0
 15035     0572  008A               	movwf	10
 15036     0573  3F00               	moviw [0]fsr0
 15037     0574  000A               	callw
 15038     0575  3185               	pagesel	$
 15039     0576                     l344:
 15040     0576  0008               	return
 15041     0577                     __end_of_rn487x_PrintMessageEnd:
 15042                           
 15043                           	psect	text35
 15044     0EB4                     __ptext35:	
 15045 ;; *************** function _rn487x_PrintMessage *****************
 15046 ;; Defined at:
 15047 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;  passedMessag    1    5[COMMON] PTR unsigned char 
 15050 ;;		 -> statusBuffer(80), NULL(0), 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 15053 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15063 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Totals:         2      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;Total ram usage:       35 bytes
 15068 ;; Hardware stack levels used: 1
 15069 ;; Hardware stack levels required when called: 5
 15070 ;; This function calls:
 15071 ;;		_EUSART1_Write
 15072 ;;		_strcpy
 15073 ;;		_strlen
 15074 ;; This function is called by:
 15075 ;;		_RN487X_MessageHandler
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079     0EB4                     _rn487x_PrintMessage:	
 15080                           ;psect for function _rn487x_PrintMessage
 15081                           
 15082     0EB4                     l5744:	
 15083                           ;incstack = 0
 15084                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15085                           
 15086                           
 15087                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 15088     0EB4  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 15089     0EB5  00F0               	movwf	strcpy@dest
 15090     0EB6  0875               	movf	rn487x_PrintMessage@passedMessage,w
 15091     0EB7  00F1               	movwf	strcpy@src
 15092     0EB8  318A  2237  318E   	fcall	_strcpy
 15093     0EBB                     l5746:
 15094                           
 15095                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 15096     0EBB  0140               	movlb	0	; select bank0
 15097     0EBC  01C0               	clrf	rn487x_PrintMessage@messageIndex
 15098     0EBD  2ED0               	goto	l5752
 15099     0EBE                     l5748:
 15100                           
 15101                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 15102     0EBE  0840               	movf	rn487x_PrintMessage@messageIndex,w
 15103     0EBF  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 15104     0EC0  0086               	movwf	6
 15105     0EC1  0187               	clrf	7
 15106     0EC2  0801               	movf	1,w
 15107     0EC3  00F0               	movwf	EUSART1_Write@txData
 15108     0EC4  3002               	movlw	low ((_uart+2)| (0+32768))
 15109     0EC5  0084               	movwf	4
 15110     0EC6  3090               	movlw	high ((_uart+2)| (0+32768))
 15111     0EC7  0085               	movwf	5
 15112     0EC8  3F01               	moviw [1]fsr0
 15113     0EC9  008A               	movwf	10
 15114     0ECA  3F00               	moviw [0]fsr0
 15115     0ECB  000A               	callw
 15116     0ECC  318E               	pagesel	$
 15117     0ECD                     l5750:
 15118                           
 15119                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 15120     0ECD  3001               	movlw	1
 15121     0ECE  0140               	movlb	0	; select bank0
 15122     0ECF  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 15123     0ED0                     l5752:
 15124     0ED0  0875               	movf	rn487x_PrintMessage@passedMessage,w
 15125     0ED1  00F0               	movwf	strlen@s
 15126     0ED2  39FF               	andlw	255
 15127     0ED3  1D03               	skipz
 15128     0ED4  3003               	movlw	3
 15129     0ED5  00F1               	movwf	strlen@s+1
 15130     0ED6  318B  23C0  318E   	fcall	_strlen
 15131     0ED9  0140               	movlb	0	; select bank0
 15132     0EDA  0840               	movf	rn487x_PrintMessage@messageIndex,w
 15133     0EDB  00F6               	movwf	??_rn487x_PrintMessage
 15134     0EDC  0871               	movf	?_strlen+1,w
 15135     0EDD  1D03               	skipz
 15136     0EDE  2EE1               	goto	u2295
 15137     0EDF  0870               	movf	?_strlen,w
 15138     0EE0  0276               	subwf	??_rn487x_PrintMessage,w
 15139     0EE1                     u2295:
 15140     0EE1  1C03               	skipc
 15141     0EE2  2EE4               	goto	u2291
 15142     0EE3  2EE5               	goto	u2290
 15143     0EE4                     u2291:
 15144     0EE4  2EBE               	goto	l5748
 15145     0EE5                     u2290:
 15146     0EE5                     l357:
 15147     0EE5  0008               	return
 15148     0EE6                     __end_of_rn487x_PrintMessage:
 15149                           
 15150                           	psect	text36
 15151     0A37                     __ptext36:	
 15152 ;; *************** function _strcpy *****************
 15153 ;; Defined at:
 15154 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 15155 ;; Parameters:    Size  Location     Type
 15156 ;;  dest            1    0[COMMON] PTR unsigned char 
 15157 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 15158 ;;  src             1    1[COMMON] PTR const unsigned char 
 15159 ;;		 -> statusBuffer(80), NULL(0), 
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;  d               1    2[COMMON] PTR unsigned char 
 15162 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 15163 ;; Return value:  Size  Location     Type
 15164 ;;                  1    0[COMMON] PTR unsigned char 
 15165 ;; Registers used:
 15166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15167 ;; Tracked objects:
 15168 ;;		On entry : 0/0
 15169 ;;		On exit  : 0/0
 15170 ;;		Unchanged: 0/0
 15171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15176 ;;Total ram usage:        3 bytes
 15177 ;; Hardware stack levels used: 1
 15178 ;; Hardware stack levels required when called: 4
 15179 ;; This function calls:
 15180 ;;		Nothing
 15181 ;; This function is called by:
 15182 ;;		_rn487x_PrintMessage
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186     0A37                     _strcpy:	
 15187                           ;psect for function _strcpy
 15188                           
 15189     0A37                     l5664:	
 15190                           ;incstack = 0
 15191                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 15192                           
 15193     0A37  0870               	movf	strcpy@dest,w
 15194     0A38  00F2               	movwf	strcpy@d
 15195     0A39                     l5666:
 15196     0A39  0872               	movf	strcpy@d,w
 15197     0A3A  0086               	movwf	6
 15198     0A3B  0187               	clrf	7
 15199     0A3C  0AF2               	incf	strcpy@d,f
 15200     0A3D  0871               	movf	strcpy@src,w
 15201     0A3E  0084               	movwf	4
 15202     0A3F  3003               	movlw	3	; select bank6/7
 15203     0A40  0085               	movwf	5
 15204     0A41  0AF1               	incf	strcpy@src,f
 15205     0A42  0800               	movf	0,w
 15206     0A43  3FC0               	movwi [0]fsr1
 15207     0A44  0889               	movf	9,f
 15208     0A45  1D03               	btfss	3,2
 15209     0A46  2A48               	goto	u2151
 15210     0A47  2A49               	goto	u2150
 15211     0A48                     u2151:
 15212     0A48  2A39               	goto	l5666
 15213     0A49                     u2150:
 15214     0A49                     l2775:
 15215     0A49  0008               	return
 15216     0A4A                     __end_of_strcpy:
 15217                           
 15218                           	psect	text37
 15219     0CA8                     __ptext37:	
 15220 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 15221 ;; Defined at:
 15222 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;  messageType     1    wreg     enum E13210
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;  messageType     1    1[COMMON] enum E13210
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  1    wreg      void 
 15229 ;; Registers used:
 15230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15240 ;;Total ram usage:        1 bytes
 15241 ;; Hardware stack levels used: 1
 15242 ;; Hardware stack levels required when called: 5
 15243 ;; This function calls:
 15244 ;;		_EUSART1_Write
 15245 ;; This function is called by:
 15246 ;;		_RN487X_MessageHandler
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250     0CA8                     _rn487x_PrintIndicatorCharacters:	
 15251                           ;psect for function _rn487x_PrintIndicatorCharacters
 15252                           
 15253                           
 15254                           ;incstack = 0
 15255                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 15256                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 15257     0CA8  00F1               	movwf	rn487x_PrintIndicatorCharacters@messageType
 15258     0CA9                     l5736:
 15259                           
 15260                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 15261     0CA9  0871               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 15262     0CAA  1D03               	btfss	3,2
 15263     0CAB  2CAD               	goto	u2271
 15264     0CAC  2CAE               	goto	u2270
 15265     0CAD                     u2271:
 15266     0CAD  2CBA               	goto	l5740
 15267     0CAE                     u2270:
 15268     0CAE                     l5738:
 15269                           
 15270                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 15271     0CAE  305B               	movlw	91
 15272     0CAF  00F0               	movwf	EUSART1_Write@txData
 15273     0CB0  3002               	movlw	low ((_uart+2)| (0+32768))
 15274     0CB1  0084               	movwf	4
 15275     0CB2  3090               	movlw	high ((_uart+2)| (0+32768))
 15276     0CB3  0085               	movwf	5
 15277     0CB4  3F01               	moviw [1]fsr0
 15278     0CB5  008A               	movwf	10
 15279     0CB6  3F00               	moviw [0]fsr0
 15280     0CB7  000A               	callw
 15281     0CB8  318C               	pagesel	$
 15282                           
 15283                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 15284     0CB9  2CCA               	goto	l351
 15285     0CBA                     l5740:
 15286     0CBA  0371               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 15287     0CBB  1D03               	btfss	3,2
 15288     0CBC  2CBE               	goto	u2281
 15289     0CBD  2CBF               	goto	u2280
 15290     0CBE                     u2281:
 15291     0CBE  2CCA               	goto	l351
 15292     0CBF                     u2280:
 15293     0CBF                     l5742:
 15294                           
 15295                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 15296     0CBF  305D               	movlw	93
 15297     0CC0  00F0               	movwf	EUSART1_Write@txData
 15298     0CC1  3002               	movlw	low ((_uart+2)| (0+32768))
 15299     0CC2  0084               	movwf	4
 15300     0CC3  3090               	movlw	high ((_uart+2)| (0+32768))
 15301     0CC4  0085               	movwf	5
 15302     0CC5  3F01               	moviw [1]fsr0
 15303     0CC6  008A               	movwf	10
 15304     0CC7  3F00               	moviw [0]fsr0
 15305     0CC8  000A               	callw
 15306     0CC9  318C               	pagesel	$
 15307     0CCA                     l351:	
 15308                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 15309                           
 15310     0CCA  0008               	return
 15311     0CCB                     __end_of_rn487x_PrintIndicatorCharacters:
 15312                           
 15313                           	psect	text38
 15314     17B9                     __ptext38:	
 15315 ;; *************** function _RN487X_IsConnected *****************
 15316 ;; Defined at:
 15317 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15318 ;; Parameters:    Size  Location     Type
 15319 ;;		None
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;		None
 15322 ;; Return value:  Size  Location     Type
 15323 ;;                  1    wreg      _Bool 
 15324 ;; Registers used:
 15325 ;;		wreg
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15335 ;;Total ram usage:        0 bytes
 15336 ;; Hardware stack levels used: 1
 15337 ;; Hardware stack levels required when called: 4
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		_main
 15342 ;;		_RN487X_Example_TransparentUart
 15343 ;; This function uses a non-reentrant model
 15344 ;;
 15345                           
 15346     17B9                     _RN487X_IsConnected:	
 15347                           ;psect for function _RN487X_IsConnected
 15348                           
 15349     17B9                     l6344:	
 15350                           ;incstack = 0
 15351                           ; Regs used in _RN487X_IsConnected: [wreg]
 15352                           
 15353                           
 15354                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 15355     17B9  0140               	movlb	0	; select bank0
 15356     17BA  0867               	movf	_connected,w
 15357     17BB                     l292:
 15358     17BB  0008               	return
 15359     17BC                     __end_of_RN487X_IsConnected:
 15360                           
 15361                           	psect	text39
 15362     037F                     __ptext39:	
 15363 ;; *************** function _RN487X_Init *****************
 15364 ;; Defined at:
 15365 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;		None
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;		None
 15370 ;; Return value:  Size  Location     Type
 15371 ;;                  1    wreg      _Bool 
 15372 ;; Registers used:
 15373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15383 ;;Total ram usage:        0 bytes
 15384 ;; Hardware stack levels used: 1
 15385 ;; Hardware stack levels required when called: 6
 15386 ;; This function calls:
 15387 ;;		_RN487X_Delay
 15388 ;;		_RN487X_IndicateRx
 15389 ;;		_RN487X_Read@rn487x_interface$F545
 15390 ;;		_RN487X_Reset
 15391 ;;		_RN487X_SetSystemMode
 15392 ;;		_RN487X_is_rx_ready
 15393 ;; This function is called by:
 15394 ;;		_main
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398     037F                     _RN487X_Init:	
 15399                           ;psect for function _RN487X_Init
 15400                           
 15401     037F                     l6358:	
 15402                           ;incstack = 0
 15403                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15404                           
 15405                           
 15406                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 15407     037F  01F0               	clrf	RN487X_SetSystemMode@mode
 15408     0380  0AF0               	incf	RN487X_SetSystemMode@mode,f
 15409     0381  3074               	movlw	low ((_RN487X+12)| (0+32768))
 15410     0382  0084               	movwf	4
 15411     0383  3090               	movlw	high ((_RN487X+12)| (0+32768))
 15412     0384  0085               	movwf	5
 15413     0385  3F01               	moviw [1]fsr0
 15414     0386  008A               	movwf	10
 15415     0387  3F00               	moviw [0]fsr0
 15416     0388  000A               	callw
 15417     0389  3183               	pagesel	$
 15418                           
 15419                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 15420     038A  01F0               	clrf	RN487X_Reset@value
 15421     038B  0AF0               	incf	RN487X_Reset@value,f
 15422     038C  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15423     038D  0084               	movwf	4
 15424     038E  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15425     038F  0085               	movwf	5
 15426     0390  3F01               	moviw [1]fsr0
 15427     0391  008A               	movwf	10
 15428     0392  3F00               	moviw [0]fsr0
 15429     0393  000A               	callw
 15430     0394  3183               	pagesel	$
 15431                           
 15432                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 15433     0395  3001               	movlw	1
 15434     0396  00F2               	movwf	RN487X_Delay@delayCount
 15435     0397  3000               	movlw	0
 15436     0398  00F3               	movwf	RN487X_Delay@delayCount+1
 15437     0399  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15438     039A  0084               	movwf	4
 15439     039B  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15440     039C  0085               	movwf	5
 15441     039D  3F01               	moviw [1]fsr0
 15442     039E  008A               	movwf	10
 15443     039F  3F00               	moviw [0]fsr0
 15444     03A0  000A               	callw
 15445     03A1  3183               	pagesel	$
 15446                           
 15447                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 15448     03A2  01F0               	clrf	RN487X_Reset@value
 15449     03A3  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15450     03A4  0084               	movwf	4
 15451     03A5  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15452     03A6  0085               	movwf	5
 15453     03A7  3F01               	moviw [1]fsr0
 15454     03A8  008A               	movwf	10
 15455     03A9  3F00               	moviw [0]fsr0
 15456     03AA  000A               	callw
 15457     03AB  3183               	pagesel	$
 15458                           
 15459                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 15460     03AC  01F0               	clrf	RN487X_IndicateRx@value
 15461     03AD  0AF0               	incf	RN487X_IndicateRx@value,f
 15462     03AE  3070               	movlw	low ((_RN487X+8)| (0+32768))
 15463     03AF  0084               	movwf	4
 15464     03B0  3090               	movlw	high ((_RN487X+8)| (0+32768))
 15465     03B1  0085               	movwf	5
 15466     03B2  3F01               	moviw [1]fsr0
 15467     03B3  008A               	movwf	10
 15468     03B4  3F00               	moviw [0]fsr0
 15469     03B5  000A               	callw
 15470     03B6  3183               	pagesel	$
 15471                           
 15472                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 15473     03B7  30C8               	movlw	200
 15474     03B8  00F2               	movwf	RN487X_Delay@delayCount
 15475     03B9  3000               	movlw	0
 15476     03BA  00F3               	movwf	RN487X_Delay@delayCount+1
 15477     03BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15478     03BC  0084               	movwf	4
 15479     03BD  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15480     03BE  0085               	movwf	5
 15481     03BF  3F01               	moviw [1]fsr0
 15482     03C0  008A               	movwf	10
 15483     03C1  3F00               	moviw [0]fsr0
 15484     03C2  000A               	callw
 15485     03C3  3183               	pagesel	$
 15486                           
 15487                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15488     03C4  2BCE               	goto	l6362
 15489     03C5                     l6360:
 15490                           
 15491                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 15492     03C5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 15493     03C6  0084               	movwf	4
 15494     03C7  3090               	movlw	high ((_RN487X+2)| (0+32768))
 15495     03C8  0085               	movwf	5
 15496     03C9  3F01               	moviw [1]fsr0
 15497     03CA  008A               	movwf	10
 15498     03CB  3F00               	moviw [0]fsr0
 15499     03CC  000A               	callw
 15500     03CD  3183               	pagesel	$
 15501     03CE                     l6362:
 15502                           
 15503                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15504     03CE  306E               	movlw	low ((_RN487X+6)| (0+32768))
 15505     03CF  0084               	movwf	4
 15506     03D0  3090               	movlw	high ((_RN487X+6)| (0+32768))
 15507     03D1  0085               	movwf	5
 15508     03D2  3F01               	moviw [1]fsr0
 15509     03D3  008A               	movwf	10
 15510     03D4  3F00               	moviw [0]fsr0
 15511     03D5  000A               	callw
 15512     03D6  3183               	pagesel	$
 15513     03D7  3A00               	xorlw	0
 15514     03D8  1D03               	skipz
 15515     03D9  2BDB               	goto	u2811
 15516     03DA  2BDC               	goto	u2810
 15517     03DB                     u2811:
 15518     03DB  2BC5               	goto	l6360
 15519     03DC                     u2810:
 15520     03DC                     l199:
 15521     03DC  0008               	return
 15522     03DD                     __end_of_RN487X_Init:
 15523                           
 15524                           	psect	text40
 15525     08CB                     __ptext40:	
 15526 ;; *************** function _RN487X_is_rx_ready *****************
 15527 ;; Defined at:
 15528 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      _Bool 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used: 1
 15548 ;; Hardware stack levels required when called: 5
 15549 ;; This function calls:
 15550 ;;		_EUSART1_is_rx_ready
 15551 ;; This function is called by:
 15552 ;;		_RN487X_DataReady
 15553 ;;		_RN487X_Init
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557     08CB                     _RN487X_is_rx_ready:	
 15558                           ;psect for function _RN487X_is_rx_ready
 15559                           
 15560     08CB                     l5910:	
 15561                           ;incstack = 0
 15562                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15563                           
 15564                           
 15565                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 15566     08CB  301A               	movlw	low ((_uart+26)| (0+32768))
 15567     08CC  0084               	movwf	4
 15568     08CD  3090               	movlw	high ((_uart+26)| (0+32768))
 15569     08CE  0085               	movwf	5
 15570     08CF  3F01               	moviw [1]fsr0
 15571     08D0  008A               	movwf	10
 15572     08D1  3F00               	moviw [0]fsr0
 15573     08D2  000A               	callw
 15574     08D3  3188               	pagesel	$
 15575     08D4                     l304:
 15576     08D4  0008               	return
 15577     08D5                     __end_of_RN487X_is_rx_ready:
 15578                           
 15579                           	psect	text41
 15580     08AF                     __ptext41:	
 15581 ;; *************** function _EUSART1_is_rx_ready *****************
 15582 ;; Defined at:
 15583 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;		None
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;		None
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      _Bool 
 15590 ;; Registers used:
 15591 ;;		wreg, status,2, status,0
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/0
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15601 ;;Total ram usage:        0 bytes
 15602 ;; Hardware stack levels used: 1
 15603 ;; Hardware stack levels required when called: 4
 15604 ;; This function calls:
 15605 ;;		Nothing
 15606 ;; This function is called by:
 15607 ;;		_RN487X_is_rx_ready
 15608 ;;		_RN487X_Example_TransparentUart
 15609 ;;		_main
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613     08AF                     _EUSART1_is_rx_ready:	
 15614                           ;psect for function _EUSART1_is_rx_ready
 15615                           
 15616     08AF                     l5842:	
 15617                           ;incstack = 0
 15618                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15619                           
 15620                           
 15621                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 15622     08AF  0140               	movlb	0	; select bank0
 15623     08B0  085C               	movf	_eusart1RxCount,w	;volatile
 15624     08B1  1D03               	btfss	3,2
 15625     08B2  28B4               	goto	u2421
 15626     08B3  28B6               	goto	u2420
 15627     08B4                     u2421:
 15628     08B4  3001               	movlw	1
 15629     08B5  28B7               	goto	u2430
 15630     08B6                     u2420:
 15631     08B6  3000               	movlw	0
 15632     08B7                     u2430:
 15633     08B7                     l1148:
 15634     08B7  0008               	return
 15635     08B8                     __end_of_EUSART1_is_rx_ready:
 15636                           
 15637                           	psect	text42
 15638     0917                     __ptext42:	
 15639 ;; *************** function _RN487X_SetSystemMode *****************
 15640 ;; Defined at:
 15641 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15642 ;; Parameters:    Size  Location     Type
 15643 ;;  mode            1    0[COMMON] enum E204
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;		None
 15646 ;; Return value:  Size  Location     Type
 15647 ;;                  1    wreg      void 
 15648 ;; Registers used:
 15649 ;;		wreg, status,2, status,0
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15659 ;;Total ram usage:        1 bytes
 15660 ;; Hardware stack levels used: 1
 15661 ;; Hardware stack levels required when called: 4
 15662 ;; This function calls:
 15663 ;;		Nothing
 15664 ;; This function is called by:
 15665 ;;		_RN487X_Init
 15666 ;; This function uses a non-reentrant model
 15667 ;;
 15668                           
 15669     0917                     _RN487X_SetSystemMode:	
 15670                           ;psect for function _RN487X_SetSystemMode
 15671                           
 15672     0917                     l328:	
 15673                           ;incstack = 0
 15674                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 15675                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 15676                           
 15677     0917  0140               	movlb	0	; select bank0
 15678     0918  1392               	bcf	18,7	;volatile
 15679     0919                     l6066:
 15680                           
 15681                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 15682     0919  0370               	decf	RN487X_SetSystemMode@mode,w
 15683     091A  1D03               	btfss	3,2
 15684     091B  291D               	goto	u2681
 15685     091C  291E               	goto	u2680
 15686     091D                     u2681:
 15687     091D  2920               	goto	l334
 15688     091E                     u2680:
 15689     091E                     l331:	
 15690                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 15691                           
 15692     091E  1798               	bsf	24,7	;volatile
 15693     091F  2921               	goto	l336
 15694     0920                     l334:	
 15695                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 15696                           
 15697     0920  1398               	bcf	24,7	;volatile
 15698     0921                     l336:	
 15699                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 15700                           
 15701     0921  1792               	bsf	18,7	;volatile
 15702     0922                     l338:
 15703     0922  0008               	return
 15704     0923                     __end_of_RN487X_SetSystemMode:
 15705                           
 15706                           	psect	text43
 15707     08F4                     __ptext43:	
 15708 ;; *************** function _RN487X_Reset *****************
 15709 ;; Defined at:
 15710 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  value           1    0[COMMON] _Bool 
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15728 ;;Total ram usage:        1 bytes
 15729 ;; Hardware stack levels used: 1
 15730 ;; Hardware stack levels required when called: 4
 15731 ;; This function calls:
 15732 ;;		Nothing
 15733 ;; This function is called by:
 15734 ;;		_RN487X_Init
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738     08F4                     _RN487X_Reset:	
 15739                           ;psect for function _RN487X_Reset
 15740                           
 15741     08F4                     l6062:	
 15742                           ;incstack = 0
 15743                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 15744                           
 15745                           
 15746                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 15747     08F4  0370               	decf	RN487X_Reset@value,w
 15748     08F5  1D03               	btfss	3,2
 15749     08F6  28F8               	goto	u2661
 15750     08F7  28F9               	goto	u2660
 15751     08F8                     u2661:
 15752     08F8  28FC               	goto	l314
 15753     08F9                     u2660:
 15754     08F9                     l311:	
 15755                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 15756                           
 15757     08F9  0140               	movlb	0	; select bank0
 15758     08FA  1018               	bcf	24,0	;volatile
 15759     08FB  28FE               	goto	l316
 15760     08FC                     l314:	
 15761                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 15762                           
 15763     08FC  0140               	movlb	0	; select bank0
 15764     08FD  1418               	bsf	24,0	;volatile
 15765     08FE                     l316:
 15766     08FE  0008               	return
 15767     08FF                     __end_of_RN487X_Reset:
 15768                           
 15769                           	psect	text44
 15770     08C1                     __ptext44:	
 15771 ;; *************** function _RN487X_Read@rn487x_interface$F545 *****************
 15772 ;; Defined at:
 15773 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      unsigned char 
 15780 ;; Registers used:
 15781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15791 ;;Total ram usage:        0 bytes
 15792 ;; Hardware stack levels used: 1
 15793 ;; Hardware stack levels required when called: 5
 15794 ;; This function calls:
 15795 ;;		_EUSART1_Read
 15796 ;; This function is called by:
 15797 ;;		_RN487X_FilterData
 15798 ;;		_RN487X_Init
 15799 ;;		_RN487X_GetCmd
 15800 ;;		_RN487X_ReadDefaultResponse
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804     08C1                     _RN487X_Read@rn487x_interface$F545:	
 15805                           ;psect for function _RN487X_Read@rn487x_interface$F545
 15806                           
 15807     08C1                     l5828:	
 15808                           ;incstack = 0
 15809                           ; Regs used in _RN487X_Read@rn487x_interface$F545: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15810                           
 15811                           
 15812                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 15813     08C1  3014               	movlw	low ((_uart+20)| (0+32768))
 15814     08C2  0084               	movwf	4
 15815     08C3  3090               	movlw	high ((_uart+20)| (0+32768))
 15816     08C4  0085               	movwf	5
 15817     08C5  3F01               	moviw [1]fsr0
 15818     08C6  008A               	movwf	10
 15819     08C7  3F00               	moviw [0]fsr0
 15820     08C8  000A               	callw
 15821     08C9  3188               	pagesel	$
 15822     08CA                     l298:
 15823     08CA  0008               	return
 15824     08CB                     __end_of_RN487X_Read@rn487x_interface$F545:
 15825                           
 15826                           	psect	text45
 15827     0CCB                     __ptext45:	
 15828 ;; *************** function _EUSART1_Read *****************
 15829 ;; Defined at:
 15830 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  readValue       1    0[COMMON] unsigned char 
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      unsigned char 
 15837 ;; Registers used:
 15838 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15848 ;;Total ram usage:        1 bytes
 15849 ;; Hardware stack levels used: 1
 15850 ;; Hardware stack levels required when called: 4
 15851 ;; This function calls:
 15852 ;;		Nothing
 15853 ;; This function is called by:
 15854 ;;		_RN487X_Read@rn487x_interface$F545
 15855 ;;		_RN487X_Example_TransparentUart
 15856 ;;		_main
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860     0CCB                     _EUSART1_Read:	
 15861                           ;psect for function _EUSART1_Read
 15862                           
 15863     0CCB                     l5774:	
 15864                           ;incstack = 0
 15865                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 15866                           
 15867     0CCB                     l5776:	
 15868                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 15869                           
 15870                           
 15871                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 15872     0CCB  0140               	movlb	0	; select bank0
 15873     0CCC  085C               	movf	_eusart1RxCount,w	;volatile
 15874     0CCD  1903               	btfsc	3,2
 15875     0CCE  2CD0               	goto	u2341
 15876     0CCF  2CD1               	goto	u2340
 15877     0CD0                     u2341:
 15878     0CD0  2CCB               	goto	l5776
 15879     0CD1                     u2340:
 15880     0CD1                     l5778:
 15881                           
 15882                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 15883     0CD1  085D               	movf	_eusart1RxTail,w	;volatile
 15884     0CD2  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 15885     0CD3  0086               	movwf	6
 15886     0CD4  0187               	clrf	7
 15887     0CD5  0801               	movf	1,w
 15888     0CD6  00DB               	movwf	_eusart1RxLastError	;volatile
 15889                           
 15890                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 15891     0CD7  085D               	movf	_eusart1RxTail,w
 15892     0CD8  3EB0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 15893     0CD9  0086               	movwf	6
 15894     0CDA  0187               	clrf	7
 15895     0CDB  0801               	movf	1,w
 15896     0CDC  00F0               	movwf	EUSART1_Read@readValue
 15897     0CDD                     l5780:
 15898     0CDD  3001               	movlw	1
 15899     0CDE  07DD               	addwf	_eusart1RxTail,f	;volatile
 15900     0CDF                     l5782:
 15901                           
 15902                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 15903     0CDF  3008               	movlw	8
 15904     0CE0  025D               	subwf	_eusart1RxTail,w	;volatile
 15905     0CE1  1C03               	skipc
 15906     0CE2  2CE4               	goto	u2351
 15907     0CE3  2CE5               	goto	u2350
 15908     0CE4                     u2351:
 15909     0CE4  2CE6               	goto	l5786
 15910     0CE5                     u2350:
 15911     0CE5                     l5784:
 15912                           
 15913                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 15914     0CE5  01DD               	clrf	_eusart1RxTail	;volatile
 15915     0CE6                     l5786:
 15916                           
 15917                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 15918     0CE6  014E               	movlb	14	; select bank14
 15919     0CE7  1299               	bcf	25,5	;volatile
 15920     0CE8                     l5788:
 15921                           
 15922                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 15923     0CE8  3001               	movlw	1
 15924     0CE9  0140               	movlb	0	; select bank0
 15925     0CEA  02DC               	subwf	_eusart1RxCount,f	;volatile
 15926     0CEB                     l5790:
 15927                           
 15928                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 15929     0CEB  014E               	movlb	14	; select bank14
 15930     0CEC  1699               	bsf	25,5	;volatile
 15931     0CED                     l5792:
 15932                           
 15933                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 15934     0CED  0870               	movf	EUSART1_Read@readValue,w
 15935     0CEE                     l1161:
 15936     0CEE  0008               	return
 15937     0CEF                     __end_of_EUSART1_Read:
 15938                           
 15939                           	psect	text46
 15940     08E9                     __ptext46:	
 15941 ;; *************** function _RN487X_IndicateRx *****************
 15942 ;; Defined at:
 15943 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;  value           1    0[COMMON] _Bool 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15961 ;;Total ram usage:        1 bytes
 15962 ;; Hardware stack levels used: 1
 15963 ;; Hardware stack levels required when called: 4
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_RN487X_Init
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971     08E9                     _RN487X_IndicateRx:	
 15972                           ;psect for function _RN487X_IndicateRx
 15973                           
 15974     08E9                     l6064:	
 15975                           ;incstack = 0
 15976                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 15977                           
 15978                           
 15979                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 15980     08E9  0370               	decf	RN487X_IndicateRx@value,w
 15981     08EA  1D03               	btfss	3,2
 15982     08EB  28ED               	goto	u2671
 15983     08EC  28EE               	goto	u2670
 15984     08ED                     u2671:
 15985     08ED  28F1               	goto	l323
 15986     08EE                     u2670:
 15987     08EE                     l320:	
 15988                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 15989                           
 15990     08EE  0140               	movlb	0	; select bank0
 15991     08EF  131A               	bcf	26,6	;volatile
 15992     08F0  28F3               	goto	l325
 15993     08F1                     l323:	
 15994                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 15995                           
 15996     08F1  0140               	movlb	0	; select bank0
 15997     08F2  171A               	bsf	26,6	;volatile
 15998     08F3                     l325:
 15999     08F3  0008               	return
 16000     08F4                     __end_of_RN487X_IndicateRx:
 16001                           
 16002                           	psect	text47
 16003     089E                     __ptext47:	
 16004 ;; *************** function _RN487X_Delay *****************
 16005 ;; Defined at:
 16006 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;  delayCount      2    2[COMMON] unsigned short 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;		None
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      void 
 16013 ;; Registers used:
 16014 ;;		wreg, status,2, status,0, pclath, cstack
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16024 ;;Total ram usage:        2 bytes
 16025 ;; Hardware stack levels used: 1
 16026 ;; Hardware stack levels required when called: 5
 16027 ;; This function calls:
 16028 ;;		_DELAY_milliseconds
 16029 ;; This function is called by:
 16030 ;;		_RN487X_Init
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034     089E                     _RN487X_Delay:	
 16035                           ;psect for function _RN487X_Delay
 16036                           
 16037     089E                     l6058:	
 16038                           ;incstack = 0
 16039                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 16040                           
 16041                           
 16042                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 16043     089E  0873               	movf	RN487X_Delay@delayCount+1,w
 16044     089F  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 16045     08A0  0872               	movf	RN487X_Delay@delayCount,w
 16046     08A1  00F0               	movwf	DELAY_milliseconds@milliseconds
 16047     08A2  318A  2212  3188   	fcall	_DELAY_milliseconds
 16048     08A5                     l307:
 16049     08A5  0008               	return
 16050     08A6                     __end_of_RN487X_Delay:
 16051                           
 16052                           	psect	text48
 16053     0A12                     __ptext48:	
 16054 ;; *************** function _DELAY_milliseconds *****************
 16055 ;; Defined at:
 16056 ;;		line 38 in file "mcc_generated_files/delay.c"
 16057 ;; Parameters:    Size  Location     Type
 16058 ;;  milliseconds    2    0[COMMON] unsigned short 
 16059 ;; Auto vars:     Size  Location     Type
 16060 ;;		None
 16061 ;; Return value:  Size  Location     Type
 16062 ;;                  1    wreg      void 
 16063 ;; Registers used:
 16064 ;;		wreg, status,2, status,0
 16065 ;; Tracked objects:
 16066 ;;		On entry : 0/0
 16067 ;;		On exit  : 0/0
 16068 ;;		Unchanged: 0/0
 16069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16074 ;;Total ram usage:        2 bytes
 16075 ;; Hardware stack levels used: 1
 16076 ;; Hardware stack levels required when called: 4
 16077 ;; This function calls:
 16078 ;;		Nothing
 16079 ;; This function is called by:
 16080 ;;		_RN487X_Delay
 16081 ;; This function uses a non-reentrant model
 16082 ;;
 16083                           
 16084     0A12                     _DELAY_milliseconds:	
 16085                           ;psect for function _DELAY_milliseconds
 16086                           
 16087     0A12                     l5914:	
 16088                           ;incstack = 0
 16089                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 16090                           
 16091                           
 16092                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 16093     0A12  2A17               	goto	l5918
 16094     0A13                     l5916:
 16095                           
 16096                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16097     0A13  3053               	movlw	83
 16098     0A14                     u4627:
 16099     0A14  0B89               	decfsz	9,f
 16100     0A15  2A14               	goto	u4627
 16101     0A16  0000               	nop
 16102     0A17                     l5918:
 16103                           
 16104                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 16105     0A17  3001               	movlw	1
 16106     0A18  02F0               	subwf	DELAY_milliseconds@milliseconds,f
 16107     0A19  3000               	movlw	0
 16108     0A1A  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
 16109     0A1B  0A70               	incf	DELAY_milliseconds@milliseconds,w
 16110     0A1C  1D03               	skipz
 16111     0A1D  2A22               	goto	u2561
 16112     0A1E  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
 16113     0A1F  1D03               	btfss	3,2
 16114     0A20  2A22               	goto	u2561
 16115     0A21  2A23               	goto	u2560
 16116     0A22                     u2561:
 16117     0A22  2A13               	goto	l5916
 16118     0A23                     u2560:
 16119     0A23                     l1058:
 16120     0A23  0008               	return
 16121     0A24                     __end_of_DELAY_milliseconds:
 16122                           
 16123                           	psect	text49
 16124     0B90                     __ptext49:	
 16125 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 16126 ;; Defined at:
 16127 ;;		line 316 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;		None
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;  payload         5   25[BANK0 ] unsigned char [5]
 16132 ;;  temperature     2   30[BANK0 ] short 
 16133 ;; Return value:  Size  Location     Type
 16134 ;;                  1    wreg      void 
 16135 ;; Registers used:
 16136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16137 ;; Tracked objects:
 16138 ;;		On entry : 0/0
 16139 ;;		On exit  : 0/0
 16140 ;;		Unchanged: 0/0
 16141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16143 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16145 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16146 ;;Total ram usage:        7 bytes
 16147 ;; Hardware stack levels used: 1
 16148 ;; Hardware stack levels required when called: 15
 16149 ;; This function calls:
 16150 ;;		_LIGHTBLUE_SendPacket
 16151 ;;		_LIGHTBLUE_SplitWord
 16152 ;;		_MCP9844_GetTemperatureValue
 16153 ;; This function is called by:
 16154 ;;		_main
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158     0B90                     _LIGHTBLUE_TemperatureSensor:	
 16159                           ;psect for function _LIGHTBLUE_TemperatureSensor
 16160                           
 16161     0B90                     l8132:	
 16162                           ;incstack = 0
 16163                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16164                           
 16165                           
 16166                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 319:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 321:     *payload = '\0';
 16167     0B90  0140               	movlb	0	; select bank0
 16168     0B91  01B9               	clrf	LIGHTBLUE_TemperatureSensor@payload
 16169     0B92                     l8134:
 16170                           
 16171                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 322:     MCP9844_GetTemperatureVal
      +                          ue(&temperature);
 16172     0B92  303E               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 16173     0B93  00B8               	movwf	MCP9844_GetTemperatureValue@temperature
 16174     0B94  3189  210B  318B   	fcall	_MCP9844_GetTemperatureValue
 16175     0B97                     l8136:
 16176                           
 16177                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 324:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 16178     0B97  3039               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 16179     0B98  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 16180     0B99  0140               	movlb	0	; select bank0
 16181     0B9A  083F               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 16182     0B9B  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 16183     0B9C  083E               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 16184     0B9D  00F9               	movwf	LIGHTBLUE_SplitWord@value
 16185     0B9E  3189  219F  318B   	fcall	_LIGHTBLUE_SplitWord
 16186     0BA1                     l8138:
 16187                           
 16188                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 326:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 16189     0BA1  3039               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 16190     0BA2  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16191     0BA3  3054               	movlw	84
 16192     0BA4  3182  22F7  318B   	fcall	_LIGHTBLUE_SendPacket
 16193     0BA7                     l1510:
 16194     0BA7  0008               	return
 16195     0BA8                     __end_of_LIGHTBLUE_TemperatureSensor:
 16196                           
 16197                           	psect	text50
 16198     090B                     __ptext50:	
 16199 ;; *************** function _MCP9844_GetTemperatureValue *****************
 16200 ;; Defined at:
 16201 ;;		line 70 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  temperature     1   24[BANK0 ] PTR short 
 16204 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;		None
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  1    wreg      void 
 16209 ;; Registers used:
 16210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16216 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16220 ;;Total ram usage:        1 bytes
 16221 ;; Hardware stack levels used: 1
 16222 ;; Hardware stack levels required when called: 14
 16223 ;; This function calls:
 16224 ;;		_MCP9844_CalcTemperature
 16225 ;; This function is called by:
 16226 ;;		_LIGHTBLUE_TemperatureSensor
 16227 ;; This function uses a non-reentrant model
 16228 ;;
 16229                           
 16230     090B                     _MCP9844_GetTemperatureValue:	
 16231                           ;psect for function _MCP9844_GetTemperatureValue
 16232                           
 16233     090B                     l8106:	
 16234                           ;incstack = 0
 16235                           ; Regs used in _MCP9844_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16236                           
 16237                           
 16238                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 70: void MCP9844_GetTemperatureV
      +                          alue(int16_t *temperature);mcc_generated_files/application/MCP9844_temp_sensor.c: 71: {;
      +                          mcc_generated_files/application/MCP9844_temp_sensor.c: 72:     *temperature = MCP9844_Ca
      +                          lcTemperature();
 16239     090B  318D  2514  3189   	fcall	_MCP9844_CalcTemperature
 16240     090E  0140               	movlb	0	; select bank0
 16241     090F  0838               	movf	MCP9844_GetTemperatureValue@temperature,w
 16242     0910  0086               	movwf	6
 16243     0911  0187               	clrf	7
 16244     0912  082D               	movf	?_MCP9844_CalcTemperature,w
 16245     0913  3FC0               	movwi [0]fsr1
 16246     0914  082E               	movf	?_MCP9844_CalcTemperature+1,w
 16247     0915  3FC1               	movwi [1]fsr1
 16248     0916                     l1694:
 16249     0916  0008               	return
 16250     0917                     __end_of_MCP9844_GetTemperatureValue:
 16251                           
 16252                           	psect	text51
 16253     0D14                     __ptext51:	
 16254 ;; *************** function _MCP9844_CalcTemperature *****************
 16255 ;; Defined at:
 16256 ;;		line 75 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;		None
 16259 ;; Auto vars:     Size  Location     Type
 16260 ;;  temperatureD    2   22[BANK0 ] short 
 16261 ;;  lowerByte       1   21[BANK0 ] unsigned char 
 16262 ;;  upperByte       1   20[BANK0 ] unsigned char 
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  2   13[BANK0 ] short 
 16265 ;; Registers used:
 16266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16274 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16275 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16276 ;;Total ram usage:       11 bytes
 16277 ;; Hardware stack levels used: 1
 16278 ;; Hardware stack levels required when called: 13
 16279 ;; This function calls:
 16280 ;;		_i2c_read2ByteRegister
 16281 ;; This function is called by:
 16282 ;;		_MCP9844_GetTemperatureValue
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286     0D14                     _MCP9844_CalcTemperature:	
 16287                           ;psect for function _MCP9844_CalcTemperature
 16288                           
 16289     0D14                     l8094:	
 16290                           ;incstack = 0
 16291                           ; Regs used in _MCP9844_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16292                           
 16293                           
 16294                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 77:     int16_t temperatureData;
      +                          ;mcc_generated_files/application/MCP9844_temp_sensor.c: 78:     uint8_t upperByte;;mcc_g
      +                          enerated_files/application/MCP9844_temp_sensor.c: 79:     uint8_t lowerByte;;mcc_generat
      +                          ed_files/application/MCP9844_temp_sensor.c: 81:     temperatureData = i2c_read2ByteRegis
      +                          ter((0x18), (0x05));
 16295     0D14  3005               	movlw	5
 16296     0D15  0140               	movlb	0	; select bank0
 16297     0D16  00A4               	movwf	i2c_read2ByteRegister@reg
 16298     0D17  3018               	movlw	24
 16299     0D18  3186  260A  318D   	fcall	_i2c_read2ByteRegister
 16300     0D1B  0140               	movlb	0	; select bank0
 16301     0D1C  0825               	movf	?_i2c_read2ByteRegister+1,w
 16302     0D1D  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 16303     0D1E  0824               	movf	?_i2c_read2ByteRegister,w
 16304     0D1F  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 16305     0D20                     l8096:
 16306                           
 16307                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 82:     upperByte = ((temperatur
      +                          eData & (0xFF00)) >> 8) & (0x1F);
 16308     0D20  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 16309     0D21  391F               	andlw	31
 16310     0D22  00B4               	movwf	MCP9844_CalcTemperature@upperByte
 16311     0D23                     l8098:
 16312                           
 16313                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 83:     lowerByte = (uint8_t)tem
      +                          peratureData;
 16314     0D23  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 16315     0D24  00B5               	movwf	MCP9844_CalcTemperature@lowerByte
 16316     0D25                     l8100:
 16317                           
 16318                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 85:     temperatureData = ((int1
      +                          6_t)(upperByte << 8) | lowerByte);
 16319     0D25  0835               	movf	MCP9844_CalcTemperature@lowerByte,w
 16320     0D26  00AF               	movwf	??_MCP9844_CalcTemperature
 16321     0D27  01B0               	clrf	??_MCP9844_CalcTemperature+1
 16322     0D28  0834               	movf	MCP9844_CalcTemperature@upperByte,w
 16323     0D29  00B1               	movwf	??_MCP9844_CalcTemperature+2
 16324     0D2A  01B2               	clrf	??_MCP9844_CalcTemperature+3
 16325     0D2B  0831               	movf	??_MCP9844_CalcTemperature+2,w
 16326     0D2C  00B2               	movwf	??_MCP9844_CalcTemperature+3
 16327     0D2D  01B1               	clrf	??_MCP9844_CalcTemperature+2
 16328     0D2E  082F               	movf	??_MCP9844_CalcTemperature,w
 16329     0D2F  0431               	iorwf	??_MCP9844_CalcTemperature+2,w
 16330     0D30  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 16331     0D31  0830               	movf	??_MCP9844_CalcTemperature+1,w
 16332     0D32  0432               	iorwf	??_MCP9844_CalcTemperature+3,w
 16333     0D33  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 16334     0D34                     l8102:
 16335                           
 16336                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 87:     return temperatureData;
 16337     0D34  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 16338     0D35  00AE               	movwf	?_MCP9844_CalcTemperature+1
 16339     0D36  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 16340     0D37  00AD               	movwf	?_MCP9844_CalcTemperature
 16341     0D38                     l1697:
 16342     0D38  0008               	return
 16343     0D39                     __end_of_MCP9844_CalcTemperature:
 16344                           
 16345                           	psect	text52
 16346     060A                     __ptext52:	
 16347 ;; *************** function _i2c_read2ByteRegister *****************
 16348 ;; Defined at:
 16349 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  address         1    wreg     unsigned char 
 16352 ;;  reg             1    4[BANK0 ] unsigned char 
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;  address         1   10[BANK0 ] unsigned char 
 16355 ;;  result          2   11[BANK0 ] unsigned short 
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  2    4[BANK0 ] unsigned short 
 16358 ;; Registers used:
 16359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16366 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16368 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16369 ;;Total ram usage:        9 bytes
 16370 ;; Hardware stack levels used: 1
 16371 ;; Hardware stack levels required when called: 12
 16372 ;; This function calls:
 16373 ;;		_I2C1_Close
 16374 ;;		_I2C1_MasterWrite
 16375 ;;		_I2C1_Open
 16376 ;;		_I2C1_SetAddressNackCallback
 16377 ;;		_I2C1_SetBuffer
 16378 ;;		_I2C1_SetDataCompleteCallback
 16379 ;; This function is called by:
 16380 ;;		_MCP9844_CalcTemperature
 16381 ;;		_MCP9844_GetManufacture
 16382 ;;		_MCP9844_GetDevice
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           
 16386     060A                     _i2c_read2ByteRegister:	
 16387                           ;psect for function _i2c_read2ByteRegister
 16388                           
 16389                           
 16390                           ;incstack = 0
 16391                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16392                           ;i2c_read2ByteRegister@address stored from wreg
 16393     060A  0140               	movlb	0	; select bank0
 16394     060B  00AA               	movwf	i2c_read2ByteRegister@address
 16395     060C                     l8052:
 16396     060C                     l8054:	
 16397                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 16398                           
 16399     060C  0140               	movlb	0	; select bank0
 16400     060D  082A               	movf	i2c_read2ByteRegister@address,w
 16401     060E  318F  27C5  3186   	fcall	_I2C1_Open
 16402     0611  3A00               	xorlw	0
 16403     0612  1903               	skipnz
 16404     0613  2E15               	goto	u4201
 16405     0614  2E16               	goto	u4200
 16406     0615                     u4201:
 16407     0615  2E0C               	goto	l8054
 16408     0616                     u4200:
 16409     0616                     l8056:
 16410                           
 16411                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 16412     0616  3036               	movlw	low _rd2RegCompleteHandler@i2c_simple_master$F3590
 16413     0617  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 16414     0618  300B               	movlw	high _rd2RegCompleteHandler@i2c_simple_master$F3590
 16415     0619  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16416     061A  302B               	movlw	low i2c_read2ByteRegister@result
 16417     061B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 16418     061C  3000               	movlw	high i2c_read2ByteRegister@result
 16419     061D  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 16420     061E  3189  212F  3186   	fcall	_I2C1_SetDataCompleteCallback
 16421     0621                     l8058:
 16422                           
 16423                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 16424     0621  3024               	movlw	low i2c_read2ByteRegister@reg
 16425     0622  00F0               	movwf	I2C1_SetBuffer@buffer
 16426     0623  3000               	movlw	high i2c_read2ByteRegister@reg
 16427     0624  00F1               	movwf	I2C1_SetBuffer@buffer+1
 16428     0625  3001               	movlw	1
 16429     0626  00F2               	movwf	I2C1_SetBuffer@bufferSize
 16430     0627  3000               	movlw	0
 16431     0628  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 16432     0629  3189  2190  3186   	fcall	_I2C1_SetBuffer
 16433     062C                     l8060:
 16434                           
 16435                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 16436     062C  3000               	movlw	0
 16437     062D  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 16438     062E  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 16439     062F  3000               	movlw	0
 16440     0630  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 16441     0631  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 16442     0632  3189  2156  3186   	fcall	_I2C1_SetAddressNackCallback
 16443     0635                     l8062:
 16444                           
 16445                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 16446     0635  3188  200D  3186   	fcall	_I2C1_MasterWrite
 16447     0638                     l8064:	
 16448                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 16449                           
 16450     0638  318B  2378  3186   	fcall	_I2C1_Close
 16451     063B  3A01               	xorlw	1
 16452     063C  1903               	skipnz
 16453     063D  2E3F               	goto	u4211
 16454     063E  2E40               	goto	u4210
 16455     063F                     u4211:
 16456     063F  2E38               	goto	l8064
 16457     0640                     u4210:
 16458     0640                     l8066:
 16459                           
 16460                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 16461     0640  0140               	movlb	0	; select bank0
 16462     0641  082C               	movf	i2c_read2ByteRegister@result+1,w
 16463     0642  00A7               	movwf	??_i2c_read2ByteRegister+1
 16464     0643  082B               	movf	i2c_read2ByteRegister@result,w
 16465     0644  00A6               	movwf	??_i2c_read2ByteRegister
 16466     0645  0827               	movf	??_i2c_read2ByteRegister+1,w
 16467     0646  00A6               	movwf	??_i2c_read2ByteRegister
 16468     0647  01A7               	clrf	??_i2c_read2ByteRegister+1
 16469     0648  082B               	movf	i2c_read2ByteRegister@result,w
 16470     0649  00A9               	movwf	??_i2c_read2ByteRegister+3
 16471     064A  01A8               	clrf	??_i2c_read2ByteRegister+2
 16472     064B  0826               	movf	??_i2c_read2ByteRegister,w
 16473     064C  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 16474     064D  00A4               	movwf	?_i2c_read2ByteRegister
 16475     064E  0827               	movf	??_i2c_read2ByteRegister+1,w
 16476     064F  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 16477     0650  00A5               	movwf	?_i2c_read2ByteRegister+1
 16478     0651                     l1971:
 16479     0651  0008               	return
 16480     0652                     __end_of_i2c_read2ByteRegister:
 16481                           
 16482                           	psect	text53
 16483     0253                     __ptext53:	
 16484 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 16485 ;; Defined at:
 16486 ;;		line 404 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16487 ;; Parameters:    Size  Location     Type
 16488 ;;  serialData      1    6[COMMON] PTR unsigned char 
 16489 ;;		 -> lightBlueSerial@main$F2767(80), 
 16490 ;; Auto vars:     Size  Location     Type
 16491 ;;  length          1    8[COMMON] unsigned char 
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      void 
 16494 ;; Registers used:
 16495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16505 ;;Total ram usage:        3 bytes
 16506 ;; Hardware stack levels used: 1
 16507 ;; Hardware stack levels required when called: 6
 16508 ;; This function calls:
 16509 ;;		_RN487X_Write
 16510 ;;		_strlen
 16511 ;; This function is called by:
 16512 ;;		_main
 16513 ;; This function uses a non-reentrant model
 16514 ;;
 16515                           
 16516     0253                     _LIGHTBLUE_SendSerialData:	
 16517                           ;psect for function _LIGHTBLUE_SendSerialData
 16518                           
 16519     0253                     l6624:	
 16520                           ;incstack = 0
 16521                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16522                           
 16523                           
 16524                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 404: void LIGHTBLUE_SendSerialData
      +                          (char* serialData);mcc_generated_files/application/LIGHTBLUE_service.c: 405: {;mcc_gener
      +                          ated_files/application/LIGHTBLUE_service.c: 406:     uint8_t length = strlen(serialData)
      +                           * 2;
 16525     0253  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16526     0254  00F0               	movwf	strlen@s
 16527     0255  3002               	movlw	2
 16528     0256  00F1               	movwf	strlen@s+1
 16529     0257  318B  23C0  3182   	fcall	_strlen
 16530     025A  3570               	lslf	?_strlen,w
 16531     025B  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 16532     025C                     l6626:
 16533                           
 16534                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 408:     RN487X.Write(('['));
 16535     025C  305B               	movlw	91
 16536     025D  00F5               	movwf	RN487X_Write@txData
 16537     025E  3068               	movlw	low (_RN487X| (0+32768))
 16538     025F  0084               	movwf	4
 16539     0260  3090               	movlw	high (_RN487X| (0+32768))
 16540     0261  0085               	movwf	5
 16541     0262  3F01               	moviw [1]fsr0
 16542     0263  008A               	movwf	10
 16543     0264  3F00               	moviw [0]fsr0
 16544     0265  000A               	callw
 16545     0266  3182               	pagesel	$
 16546     0267                     l6628:
 16547                           
 16548                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 16549     0267  0140               	movlb	0	; select bank0
 16550     0268  0852               	movf	_sequenceNumber,w
 16551     0269  390F               	andlw	15
 16552     026A  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16553     026B  0086               	movwf	6
 16554     026C  3001               	movlw	1	; select bank3/4
 16555     026D  0087               	movwf	7
 16556     026E  0801               	movf	1,w
 16557     026F  00F5               	movwf	RN487X_Write@txData
 16558     0270  3068               	movlw	low (_RN487X| (0+32768))
 16559     0271  0084               	movwf	4
 16560     0272  3090               	movlw	high (_RN487X| (0+32768))
 16561     0273  0085               	movwf	5
 16562     0274  3F01               	moviw [1]fsr0
 16563     0275  008A               	movwf	10
 16564     0276  3F00               	moviw [0]fsr0
 16565     0277  000A               	callw
 16566     0278  3182               	pagesel	$
 16567     0279                     l6630:
 16568     0279  3001               	movlw	1
 16569     027A  0140               	movlb	0	; select bank0
 16570     027B  07D2               	addwf	_sequenceNumber,f
 16571     027C                     l6632:
 16572                           
 16573                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 16574     027C  3053               	movlw	83
 16575     027D  00F5               	movwf	RN487X_Write@txData
 16576     027E  3068               	movlw	low (_RN487X| (0+32768))
 16577     027F  0084               	movwf	4
 16578     0280  3090               	movlw	high (_RN487X| (0+32768))
 16579     0281  0085               	movwf	5
 16580     0282  3F01               	moviw [1]fsr0
 16581     0283  008A               	movwf	10
 16582     0284  3F00               	moviw [0]fsr0
 16583     0285  000A               	callw
 16584     0286  3182               	pagesel	$
 16585     0287                     l6634:
 16586                           
 16587                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 16588     0287  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16589     0288  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16590     0289  3004               	movlw	4
 16591     028A                     u3105:
 16592     028A  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16593     028B  0B89               	decfsz	9,f
 16594     028C  2A8A               	goto	u3105
 16595     028D  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16596     028E  390F               	andlw	15
 16597     028F  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16598     0290  0086               	movwf	6
 16599     0291  3001               	movlw	1	; select bank3/4
 16600     0292  0087               	movwf	7
 16601     0293  0801               	movf	1,w
 16602     0294  00F5               	movwf	RN487X_Write@txData
 16603     0295  3068               	movlw	low (_RN487X| (0+32768))
 16604     0296  0084               	movwf	4
 16605     0297  3090               	movlw	high (_RN487X| (0+32768))
 16606     0298  0085               	movwf	5
 16607     0299  3F01               	moviw [1]fsr0
 16608     029A  008A               	movwf	10
 16609     029B  3F00               	moviw [0]fsr0
 16610     029C  000A               	callw
 16611     029D  3182               	pagesel	$
 16612     029E                     l6636:
 16613                           
 16614                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 16615     029E  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16616     029F  390F               	andlw	15
 16617     02A0  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16618     02A1  0086               	movwf	6
 16619     02A2  3001               	movlw	1	; select bank3/4
 16620     02A3  0087               	movwf	7
 16621     02A4  0801               	movf	1,w
 16622     02A5  00F5               	movwf	RN487X_Write@txData
 16623     02A6  3068               	movlw	low (_RN487X| (0+32768))
 16624     02A7  0084               	movwf	4
 16625     02A8  3090               	movlw	high (_RN487X| (0+32768))
 16626     02A9  0085               	movwf	5
 16627     02AA  3F01               	moviw [1]fsr0
 16628     02AB  008A               	movwf	10
 16629     02AC  3F00               	moviw [0]fsr0
 16630     02AD  000A               	callw
 16631     02AE  3182               	pagesel	$
 16632                           
 16633                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:     while(*serialData)
 16634     02AF  2AE2               	goto	l6642
 16635     02B0                     l6638:
 16636                           
 16637                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 415:         RN487X.Write((_hex[(*serialData >> 4) & 0xF])
      +                          );
 16638     02B0  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16639     02B1  0086               	movwf	6
 16640     02B2  3002               	movlw	2	; select bank4/5
 16641     02B3  0087               	movwf	7
 16642     02B4  0801               	movf	1,w
 16643     02B5  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16644     02B6  3004               	movlw	4
 16645     02B7                     u3115:
 16646     02B7  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16647     02B8  0B89               	decfsz	9,f
 16648     02B9  2AB7               	goto	u3115
 16649     02BA  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16650     02BB  390F               	andlw	15
 16651     02BC  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16652     02BD  0086               	movwf	6
 16653     02BE  3001               	movlw	1	; select bank3/4
 16654     02BF  0087               	movwf	7
 16655     02C0  0801               	movf	1,w
 16656     02C1  00F5               	movwf	RN487X_Write@txData
 16657     02C2  3068               	movlw	low (_RN487X| (0+32768))
 16658     02C3  0084               	movwf	4
 16659     02C4  3090               	movlw	high (_RN487X| (0+32768))
 16660     02C5  0085               	movwf	5
 16661     02C6  3F01               	moviw [1]fsr0
 16662     02C7  008A               	movwf	10
 16663     02C8  3F00               	moviw [0]fsr0
 16664     02C9  000A               	callw
 16665     02CA  3182               	pagesel	$
 16666                           
 16667                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 16668     02CB  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16669     02CC  0086               	movwf	6
 16670     02CD  3002               	movlw	2	; select bank4/5
 16671     02CE  0087               	movwf	7
 16672     02CF  0801               	movf	1,w
 16673     02D0  390F               	andlw	15
 16674     02D1  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16675     02D2  0086               	movwf	6
 16676     02D3  3001               	movlw	1	; select bank3/4
 16677     02D4  0087               	movwf	7
 16678     02D5  0801               	movf	1,w
 16679     02D6  00F5               	movwf	RN487X_Write@txData
 16680     02D7  3068               	movlw	low (_RN487X| (0+32768))
 16681     02D8  0084               	movwf	4
 16682     02D9  3090               	movlw	high (_RN487X| (0+32768))
 16683     02DA  0085               	movwf	5
 16684     02DB  3F01               	moviw [1]fsr0
 16685     02DC  008A               	movwf	10
 16686     02DD  3F00               	moviw [0]fsr0
 16687     02DE  000A               	callw
 16688     02DF  3182               	pagesel	$
 16689     02E0                     l6640:
 16690     02E0  3001               	movlw	1
 16691     02E1  07F6               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 16692     02E2                     l6642:
 16693                           
 16694                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:     while(*serialData)
 16695     02E2  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16696     02E3  0086               	movwf	6
 16697     02E4  3002               	movlw	2	; select bank4/5
 16698     02E5  0087               	movwf	7
 16699     02E6  0801               	movf	1,w
 16700     02E7  1D03               	btfss	3,2
 16701     02E8  2AEA               	goto	u3121
 16702     02E9  2AEB               	goto	u3120
 16703     02EA                     u3121:
 16704     02EA  2AB0               	goto	l6638
 16705     02EB                     u3120:
 16706     02EB                     l6644:
 16707                           
 16708                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:     RN487X.Write((']'));
 16709     02EB  305D               	movlw	93
 16710     02EC  00F5               	movwf	RN487X_Write@txData
 16711     02ED  3068               	movlw	low (_RN487X| (0+32768))
 16712     02EE  0084               	movwf	4
 16713     02EF  3090               	movlw	high (_RN487X| (0+32768))
 16714     02F0  0085               	movwf	5
 16715     02F1  3F01               	moviw [1]fsr0
 16716     02F2  008A               	movwf	10
 16717     02F3  3F00               	moviw [0]fsr0
 16718     02F4  000A               	callw
 16719     02F5  3182               	pagesel	$
 16720     02F6                     l1534:
 16721     02F6  0008               	return
 16722     02F7                     __end_of_LIGHTBLUE_SendSerialData:
 16723                           
 16724                           	psect	text54
 16725     0E83                     __ptext54:	
 16726 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 16727 ;; Defined at:
 16728 ;;		line 387 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;		None
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;  payload        19    0[BANK0 ] unsigned char [19]
 16733 ;;  dataIndex       1   20[BANK0 ] unsigned char 
 16734 ;;  value           1   19[BANK0 ] unsigned char 
 16735 ;; Return value:  Size  Location     Type
 16736 ;;                  1    wreg      void 
 16737 ;; Registers used:
 16738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16745 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16747 ;;      Totals:         1      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16748 ;;Total ram usage:       22 bytes
 16749 ;; Hardware stack levels used: 1
 16750 ;; Hardware stack levels required when called: 7
 16751 ;; This function calls:
 16752 ;;		_LIGHTBLUE_SendPacket
 16753 ;;		_LIGHTBLUE_SplitByte
 16754 ;;		_strlen
 16755 ;; This function is called by:
 16756 ;;		_main
 16757 ;; This function uses a non-reentrant model
 16758 ;;
 16759                           
 16760     0E83                     _LIGHTBLUE_SendProtocolVersion:	
 16761                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 16762                           
 16763     0E83                     l6546:	
 16764                           ;incstack = 0
 16765                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16766                           
 16767                           
 16768                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 390:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 391:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 393:     *payload = '\0';
 16769     0E83  0140               	movlb	0	; select bank0
 16770     0E84  01A0               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 16771                           
 16772                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:     for(dataIndex = 0; dataIn
      +                          dex < strlen(protocol_version_number); dataIndex++)
 16773     0E85  01B4               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 16774     0E86  2E9A               	goto	l6554
 16775     0E87                     l6548:
 16776                           
 16777                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 397:         value = protocol_version_number[dataIndex];
 16778     0E87  0834               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16779     0E88  3E91               	addlw	low (STR_1| (0+32768))
 16780     0E89  0084               	movwf	4
 16781     0E8A  3090               	movlw	high (STR_1| (0+32768))
 16782     0E8B  1803               	skipnc
 16783     0E8C  3E01               	addlw	1
 16784     0E8D  0085               	movwf	5
 16785     0E8E  0800               	movf	0,w	;code access
 16786     0E8F  00B3               	movwf	LIGHTBLUE_SendProtocolVersion@value
 16787     0E90                     l6550:
 16788                           
 16789                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 398:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 16790     0E90  3020               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16791     0E91  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 16792     0E92  0833               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 16793     0E93  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16794     0E94  318E  2628  318E   	fcall	_LIGHTBLUE_SplitByte
 16795     0E97                     l6552:
 16796                           
 16797                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 399:     }
 16798     0E97  3001               	movlw	1
 16799     0E98  0140               	movlb	0	; select bank0
 16800     0E99  07B4               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 16801     0E9A                     l6554:
 16802     0E9A  3091               	movlw	low (STR_1| (0+32768))
 16803     0E9B  00F0               	movwf	strlen@s
 16804     0E9C  3090               	movlw	high (STR_1| (0+32768))
 16805     0E9D  00F1               	movwf	strlen@s+1
 16806     0E9E  318B  23C0  318E   	fcall	_strlen
 16807     0EA1  0140               	movlb	0	; select bank0
 16808     0EA2  0834               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16809     0EA3  00FA               	movwf	??_LIGHTBLUE_SendProtocolVersion
 16810     0EA4  0871               	movf	?_strlen+1,w
 16811     0EA5  1D03               	skipz
 16812     0EA6  2EA9               	goto	u3015
 16813     0EA7  0870               	movf	?_strlen,w
 16814     0EA8  027A               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 16815     0EA9                     u3015:
 16816     0EA9  1C03               	skipc
 16817     0EAA  2EAC               	goto	u3011
 16818     0EAB  2EAD               	goto	u3010
 16819     0EAC                     u3011:
 16820     0EAC  2E87               	goto	l6548
 16821     0EAD                     u3010:
 16822     0EAD                     l6556:
 16823                           
 16824                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 16825     0EAD  3020               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16826     0EAE  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16827     0EAF  3056               	movlw	86
 16828     0EB0  3182  22F7  318E   	fcall	_LIGHTBLUE_SendPacket
 16829     0EB3                     l1528:
 16830     0EB3  0008               	return
 16831     0EB4                     __end_of_LIGHTBLUE_SendProtocolVersion:
 16832                           
 16833                           	psect	text55
 16834     0A24                     __ptext55:	
 16835 ;; *************** function _LIGHTBLUE_PushButton *****************
 16836 ;; Defined at:
 16837 ;;		line 345 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16838 ;; Parameters:    Size  Location     Type
 16839 ;;		None
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;  payload         3   10[COMMON] unsigned char [3]
 16842 ;;  button          1   13[COMMON] unsigned char 
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16856 ;;Total ram usage:        4 bytes
 16857 ;; Hardware stack levels used: 1
 16858 ;; Hardware stack levels required when called: 7
 16859 ;; This function calls:
 16860 ;;		_LIGHTBLUE_GetButtonValue
 16861 ;;		_LIGHTBLUE_SendPacket
 16862 ;;		_LIGHTBLUE_SplitByte
 16863 ;; This function is called by:
 16864 ;;		_main
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868     0A24                     _LIGHTBLUE_PushButton:	
 16869                           ;psect for function _LIGHTBLUE_PushButton
 16870                           
 16871     0A24                     l6524:	
 16872                           ;incstack = 0
 16873                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16874                           
 16875                           
 16876                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 348:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 16877     0A24  3188  202F  318A   	fcall	_LIGHTBLUE_GetButtonValue
 16878     0A27  00FD               	movwf	LIGHTBLUE_PushButton@button
 16879     0A28                     l6526:
 16880                           
 16881                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 350:     *payload = '\0';
 16882     0A28  01FA               	clrf	LIGHTBLUE_PushButton@payload
 16883     0A29                     l6528:
 16884                           
 16885                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 351:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 16886     0A29  307A               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16887     0A2A  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 16888     0A2B  087D               	movf	LIGHTBLUE_PushButton@button,w
 16889     0A2C  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16890     0A2D  318E  2628  318A   	fcall	_LIGHTBLUE_SplitByte
 16891     0A30                     l6530:
 16892                           
 16893                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 16894     0A30  307A               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16895     0A31  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16896     0A32  3050               	movlw	80
 16897     0A33  3182  22F7  318A   	fcall	_LIGHTBLUE_SendPacket
 16898     0A36                     l1516:
 16899     0A36  0008               	return
 16900     0A37                     __end_of_LIGHTBLUE_PushButton:
 16901                           
 16902                           	psect	text56
 16903     082F                     __ptext56:	
 16904 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 16905 ;; Defined at:
 16906 ;;		line 509 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16907 ;; Parameters:    Size  Location     Type
 16908 ;;		None
 16909 ;; Auto vars:     Size  Location     Type
 16910 ;;		None
 16911 ;; Return value:  Size  Location     Type
 16912 ;;                  1    wreg      unsigned char 
 16913 ;; Registers used:
 16914 ;;		wreg, status,2, status,0
 16915 ;; Tracked objects:
 16916 ;;		On entry : 0/0
 16917 ;;		On exit  : 0/0
 16918 ;;		Unchanged: 0/0
 16919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16924 ;;Total ram usage:        0 bytes
 16925 ;; Hardware stack levels used: 1
 16926 ;; Hardware stack levels required when called: 4
 16927 ;; This function calls:
 16928 ;;		Nothing
 16929 ;; This function is called by:
 16930 ;;		_LIGHTBLUE_PushButton
 16931 ;; This function uses a non-reentrant model
 16932 ;;
 16933                           
 16934     082F                     _LIGHTBLUE_GetButtonValue:	
 16935                           ;psect for function _LIGHTBLUE_GetButtonValue
 16936                           
 16937     082F                     l6278:	
 16938                           ;incstack = 0
 16939                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 16940                           
 16941                           
 16942                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:     return (0x01) - PORTAbits
      +                          .RA7;
 16943     082F  0140               	movlb	0	; select bank0
 16944     0830  0D0C               	rlf	12,w	;volatile
 16945     0831  0D0C               	rlf	12,w	;volatile
 16946     0832  3901               	andlw	1
 16947     0833  3C01               	sublw	1
 16948     0834                     l1591:
 16949     0834  0008               	return
 16950     0835                     __end_of_LIGHTBLUE_GetButtonValue:
 16951                           
 16952                           	psect	text57
 16953     00C3                     __ptext57:	
 16954 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 16955 ;; Defined at:
 16956 ;;		line 421 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16957 ;; Parameters:    Size  Location     Type
 16958 ;;  receivedByte    1    wreg     unsigned char 
 16959 ;; Auto vars:     Size  Location     Type
 16960 ;;  receivedByte    1    6[BANK0 ] unsigned char 
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  1    wreg      void 
 16963 ;; Registers used:
 16964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16971 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16973 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16974 ;;Total ram usage:        9 bytes
 16975 ;; Hardware stack levels used: 1
 16976 ;; Hardware stack levels required when called: 7
 16977 ;; This function calls:
 16978 ;;		_LIGHTBLUE_PerformAction
 16979 ;; This function is called by:
 16980 ;;		_main
 16981 ;; This function uses a non-reentrant model
 16982 ;;
 16983                           
 16984     00C3                     _LIGHTBLUE_ParseIncomingPacket:	
 16985                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 16986                           
 16987                           
 16988                           ;incstack = 0
 16989                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16990                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 16991     00C3  0140               	movlb	0	; select bank0
 16992     00C4  00A6               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 16993     00C5                     l6558:
 16994                           
 16995                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421: void LIGHTBLUE_ParseIncomingP
      +                          acket(char receivedByte);mcc_generated_files/application/LIGHTBLUE_service.c: 422: {;mcc
      +                          _generated_files/application/LIGHTBLUE_service.c: 423:     static PACKET_PARSER_STATE_t 
      +                          parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 424:     static
      +                           uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 425:     stati
      +                          c uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 426:     stati
      +                          c char packetID = '\0';
 16996     00C5  296E               	goto	l6616
 16997     00C6                     l1546:	
 16998                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 430:         case SEQUENCE_NUMBER:
 16999                           
 17000                           
 17001                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 432:             parserState = PAC
      +                          KET_ID;
 17002     00C6  3002               	movlw	2
 17003     00C7  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17004                           
 17005                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             break;
 17006     00C8  298D               	goto	l1576
 17007     00C9                     l6560:
 17008                           
 17009                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             packetID = receiv
      +                          edByte;
 17010     00C9  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17011     00CA  00CF               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 17012     00CB                     l6562:
 17013                           
 17014                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             parserState = PAY
      +                          LOAD_SIZE_0;
 17015     00CB  3003               	movlw	3
 17016     00CC  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17017                           
 17018                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 437:             break;
 17019     00CD  298D               	goto	l1576
 17020     00CE                     l6564:
 17021                           
 17022                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 439:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 17023     00CE  303A               	movlw	58
 17024     00CF  0226               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17025     00D0  1C03               	skipc
 17026     00D1  28D3               	goto	u3021
 17027     00D2  28D4               	goto	u3020
 17028     00D3                     u3021:
 17029     00D3  28DD               	goto	l6568
 17030     00D4                     u3020:
 17031     00D4                     l6566:
 17032     00D4  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17033     00D5  395F               	andlw	95
 17034     00D6  3EC9               	addlw	201
 17035     00D7  00A0               	movwf	_LIGHTBLUE_ParseIncomingPacket$3099
 17036     00D8  30FF               	movlw	255
 17037     00D9  1803               	skipnc
 17038     00DA  3000               	movlw	0
 17039     00DB  00A1               	movwf	_LIGHTBLUE_ParseIncomingPacket$3099+1
 17040     00DC  28E4               	goto	l1553
 17041     00DD                     l6568:
 17042     00DD  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17043     00DE  3ED0               	addlw	208
 17044     00DF  00A0               	movwf	_LIGHTBLUE_ParseIncomingPacket$3099
 17045     00E0  30FF               	movlw	255
 17046     00E1  1803               	skipnc
 17047     00E2  3000               	movlw	0
 17048     00E3  00A1               	movwf	_LIGHTBLUE_ParseIncomingPacket$3099+1
 17049     00E4                     l1553:
 17050     00E4  0820               	movf	_LIGHTBLUE_ParseIncomingPacket$3099,w
 17051     00E5  00D0               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 17052     00E6                     l6570:
 17053                           
 17054                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 440:             parserState = PAY
      +                          LOAD_SIZE_1;
 17055     00E6  3004               	movlw	4
 17056     00E7  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17057                           
 17058                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 441:             break;
 17059     00E8  298D               	goto	l1576
 17060     00E9                     l6572:
 17061                           
 17062                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 443:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 17063     00E9  303A               	movlw	58
 17064     00EA  0226               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17065     00EB  1C03               	skipc
 17066     00EC  28EE               	goto	u3031
 17067     00ED  28EF               	goto	u3030
 17068     00EE                     u3031:
 17069     00EE  28F8               	goto	l6576
 17070     00EF                     u3030:
 17071     00EF                     l6574:
 17072     00EF  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17073     00F0  395F               	andlw	95
 17074     00F1  3EC9               	addlw	201
 17075     00F2  00A2               	movwf	_LIGHTBLUE_ParseIncomingPacket$3100
 17076     00F3  30FF               	movlw	255
 17077     00F4  1803               	skipnc
 17078     00F5  3000               	movlw	0
 17079     00F6  00A3               	movwf	_LIGHTBLUE_ParseIncomingPacket$3100+1
 17080     00F7  28FF               	goto	l6578
 17081     00F8                     l6576:
 17082     00F8  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17083     00F9  3ED0               	addlw	208
 17084     00FA  00A2               	movwf	_LIGHTBLUE_ParseIncomingPacket$3100
 17085     00FB  30FF               	movlw	255
 17086     00FC  1803               	skipnc
 17087     00FD  3000               	movlw	0
 17088     00FE  00A3               	movwf	_LIGHTBLUE_ParseIncomingPacket$3100+1
 17089     00FF                     l6578:
 17090     00FF  0850               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 17091     0100  00F6               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 17092     0101  3004               	movlw	4
 17093     0102                     u3045:
 17094     0102  35F6               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 17095     0103  0B89               	decfsz	9,f
 17096     0104  2902               	goto	u3045
 17097     0105  0876               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 17098     0106  0722               	addwf	_LIGHTBLUE_ParseIncomingPacket$3100,w
 17099     0107  00D0               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 17100     0108                     l6580:
 17101                           
 17102                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             parserState = PAY
      +                          LOAD_0;
 17103     0108  3005               	movlw	5
 17104     0109  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17105                           
 17106                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:             break;
 17107     010A  298D               	goto	l1576
 17108     010B                     l6582:
 17109                           
 17110                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 447:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 17111     010B  303A               	movlw	58
 17112     010C  0226               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17113     010D  1C03               	skipc
 17114     010E  2910               	goto	u3051
 17115     010F  2911               	goto	u3050
 17116     0110                     u3051:
 17117     0110  291A               	goto	l6586
 17118     0111                     u3050:
 17119     0111                     l6584:
 17120     0111  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17121     0112  395F               	andlw	95
 17122     0113  3EC9               	addlw	201
 17123     0114  00CA               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 17124     0115  30FF               	movlw	255
 17125     0116  1803               	skipnc
 17126     0117  3000               	movlw	0
 17127     0118  00CB               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 17128     0119  2921               	goto	l6588
 17129     011A                     l6586:
 17130     011A  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17131     011B  3ED0               	addlw	208
 17132     011C  00CA               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 17133     011D  30FF               	movlw	255
 17134     011E  1803               	skipnc
 17135     011F  3000               	movlw	0
 17136     0120  00CB               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 17137     0121                     l6588:
 17138                           
 17139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 448:             length--;
 17140     0121  3001               	movlw	1
 17141     0122  02D0               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 17142     0123                     l6590:
 17143                           
 17144                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 449:             if (length == 0)
 17145     0123  0850               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 17146     0124  1D03               	btfss	3,2
 17147     0125  2927               	goto	u3061
 17148     0126  2928               	goto	u3060
 17149     0127                     u3061:
 17150     0127  292A               	goto	l1564
 17151     0128                     u3060:
 17152     0128                     l6592:
 17153                           
 17154                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 450:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 451:                 parserState = IDLE;
 17155     0128  01D1               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 17156                           
 17157                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:             }
 17158     0129  298D               	goto	l1576
 17159     012A                     l1564:	
 17160                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:             else
 17161                           
 17162                           
 17163                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 455:                 parserState = PAYLOAD_1;
 17164     012A  3006               	movlw	6
 17165     012B  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17166     012C  298D               	goto	l1576
 17167     012D                     l6594:
 17168                           
 17169                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 17170     012D  303A               	movlw	58
 17171     012E  0226               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17172     012F  1C03               	skipc
 17173     0130  2932               	goto	u3071
 17174     0131  2933               	goto	u3070
 17175     0132                     u3071:
 17176     0132  293C               	goto	l6598
 17177     0133                     u3070:
 17178     0133                     l6596:
 17179     0133  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17180     0134  395F               	andlw	95
 17181     0135  3EC9               	addlw	201
 17182     0136  00A4               	movwf	_LIGHTBLUE_ParseIncomingPacket$3101
 17183     0137  30FF               	movlw	255
 17184     0138  1803               	skipnc
 17185     0139  3000               	movlw	0
 17186     013A  00A5               	movwf	_LIGHTBLUE_ParseIncomingPacket$3101+1
 17187     013B  2943               	goto	l6600
 17188     013C                     l6598:
 17189     013C  0826               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17190     013D  3ED0               	addlw	208
 17191     013E  00A4               	movwf	_LIGHTBLUE_ParseIncomingPacket$3101
 17192     013F  30FF               	movlw	255
 17193     0140  1803               	skipnc
 17194     0141  3000               	movlw	0
 17195     0142  00A5               	movwf	_LIGHTBLUE_ParseIncomingPacket$3101+1
 17196     0143                     l6600:
 17197     0143  084B               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 17198     0144  00F7               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 17199     0145  084A               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 17200     0146  00F6               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 17201     0147  0EF6               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 17202     0148  0EF7               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17203     0149  30F0               	movlw	240
 17204     014A  05F7               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17205     014B  0876               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 17206     014C  390F               	andlw	15
 17207     014D  04F7               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17208     014E  30F0               	movlw	240
 17209     014F  05F6               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 17210     0150  0824               	movf	_LIGHTBLUE_ParseIncomingPacket$3101,w
 17211     0151  0776               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 17212     0152  00CA               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 17213     0153  0825               	movf	_LIGHTBLUE_ParseIncomingPacket$3101+1,w
 17214     0154  3D77               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 17215     0155  00CB               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 17216     0156                     l6602:
 17217                           
 17218                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 17219     0156  084A               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 17220     0157  00F2               	movwf	LIGHTBLUE_PerformAction@data
 17221     0158  084F               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 17222     0159  318F  2752  3180   	fcall	_LIGHTBLUE_PerformAction
 17223     015C                     l6604:
 17224                           
 17225                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 461:             length--;
 17226     015C  3001               	movlw	1
 17227     015D  0140               	movlb	0	; select bank0
 17228     015E  02D0               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 17229     015F                     l6606:
 17230                           
 17231                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 462:             if (length == 0)
 17232     015F  0850               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 17233     0160  1D03               	btfss	3,2
 17234     0161  2963               	goto	u3081
 17235     0162  2964               	goto	u3080
 17236     0163                     u3081:
 17237     0163  2908               	goto	l6580
 17238     0164                     u3080:
 17239     0164  2928               	goto	l6592
 17240     0165                     l6610:
 17241                           
 17242                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 473:             if (receivedByte 
      +                          == ('['))
 17243     0165  305B               	movlw	91
 17244     0166  0626               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17245     0167  1D03               	btfss	3,2
 17246     0168  296A               	goto	u3091
 17247     0169  296B               	goto	u3090
 17248     016A                     u3091:
 17249     016A  298D               	goto	l1576
 17250     016B                     u3090:
 17251     016B                     l6612:
 17252                           
 17253                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 474:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 475:                 parserState = SEQUENCE_NUMBER
      +                          ;
 17254     016B  3001               	movlw	1
 17255     016C  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17256     016D  298D               	goto	l1576
 17257     016E                     l6616:
 17258     016E  0851               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 17259     016F  00F6               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 17260     0170  01F7               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 17261                           
 17262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17263                           ; Switch size 1, requested type "simple"
 17264                           ; Number of cases is 1, Range of values is 0 to 0
 17265                           ; switch strategies available:
 17266                           ; Name         Instructions Cycles
 17267                           ; simple_byte            4     3 (average)
 17268                           ; direct_byte            8     6 (fixed)
 17269                           ; jumptable            260     6 (fixed)
 17270                           ;	Chosen strategy is simple_byte
 17271     0171  0877               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 17272     0172  3A00               	xorlw	0	; case 0
 17273     0173  1903               	skipnz
 17274     0174  2976               	goto	l8556
 17275     0175  2965               	goto	l6610
 17276     0176                     l8556:
 17277                           
 17278                           ; Switch size 1, requested type "simple"
 17279                           ; Number of cases is 7, Range of values is 0 to 6
 17280                           ; switch strategies available:
 17281                           ; Name         Instructions Cycles
 17282                           ; direct_byte           20     6 (fixed)
 17283                           ; simple_byte           22    12 (average)
 17284                           ; jumptable            260     6 (fixed)
 17285                           ;	Chosen strategy is simple_byte
 17286     0176  0876               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 17287     0177  3A00               	xorlw	0	; case 0
 17288     0178  1903               	skipnz
 17289     0179  2965               	goto	l6610
 17290     017A  3A01               	xorlw	1	; case 1
 17291     017B  1903               	skipnz
 17292     017C  28C6               	goto	l1546
 17293     017D  3A03               	xorlw	3	; case 2
 17294     017E  1903               	skipnz
 17295     017F  28C9               	goto	l6560
 17296     0180  3A01               	xorlw	1	; case 3
 17297     0181  1903               	skipnz
 17298     0182  28CE               	goto	l6564
 17299     0183  3A07               	xorlw	7	; case 4
 17300     0184  1903               	skipnz
 17301     0185  28E9               	goto	l6572
 17302     0186  3A01               	xorlw	1	; case 5
 17303     0187  1903               	skipnz
 17304     0188  290B               	goto	l6582
 17305     0189  3A03               	xorlw	3	; case 6
 17306     018A  1903               	skipnz
 17307     018B  292D               	goto	l6594
 17308     018C  2965               	goto	l6610
 17309     018D                     l1576:
 17310     018D  0008               	return
 17311     018E                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 17312                           
 17313                           	psect	text58
 17314     0F52                     __ptext58:	
 17315 ;; *************** function _LIGHTBLUE_PerformAction *****************
 17316 ;; Defined at:
 17317 ;;		line 543 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17318 ;; Parameters:    Size  Location     Type
 17319 ;;  id              1    wreg     unsigned char 
 17320 ;;  data            1    2[COMMON] unsigned char 
 17321 ;; Auto vars:     Size  Location     Type
 17322 ;;  id              1    4[COMMON] unsigned char 
 17323 ;;  led             1    5[COMMON] unsigned char 
 17324 ;; Return value:  Size  Location     Type
 17325 ;;                  1    wreg      void 
 17326 ;; Registers used:
 17327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17328 ;; Tracked objects:
 17329 ;;		On entry : 0/0
 17330 ;;		On exit  : 0/0
 17331 ;;		Unchanged: 0/0
 17332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17337 ;;Total ram usage:        4 bytes
 17338 ;; Hardware stack levels used: 1
 17339 ;; Hardware stack levels required when called: 6
 17340 ;; This function calls:
 17341 ;;		_EUSART1_Write
 17342 ;;		_LIGHTBLUE_SetErrorLedValue
 17343 ;; This function is called by:
 17344 ;;		_LIGHTBLUE_ParseIncomingPacket
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348     0F52                     _LIGHTBLUE_PerformAction:	
 17349                           ;psect for function _LIGHTBLUE_PerformAction
 17350                           
 17351                           
 17352                           ;incstack = 0
 17353                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17354                           ;LIGHTBLUE_PerformAction@id stored from wreg
 17355     0F52  00F4               	movwf	LIGHTBLUE_PerformAction@id
 17356     0F53                     l6290:
 17357                           
 17358                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 543: static void LIGHTBLUE_Perform
      +                          Action(char id, uint8_t data);mcc_generated_files/application/LIGHTBLUE_service.c: 544: 
      +                          {;mcc_generated_files/application/LIGHTBLUE_service.c: 545:     uint8_t led;;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 547:     switch(id)
 17359     0F53  2F82               	goto	l6302
 17360     0F54                     l6292:
 17361                           
 17362                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 550:             led = (data >> 4)
      +                           & (0x01);
 17363     0F54  0872               	movf	LIGHTBLUE_PerformAction@data,w
 17364     0F55  00F3               	movwf	??_LIGHTBLUE_PerformAction
 17365     0F56  3004               	movlw	4
 17366     0F57                     u2755:
 17367     0F57  36F3               	lsrf	??_LIGHTBLUE_PerformAction,f
 17368     0F58  0B89               	decfsz	9,f
 17369     0F59  2F57               	goto	u2755
 17370     0F5A  0873               	movf	??_LIGHTBLUE_PerformAction,w
 17371     0F5B  3901               	andlw	1
 17372     0F5C  00F5               	movwf	LIGHTBLUE_PerformAction@led
 17373                           
 17374                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 551:             if(led == (0x00))
 17375     0F5D  0875               	movf	LIGHTBLUE_PerformAction@led,w
 17376     0F5E  1D03               	btfss	3,2
 17377     0F5F  2F61               	goto	u2761
 17378     0F60  2F62               	goto	u2760
 17379     0F61                     u2761:
 17380     0F61  2F6C               	goto	l6296
 17381     0F62                     u2760:
 17382     0F62                     l6294:
 17383                           
 17384                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 552:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 553:                 if((data & (0x01)) == (0x00))
 17385     0F62  1872               	btfsc	LIGHTBLUE_PerformAction@data,0
 17386     0F63  2F65               	goto	u2771
 17387     0F64  2F66               	goto	u2770
 17388     0F65                     u2771:
 17389     0F65  2F69               	goto	l1616
 17390     0F66                     u2770:
 17391     0F66                     l1613:	
 17392                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 554:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 555:                     do { LATAbits.LATA5 =
      +                           1; } while(0);
 17393                           
 17394     0F66  0140               	movlb	0	; select bank0
 17395     0F67  1698               	bsf	24,5	;volatile
 17396     0F68  2F8A               	goto	l1622
 17397     0F69                     l1616:	
 17398                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 558:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 559:                     do { LATAbits.LATA5 =
      +                           0; } while(0);
 17399                           
 17400     0F69  0140               	movlb	0	; select bank0
 17401     0F6A  1298               	bcf	24,5	;volatile
 17402     0F6B  2F8A               	goto	l1622
 17403     0F6C                     l6296:
 17404                           
 17405                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 563:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 564:                 LIGHTBLUE_SetErrorLedValue(da
      +                          ta & (0x01));
 17406     0F6C  1872               	btfsc	LIGHTBLUE_PerformAction@data,0
 17407     0F6D  2F6F               	goto	u2781
 17408     0F6E  2F71               	goto	u2780
 17409     0F6F                     u2781:
 17410     0F6F  3001               	movlw	1
 17411     0F70  2F72               	goto	u2790
 17412     0F71                     u2780:
 17413     0F71  3000               	movlw	0
 17414     0F72                     u2790:
 17415     0F72  3189  21AE  318F   	fcall	_LIGHTBLUE_SetErrorLedValue
 17416     0F75  2F8A               	goto	l1622
 17417     0F76                     l6298:
 17418                           
 17419                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 568:             uart[UART_CDC].Wr
      +                          ite(data);
 17420     0F76  0872               	movf	LIGHTBLUE_PerformAction@data,w
 17421     0F77  00F0               	movwf	EUSART1_Write@txData
 17422     0F78  3002               	movlw	low ((_uart+2)| (0+32768))
 17423     0F79  0084               	movwf	4
 17424     0F7A  3090               	movlw	high ((_uart+2)| (0+32768))
 17425     0F7B  0085               	movwf	5
 17426     0F7C  3F01               	moviw [1]fsr0
 17427     0F7D  008A               	movwf	10
 17428     0F7E  3F00               	moviw [0]fsr0
 17429     0F7F  000A               	callw
 17430     0F80  318F               	pagesel	$
 17431                           
 17432                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 569:             break;
 17433     0F81  2F8A               	goto	l1622
 17434     0F82                     l6302:
 17435     0F82  0874               	movf	LIGHTBLUE_PerformAction@id,w
 17436                           
 17437                           ; Switch size 1, requested type "simple"
 17438                           ; Number of cases is 2, Range of values is 76 to 83
 17439                           ; switch strategies available:
 17440                           ; Name         Instructions Cycles
 17441                           ; simple_byte            7     4 (average)
 17442                           ; direct_byte           25     9 (fixed)
 17443                           ; jumptable            263     9 (fixed)
 17444                           ;	Chosen strategy is simple_byte
 17445     0F83  3A4C               	xorlw	76	; case 76
 17446     0F84  1903               	skipnz
 17447     0F85  2F54               	goto	l6292
 17448     0F86  3A1F               	xorlw	31	; case 83
 17449     0F87  1903               	skipnz
 17450     0F88  2F76               	goto	l6298
 17451     0F89  2F8A               	goto	l1622
 17452     0F8A                     l1622:
 17453     0F8A  0008               	return
 17454     0F8B                     __end_of_LIGHTBLUE_PerformAction:
 17455                           
 17456                           	psect	text59
 17457     09AE                     __ptext59:	
 17458 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 17459 ;; Defined at:
 17460 ;;		line 529 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17461 ;; Parameters:    Size  Location     Type
 17462 ;;  value           1    wreg     _Bool 
 17463 ;; Auto vars:     Size  Location     Type
 17464 ;;  value           1    1[COMMON] _Bool 
 17465 ;; Return value:  Size  Location     Type
 17466 ;;                  1    wreg      void 
 17467 ;; Registers used:
 17468 ;;		wreg, status,2, status,0, pclath, cstack
 17469 ;; Tracked objects:
 17470 ;;		On entry : 0/0
 17471 ;;		On exit  : 0/0
 17472 ;;		Unchanged: 0/0
 17473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17478 ;;Total ram usage:        2 bytes
 17479 ;; Hardware stack levels used: 1
 17480 ;; Hardware stack levels required when called: 5
 17481 ;; This function calls:
 17482 ;;		_LIGHTBLUE_UpdateErrorLed
 17483 ;; This function is called by:
 17484 ;;		_LIGHTBLUE_PerformAction
 17485 ;; This function uses a non-reentrant model
 17486 ;;
 17487                           
 17488     09AE                     _LIGHTBLUE_SetErrorLedValue:	
 17489                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 17490                           
 17491                           
 17492                           ;incstack = 0
 17493                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg+status,2+status,0+pclath+cstack]
 17494                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 17495     09AE  00F1               	movwf	LIGHTBLUE_SetErrorLedValue@value
 17496     09AF                     l6002:
 17497                           
 17498                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 529: static void LIGHTBLUE_SetErro
      +                          rLedValue(_Bool value);mcc_generated_files/application/LIGHTBLUE_service.c: 530: {;mcc_g
      +                          enerated_files/application/LIGHTBLUE_service.c: 531:     (bitMap.ioStateBitMap.p2_2_stat
      +                          e) = (0x01) - value;
 17499     09AF  3001               	movlw	1
 17500     09B0  00F0               	movwf	??_LIGHTBLUE_SetErrorLedValue
 17501     09B1  0871               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 17502     09B2  02F0               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 17503     09B3  0140               	movlb	0	; select bank0
 17504     09B4  084D               	movf	_bitMap+1,w	;volatile
 17505     09B5  0670               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17506     09B6  39FE               	andlw	-2
 17507     09B7  0670               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17508     09B8  00CD               	movwf	_bitMap+1	;volatile
 17509     09B9                     l6004:
 17510                           
 17511                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 532:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 17512     09B9  3187  27FF  3189   	fcall	_LIGHTBLUE_UpdateErrorLed
 17513     09BC                     l1603:
 17514     09BC  0008               	return
 17515     09BD                     __end_of_LIGHTBLUE_SetErrorLedValue:
 17516                           
 17517                           	psect	text60
 17518     07FF                     __ptext60:	
 17519 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 17520 ;; Defined at:
 17521 ;;		line 535 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;		None
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;		None
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  1    wreg      void 
 17528 ;; Registers used:
 17529 ;;		None
 17530 ;; Tracked objects:
 17531 ;;		On entry : 0/0
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;Total ram usage:        0 bytes
 17540 ;; Hardware stack levels used: 1
 17541 ;; Hardware stack levels required when called: 4
 17542 ;; This function calls:
 17543 ;;		Nothing
 17544 ;; This function is called by:
 17545 ;;		_LIGHTBLUE_SetErrorLedValue
 17546 ;; This function uses a non-reentrant model
 17547 ;;
 17548                           
 17549     07FF                     _LIGHTBLUE_UpdateErrorLed:	
 17550                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 17551                           
 17552     07FF                     l1606:	
 17553                           ;incstack = 0
 17554                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: []
 17555                           
 17556     07FF  0008               	return
 17557     0800                     __end_of_LIGHTBLUE_UpdateErrorLed:
 17558                           
 17559                           	psect	text61
 17560     0D39                     __ptext61:	
 17561 ;; *************** function _LIGHTBLUE_LedState *****************
 17562 ;; Defined at:
 17563 ;;		line 368 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17564 ;; Parameters:    Size  Location     Type
 17565 ;;		None
 17566 ;; Auto vars:     Size  Location     Type
 17567 ;;  payload         3   10[COMMON] unsigned char [3]
 17568 ;;  led             1   13[COMMON] unsigned char 
 17569 ;; Return value:  Size  Location     Type
 17570 ;;                  1    wreg      void 
 17571 ;; Registers used:
 17572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17573 ;; Tracked objects:
 17574 ;;		On entry : 0/0
 17575 ;;		On exit  : 0/0
 17576 ;;		Unchanged: 0/0
 17577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17579 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17582 ;;Total ram usage:        4 bytes
 17583 ;; Hardware stack levels used: 1
 17584 ;; Hardware stack levels required when called: 7
 17585 ;; This function calls:
 17586 ;;		_LIGHTBLUE_GetDataLedValue
 17587 ;;		_LIGHTBLUE_GetErrorLedValue
 17588 ;;		_LIGHTBLUE_SendPacket
 17589 ;;		_LIGHTBLUE_SplitByte
 17590 ;; This function is called by:
 17591 ;;		_main
 17592 ;; This function uses a non-reentrant model
 17593 ;;
 17594                           
 17595     0D39                     _LIGHTBLUE_LedState:	
 17596                           ;psect for function _LIGHTBLUE_LedState
 17597                           
 17598     0D39                     l6532:	
 17599                           ;incstack = 0
 17600                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17601                           
 17602                           
 17603                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 370:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 371:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 373:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 17604     0D39  3188  2029  318D   	fcall	_LIGHTBLUE_GetDataLedValue
 17605     0D3C  00FD               	movwf	LIGHTBLUE_LedState@led
 17606     0D3D                     l6534:
 17607                           
 17608                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 375:     *payload = '\0';
 17609     0D3D  01FA               	clrf	LIGHTBLUE_LedState@payload
 17610     0D3E                     l6536:
 17611                           
 17612                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 376:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 17613     0D3E  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 17614     0D3F  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 17615     0D40  087D               	movf	LIGHTBLUE_LedState@led,w
 17616     0D41  00F6               	movwf	LIGHTBLUE_SplitByte@value
 17617     0D42  318E  2628  318D   	fcall	_LIGHTBLUE_SplitByte
 17618     0D45                     l6538:
 17619                           
 17620                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 17621     0D45  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 17622     0D46  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 17623     0D47  304C               	movlw	76
 17624     0D48  3182  22F7  318D   	fcall	_LIGHTBLUE_SendPacket
 17625     0D4B                     l6540:
 17626                           
 17627                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 17628     0D4B  3188  2012  318D   	fcall	_LIGHTBLUE_GetErrorLedValue
 17629     0D4E  3E10               	addlw	16
 17630     0D4F  00FD               	movwf	LIGHTBLUE_LedState@led
 17631                           
 17632                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:     *payload = '\0';
 17633     0D50  01FA               	clrf	LIGHTBLUE_LedState@payload
 17634     0D51                     l6542:
 17635                           
 17636                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 17637     0D51  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 17638     0D52  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 17639     0D53  087D               	movf	LIGHTBLUE_LedState@led,w
 17640     0D54  00F6               	movwf	LIGHTBLUE_SplitByte@value
 17641     0D55  318E  2628  318D   	fcall	_LIGHTBLUE_SplitByte
 17642     0D58                     l6544:
 17643                           
 17644                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 384:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 17645     0D58  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 17646     0D59  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 17647     0D5A  304C               	movlw	76
 17648     0D5B  3182  22F7  318D   	fcall	_LIGHTBLUE_SendPacket
 17649     0D5E                     l1522:
 17650     0D5E  0008               	return
 17651     0D5F                     __end_of_LIGHTBLUE_LedState:
 17652                           
 17653                           	psect	text62
 17654     0812                     __ptext62:	
 17655 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 17656 ;; Defined at:
 17657 ;;		line 524 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17658 ;; Parameters:    Size  Location     Type
 17659 ;;		None
 17660 ;; Auto vars:     Size  Location     Type
 17661 ;;		None
 17662 ;; Return value:  Size  Location     Type
 17663 ;;                  1    wreg      unsigned char 
 17664 ;; Registers used:
 17665 ;;		wreg, status,2, status,0
 17666 ;; Tracked objects:
 17667 ;;		On entry : 0/0
 17668 ;;		On exit  : 0/0
 17669 ;;		Unchanged: 0/0
 17670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17675 ;;Total ram usage:        0 bytes
 17676 ;; Hardware stack levels used: 1
 17677 ;; Hardware stack levels required when called: 4
 17678 ;; This function calls:
 17679 ;;		Nothing
 17680 ;; This function is called by:
 17681 ;;		_LIGHTBLUE_LedState
 17682 ;; This function uses a non-reentrant model
 17683 ;;
 17684                           
 17685     0812                     _LIGHTBLUE_GetErrorLedValue:	
 17686                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 17687                           
 17688     0812                     l6286:	
 17689                           ;incstack = 0
 17690                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 17691                           
 17692                           
 17693                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 526:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 17694     0812  0140               	movlb	0	; select bank0
 17695     0813  084D               	movf	_bitMap+1,w	;volatile
 17696     0814  3901               	andlw	1
 17697     0815  3C01               	sublw	1
 17698     0816                     l1600:
 17699     0816  0008               	return
 17700     0817                     __end_of_LIGHTBLUE_GetErrorLedValue:
 17701                           
 17702                           	psect	text63
 17703     0829                     __ptext63:	
 17704 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 17705 ;; Defined at:
 17706 ;;		line 519 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;		None
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;		None
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  1    wreg      unsigned char 
 17713 ;; Registers used:
 17714 ;;		wreg, status,2, status,0
 17715 ;; Tracked objects:
 17716 ;;		On entry : 0/0
 17717 ;;		On exit  : 0/0
 17718 ;;		Unchanged: 0/0
 17719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17724 ;;Total ram usage:        0 bytes
 17725 ;; Hardware stack levels used: 1
 17726 ;; Hardware stack levels required when called: 4
 17727 ;; This function calls:
 17728 ;;		Nothing
 17729 ;; This function is called by:
 17730 ;;		_LIGHTBLUE_LedState
 17731 ;; This function uses a non-reentrant model
 17732 ;;
 17733                           
 17734     0829                     _LIGHTBLUE_GetDataLedValue:	
 17735                           ;psect for function _LIGHTBLUE_GetDataLedValue
 17736                           
 17737     0829                     l6282:	
 17738                           ;incstack = 0
 17739                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 17740                           
 17741                           
 17742                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 521:     return (0x01) - PORTAbits
      +                          .RA5;
 17743     0829  0140               	movlb	0	; select bank0
 17744     082A  0E0C               	swapf	12,w	;volatile
 17745     082B  0C89               	rrf	9,f
 17746     082C  3901               	andlw	1
 17747     082D  3C01               	sublw	1
 17748     082E                     l1597:
 17749     082E  0008               	return
 17750     082F                     __end_of_LIGHTBLUE_GetDataLedValue:
 17751                           
 17752                           	psect	text64
 17753     0823                     __ptext64:	
 17754 ;; *************** function _LIGHTBLUE_Initialize *****************
 17755 ;; Defined at:
 17756 ;;		line 310 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;		None
 17759 ;; Auto vars:     Size  Location     Type
 17760 ;;		None
 17761 ;; Return value:  Size  Location     Type
 17762 ;;                  1    wreg      void 
 17763 ;; Registers used:
 17764 ;;		None
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/0
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17774 ;;Total ram usage:        0 bytes
 17775 ;; Hardware stack levels used: 1
 17776 ;; Hardware stack levels required when called: 4
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_main
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784     0823                     _LIGHTBLUE_Initialize:	
 17785                           ;psect for function _LIGHTBLUE_Initialize
 17786                           
 17787     0823                     l6488:	
 17788                           ;incstack = 0
 17789                           ; Regs used in _LIGHTBLUE_Initialize: []
 17790                           
 17791                           
 17792                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 17793     0823  3001               	movlw	1
 17794     0824  0140               	movlb	0	; select bank0
 17795     0825  00CC               	movwf	_bitMap	;volatile
 17796                           
 17797                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 313:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 17798     0826  3001               	movlw	1
 17799     0827  00CD               	movwf	_bitMap+1	;volatile
 17800     0828                     l1507:
 17801     0828  0008               	return
 17802     0829                     __end_of_LIGHTBLUE_Initialize:
 17803                           
 17804                           	psect	text65
 17805     0EE6                     __ptext65:	
 17806 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 17807 ;; Defined at:
 17808 ;;		line 329 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;		None
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;  payload        13   19[BANK0 ] unsigned char [13]
 17813 ;;  accelData       6   32[BANK0 ] struct .
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      void 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17824 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17826 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17827 ;;Total ram usage:       19 bytes
 17828 ;; Hardware stack levels used: 1
 17829 ;; Hardware stack levels required when called: 16
 17830 ;; This function calls:
 17831 ;;		_BMA253_GetAccelDataXYZ
 17832 ;;		_LIGHTBLUE_SendPacket
 17833 ;;		_LIGHTBLUE_SplitWord
 17834 ;; This function is called by:
 17835 ;;		_main
 17836 ;; This function uses a non-reentrant model
 17837 ;;
 17838                           
 17839     0EE6                     _LIGHTBLUE_AccelSensor:	
 17840                           ;psect for function _LIGHTBLUE_AccelSensor
 17841                           
 17842     0EE6                     l8140:	
 17843                           ;incstack = 0
 17844 ;; hardware stack exceeded
 17845                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17846                           
 17847                           
 17848                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 331:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 332:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 334:     *payload = '\0';
 17849     0EE6  0140               	movlb	0	; select bank0
 17850     0EE7  01B3               	clrf	LIGHTBLUE_AccelSensor@payload
 17851     0EE8                     l8142:
 17852                           
 17853                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 17854     0EE8  3040               	movlw	low LIGHTBLUE_AccelSensor@accelData
 17855     0EE9  00AF               	movwf	BMA253_GetAccelDataXYZ@accelData
 17856     0EEA  3000               	movlw	high LIGHTBLUE_AccelSensor@accelData
 17857     0EEB  00B0               	movwf	BMA253_GetAccelDataXYZ@accelData+1
 17858     0EEC  3186  2652  318E   	fcall	_BMA253_GetAccelDataXYZ
 17859     0EEF                     l8144:
 17860                           
 17861                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 17862     0EEF  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 17863     0EF0  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 17864     0EF1  30FF               	movlw	255
 17865     0EF2  0140               	movlb	0	; select bank0
 17866     0EF3  0540               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 17867     0EF4  00F9               	movwf	LIGHTBLUE_SplitWord@value
 17868     0EF5  300F               	movlw	15
 17869     0EF6  0541               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 17870     0EF7  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 17871     0EF8  3189  219F  318E   	fcall	_LIGHTBLUE_SplitWord
 17872     0EFB                     l8146:
 17873                           
 17874                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 17875     0EFB  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 17876     0EFC  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 17877     0EFD  30FF               	movlw	255
 17878     0EFE  0140               	movlb	0	; select bank0
 17879     0EFF  0542               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 17880     0F00  00F9               	movwf	LIGHTBLUE_SplitWord@value
 17881     0F01  300F               	movlw	15
 17882     0F02  0543               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 17883     0F03  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 17884     0F04  3189  219F  318E   	fcall	_LIGHTBLUE_SplitWord
 17885     0F07                     l8148:
 17886                           
 17887                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 340:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 17888     0F07  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 17889     0F08  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 17890     0F09  30FF               	movlw	255
 17891     0F0A  0140               	movlb	0	; select bank0
 17892     0F0B  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 17893     0F0C  00F9               	movwf	LIGHTBLUE_SplitWord@value
 17894     0F0D  300F               	movlw	15
 17895     0F0E  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 17896     0F0F  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 17897     0F10  3189  219F  318E   	fcall	_LIGHTBLUE_SplitWord
 17898     0F13                     l8150:
 17899                           
 17900                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 17901     0F13  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 17902     0F14  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 17903     0F15  3058               	movlw	88
 17904     0F16  3182  22F7  318E   	fcall	_LIGHTBLUE_SendPacket
 17905     0F19                     l1513:
 17906     0F19  0008               	return
 17907     0F1A                     __end_of_LIGHTBLUE_AccelSensor:
 17908                           
 17909                           	psect	text66
 17910     099F                     __ptext66:	
 17911 ;; *************** function _LIGHTBLUE_SplitWord *****************
 17912 ;; Defined at:
 17913 ;;		line 495 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;  payload         1    8[COMMON] PTR unsigned char 
 17916 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 17917 ;;  value           2    9[COMMON] short 
 17918 ;; Auto vars:     Size  Location     Type
 17919 ;;		None
 17920 ;; Return value:  Size  Location     Type
 17921 ;;                  1    wreg      void 
 17922 ;; Registers used:
 17923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17924 ;; Tracked objects:
 17925 ;;		On entry : 0/0
 17926 ;;		On exit  : 0/0
 17927 ;;		Unchanged: 0/0
 17928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17929 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17932 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17933 ;;Total ram usage:        3 bytes
 17934 ;; Hardware stack levels used: 1
 17935 ;; Hardware stack levels required when called: 6
 17936 ;; This function calls:
 17937 ;;		_LIGHTBLUE_SplitByte
 17938 ;; This function is called by:
 17939 ;;		_LIGHTBLUE_TemperatureSensor
 17940 ;;		_LIGHTBLUE_AccelSensor
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           
 17944     099F                     _LIGHTBLUE_SplitWord:	
 17945                           ;psect for function _LIGHTBLUE_SplitWord
 17946                           
 17947     099F                     l6256:	
 17948                           ;incstack = 0
 17949                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17950                           
 17951                           
 17952                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495: static void LIGHTBLUE_SplitWo
      +                          rd(char* payload, int16_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 49
      +                          6: {;mcc_generated_files/application/LIGHTBLUE_service.c: 497:     LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 17953     099F  0878               	movf	LIGHTBLUE_SplitWord@payload,w
 17954     09A0  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 17955     09A1  0879               	movf	LIGHTBLUE_SplitWord@value,w
 17956     09A2  00F6               	movwf	LIGHTBLUE_SplitByte@value
 17957     09A3  318E  2628  3189   	fcall	_LIGHTBLUE_SplitByte
 17958                           
 17959                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 498:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 17960     09A6  0878               	movf	LIGHTBLUE_SplitWord@payload,w
 17961     09A7  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 17962     09A8  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 17963     09A9  00F6               	movwf	LIGHTBLUE_SplitByte@value
 17964     09AA  318E  2628  3189   	fcall	_LIGHTBLUE_SplitByte
 17965     09AD                     l1585:
 17966     09AD  0008               	return
 17967     09AE                     __end_of_LIGHTBLUE_SplitWord:
 17968                           
 17969                           	psect	text67
 17970     0E28                     __ptext67:	
 17971 ;; *************** function _LIGHTBLUE_SplitByte *****************
 17972 ;; Defined at:
 17973 ;;		line 501 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17974 ;; Parameters:    Size  Location     Type
 17975 ;;  payload         1    5[COMMON] PTR unsigned char 
 17976 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 17977 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 17978 ;;  value           1    6[COMMON] char 
 17979 ;; Auto vars:     Size  Location     Type
 17980 ;;		None
 17981 ;; Return value:  Size  Location     Type
 17982 ;;                  1    wreg      void 
 17983 ;; Registers used:
 17984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17985 ;; Tracked objects:
 17986 ;;		On entry : 0/0
 17987 ;;		On exit  : 0/0
 17988 ;;		Unchanged: 0/0
 17989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17994 ;;Total ram usage:        3 bytes
 17995 ;; Hardware stack levels used: 1
 17996 ;; Hardware stack levels required when called: 5
 17997 ;; This function calls:
 17998 ;;		_strlen
 17999 ;; This function is called by:
 18000 ;;		_LIGHTBLUE_PushButton
 18001 ;;		_LIGHTBLUE_AccState
 18002 ;;		_LIGHTBLUE_LedState
 18003 ;;		_LIGHTBLUE_SendProtocolVersion
 18004 ;;		_LIGHTBLUE_SplitWord
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008     0E28                     _LIGHTBLUE_SplitByte:	
 18009                           ;psect for function _LIGHTBLUE_SplitByte
 18010                           
 18011     0E28                     l5986:	
 18012                           ;incstack = 0
 18013                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18014                           
 18015                           
 18016                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 501: static void LIGHTBLUE_SplitBy
      +                          te(char* payload, int8_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 502
      +                          : {;mcc_generated_files/application/LIGHTBLUE_service.c: 503:     payload += strlen(payl
      +                          oad);
 18017     0E28  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 18018     0E29  00F0               	movwf	strlen@s
 18019     0E2A  01F1               	clrf	strlen@s+1
 18020     0E2B  318B  23C0  318E   	fcall	_strlen
 18021     0E2E  0870               	movf	?_strlen,w
 18022     0E2F  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 18023     0E30                     l5988:
 18024                           
 18025                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 18026     0E30  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 18027     0E31  0086               	movwf	6
 18028     0E32  0187               	clrf	7
 18029     0E33  0876               	movf	LIGHTBLUE_SplitByte@value,w
 18030     0E34  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18031     0E35  0E77               	swapf	??_LIGHTBLUE_SplitByte,w
 18032     0E36  390F               	andlw	15
 18033     0E37  1BF7               	btfsc	??_LIGHTBLUE_SplitByte,7
 18034     0E38  38F0               	iorlw	240
 18035     0E39  390F               	andlw	15
 18036     0E3A  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 18037     0E3B  0084               	movwf	4
 18038     0E3C  3001               	movlw	1	; select bank3/4
 18039     0E3D  0085               	movwf	5
 18040     0E3E  0800               	movf	0,w
 18041     0E3F  0081               	movwf	1
 18042     0E40                     l5990:
 18043     0E40  3001               	movlw	1
 18044     0E41  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 18045     0E42                     l5992:
 18046                           
 18047                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 18048     0E42  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 18049     0E43  0086               	movwf	6
 18050     0E44  0187               	clrf	7
 18051     0E45  0876               	movf	LIGHTBLUE_SplitByte@value,w
 18052     0E46  390F               	andlw	15
 18053     0E47  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 18054     0E48  0084               	movwf	4
 18055     0E49  3001               	movlw	1	; select bank3/4
 18056     0E4A  0085               	movwf	5
 18057     0E4B  0800               	movf	0,w
 18058     0E4C  0081               	movwf	1
 18059     0E4D                     l5994:
 18060     0E4D  3001               	movlw	1
 18061     0E4E  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 18062     0E4F                     l5996:
 18063                           
 18064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:     *payload = '\0';
 18065     0E4F  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 18066     0E50  0086               	movwf	6
 18067     0E51  0187               	clrf	7
 18068     0E52  0181               	clrf	1
 18069     0E53                     l1588:
 18070     0E53  0008               	return
 18071     0E54                     __end_of_LIGHTBLUE_SplitByte:
 18072                           
 18073                           	psect	text68
 18074     02F7                     __ptext68:	
 18075 ;; *************** function _LIGHTBLUE_SendPacket *****************
 18076 ;; Defined at:
 18077 ;;		line 481 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;  packetID        1    wreg     unsigned char 
 18080 ;;  payload         1    6[COMMON] PTR unsigned char 
 18081 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 18082 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;  packetID        1    9[COMMON] unsigned char 
 18085 ;; Return value:  Size  Location     Type
 18086 ;;                  1    wreg      void 
 18087 ;; Registers used:
 18088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18089 ;; Tracked objects:
 18090 ;;		On entry : 0/0
 18091 ;;		On exit  : 0/0
 18092 ;;		Unchanged: 0/0
 18093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;Total ram usage:        4 bytes
 18099 ;; Hardware stack levels used: 1
 18100 ;; Hardware stack levels required when called: 6
 18101 ;; This function calls:
 18102 ;;		_RN487X_Write
 18103 ;;		_strlen
 18104 ;; This function is called by:
 18105 ;;		_LIGHTBLUE_TemperatureSensor
 18106 ;;		_LIGHTBLUE_AccelSensor
 18107 ;;		_LIGHTBLUE_PushButton
 18108 ;;		_LIGHTBLUE_AccState
 18109 ;;		_LIGHTBLUE_LedState
 18110 ;;		_LIGHTBLUE_SendProtocolVersion
 18111 ;; This function uses a non-reentrant model
 18112 ;;
 18113                           
 18114     02F7                     _LIGHTBLUE_SendPacket:	
 18115                           ;psect for function _LIGHTBLUE_SendPacket
 18116                           
 18117                           
 18118                           ;incstack = 0
 18119                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18120                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 18121     02F7  00F9               	movwf	LIGHTBLUE_SendPacket@packetID
 18122     02F8                     l5968:
 18123                           
 18124                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 481: static void LIGHTBLUE_SendPac
      +                          ket(char packetID, char* payload);mcc_generated_files/application/LIGHTBLUE_service.c: 4
      +                          82: {;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     RN487X.Write(('['));
 18125     02F8  305B               	movlw	91
 18126     02F9  00F5               	movwf	RN487X_Write@txData
 18127     02FA  3068               	movlw	low (_RN487X| (0+32768))
 18128     02FB  0084               	movwf	4
 18129     02FC  3090               	movlw	high (_RN487X| (0+32768))
 18130     02FD  0085               	movwf	5
 18131     02FE  3F01               	moviw [1]fsr0
 18132     02FF  008A               	movwf	10
 18133     0300  3F00               	moviw [0]fsr0
 18134     0301  000A               	callw
 18135     0302  3182               	pagesel	$
 18136                           
 18137                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 18138     0303  0140               	movlb	0	; select bank0
 18139     0304  0852               	movf	_sequenceNumber,w
 18140     0305  390F               	andlw	15
 18141     0306  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 18142     0307  0086               	movwf	6
 18143     0308  3001               	movlw	1	; select bank3/4
 18144     0309  0087               	movwf	7
 18145     030A  0801               	movf	1,w
 18146     030B  00F5               	movwf	RN487X_Write@txData
 18147     030C  3068               	movlw	low (_RN487X| (0+32768))
 18148     030D  0084               	movwf	4
 18149     030E  3090               	movlw	high (_RN487X| (0+32768))
 18150     030F  0085               	movwf	5
 18151     0310  3F01               	moviw [1]fsr0
 18152     0311  008A               	movwf	10
 18153     0312  3F00               	moviw [0]fsr0
 18154     0313  000A               	callw
 18155     0314  3182               	pagesel	$
 18156     0315                     l5970:
 18157     0315  3001               	movlw	1
 18158     0316  0140               	movlb	0	; select bank0
 18159     0317  07D2               	addwf	_sequenceNumber,f
 18160     0318                     l5972:
 18161                           
 18162                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 485:     RN487X.Write(packetID);
 18163     0318  0879               	movf	LIGHTBLUE_SendPacket@packetID,w
 18164     0319  00F5               	movwf	RN487X_Write@txData
 18165     031A  3068               	movlw	low (_RN487X| (0+32768))
 18166     031B  0084               	movwf	4
 18167     031C  3090               	movlw	high (_RN487X| (0+32768))
 18168     031D  0085               	movwf	5
 18169     031E  3F01               	moviw [1]fsr0
 18170     031F  008A               	movwf	10
 18171     0320  3F00               	moviw [0]fsr0
 18172     0321  000A               	callw
 18173     0322  3182               	pagesel	$
 18174     0323                     l5974:
 18175                           
 18176                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 486:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 18177     0323  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 18178     0324  00F0               	movwf	strlen@s
 18179     0325  01F1               	clrf	strlen@s+1
 18180     0326  318B  23C0  3182   	fcall	_strlen
 18181     0329  0870               	movf	?_strlen,w
 18182     032A  00F7               	movwf	??_LIGHTBLUE_SendPacket
 18183     032B  0871               	movf	?_strlen+1,w
 18184     032C  00F8               	movwf	??_LIGHTBLUE_SendPacket+1
 18185     032D  3004               	movlw	4
 18186     032E                     u2595:
 18187     032E  36F8               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 18188     032F  0CF7               	rrf	??_LIGHTBLUE_SendPacket,f
 18189     0330  0B89               	decfsz	9,f
 18190     0331  2B2E               	goto	u2595
 18191     0332  0877               	movf	??_LIGHTBLUE_SendPacket,w
 18192     0333  390F               	andlw	15
 18193     0334  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 18194     0335  0086               	movwf	6
 18195     0336  3001               	movlw	1	; select bank3/4
 18196     0337  0087               	movwf	7
 18197     0338  0801               	movf	1,w
 18198     0339  00F5               	movwf	RN487X_Write@txData
 18199     033A  3068               	movlw	low (_RN487X| (0+32768))
 18200     033B  0084               	movwf	4
 18201     033C  3090               	movlw	high (_RN487X| (0+32768))
 18202     033D  0085               	movwf	5
 18203     033E  3F01               	moviw [1]fsr0
 18204     033F  008A               	movwf	10
 18205     0340  3F00               	moviw [0]fsr0
 18206     0341  000A               	callw
 18207     0342  3182               	pagesel	$
 18208     0343                     l5976:
 18209                           
 18210                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 487:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 18211     0343  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 18212     0344  00F0               	movwf	strlen@s
 18213     0345  01F1               	clrf	strlen@s+1
 18214     0346  318B  23C0  3182   	fcall	_strlen
 18215     0349  0870               	movf	?_strlen,w
 18216     034A  390F               	andlw	15
 18217     034B  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 18218     034C  0086               	movwf	6
 18219     034D  3001               	movlw	1	; select bank3/4
 18220     034E  0087               	movwf	7
 18221     034F  0801               	movf	1,w
 18222     0350  00F5               	movwf	RN487X_Write@txData
 18223     0351  3068               	movlw	low (_RN487X| (0+32768))
 18224     0352  0084               	movwf	4
 18225     0353  3090               	movlw	high (_RN487X| (0+32768))
 18226     0354  0085               	movwf	5
 18227     0355  3F01               	moviw [1]fsr0
 18228     0356  008A               	movwf	10
 18229     0357  3F00               	moviw [0]fsr0
 18230     0358  000A               	callw
 18231     0359  3182               	pagesel	$
 18232                           
 18233                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     while (*payload)
 18234     035A  2B6B               	goto	l5982
 18235     035B                     l5978:
 18236                           
 18237                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 490:         RN487X.Write((*(uint8_t *)payload++));
 18238     035B  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 18239     035C  0086               	movwf	6
 18240     035D  0187               	clrf	7
 18241     035E  0801               	movf	1,w
 18242     035F  00F5               	movwf	RN487X_Write@txData
 18243     0360  3068               	movlw	low (_RN487X| (0+32768))
 18244     0361  0084               	movwf	4
 18245     0362  3090               	movlw	high (_RN487X| (0+32768))
 18246     0363  0085               	movwf	5
 18247     0364  3F01               	moviw [1]fsr0
 18248     0365  008A               	movwf	10
 18249     0366  3F00               	moviw [0]fsr0
 18250     0367  000A               	callw
 18251     0368  3182               	pagesel	$
 18252     0369                     l5980:
 18253     0369  3001               	movlw	1
 18254     036A  07F6               	addwf	LIGHTBLUE_SendPacket@payload,f
 18255     036B                     l5982:
 18256                           
 18257                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     while (*payload)
 18258     036B  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 18259     036C  0086               	movwf	6
 18260     036D  0187               	clrf	7
 18261     036E  0801               	movf	1,w
 18262     036F  1D03               	btfss	3,2
 18263     0370  2B72               	goto	u2601
 18264     0371  2B73               	goto	u2600
 18265     0372                     u2601:
 18266     0372  2B5B               	goto	l5978
 18267     0373                     u2600:
 18268     0373                     l5984:
 18269                           
 18270                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 492:     RN487X.Write((']'));
 18271     0373  305D               	movlw	93
 18272     0374  00F5               	movwf	RN487X_Write@txData
 18273     0375  3068               	movlw	low (_RN487X| (0+32768))
 18274     0376  0084               	movwf	4
 18275     0377  3090               	movlw	high (_RN487X| (0+32768))
 18276     0378  0085               	movwf	5
 18277     0379  3F01               	moviw [1]fsr0
 18278     037A  008A               	movwf	10
 18279     037B  3F00               	moviw [0]fsr0
 18280     037C  000A               	callw
 18281     037D  3182               	pagesel	$
 18282     037E                     l1582:
 18283     037E  0008               	return
 18284     037F                     __end_of_LIGHTBLUE_SendPacket:
 18285                           
 18286                           	psect	text69
 18287     0BC0                     __ptext69:	
 18288 ;; *************** function _strlen *****************
 18289 ;; Defined at:
 18290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;  s               2    0[COMMON] PTR const unsigned char 
 18293 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 18294 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_6(6), lightBlueSerial@main$F2767(
      +80), 
 18295 ;;		 -> STR_5(12), STR_3(11), statusBuffer(80), NULL(0), 
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;  a               2    3[COMMON] PTR const unsigned char 
 18298 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 18299 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_6(6), lightBlueSerial@main$F2767(
      +80), 
 18300 ;;		 -> STR_5(12), STR_3(11), statusBuffer(80), NULL(0), 
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  2    0[COMMON] unsigned int 
 18303 ;; Registers used:
 18304 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18313 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18314 ;;Total ram usage:        5 bytes
 18315 ;; Hardware stack levels used: 1
 18316 ;; Hardware stack levels required when called: 4
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_rn487x_PrintMessage
 18321 ;;		_LIGHTBLUE_SendProtocolVersion
 18322 ;;		_LIGHTBLUE_SendSerialData
 18323 ;;		_LIGHTBLUE_SendPacket
 18324 ;;		_LIGHTBLUE_SplitByte
 18325 ;;		_strstr
 18326 ;; This function uses a non-reentrant model
 18327 ;;
 18328                           
 18329     0BC0                     _strlen:	
 18330                           ;psect for function _strlen
 18331                           
 18332     0BC0                     l5668:	
 18333                           ;incstack = 0
 18334                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18335                           
 18336     0BC0  0871               	movf	strlen@s+1,w
 18337     0BC1  00F4               	movwf	strlen@a+1
 18338     0BC2  0870               	movf	strlen@s,w
 18339     0BC3  00F3               	movwf	strlen@a
 18340     0BC4  2BC9               	goto	l5672
 18341     0BC5                     l5670:
 18342     0BC5  3001               	movlw	1
 18343     0BC6  07F0               	addwf	strlen@s,f
 18344     0BC7  3000               	movlw	0
 18345     0BC8  3DF1               	addwfc	strlen@s+1,f
 18346     0BC9                     l5672:
 18347     0BC9  0870               	movf	strlen@s,w
 18348     0BCA  0084               	movwf	4
 18349     0BCB  0871               	movf	strlen@s+1,w
 18350     0BCC  0085               	movwf	5
 18351     0BCD  0012               	moviw fsr0++
 18352     0BCE  1D03               	btfss	3,2
 18353     0BCF  2BD1               	goto	u2161
 18354     0BD0  2BD2               	goto	u2160
 18355     0BD1                     u2161:
 18356     0BD1  2BC5               	goto	l5670
 18357     0BD2                     u2160:
 18358     0BD2                     l5674:
 18359     0BD2  0873               	movf	strlen@a,w
 18360     0BD3  0270               	subwf	strlen@s,w
 18361     0BD4  00F0               	movwf	?_strlen
 18362     0BD5  0874               	movf	strlen@a+1,w
 18363     0BD6  3B71               	subwfb	strlen@s+1,w
 18364     0BD7  00F1               	movwf	?_strlen+1
 18365     0BD8                     l2781:
 18366     0BD8  0008               	return
 18367     0BD9                     __end_of_strlen:
 18368                           
 18369                           	psect	text70
 18370     08FF                     __ptext70:	
 18371 ;; *************** function _RN487X_Write *****************
 18372 ;; Defined at:
 18373 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18374 ;; Parameters:    Size  Location     Type
 18375 ;;  txData          1    5[COMMON] unsigned char 
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;		None
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  1    wreg      void 
 18380 ;; Registers used:
 18381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/0
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18391 ;;Total ram usage:        1 bytes
 18392 ;; Hardware stack levels used: 1
 18393 ;; Hardware stack levels required when called: 5
 18394 ;; This function calls:
 18395 ;;		_EUSART1_Write
 18396 ;; This function is called by:
 18397 ;;		_LIGHTBLUE_SendPacket
 18398 ;;		_RN487X_SendCmd
 18399 ;;		_LIGHTBLUE_SendSerialData
 18400 ;;		_RN487X_Example_TransparentUart
 18401 ;;		_main
 18402 ;; This function uses a non-reentrant model
 18403 ;;
 18404                           
 18405     08FF                     _RN487X_Write:	
 18406                           ;psect for function _RN487X_Write
 18407                           
 18408     08FF                     l5826:	
 18409                           ;incstack = 0
 18410                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18411                           
 18412                           
 18413                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 18414     08FF  0875               	movf	RN487X_Write@txData,w
 18415     0900  00F0               	movwf	EUSART1_Write@txData
 18416     0901  3016               	movlw	low ((_uart+22)| (0+32768))
 18417     0902  0084               	movwf	4
 18418     0903  3090               	movlw	high ((_uart+22)| (0+32768))
 18419     0904  0085               	movwf	5
 18420     0905  3F01               	moviw [1]fsr0
 18421     0906  008A               	movwf	10
 18422     0907  3F00               	moviw [0]fsr0
 18423     0908  000A               	callw
 18424     0909  3188               	pagesel	$
 18425     090A                     l295:
 18426     090A  0008               	return
 18427     090B                     __end_of_RN487X_Write:
 18428                           
 18429                           	psect	text71
 18430     0CEF                     __ptext71:	
 18431 ;; *************** function _EUSART1_Write *****************
 18432 ;; Defined at:
 18433 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  txData          1    0[COMMON] unsigned char 
 18436 ;; Auto vars:     Size  Location     Type
 18437 ;;		None
 18438 ;; Return value:  Size  Location     Type
 18439 ;;                  1    wreg      void 
 18440 ;; Registers used:
 18441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18442 ;; Tracked objects:
 18443 ;;		On entry : 0/0
 18444 ;;		On exit  : 0/0
 18445 ;;		Unchanged: 0/0
 18446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18451 ;;Total ram usage:        1 bytes
 18452 ;; Hardware stack levels used: 1
 18453 ;; Hardware stack levels required when called: 4
 18454 ;; This function calls:
 18455 ;;		Nothing
 18456 ;; This function is called by:
 18457 ;;		_rn487x_PrintMessageStart
 18458 ;;		_rn487x_PrintMessageEnd
 18459 ;;		_rn487x_PrintIndicatorCharacters
 18460 ;;		_rn487x_PrintMessage
 18461 ;;		_RN487X_Write
 18462 ;;		_LIGHTBLUE_PerformAction
 18463 ;;		_RN487X_Example_TransparentUart
 18464 ;;		_main
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468     0CEF                     _EUSART1_Write:	
 18469                           ;psect for function _EUSART1_Write
 18470                           
 18471     0CEF                     l5678:	
 18472                           ;incstack = 0
 18473                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18474                           
 18475     0CEF                     l5680:	
 18476                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 18477                           
 18478                           
 18479                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 18480     0CEF  0140               	movlb	0	; select bank0
 18481     0CF0  085F               	movf	_eusart1TxBufferRemaining,w	;volatile
 18482     0CF1  1903               	btfsc	3,2
 18483     0CF2  2CF4               	goto	u2171
 18484     0CF3  2CF5               	goto	u2170
 18485     0CF4                     u2171:
 18486     0CF4  2CEF               	goto	l5680
 18487     0CF5                     u2170:
 18488     0CF5                     l1166:
 18489                           
 18490                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 18491     0CF5  014E               	movlb	14	; select bank14
 18492     0CF6  1A19               	btfsc	25,4	;volatile
 18493     0CF7  2CF9               	goto	u2181
 18494     0CF8  2CFA               	goto	u2180
 18495     0CF9                     u2181:
 18496     0CF9  2CFE               	goto	l1167
 18497     0CFA                     u2180:
 18498     0CFA                     l5682:
 18499                           
 18500                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 18501     0CFA  0870               	movf	EUSART1_Write@txData,w
 18502     0CFB  0142               	movlb	2	; select bank2
 18503     0CFC  009A               	movwf	26	;volatile
 18504                           
 18505                           ;mcc_generated_files/eusart1.c: 182:     }
 18506     0CFD  2D11               	goto	l5694
 18507     0CFE                     l1167:	
 18508                           ;mcc_generated_files/eusart1.c: 183:     else
 18509                           
 18510                           
 18511                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 18512     0CFE  1219               	bcf	25,4	;volatile
 18513     0CFF                     l5684:
 18514                           
 18515                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 18516     0CFF  0140               	movlb	0	; select bank0
 18517     0D00  0861               	movf	_eusart1TxHead,w
 18518     0D01  3EB8               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 18519     0D02  0086               	movwf	6
 18520     0D03  0187               	clrf	7
 18521     0D04  0870               	movf	EUSART1_Write@txData,w
 18522     0D05  0081               	movwf	1
 18523     0D06                     l5686:
 18524     0D06  3001               	movlw	1
 18525     0D07  07E1               	addwf	_eusart1TxHead,f	;volatile
 18526     0D08                     l5688:
 18527                           
 18528                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 18529     0D08  3008               	movlw	8
 18530     0D09  0261               	subwf	_eusart1TxHead,w	;volatile
 18531     0D0A  1C03               	skipc
 18532     0D0B  2D0D               	goto	u2191
 18533     0D0C  2D0E               	goto	u2190
 18534     0D0D                     u2191:
 18535     0D0D  2D0F               	goto	l5692
 18536     0D0E                     u2190:
 18537     0D0E                     l5690:
 18538                           
 18539                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 18540     0D0E  01E1               	clrf	_eusart1TxHead	;volatile
 18541     0D0F                     l5692:
 18542                           
 18543                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 18544     0D0F  3001               	movlw	1
 18545     0D10  02DF               	subwf	_eusart1TxBufferRemaining,f	;volatile
 18546     0D11                     l5694:
 18547                           
 18548                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 18549     0D11  014E               	movlb	14	; select bank14
 18550     0D12  1619               	bsf	25,4	;volatile
 18551     0D13                     l1170:
 18552     0D13  0008               	return
 18553     0D14                     __end_of_EUSART1_Write:
 18554                           
 18555                           	psect	text72
 18556     0652                     __ptext72:	
 18557 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 18558 ;; Defined at:
 18559 ;;		line 119 in file "mcc_generated_files/application/BMA253_accel.c"
 18560 ;; Parameters:    Size  Location     Type
 18561 ;;  accelData       2   15[BANK0 ] PTR struct .
 18562 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;  sensorValue     2   17[BANK0 ] short 
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  1    wreg      void 
 18567 ;; Registers used:
 18568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18578 ;;Total ram usage:        4 bytes
 18579 ;; Hardware stack levels used: 1
 18580 ;; Hardware stack levels required when called: 15
 18581 ;; This function calls:
 18582 ;;		_BMA253_GetAccelDataX
 18583 ;;		_BMA253_GetAccelDataY
 18584 ;;		_BMA253_GetAccelDataZ
 18585 ;;		_BMA253_NewAccelDataRdyX
 18586 ;;		_BMA253_NewAccelDataRdyY
 18587 ;;		_BMA253_NewAccelDataRdyZ
 18588 ;; This function is called by:
 18589 ;;		_LIGHTBLUE_AccelSensor
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593     0652                     _BMA253_GetAccelDataXYZ:	
 18594                           ;psect for function _BMA253_GetAccelDataXYZ
 18595                           
 18596     0652                     l8108:	
 18597                           ;incstack = 0
 18598 ;; hardware stack exceeded
 18599                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18600                           
 18601     0652                     l8110:	
 18602                           ;mcc_generated_files/application/BMA253_accel.c: 120:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 121:     while (!BMA253_NewAccelDataRdyX()) {
 18603                           
 18604                           
 18605                           ;mcc_generated_files/application/BMA253_accel.c: 121:     while (!BMA253_NewAccelDataRdy
      +                          X()) {
 18606     0652  3189  21CE  3186   	fcall	_BMA253_NewAccelDataRdyX
 18607     0655  3A00               	xorlw	0
 18608     0656  1903               	skipnz
 18609     0657  2E59               	goto	u4251
 18610     0658  2E5A               	goto	u4250
 18611     0659                     u4251:
 18612     0659  2E52               	goto	l8110
 18613     065A                     u4250:
 18614     065A                     l8112:
 18615                           
 18616                           ;mcc_generated_files/application/BMA253_accel.c: 125:     BMA253_GetAccelDataX(&sensorVa
      +                          lue);
 18617     065A  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 18618     065B  0140               	movlb	0	; select bank0
 18619     065C  00AA               	movwf	BMA253_GetAccelDataX@xAccelData
 18620     065D  318D  255F  3186   	fcall	_BMA253_GetAccelDataX
 18621     0660                     l8114:
 18622                           
 18623                           ;mcc_generated_files/application/BMA253_accel.c: 126:     accelData->x = sensorValue;
 18624     0660  0140               	movlb	0	; select bank0
 18625     0661  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 18626     0662  0086               	movwf	6
 18627     0663  0830               	movf	BMA253_GetAccelDataXYZ@accelData+1,w
 18628     0664  0087               	movwf	7
 18629     0665  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 18630     0666  3FC0               	movwi [0]fsr1
 18631     0667  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 18632     0668  3FC1               	movwi [1]fsr1
 18633     0669                     l8116:	
 18634                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 18635                           
 18636                           
 18637                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 18638     0669  3189  21DF  3186   	fcall	_BMA253_NewAccelDataRdyY
 18639     066C  3A00               	xorlw	0
 18640     066D  1903               	skipnz
 18641     066E  2E70               	goto	u4261
 18642     066F  2E71               	goto	u4260
 18643     0670                     u4261:
 18644     0670  2E69               	goto	l8116
 18645     0671                     u4260:
 18646     0671                     l8118:
 18647                           
 18648                           ;mcc_generated_files/application/BMA253_accel.c: 132:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 18649     0671  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 18650     0672  0140               	movlb	0	; select bank0
 18651     0673  00AA               	movwf	BMA253_GetAccelDataY@yAccelData
 18652     0674  318D  2586  3186   	fcall	_BMA253_GetAccelDataY
 18653     0677                     l8120:
 18654                           
 18655                           ;mcc_generated_files/application/BMA253_accel.c: 133:     accelData->y = sensorValue;
 18656     0677  0140               	movlb	0	; select bank0
 18657     0678  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 18658     0679  0086               	movwf	6
 18659     067A  0187               	clrf	7
 18660     067B  3142               	addfsr 1,2
 18661     067C  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 18662     067D  3FC0               	movwi [0]fsr1
 18663     067E  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 18664     067F  3FC1               	movwi [1]fsr1
 18665     0680                     l8122:	
 18666                           ;mcc_generated_files/application/BMA253_accel.c: 135:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 18667                           
 18668                           
 18669                           ;mcc_generated_files/application/BMA253_accel.c: 135:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 18670     0680  3189  21F0  3186   	fcall	_BMA253_NewAccelDataRdyZ
 18671     0683  3A00               	xorlw	0
 18672     0684  1903               	skipnz
 18673     0685  2E87               	goto	u4271
 18674     0686  2E88               	goto	u4270
 18675     0687                     u4271:
 18676     0687  2E80               	goto	l8122
 18677     0688                     u4270:
 18678     0688                     l8124:
 18679                           
 18680                           ;mcc_generated_files/application/BMA253_accel.c: 139:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 18681     0688  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 18682     0689  0140               	movlb	0	; select bank0
 18683     068A  00AA               	movwf	BMA253_GetAccelDataZ@zAccelData
 18684     068B  318D  25AD  3186   	fcall	_BMA253_GetAccelDataZ
 18685     068E                     l8126:
 18686                           
 18687                           ;mcc_generated_files/application/BMA253_accel.c: 140:     accelData->z = sensorValue;
 18688     068E  0140               	movlb	0	; select bank0
 18689     068F  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 18690     0690  0086               	movwf	6
 18691     0691  0187               	clrf	7
 18692     0692  3144               	addfsr 1,4
 18693     0693  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 18694     0694  3FC0               	movwi [0]fsr1
 18695     0695  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 18696     0696  3FC1               	movwi [1]fsr1
 18697     0697                     l1669:
 18698     0697  0008               	return
 18699     0698                     __end_of_BMA253_GetAccelDataXYZ:
 18700                           
 18701                           	psect	text73
 18702     0DAD                     __ptext73:	
 18703 ;; *************** function _BMA253_GetAccelDataZ *****************
 18704 ;; Defined at:
 18705 ;;		line 107 in file "mcc_generated_files/application/BMA253_accel.c"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;  zAccelData      1   10[BANK0 ] PTR short 
 18708 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 18709 ;; Auto vars:     Size  Location     Type
 18710 ;;  msbData         1   14[BANK0 ] unsigned char 
 18711 ;;  lsbData         1   13[BANK0 ] unsigned char 
 18712 ;; Return value:  Size  Location     Type
 18713 ;;                  1    wreg      void 
 18714 ;; Registers used:
 18715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18716 ;; Tracked objects:
 18717 ;;		On entry : 0/0
 18718 ;;		On exit  : 0/0
 18719 ;;		Unchanged: 0/0
 18720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18721 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18722 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18724 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18725 ;;Total ram usage:        5 bytes
 18726 ;; Hardware stack levels used: 1
 18727 ;; Hardware stack levels required when called: 14
 18728 ;; This function calls:
 18729 ;;		_BMA253_NewAccelDataRdyZ
 18730 ;;		_i2c_read1ByteRegister
 18731 ;; This function is called by:
 18732 ;;		_BMA253_GetAccelDataXYZ
 18733 ;; This function uses a non-reentrant model
 18734 ;;
 18735                           
 18736     0DAD                     _BMA253_GetAccelDataZ:	
 18737                           ;psect for function _BMA253_GetAccelDataZ
 18738                           
 18739     0DAD                     l8086:	
 18740                           ;incstack = 0
 18741 ;; hardware stack exceeded
 18742                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18743                           
 18744     0DAD                     l8088:	
 18745                           ;mcc_generated_files/application/BMA253_accel.c: 108:     uint8_t lsbData;;mcc_generated
      +                          _files/application/BMA253_accel.c: 109:     uint8_t msbData;;mcc_generated_files/applica
      +                          tion/BMA253_accel.c: 110:     while (!BMA253_NewAccelDataRdyZ()) {
 18746                           
 18747                           
 18748                           ;mcc_generated_files/application/BMA253_accel.c: 110:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 18749     0DAD  3189  21F0  318D   	fcall	_BMA253_NewAccelDataRdyZ
 18750     0DB0  3A00               	xorlw	0
 18751     0DB1  1903               	skipnz
 18752     0DB2  2DB4               	goto	u4241
 18753     0DB3  2DB5               	goto	u4240
 18754     0DB4                     u4241:
 18755     0DB4  2DAD               	goto	l8088
 18756     0DB5                     u4240:
 18757     0DB5                     l8090:
 18758                           
 18759                           ;mcc_generated_files/application/BMA253_accel.c: 114:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 18760     0DB5  3006               	movlw	6
 18761     0DB6  00FD               	movwf	i2c_read1ByteRegister@reg
 18762     0DB7  3019               	movlw	25
 18763     0DB8  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 18764     0DBB  0140               	movlb	0	; select bank0
 18765     0DBC  00AD               	movwf	BMA253_GetAccelDataZ@lsbData
 18766                           
 18767                           ;mcc_generated_files/application/BMA253_accel.c: 115:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 18768     0DBD  3007               	movlw	7
 18769     0DBE  00FD               	movwf	i2c_read1ByteRegister@reg
 18770     0DBF  3019               	movlw	25
 18771     0DC0  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 18772     0DC3  0140               	movlb	0	; select bank0
 18773     0DC4  00AE               	movwf	BMA253_GetAccelDataZ@msbData
 18774     0DC5                     l8092:
 18775                           
 18776                           ;mcc_generated_files/application/BMA253_accel.c: 116:     *zAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 18777     0DC5  082A               	movf	BMA253_GetAccelDataZ@zAccelData,w
 18778     0DC6  0086               	movwf	6
 18779     0DC7  0187               	clrf	7
 18780     0DC8  0E2D               	swapf	BMA253_GetAccelDataZ@lsbData,w
 18781     0DC9  390F               	andlw	15
 18782     0DCA  00AB               	movwf	??_BMA253_GetAccelDataZ
 18783     0DCB  0E2E               	swapf	BMA253_GetAccelDataZ@msbData,w
 18784     0DCC  00AC               	movwf	??_BMA253_GetAccelDataZ+1
 18785     0DCD  39F0               	andlw	240
 18786     0DCE  042B               	iorwf	??_BMA253_GetAccelDataZ,w
 18787     0DCF  3FC0               	movwi [0]fsr1
 18788     0DD0  082C               	movf	??_BMA253_GetAccelDataZ+1,w
 18789     0DD1  390F               	andlw	15
 18790     0DD2  3FC1               	movwi [1]fsr1
 18791     0DD3                     l1657:
 18792     0DD3  0008               	return
 18793     0DD4                     __end_of_BMA253_GetAccelDataZ:
 18794                           
 18795                           	psect	text74
 18796     09F0                     __ptext74:	
 18797 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 18798 ;; Defined at:
 18799 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;  zNewData        1    9[BANK0 ] _Bool 
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      _Bool 
 18806 ;; Registers used:
 18807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18816 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18817 ;;Total ram usage:        1 bytes
 18818 ;; Hardware stack levels used: 1
 18819 ;; Hardware stack levels required when called: 13
 18820 ;; This function calls:
 18821 ;;		_i2c_read1ByteRegister
 18822 ;; This function is called by:
 18823 ;;		_BMA253_GetAccelDataZ
 18824 ;;		_BMA253_GetAccelDataXYZ
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828     09F0                     _BMA253_NewAccelDataRdyZ:	
 18829                           ;psect for function _BMA253_NewAccelDataRdyZ
 18830                           
 18831     09F0                     l8046:	
 18832                           ;incstack = 0
 18833                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18834                           
 18835                           
 18836                           ;mcc_generated_files/application/BMA253_accel.c: 164:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 166:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 18837     09F0  3006               	movlw	6
 18838     09F1  00FD               	movwf	i2c_read1ByteRegister@reg
 18839     09F2  3019               	movlw	25
 18840     09F3  3184  24D9  3189   	fcall	_i2c_read1ByteRegister
 18841     09F6  3901               	andlw	1
 18842     09F7  1D03               	btfss	3,2
 18843     09F8  29FA               	goto	u4181
 18844     09F9  29FC               	goto	u4180
 18845     09FA                     u4181:
 18846     09FA  3001               	movlw	1
 18847     09FB  29FD               	goto	u4190
 18848     09FC                     u4180:
 18849     09FC  3000               	movlw	0
 18850     09FD                     u4190:
 18851     09FD  0140               	movlb	0	; select bank0
 18852     09FE  00A9               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 18853     09FF                     l8048:
 18854                           
 18855                           ;mcc_generated_files/application/BMA253_accel.c: 168:     return zNewData;
 18856     09FF  0829               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 18857     0A00                     l1681:
 18858     0A00  0008               	return
 18859     0A01                     __end_of_BMA253_NewAccelDataRdyZ:
 18860                           
 18861                           	psect	text75
 18862     0D86                     __ptext75:	
 18863 ;; *************** function _BMA253_GetAccelDataY *****************
 18864 ;; Defined at:
 18865 ;;		line 95 in file "mcc_generated_files/application/BMA253_accel.c"
 18866 ;; Parameters:    Size  Location     Type
 18867 ;;  yAccelData      1   10[BANK0 ] PTR short 
 18868 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 18869 ;; Auto vars:     Size  Location     Type
 18870 ;;  msbData         1   14[BANK0 ] unsigned char 
 18871 ;;  lsbData         1   13[BANK0 ] unsigned char 
 18872 ;; Return value:  Size  Location     Type
 18873 ;;                  1    wreg      void 
 18874 ;; Registers used:
 18875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18876 ;; Tracked objects:
 18877 ;;		On entry : 0/0
 18878 ;;		On exit  : 0/0
 18879 ;;		Unchanged: 0/0
 18880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18881 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18885 ;;Total ram usage:        5 bytes
 18886 ;; Hardware stack levels used: 1
 18887 ;; Hardware stack levels required when called: 14
 18888 ;; This function calls:
 18889 ;;		_BMA253_NewAccelDataRdyY
 18890 ;;		_i2c_read1ByteRegister
 18891 ;; This function is called by:
 18892 ;;		_BMA253_GetAccelDataXYZ
 18893 ;; This function uses a non-reentrant model
 18894 ;;
 18895                           
 18896     0D86                     _BMA253_GetAccelDataY:	
 18897                           ;psect for function _BMA253_GetAccelDataY
 18898                           
 18899     0D86                     l8078:	
 18900                           ;incstack = 0
 18901 ;; hardware stack exceeded
 18902                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18903                           
 18904     0D86                     l8080:	
 18905                           ;mcc_generated_files/application/BMA253_accel.c: 96:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 97:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 98:     while (!BMA253_NewAccelDataRdyY()) {
 18906                           
 18907                           
 18908                           ;mcc_generated_files/application/BMA253_accel.c: 98:     while (!BMA253_NewAccelDataRdyY
      +                          ()) {
 18909     0D86  3189  21DF  318D   	fcall	_BMA253_NewAccelDataRdyY
 18910     0D89  3A00               	xorlw	0
 18911     0D8A  1903               	skipnz
 18912     0D8B  2D8D               	goto	u4231
 18913     0D8C  2D8E               	goto	u4230
 18914     0D8D                     u4231:
 18915     0D8D  2D86               	goto	l8080
 18916     0D8E                     u4230:
 18917     0D8E                     l8082:
 18918                           
 18919                           ;mcc_generated_files/application/BMA253_accel.c: 102:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x04));
 18920     0D8E  3004               	movlw	4
 18921     0D8F  00FD               	movwf	i2c_read1ByteRegister@reg
 18922     0D90  3019               	movlw	25
 18923     0D91  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 18924     0D94  0140               	movlb	0	; select bank0
 18925     0D95  00AD               	movwf	BMA253_GetAccelDataY@lsbData
 18926                           
 18927                           ;mcc_generated_files/application/BMA253_accel.c: 103:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 18928     0D96  3005               	movlw	5
 18929     0D97  00FD               	movwf	i2c_read1ByteRegister@reg
 18930     0D98  3019               	movlw	25
 18931     0D99  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 18932     0D9C  0140               	movlb	0	; select bank0
 18933     0D9D  00AE               	movwf	BMA253_GetAccelDataY@msbData
 18934     0D9E                     l8084:
 18935                           
 18936                           ;mcc_generated_files/application/BMA253_accel.c: 104:     *yAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 18937     0D9E  082A               	movf	BMA253_GetAccelDataY@yAccelData,w
 18938     0D9F  0086               	movwf	6
 18939     0DA0  0187               	clrf	7
 18940     0DA1  0E2D               	swapf	BMA253_GetAccelDataY@lsbData,w
 18941     0DA2  390F               	andlw	15
 18942     0DA3  00AB               	movwf	??_BMA253_GetAccelDataY
 18943     0DA4  0E2E               	swapf	BMA253_GetAccelDataY@msbData,w
 18944     0DA5  00AC               	movwf	??_BMA253_GetAccelDataY+1
 18945     0DA6  39F0               	andlw	240
 18946     0DA7  042B               	iorwf	??_BMA253_GetAccelDataY,w
 18947     0DA8  3FC0               	movwi [0]fsr1
 18948     0DA9  082C               	movf	??_BMA253_GetAccelDataY+1,w
 18949     0DAA  390F               	andlw	15
 18950     0DAB  3FC1               	movwi [1]fsr1
 18951     0DAC                     l1651:
 18952     0DAC  0008               	return
 18953     0DAD                     __end_of_BMA253_GetAccelDataY:
 18954                           
 18955                           	psect	text76
 18956     09DF                     __ptext76:	
 18957 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 18958 ;; Defined at:
 18959 ;;		line 155 in file "mcc_generated_files/application/BMA253_accel.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;		None
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  yNewData        1    9[BANK0 ] _Bool 
 18964 ;; Return value:  Size  Location     Type
 18965 ;;                  1    wreg      _Bool 
 18966 ;; Registers used:
 18967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18968 ;; Tracked objects:
 18969 ;;		On entry : 0/0
 18970 ;;		On exit  : 0/0
 18971 ;;		Unchanged: 0/0
 18972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18977 ;;Total ram usage:        1 bytes
 18978 ;; Hardware stack levels used: 1
 18979 ;; Hardware stack levels required when called: 13
 18980 ;; This function calls:
 18981 ;;		_i2c_read1ByteRegister
 18982 ;; This function is called by:
 18983 ;;		_BMA253_GetAccelDataY
 18984 ;;		_BMA253_GetAccelDataXYZ
 18985 ;; This function uses a non-reentrant model
 18986 ;;
 18987                           
 18988     09DF                     _BMA253_NewAccelDataRdyY:	
 18989                           ;psect for function _BMA253_NewAccelDataRdyY
 18990                           
 18991     09DF                     l8040:	
 18992                           ;incstack = 0
 18993                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18994                           
 18995                           
 18996                           ;mcc_generated_files/application/BMA253_accel.c: 156:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 158:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 18997     09DF  3004               	movlw	4
 18998     09E0  00FD               	movwf	i2c_read1ByteRegister@reg
 18999     09E1  3019               	movlw	25
 19000     09E2  3184  24D9  3189   	fcall	_i2c_read1ByteRegister
 19001     09E5  3901               	andlw	1
 19002     09E6  1D03               	btfss	3,2
 19003     09E7  29E9               	goto	u4161
 19004     09E8  29EB               	goto	u4160
 19005     09E9                     u4161:
 19006     09E9  3001               	movlw	1
 19007     09EA  29EC               	goto	u4170
 19008     09EB                     u4160:
 19009     09EB  3000               	movlw	0
 19010     09EC                     u4170:
 19011     09EC  0140               	movlb	0	; select bank0
 19012     09ED  00A9               	movwf	BMA253_NewAccelDataRdyY@yNewData
 19013     09EE                     l8042:
 19014                           
 19015                           ;mcc_generated_files/application/BMA253_accel.c: 160:     return yNewData;
 19016     09EE  0829               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 19017     09EF                     l1678:
 19018     09EF  0008               	return
 19019     09F0                     __end_of_BMA253_NewAccelDataRdyY:
 19020                           
 19021                           	psect	text77
 19022     0D5F                     __ptext77:	
 19023 ;; *************** function _BMA253_GetAccelDataX *****************
 19024 ;; Defined at:
 19025 ;;		line 83 in file "mcc_generated_files/application/BMA253_accel.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  xAccelData      1   10[BANK0 ] PTR short 
 19028 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;  msbData         1   14[BANK0 ] unsigned char 
 19031 ;;  lsbData         1   13[BANK0 ] unsigned char 
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19041 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19044 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;Total ram usage:        5 bytes
 19046 ;; Hardware stack levels used: 1
 19047 ;; Hardware stack levels required when called: 14
 19048 ;; This function calls:
 19049 ;;		_BMA253_NewAccelDataRdyX
 19050 ;;		_i2c_read1ByteRegister
 19051 ;; This function is called by:
 19052 ;;		_BMA253_GetAccelDataXYZ
 19053 ;; This function uses a non-reentrant model
 19054 ;;
 19055                           
 19056     0D5F                     _BMA253_GetAccelDataX:	
 19057                           ;psect for function _BMA253_GetAccelDataX
 19058                           
 19059     0D5F                     l8070:	
 19060                           ;incstack = 0
 19061 ;; hardware stack exceeded
 19062                           ; Regs used in _BMA253_GetAccelDataX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19063                           
 19064     0D5F                     l8072:	
 19065                           ;mcc_generated_files/application/BMA253_accel.c: 84:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 85:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 86:     while (!BMA253_NewAccelDataRdyX()) {
 19066                           
 19067                           
 19068                           ;mcc_generated_files/application/BMA253_accel.c: 86:     while (!BMA253_NewAccelDataRdyX
      +                          ()) {
 19069     0D5F  3189  21CE  318D   	fcall	_BMA253_NewAccelDataRdyX
 19070     0D62  3A00               	xorlw	0
 19071     0D63  1903               	skipnz
 19072     0D64  2D66               	goto	u4221
 19073     0D65  2D67               	goto	u4220
 19074     0D66                     u4221:
 19075     0D66  2D5F               	goto	l8072
 19076     0D67                     u4220:
 19077     0D67                     l8074:
 19078                           
 19079                           ;mcc_generated_files/application/BMA253_accel.c: 90:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x02));
 19080     0D67  3002               	movlw	2
 19081     0D68  00FD               	movwf	i2c_read1ByteRegister@reg
 19082     0D69  3019               	movlw	25
 19083     0D6A  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 19084     0D6D  0140               	movlb	0	; select bank0
 19085     0D6E  00AD               	movwf	BMA253_GetAccelDataX@lsbData
 19086                           
 19087                           ;mcc_generated_files/application/BMA253_accel.c: 91:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x03));
 19088     0D6F  3003               	movlw	3
 19089     0D70  00FD               	movwf	i2c_read1ByteRegister@reg
 19090     0D71  3019               	movlw	25
 19091     0D72  3184  24D9  318D   	fcall	_i2c_read1ByteRegister
 19092     0D75  0140               	movlb	0	; select bank0
 19093     0D76  00AE               	movwf	BMA253_GetAccelDataX@msbData
 19094     0D77                     l8076:
 19095                           
 19096                           ;mcc_generated_files/application/BMA253_accel.c: 92:     *xAccelData = ((((int16_t) msbD
      +                          ata) << 8) | (lsbData)) >> 4;
 19097     0D77  082A               	movf	BMA253_GetAccelDataX@xAccelData,w
 19098     0D78  0086               	movwf	6
 19099     0D79  0187               	clrf	7
 19100     0D7A  0E2D               	swapf	BMA253_GetAccelDataX@lsbData,w
 19101     0D7B  390F               	andlw	15
 19102     0D7C  00AB               	movwf	??_BMA253_GetAccelDataX
 19103     0D7D  0E2E               	swapf	BMA253_GetAccelDataX@msbData,w
 19104     0D7E  00AC               	movwf	??_BMA253_GetAccelDataX+1
 19105     0D7F  39F0               	andlw	240
 19106     0D80  042B               	iorwf	??_BMA253_GetAccelDataX,w
 19107     0D81  3FC0               	movwi [0]fsr1
 19108     0D82  082C               	movf	??_BMA253_GetAccelDataX+1,w
 19109     0D83  390F               	andlw	15
 19110     0D84  3FC1               	movwi [1]fsr1
 19111     0D85                     l1645:
 19112     0D85  0008               	return
 19113     0D86                     __end_of_BMA253_GetAccelDataX:
 19114                           
 19115                           	psect	text78
 19116     09CE                     __ptext78:	
 19117 ;; *************** function _BMA253_NewAccelDataRdyX *****************
 19118 ;; Defined at:
 19119 ;;		line 147 in file "mcc_generated_files/application/BMA253_accel.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;  xNewData        1    9[BANK0 ] _Bool 
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      _Bool 
 19126 ;; Registers used:
 19127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19137 ;;Total ram usage:        1 bytes
 19138 ;; Hardware stack levels used: 1
 19139 ;; Hardware stack levels required when called: 13
 19140 ;; This function calls:
 19141 ;;		_i2c_read1ByteRegister
 19142 ;; This function is called by:
 19143 ;;		_BMA253_GetAccelDataX
 19144 ;;		_BMA253_GetAccelDataXYZ
 19145 ;; This function uses a non-reentrant model
 19146 ;;
 19147                           
 19148     09CE                     _BMA253_NewAccelDataRdyX:	
 19149                           ;psect for function _BMA253_NewAccelDataRdyX
 19150                           
 19151     09CE                     l8034:	
 19152                           ;incstack = 0
 19153                           ; Regs used in _BMA253_NewAccelDataRdyX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19154                           
 19155                           
 19156                           ;mcc_generated_files/application/BMA253_accel.c: 148:     _Bool xNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 150:     xNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          02)) & (0x01));
 19157     09CE  3002               	movlw	2
 19158     09CF  00FD               	movwf	i2c_read1ByteRegister@reg
 19159     09D0  3019               	movlw	25
 19160     09D1  3184  24D9  3189   	fcall	_i2c_read1ByteRegister
 19161     09D4  3901               	andlw	1
 19162     09D5  1D03               	btfss	3,2
 19163     09D6  29D8               	goto	u4141
 19164     09D7  29DA               	goto	u4140
 19165     09D8                     u4141:
 19166     09D8  3001               	movlw	1
 19167     09D9  29DB               	goto	u4150
 19168     09DA                     u4140:
 19169     09DA  3000               	movlw	0
 19170     09DB                     u4150:
 19171     09DB  0140               	movlb	0	; select bank0
 19172     09DC  00A9               	movwf	BMA253_NewAccelDataRdyX@xNewData
 19173     09DD                     l8036:
 19174                           
 19175                           ;mcc_generated_files/application/BMA253_accel.c: 152:     return xNewData;
 19176     09DD  0829               	movf	BMA253_NewAccelDataRdyX@xNewData,w
 19177     09DE                     l1675:
 19178     09DE  0008               	return
 19179     09DF                     __end_of_BMA253_NewAccelDataRdyX:
 19180                           
 19181                           	psect	text79
 19182     04D9                     __ptext79:	
 19183 ;; *************** function _i2c_read1ByteRegister *****************
 19184 ;; Defined at:
 19185 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19186 ;; Parameters:    Size  Location     Type
 19187 ;;  address         1    wreg     unsigned char 
 19188 ;;  reg             1   13[COMMON] unsigned char 
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;  address         1    4[BANK0 ] unsigned char 
 19191 ;;  x               2    6[BANK0 ] int 
 19192 ;;  d2              1    8[BANK0 ] unsigned char 
 19193 ;;  e               1    5[BANK0 ] enum E358
 19194 ;; Return value:  Size  Location     Type
 19195 ;;                  1    wreg      unsigned char 
 19196 ;; Registers used:
 19197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19198 ;; Tracked objects:
 19199 ;;		On entry : 0/0
 19200 ;;		On exit  : 0/0
 19201 ;;		Unchanged: 0/0
 19202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19204 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19206 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19207 ;;Total ram usage:        6 bytes
 19208 ;; Hardware stack levels used: 1
 19209 ;; Hardware stack levels required when called: 12
 19210 ;; This function calls:
 19211 ;;		_I2C1_Close
 19212 ;;		_I2C1_MasterWrite
 19213 ;;		_I2C1_Open
 19214 ;;		_I2C1_SetAddressNackCallback
 19215 ;;		_I2C1_SetBuffer
 19216 ;;		_I2C1_SetDataCompleteCallback
 19217 ;; This function is called by:
 19218 ;;		_BMA253_GetAccelDataX
 19219 ;;		_BMA253_GetAccelDataY
 19220 ;;		_BMA253_GetAccelDataZ
 19221 ;;		_BMA253_NewAccelDataRdyX
 19222 ;;		_BMA253_NewAccelDataRdyY
 19223 ;;		_BMA253_NewAccelDataRdyZ
 19224 ;;		_BMA253_Initialize
 19225 ;;		_BMA253_GetAccelChipId
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229     04D9                     _i2c_read1ByteRegister:	
 19230                           ;psect for function _i2c_read1ByteRegister
 19231                           
 19232                           
 19233                           ;incstack = 0
 19234                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19235                           ;i2c_read1ByteRegister@address stored from wreg
 19236     04D9  0140               	movlb	0	; select bank0
 19237     04DA  00A4               	movwf	i2c_read1ByteRegister@address
 19238     04DB                     l8004:
 19239                           
 19240                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 19241     04DB  302A               	movlw	42
 19242     04DC  00A8               	movwf	i2c_read1ByteRegister@d2
 19243                           
 19244                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 19245     04DD  3002               	movlw	2
 19246     04DE  00A6               	movwf	i2c_read1ByteRegister@x
 19247     04DF  3000               	movlw	0
 19248     04E0  00A7               	movwf	i2c_read1ByteRegister@x+1
 19249     04E1                     l8010:
 19250     04E1  0140               	movlb	0	; select bank0
 19251     04E2  0824               	movf	i2c_read1ByteRegister@address,w
 19252     04E3  318F  27C5  3184   	fcall	_I2C1_Open
 19253     04E6  3A00               	xorlw	0
 19254     04E7  1903               	skipnz
 19255     04E8  2CEA               	goto	u4101
 19256     04E9  2CEB               	goto	u4100
 19257     04EA                     u4101:
 19258     04EA  2CE1               	goto	l8010
 19259     04EB                     u4100:
 19260     04EB                     l8012:
 19261                           
 19262                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 19263     04EB  3020               	movlw	low _rd1RegCompleteHandler@i2c_simple_master$F3582
 19264     04EC  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 19265     04ED  300B               	movlw	high _rd1RegCompleteHandler@i2c_simple_master$F3582
 19266     04EE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 19267     04EF  3028               	movlw	low i2c_read1ByteRegister@d2
 19268     04F0  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 19269     04F1  3000               	movlw	high i2c_read1ByteRegister@d2
 19270     04F2  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 19271     04F3  3189  212F  3184   	fcall	_I2C1_SetDataCompleteCallback
 19272     04F6                     l8014:
 19273                           
 19274                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 19275     04F6  307D               	movlw	low i2c_read1ByteRegister@reg
 19276     04F7  00F0               	movwf	I2C1_SetBuffer@buffer
 19277     04F8  3000               	movlw	high i2c_read1ByteRegister@reg
 19278     04F9  00F1               	movwf	I2C1_SetBuffer@buffer+1
 19279     04FA  3001               	movlw	1
 19280     04FB  00F2               	movwf	I2C1_SetBuffer@bufferSize
 19281     04FC  3000               	movlw	0
 19282     04FD  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 19283     04FE  3189  2190  3184   	fcall	_I2C1_SetBuffer
 19284     0501                     l8016:
 19285                           
 19286                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 19287     0501  3000               	movlw	0
 19288     0502  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 19289     0503  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 19290     0504  3000               	movlw	0
 19291     0505  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 19292     0506  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 19293     0507  3189  2156  3184   	fcall	_I2C1_SetAddressNackCallback
 19294     050A                     l8018:
 19295                           
 19296                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 19297     050A  3188  200D  3184   	fcall	_I2C1_MasterWrite
 19298     050D                     l8020:	
 19299                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 19300                           
 19301     050D  318B  2378  3184   	fcall	_I2C1_Close
 19302     0510  0140               	movlb	0	; select bank0
 19303     0511  00A5               	movwf	i2c_read1ByteRegister@e
 19304     0512  0325               	decf	i2c_read1ByteRegister@e,w
 19305     0513  1903               	btfsc	3,2
 19306     0514  2D16               	goto	u4111
 19307     0515  2D17               	goto	u4110
 19308     0516                     u4111:
 19309     0516  2D0D               	goto	l8020
 19310     0517                     u4110:
 19311     0517                     l8022:
 19312                           
 19313                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 19314     0517  0825               	movf	i2c_read1ByteRegister@e,w
 19315     0518  1D03               	btfss	3,2
 19316     0519  2D1B               	goto	u4121
 19317     051A  2D1C               	goto	u4120
 19318     051B                     u4121:
 19319     051B  2D1D               	goto	l8026
 19320     051C                     u4120:
 19321     051C  2D27               	goto	l8030
 19322     051D                     l8026:
 19323                           
 19324                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 19325     051D  30FF               	movlw	255
 19326     051E  07A6               	addwf	i2c_read1ByteRegister@x,f
 19327     051F  30FF               	movlw	255
 19328     0520  3DA7               	addwfc	i2c_read1ByteRegister@x+1,f
 19329     0521                     l8028:
 19330     0521  0826               	movf	i2c_read1ByteRegister@x,w
 19331     0522  0427               	iorwf	i2c_read1ByteRegister@x+1,w
 19332     0523  1D03               	btfss	3,2
 19333     0524  2D26               	goto	u4131
 19334     0525  2D27               	goto	u4130
 19335     0526                     u4131:
 19336     0526  2CE1               	goto	l8010
 19337     0527                     u4130:
 19338     0527                     l8030:
 19339                           
 19340                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 19341     0527  0828               	movf	i2c_read1ByteRegister@d2,w
 19342     0528                     l1959:
 19343     0528  0008               	return
 19344     0529                     __end_of_i2c_read1ByteRegister:
 19345                           
 19346                           	psect	text80
 19347     0956                     __ptext80:	
 19348 ;; *************** function _I2C1_SetAddressNackCallback *****************
 19349 ;; Defined at:
 19350 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 19351 ;; Parameters:    Size  Location     Type
 19352 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19353 ;;		 -> NULL(1), 
 19354 ;;  ptr             2    7[COMMON] PTR void 
 19355 ;;		 -> NULL(0), 
 19356 ;; Auto vars:     Size  Location     Type
 19357 ;;		None
 19358 ;; Return value:  Size  Location     Type
 19359 ;;                  1    wreg      void 
 19360 ;; Registers used:
 19361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19362 ;; Tracked objects:
 19363 ;;		On entry : 0/0
 19364 ;;		On exit  : 0/0
 19365 ;;		Unchanged: 0/0
 19366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;Total ram usage:        4 bytes
 19372 ;; Hardware stack levels used: 1
 19373 ;; Hardware stack levels required when called: 5
 19374 ;; This function calls:
 19375 ;;		_I2C1_SetCallback
 19376 ;; This function is called by:
 19377 ;;		_i2c_read1ByteRegister
 19378 ;;		_i2c_read2ByteRegister
 19379 ;;		_I2C1_Read1ByteRegister
 19380 ;;		_I2C1_Read2ByteRegister
 19381 ;;		_I2C1_Write1ByteRegister
 19382 ;;		_I2C1_Write2ByteRegister
 19383 ;;		_I2C1_WriteNBytes
 19384 ;;		_I2C1_ReadDataBlock
 19385 ;;		_i2c_write1ByteRegister
 19386 ;;		_i2c_writeNBytes
 19387 ;;		_i2c_write2ByteRegister
 19388 ;;		_i2c_readDataBlock
 19389 ;; This function uses a non-reentrant model
 19390 ;;
 19391                           
 19392     0956                     _I2C1_SetAddressNackCallback:	
 19393                           ;psect for function _I2C1_SetAddressNackCallback
 19394                           
 19395     0956                     l7986:	
 19396                           ;incstack = 0
 19397                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19398                           
 19399                           
 19400                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 19401     0956  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 19402     0957  00F1               	movwf	I2C1_SetCallback@cb+1
 19403     0958  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 19404     0959  00F0               	movwf	I2C1_SetCallback@cb
 19405     095A  0878               	movf	I2C1_SetAddressNackCallback@ptr+1,w
 19406     095B  00F3               	movwf	I2C1_SetCallback@ptr+1
 19407     095C  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 19408     095D  00F2               	movwf	I2C1_SetCallback@ptr
 19409     095E  3002               	movlw	2
 19410     095F  318F  271A  3189   	fcall	_I2C1_SetCallback
 19411     0962                     l684:
 19412     0962  0008               	return
 19413     0963                     __end_of_I2C1_SetAddressNackCallback:
 19414                           
 19415                           	psect	text81
 19416     0FC5                     __ptext81:	
 19417 ;; *************** function _I2C1_Open *****************
 19418 ;; Defined at:
 19419 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 19420 ;; Parameters:    Size  Location     Type
 19421 ;;  address         1    wreg     unsigned char 
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;  address         1    0[COMMON] unsigned char 
 19424 ;;  returnValue     1    1[COMMON] enum E358
 19425 ;; Return value:  Size  Location     Type
 19426 ;;                  1    wreg      enum E358
 19427 ;; Registers used:
 19428 ;;		wreg, status,2, status,0, pclath, cstack
 19429 ;; Tracked objects:
 19430 ;;		On entry : 0/0
 19431 ;;		On exit  : 0/0
 19432 ;;		Unchanged: 0/0
 19433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19438 ;;Total ram usage:        2 bytes
 19439 ;; Hardware stack levels used: 1
 19440 ;; Hardware stack levels required when called: 5
 19441 ;; This function calls:
 19442 ;;		_I2C1_MasterClearIrq
 19443 ;;		_I2C1_MasterOpen
 19444 ;; This function is called by:
 19445 ;;		_i2c_read1ByteRegister
 19446 ;;		_i2c_read2ByteRegister
 19447 ;;		_I2C1_Read1ByteRegister
 19448 ;;		_I2C1_Read2ByteRegister
 19449 ;;		_I2C1_Write1ByteRegister
 19450 ;;		_I2C1_Write2ByteRegister
 19451 ;;		_I2C1_WriteNBytes
 19452 ;;		_I2C1_ReadNBytes
 19453 ;;		_I2C1_ReadDataBlock
 19454 ;;		_i2c_write1ByteRegister
 19455 ;;		_i2c_writeNBytes
 19456 ;;		_i2c_write2ByteRegister
 19457 ;;		_i2c_readDataBlock
 19458 ;;		_i2c_readNBytes
 19459 ;; This function uses a non-reentrant model
 19460 ;;
 19461                           
 19462     0FC5                     _I2C1_Open:	
 19463                           ;psect for function _I2C1_Open
 19464                           
 19465                           
 19466                           ;incstack = 0
 19467                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 19468                           ;I2C1_Open@address stored from wreg
 19469     0FC5  00F0               	movwf	I2C1_Open@address
 19470     0FC6                     l7950:
 19471                           
 19472                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 19473     0FC6  3001               	movlw	1
 19474     0FC7  00F1               	movwf	I2C1_Open@returnValue
 19475                           
 19476                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 19477     0FC8  0143               	movlb	3	; select bank3
 19478     0FC9  1943               	btfsc	(_I2C1_Status^(0+384)+35),2
 19479     0FCA  2FCC               	goto	u4081
 19480     0FCB  2FCD               	goto	u4080
 19481     0FCC                     u4081:
 19482     0FCC  2FFE               	goto	l7982
 19483     0FCD                     u4080:
 19484     0FCD                     l7952:
 19485                           
 19486                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 19487     0FCD  0870               	movf	I2C1_Open@address,w
 19488     0FCE  00BC               	movwf	(_I2C1_Status^(0+384)+28)
 19489     0FCF                     l7954:
 19490                           
 19491                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 19492     0FCF  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 19493     0FD0                     l7956:
 19494                           
 19495                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 19496     0FD0  1543               	bsf	(_I2C1_Status^(0+384)+35),2
 19497     0FD1                     l7958:
 19498                           
 19499                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 19500     0FD1  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 19501     0FD2                     l7960:
 19502                           
 19503                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 19504     0FD2  300E               	movlw	14
 19505     0FD3  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 19506     0FD4                     l7962:
 19507                           
 19508                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 19509     0FD4  30F4               	movlw	244
 19510     0FD5  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 19511     0FD6  3001               	movlw	1
 19512     0FD7  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 19513     0FD8                     l7964:
 19514                           
 19515                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 19516     0FD8  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 19517                           
 19518                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 19519     0FD9  309C               	movlw	low _I2C1_CallbackReturnStop
 19520     0FDA  00A0               	movwf	_I2C1_Status^(0+384)
 19521     0FDB  3017               	movlw	high _I2C1_CallbackReturnStop
 19522     0FDC  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 19523     0FDD                     l7966:
 19524                           
 19525                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 19526     0FDD  01AC               	clrf	(_I2C1_Status^(0+384)+12)
 19527     0FDE  01AD               	clrf	((_I2C1_Status+1)^(0+384)+12)
 19528     0FDF                     l7968:
 19529                           
 19530                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 19531     0FDF  309C               	movlw	low _I2C1_CallbackReturnStop
 19532     0FE0  00A2               	movwf	(_I2C1_Status^(0+384)+2)
 19533     0FE1  3017               	movlw	high _I2C1_CallbackReturnStop
 19534     0FE2  00A3               	movwf	(_I2C1_Status^(0+384)+3)
 19535                           
 19536                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 19537     0FE3  01AE               	clrf	(_I2C1_Status^(0+384)+14)
 19538     0FE4  01AF               	clrf	((_I2C1_Status+1)^(0+384)+14)
 19539     0FE5                     l7970:
 19540                           
 19541                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 19542     0FE5  309C               	movlw	low _I2C1_CallbackReturnStop
 19543     0FE6  00A4               	movwf	(_I2C1_Status^(0+384)+4)
 19544     0FE7  3017               	movlw	high _I2C1_CallbackReturnStop
 19545     0FE8  00A5               	movwf	(_I2C1_Status^(0+384)+5)
 19546     0FE9                     l7972:
 19547                           
 19548                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 19549     0FE9  01B0               	clrf	(_I2C1_Status^(0+384)+16)
 19550     0FEA  01B1               	clrf	((_I2C1_Status+1)^(0+384)+16)
 19551                           
 19552                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 19553     0FEB  309C               	movlw	low _I2C1_CallbackReturnStop
 19554     0FEC  00A6               	movwf	(_I2C1_Status^(0+384)+6)
 19555     0FED  3017               	movlw	high _I2C1_CallbackReturnStop
 19556     0FEE  00A7               	movwf	(_I2C1_Status^(0+384)+7)
 19557     0FEF                     l7974:
 19558                           
 19559                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 19560     0FEF  01B2               	clrf	(_I2C1_Status^(0+384)+18)
 19561     0FF0  01B3               	clrf	((_I2C1_Status+1)^(0+384)+18)
 19562     0FF1                     l7976:
 19563                           
 19564                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 19565     0FF1  3002               	movlw	low _I2C1_CallbackReturnReset
 19566     0FF2  00A8               	movwf	(_I2C1_Status^(0+384)+8)
 19567     0FF3  3000               	movlw	high _I2C1_CallbackReturnReset
 19568     0FF4  00A9               	movwf	(_I2C1_Status^(0+384)+9)
 19569                           
 19570                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 19571     0FF5  01B4               	clrf	(_I2C1_Status^(0+384)+20)
 19572     0FF6  01B5               	clrf	((_I2C1_Status+1)^(0+384)+20)
 19573     0FF7                     l7978:
 19574                           
 19575                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 19576     0FF7  3197  279E  318F   	fcall	_I2C1_MasterClearIrq
 19577     0FFA                     l7980:
 19578                           
 19579                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 19580     0FFA  3189  2149  318F   	fcall	_I2C1_MasterOpen
 19581                           
 19582                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 19583     0FFD  01F1               	clrf	I2C1_Open@returnValue
 19584     0FFE                     l7982:
 19585                           
 19586                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 19587     0FFE  0871               	movf	I2C1_Open@returnValue,w
 19588     0FFF                     l652:
 19589     0FFF  0008               	return
 19590     1000                     __end_of_I2C1_Open:
 19591                           
 19592                           	psect	text82
 19593     0949                     __ptext82:	
 19594 ;; *************** function _I2C1_MasterOpen *****************
 19595 ;; Defined at:
 19596 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;		None
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;		None
 19601 ;; Return value:  Size  Location     Type
 19602 ;;                  1    wreg      _Bool 
 19603 ;; Registers used:
 19604 ;;		status,2
 19605 ;; Tracked objects:
 19606 ;;		On entry : 0/0
 19607 ;;		On exit  : 0/0
 19608 ;;		Unchanged: 0/0
 19609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19614 ;;Total ram usage:        0 bytes
 19615 ;; Hardware stack levels used: 1
 19616 ;; Hardware stack levels required when called: 4
 19617 ;; This function calls:
 19618 ;;		Nothing
 19619 ;; This function is called by:
 19620 ;;		_I2C1_Open
 19621 ;; This function uses a non-reentrant model
 19622 ;;
 19623                           
 19624     0949                     _I2C1_MasterOpen:	
 19625                           ;psect for function _I2C1_MasterOpen
 19626                           
 19627     0949                     l7916:	
 19628                           ;incstack = 0
 19629                           ; Regs used in _I2C1_MasterOpen: [status,2]
 19630                           
 19631                           
 19632                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 19633     0949  0143               	movlb	3	; select bank3
 19634     094A  1A90               	btfsc	16,5	;volatile
 19635     094B  294D               	goto	u4051
 19636     094C  294E               	goto	u4050
 19637     094D                     u4051:
 19638     094D  2955               	goto	l817
 19639     094E                     u4050:
 19640     094E                     l7918:
 19641                           
 19642                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 19643     094E  018F               	clrf	15	;volatile
 19644     094F                     l7920:
 19645                           
 19646                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 19647     094F  3008               	movlw	8
 19648     0950  0090               	movwf	16	;volatile
 19649                           
 19650                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 19651     0951  0191               	clrf	17	;volatile
 19652     0952                     l7922:
 19653                           
 19654                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x03;
 19655     0952  3003               	movlw	3
 19656     0953  008D               	movwf	13	;volatile
 19657     0954                     l7924:
 19658                           
 19659                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 19660     0954  1690               	bsf	16,5	;volatile
 19661     0955                     l817:
 19662     0955  0008               	return
 19663     0956                     __end_of_I2C1_MasterOpen:
 19664                           
 19665                           	psect	text83
 19666     080D                     __ptext83:	
 19667 ;; *************** function _I2C1_MasterWrite *****************
 19668 ;; Defined at:
 19669 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;		None
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  1    wreg      enum E358
 19676 ;; Registers used:
 19677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19687 ;;Total ram usage:        0 bytes
 19688 ;; Hardware stack levels used: 1
 19689 ;; Hardware stack levels required when called: 11
 19690 ;; This function calls:
 19691 ;;		_I2C1_MasterOperation
 19692 ;; This function is called by:
 19693 ;;		_i2c_read1ByteRegister
 19694 ;;		_i2c_read2ByteRegister
 19695 ;;		_I2C1_Read1ByteRegister
 19696 ;;		_I2C1_Read2ByteRegister
 19697 ;;		_I2C1_Write1ByteRegister
 19698 ;;		_I2C1_Write2ByteRegister
 19699 ;;		_I2C1_WriteNBytes
 19700 ;;		_I2C1_ReadDataBlock
 19701 ;;		_i2c_write1ByteRegister
 19702 ;;		_i2c_writeNBytes
 19703 ;;		_i2c_write2ByteRegister
 19704 ;;		_i2c_readDataBlock
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708     080D                     _I2C1_MasterWrite:	
 19709                           ;psect for function _I2C1_MasterWrite
 19710                           
 19711     080D                     l7988:	
 19712                           ;incstack = 0
 19713                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19714                           
 19715                           
 19716                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 19717     080D  3000               	movlw	0
 19718     080E  318C  2487  3188   	fcall	_I2C1_MasterOperation
 19719     0811                     l668:
 19720     0811  0008               	return
 19721     0812                     __end_of_I2C1_MasterWrite:
 19722                           
 19723                           	psect	text84
 19724     0C87                     __ptext84:	
 19725 ;; *************** function _I2C1_MasterOperation *****************
 19726 ;; Defined at:
 19727 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 19728 ;; Parameters:    Size  Location     Type
 19729 ;;  read            1    wreg     _Bool 
 19730 ;; Auto vars:     Size  Location     Type
 19731 ;;  read            1    2[BANK0 ] _Bool 
 19732 ;;  returnValue     1    3[BANK0 ] enum E358
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  1    wreg      enum E358
 19735 ;; Registers used:
 19736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/0
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19746 ;;Total ram usage:        2 bytes
 19747 ;; Hardware stack levels used: 1
 19748 ;; Hardware stack levels required when called: 10
 19749 ;; This function calls:
 19750 ;;		_I2C1_MasterStart
 19751 ;;		_I2C1_Poller
 19752 ;; This function is called by:
 19753 ;;		_I2C1_MasterWrite
 19754 ;;		_I2C1_MasterRead
 19755 ;; This function uses a non-reentrant model
 19756 ;;
 19757                           
 19758     0C87                     _I2C1_MasterOperation:	
 19759                           ;psect for function _I2C1_MasterOperation
 19760                           
 19761                           
 19762                           ;incstack = 0
 19763                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19764                           ;I2C1_MasterOperation@read stored from wreg
 19765     0C87  0140               	movlb	0	; select bank0
 19766     0C88  00A2               	movwf	I2C1_MasterOperation@read
 19767     0C89                     l7932:
 19768                           
 19769                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 19770     0C89  3001               	movlw	1
 19771     0C8A  00A3               	movwf	I2C1_MasterOperation@returnValue
 19772                           
 19773                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 19774     0C8B  0143               	movlb	3	; select bank3
 19775     0C8C  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 19776     0C8D  2C8F               	goto	u4061
 19777     0C8E  2C90               	goto	u4060
 19778     0C8F                     u4061:
 19779     0C8F  2CA5               	goto	l7946
 19780     0C90                     u4060:
 19781     0C90                     l7934:
 19782                           
 19783                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 19784     0C90  14C3               	bsf	(_I2C1_Status^(0+384)+35),1
 19785     0C91                     l7936:
 19786                           
 19787                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 19788     0C91  0140               	movlb	0	; select bank0
 19789     0C92  01A3               	clrf	I2C1_MasterOperation@returnValue
 19790     0C93                     l7938:
 19791                           
 19792                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 19793     0C93  0822               	movf	I2C1_MasterOperation@read,w
 19794     0C94  1903               	btfsc	3,2
 19795     0C95  2C97               	goto	u4071
 19796     0C96  2C98               	goto	u4070
 19797     0C97                     u4071:
 19798     0C97  2C9C               	goto	l660
 19799     0C98                     u4070:
 19800     0C98                     l7940:
 19801                           
 19802                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 19803     0C98  3001               	movlw	1
 19804     0C99  0143               	movlb	3	; select bank3
 19805     0C9A  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 19806                           
 19807                           ;mcc_generated_files/i2c1_master.c: 235:         }
 19808     0C9B  2C9F               	goto	l7942
 19809     0C9C                     l660:	
 19810                           ;mcc_generated_files/i2c1_master.c: 236:         else
 19811                           
 19812                           
 19813                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 19814     0C9C  3002               	movlw	2
 19815     0C9D  0143               	movlb	3	; select bank3
 19816     0C9E  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 19817     0C9F                     l7942:
 19818                           
 19819                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 19820     0C9F  3197  27A7  318C   	fcall	_I2C1_MasterStart
 19821     0CA2                     l7944:
 19822                           
 19823                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 19824     0CA2  3189  213C  318C   	fcall	_I2C1_Poller
 19825     0CA5                     l7946:
 19826                           
 19827                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 19828     0CA5  0140               	movlb	0	; select bank0
 19829     0CA6  0823               	movf	I2C1_MasterOperation@returnValue,w
 19830     0CA7                     l662:
 19831     0CA7  0008               	return
 19832     0CA8                     __end_of_I2C1_MasterOperation:
 19833                           
 19834                           	psect	text85
 19835     093C                     __ptext85:	
 19836 ;; *************** function _I2C1_Poller *****************
 19837 ;; Defined at:
 19838 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;		None
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;		None
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  1    wreg      void 
 19845 ;; Registers used:
 19846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/0
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19856 ;;Total ram usage:        0 bytes
 19857 ;; Hardware stack levels used: 1
 19858 ;; Hardware stack levels required when called: 9
 19859 ;; This function calls:
 19860 ;;		_I2C1_MasterFsm
 19861 ;;		_I2C1_MasterWaitForEvent
 19862 ;; This function is called by:
 19863 ;;		_I2C1_MasterOperation
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867     093C                     _I2C1_Poller:	
 19868                           ;psect for function _I2C1_Poller
 19869                           
 19870     093C                     l7908:	
 19871                           ;incstack = 0
 19872                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19873                           
 19874                           
 19875                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 19876     093C  2943               	goto	l7914
 19877     093D                     l7910:
 19878                           
 19879                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 19880     093D  3188  201D  3189   	fcall	_I2C1_MasterWaitForEvent
 19881     0940                     l7912:
 19882                           
 19883                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 19884     0940  318D  25D4  3189   	fcall	_I2C1_MasterFsm
 19885     0943                     l7914:
 19886                           
 19887                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 19888     0943  0143               	movlb	3	; select bank3
 19889     0944  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 19890     0945  2947               	goto	u4041
 19891     0946  2948               	goto	u4040
 19892     0947                     u4041:
 19893     0947  293D               	goto	l7910
 19894     0948                     u4040:
 19895     0948                     l701:
 19896     0948  0008               	return
 19897     0949                     __end_of_I2C1_Poller:
 19898                           
 19899                           	psect	text86
 19900     081D                     __ptext86:	
 19901 ;; *************** function _I2C1_MasterWaitForEvent *****************
 19902 ;; Defined at:
 19903 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 19904 ;; Parameters:    Size  Location     Type
 19905 ;;		None
 19906 ;; Auto vars:     Size  Location     Type
 19907 ;;		None
 19908 ;; Return value:  Size  Location     Type
 19909 ;;                  1    wreg      void 
 19910 ;; Registers used:
 19911 ;;		None
 19912 ;; Tracked objects:
 19913 ;;		On entry : 0/0
 19914 ;;		On exit  : 0/0
 19915 ;;		Unchanged: 0/0
 19916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19921 ;;Total ram usage:        0 bytes
 19922 ;; Hardware stack levels used: 1
 19923 ;; Hardware stack levels required when called: 4
 19924 ;; This function calls:
 19925 ;;		Nothing
 19926 ;; This function is called by:
 19927 ;;		_I2C1_Poller
 19928 ;; This function uses a non-reentrant model
 19929 ;;
 19930                           
 19931     081D                     _I2C1_MasterWaitForEvent:	
 19932                           ;psect for function _I2C1_MasterWaitForEvent
 19933                           
 19934     081D                     l874:	
 19935                           ;incstack = 0
 19936                           ; Regs used in _I2C1_MasterWaitForEvent: []
 19937                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 19938                           
 19939                           
 19940                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 19941     081D  014E               	movlb	14	; select bank14
 19942     081E  1C0F               	btfss	15,0	;volatile
 19943     081F  2821               	goto	u4011
 19944     0820  2822               	goto	u4010
 19945     0821                     u4011:
 19946     0821  281D               	goto	l874
 19947     0822                     u4010:
 19948     0822                     l878:
 19949     0822  0008               	return
 19950     0823                     __end_of_I2C1_MasterWaitForEvent:
 19951                           
 19952                           	psect	text87
 19953     0DD4                     __ptext87:	
 19954 ;; *************** function _I2C1_MasterFsm *****************
 19955 ;; Defined at:
 19956 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;		None
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;		None
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  1    wreg      void 
 19963 ;; Registers used:
 19964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19965 ;; Tracked objects:
 19966 ;;		On entry : 0/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19974 ;;Total ram usage:        2 bytes
 19975 ;; Hardware stack levels used: 1
 19976 ;; Hardware stack levels required when called: 8
 19977 ;; This function calls:
 19978 ;;		_I2C1_DO_ADDRESS_NACK
 19979 ;;		_I2C1_DO_IDLE
 19980 ;;		_I2C1_DO_RCEN
 19981 ;;		_I2C1_DO_RESET
 19982 ;;		_I2C1_DO_RX
 19983 ;;		_I2C1_DO_RX_ACK
 19984 ;;		_I2C1_DO_RX_NACK_RESTART
 19985 ;;		_I2C1_DO_RX_NACK_STOP
 19986 ;;		_I2C1_DO_SEND_ADR_READ
 19987 ;;		_I2C1_DO_SEND_ADR_WRITE
 19988 ;;		_I2C1_DO_SEND_RESTART
 19989 ;;		_I2C1_DO_SEND_RESTART_READ
 19990 ;;		_I2C1_DO_SEND_RESTART_WRITE
 19991 ;;		_I2C1_DO_SEND_STOP
 19992 ;;		_I2C1_DO_TX
 19993 ;;		_I2C1_DO_TX_EMPTY
 19994 ;;		_I2C1_MasterClearIrq
 19995 ;;		_I2C1_MasterIsNack
 19996 ;; This function is called by:
 19997 ;;		_I2C1_Poller
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           
 20001     0DD4                     _I2C1_MasterFsm:	
 20002                           ;psect for function _I2C1_MasterFsm
 20003                           
 20004     0DD4                     l7896:	
 20005                           ;incstack = 0
 20006                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20007                           
 20008                           
 20009                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 20010     0DD4  3197  279E  318D   	fcall	_I2C1_MasterClearIrq
 20011     0DD7                     l7898:
 20012                           
 20013                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 20014     0DD7  0143               	movlb	3	; select bank3
 20015     0DD8  1C43               	btfss	(_I2C1_Status^(0+384)+35),0
 20016     0DD9  2DDB               	goto	u4021
 20017     0DDA  2DDC               	goto	u4020
 20018     0DDB                     u4021:
 20019     0DDB  2DE7               	goto	l7904
 20020     0DDC                     u4020:
 20021     0DDC                     l7900:
 20022     0DDC  3188  2017  318D   	fcall	_I2C1_MasterIsNack
 20023     0DDF  3A00               	xorlw	0
 20024     0DE0  1903               	skipnz
 20025     0DE1  2DE3               	goto	u4031
 20026     0DE2  2DE4               	goto	u4030
 20027     0DE3                     u4031:
 20028     0DE3  2DE7               	goto	l7904
 20029     0DE4                     u4030:
 20030     0DE4                     l7902:
 20031                           
 20032                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 20033     0DE4  300F               	movlw	15
 20034     0DE5  0143               	movlb	3	; select bank3
 20035     0DE6  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 20036     0DE7                     l7904:
 20037                           
 20038                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 20039     0DE7  0143               	movlb	3	; select bank3
 20040     0DE8  0841               	movf	(_I2C1_Status^(0+384)+33),w
 20041     0DE9  0140               	movlb	0	; select bank0
 20042     0DEA  00A0               	movwf	??_I2C1_MasterFsm
 20043     0DEB  01A1               	clrf	??_I2C1_MasterFsm+1
 20044     0DEC  35A0               	lslf	??_I2C1_MasterFsm,f
 20045     0DED  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 20046     0DEE  3048               	movlw	low _i2c1_fsmStateTable
 20047     0DEF  0720               	addwf	??_I2C1_MasterFsm,w
 20048     0DF0  0084               	movwf	4
 20049     0DF1  3010               	movlw	high _i2c1_fsmStateTable
 20050     0DF2  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 20051     0DF3  3880               	iorlw	128
 20052     0DF4  0085               	movwf	5
 20053     0DF5  3F01               	moviw [1]fsr0
 20054     0DF6  008A               	movwf	10
 20055     0DF7  3F00               	moviw [0]fsr0
 20056     0DF8  000A               	callw
 20057     0DF9  318D               	pagesel	$
 20058     0DFA  0143               	movlb	3	; select bank3
 20059     0DFB  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 20060     0DFC                     l705:
 20061     0DFC  0008               	return
 20062     0DFD                     __end_of_I2C1_MasterFsm:
 20063                           
 20064                           	psect	text88
 20065     0DFD                     __ptext88:	
 20066 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 20067 ;; Defined at:
 20068 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 20069 ;; Parameters:    Size  Location     Type
 20070 ;;		None
 20071 ;; Auto vars:     Size  Location     Type
 20072 ;;		None
 20073 ;; Return value:  Size  Location     Type
 20074 ;;                  1    wreg      enum E12795
 20075 ;; Registers used:
 20076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20077 ;; Tracked objects:
 20078 ;;		On entry : 0/0
 20079 ;;		On exit  : 0/0
 20080 ;;		Unchanged: 0/0
 20081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20086 ;;Total ram usage:        2 bytes
 20087 ;; Hardware stack levels used: 1
 20088 ;; Hardware stack levels required when called: 7
 20089 ;; This function calls:
 20090 ;;		NULL
 20091 ;;		_I2C1_CallbackReturnReset
 20092 ;;		_I2C1_CallbackReturnStop
 20093 ;;		_I2C1_DO_SEND_RESTART
 20094 ;;		_I2C1_DO_SEND_STOP
 20095 ;;		_rd1RegCompleteHandler
 20096 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 20097 ;;		_rd2RegCompleteHandler
 20098 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 20099 ;;		_rdBlkRegCompleteHandler
 20100 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 20101 ;;		_wr1RegCompleteHandler
 20102 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 20103 ;;		_wr2RegCompleteHandler
 20104 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 20105 ;; This function is called by:
 20106 ;;		_I2C1_MasterFsm
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110     0DFD                     _I2C1_DO_ADDRESS_NACK:	
 20111                           ;psect for function _I2C1_DO_ADDRESS_NACK
 20112                           
 20113     0DFD                     l7874:	
 20114                           ;incstack = 0
 20115                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20116                           
 20117                           
 20118                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 20119     0DFD  0143               	movlb	3	; select bank3
 20120     0DFE  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 20121                           
 20122                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 20123     0DFF  3002               	movlw	2
 20124     0E00  00C2               	movwf	(_I2C1_Status^(0+384)+34)
 20125                           
 20126                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 20127     0E01  2E0A               	goto	l7886
 20128     0E02                     l7876:
 20129                           
 20130                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 20131     0E02  3197  27EC  318D   	fcall	_I2C1_DO_SEND_RESTART
 20132     0E05  2E27               	goto	l796
 20133     0E06                     l7880:
 20134                           
 20135                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 20136     0E06  3197  27F1  318D   	fcall	_I2C1_DO_SEND_STOP
 20137     0E09  2E27               	goto	l796
 20138     0E0A                     l7886:
 20139     0E0A  0831               	movf	((_I2C1_Status+1)^(0+384)+16),w
 20140     0E0B  00FA               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p+1
 20141     0E0C  0830               	movf	(_I2C1_Status^(0+384)+16),w
 20142     0E0D  00F9               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p
 20143     0E0E  30A0               	movlw	low _I2C1_Status
 20144     0E0F  0086               	movwf	6
 20145     0E10  3001               	movlw	high _I2C1_Status
 20146     0E11  0087               	movwf	7
 20147     0E12  3144               	addfsr 1,4
 20148     0E13  3F41               	moviw [1]fsr1
 20149     0E14  008A               	movwf	10
 20150     0E15  3F40               	moviw [0]fsr1
 20151     0E16  000A               	callw
 20152     0E17  318D               	pagesel	$
 20153     0E18  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK
 20154     0E19  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 20155                           
 20156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20157                           ; Switch size 1, requested type "simple"
 20158                           ; Number of cases is 1, Range of values is 0 to 0
 20159                           ; switch strategies available:
 20160                           ; Name         Instructions Cycles
 20161                           ; simple_byte            4     3 (average)
 20162                           ; direct_byte            8     6 (fixed)
 20163                           ; jumptable            260     6 (fixed)
 20164                           ;	Chosen strategy is simple_byte
 20165     0E1A  087C               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 20166     0E1B  3A00               	xorlw	0	; case 0
 20167     0E1C  1903               	skipnz
 20168     0E1D  2E1F               	goto	l8558
 20169     0E1E  2E06               	goto	l7880
 20170     0E1F                     l8558:
 20171                           
 20172                           ; Switch size 1, requested type "simple"
 20173                           ; Number of cases is 2, Range of values is 2 to 3
 20174                           ; switch strategies available:
 20175                           ; Name         Instructions Cycles
 20176                           ; simple_byte            7     4 (average)
 20177                           ; direct_byte           13     9 (fixed)
 20178                           ; jumptable            263     9 (fixed)
 20179                           ;	Chosen strategy is simple_byte
 20180     0E1F  087B               	movf	??_I2C1_DO_ADDRESS_NACK,w
 20181     0E20  3A02               	xorlw	2	; case 2
 20182     0E21  1903               	skipnz
 20183     0E22  2E02               	goto	l7876
 20184     0E23  3A01               	xorlw	1	; case 3
 20185     0E24  1903               	skipnz
 20186     0E25  2E02               	goto	l7876
 20187     0E26  2E06               	goto	l7880
 20188     0E27                     l796:
 20189     0E27  0008               	return
 20190     0E28                     __end_of_I2C1_DO_ADDRESS_NACK:
 20191                           
 20192                           	psect	text89
 20193     0808                     __ptext89:	
 20194 ;; *************** function _I2C1_DO_RESET *****************
 20195 ;; Defined at:
 20196 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;		None
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;		None
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  1    wreg      enum E12795
 20203 ;; Registers used:
 20204 ;;		wreg, status,2
 20205 ;; Tracked objects:
 20206 ;;		On entry : 0/0
 20207 ;;		On exit  : 0/0
 20208 ;;		Unchanged: 0/0
 20209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20214 ;;Total ram usage:        0 bytes
 20215 ;; Hardware stack levels used: 1
 20216 ;; Hardware stack levels required when called: 4
 20217 ;; This function calls:
 20218 ;;		Nothing
 20219 ;; This function is called by:
 20220 ;;		_I2C1_MasterFsm
 20221 ;; This function uses a non-reentrant model
 20222 ;;
 20223                           
 20224     0808                     _I2C1_DO_RESET:	
 20225                           ;psect for function _I2C1_DO_RESET
 20226                           
 20227     0808                     l7866:	
 20228                           ;incstack = 0
 20229                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 20230                           
 20231                           
 20232                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 20233     0808  0143               	movlb	3	; select bank3
 20234     0809  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 20235     080A                     l7868:
 20236                           
 20237                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 20238     080A  01C2               	clrf	(_I2C1_Status^(0+384)+34)
 20239     080B                     l7870:
 20240                           
 20241                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 20242     080B  300E               	movlw	14
 20243     080C                     l790:
 20244     080C  0008               	return
 20245     080D                     __end_of_I2C1_DO_RESET:
 20246                           
 20247                           	psect	text90
 20248     0803                     __ptext90:	
 20249 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 20250 ;; Defined at:
 20251 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 20252 ;; Parameters:    Size  Location     Type
 20253 ;;		None
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;		None
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      enum E12795
 20258 ;; Registers used:
 20259 ;;		wreg, status,2, status,0, pclath, cstack
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20269 ;;Total ram usage:        0 bytes
 20270 ;; Hardware stack levels used: 1
 20271 ;; Hardware stack levels required when called: 5
 20272 ;; This function calls:
 20273 ;;		_I2C1_MasterSendNack
 20274 ;; This function is called by:
 20275 ;;		_I2C1_DO_RX
 20276 ;;		_I2C1_MasterFsm
 20277 ;; This function uses a non-reentrant model
 20278 ;;
 20279                           
 20280     0803                     _I2C1_DO_RX_NACK_RESTART:	
 20281                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 20282                           
 20283     0803                     l7666:	
 20284                           ;incstack = 0
 20285                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20286                           
 20287                           
 20288                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 20289     0803  3197  27D0  3188   	fcall	_I2C1_MasterSendNack
 20290     0806                     l7668:
 20291                           
 20292                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 20293     0806  3009               	movlw	9
 20294     0807                     l787:
 20295     0807  0008               	return
 20296     0808                     __end_of_I2C1_DO_RX_NACK_RESTART:
 20297                           
 20298                           	psect	text91
 20299     17FB                     __ptext91:	
 20300 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 20301 ;; Defined at:
 20302 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 20303 ;; Parameters:    Size  Location     Type
 20304 ;;		None
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;		None
 20307 ;; Return value:  Size  Location     Type
 20308 ;;                  1    wreg      enum E12795
 20309 ;; Registers used:
 20310 ;;		wreg, status,2, status,0, pclath, cstack
 20311 ;; Tracked objects:
 20312 ;;		On entry : 0/0
 20313 ;;		On exit  : 0/0
 20314 ;;		Unchanged: 0/0
 20315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;Total ram usage:        0 bytes
 20321 ;; Hardware stack levels used: 1
 20322 ;; Hardware stack levels required when called: 5
 20323 ;; This function calls:
 20324 ;;		_I2C1_MasterSendNack
 20325 ;; This function is called by:
 20326 ;;		_I2C1_DO_RX
 20327 ;;		_I2C1_MasterFsm
 20328 ;; This function uses a non-reentrant model
 20329 ;;
 20330                           
 20331     17FB                     _I2C1_DO_RX_NACK_STOP:	
 20332                           ;psect for function _I2C1_DO_RX_NACK_STOP
 20333                           
 20334     17FB                     l7672:	
 20335                           ;incstack = 0
 20336                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20337                           
 20338                           
 20339                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 20340     17FB  3197  27D0  3197   	fcall	_I2C1_MasterSendNack
 20341     17FE                     l7674:
 20342                           
 20343                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 20344     17FE  300A               	movlw	10
 20345     17FF                     l784:
 20346     17FF  0008               	return
 20347     1800                     __end_of_I2C1_DO_RX_NACK_STOP:
 20348                           
 20349                           	psect	text92
 20350     17F6                     __ptext92:	
 20351 ;; *************** function _I2C1_DO_RX_ACK *****************
 20352 ;; Defined at:
 20353 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;		None
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      enum E12795
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0, pclath, cstack
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20371 ;;Total ram usage:        0 bytes
 20372 ;; Hardware stack levels used: 1
 20373 ;; Hardware stack levels required when called: 5
 20374 ;; This function calls:
 20375 ;;		_I2C1_MasterSendAck
 20376 ;; This function is called by:
 20377 ;;		_I2C1_MasterFsm
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381     17F6                     _I2C1_DO_RX_ACK:	
 20382                           ;psect for function _I2C1_DO_RX_ACK
 20383                           
 20384     17F6                     l7860:	
 20385                           ;incstack = 0
 20386                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 20387                           
 20388                           
 20389                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 20390     17F6  3197  27D4  3197   	fcall	_I2C1_MasterSendAck
 20391     17F9                     l7862:
 20392                           
 20393                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 20394     17F9  3005               	movlw	5
 20395     17FA                     l781:
 20396     17FA  0008               	return
 20397     17FB                     __end_of_I2C1_DO_RX_ACK:
 20398                           
 20399                           	psect	text93
 20400     17F1                     __ptext93:	
 20401 ;; *************** function _I2C1_DO_SEND_STOP *****************
 20402 ;; Defined at:
 20403 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 20404 ;; Parameters:    Size  Location     Type
 20405 ;;		None
 20406 ;; Auto vars:     Size  Location     Type
 20407 ;;		None
 20408 ;; Return value:  Size  Location     Type
 20409 ;;                  1    wreg      enum E12795
 20410 ;; Registers used:
 20411 ;;		wreg, status,2, status,0, pclath, cstack
 20412 ;; Tracked objects:
 20413 ;;		On entry : 0/0
 20414 ;;		On exit  : 0/0
 20415 ;;		Unchanged: 0/0
 20416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20421 ;;Total ram usage:        0 bytes
 20422 ;; Hardware stack levels used: 1
 20423 ;; Hardware stack levels required when called: 5
 20424 ;; This function calls:
 20425 ;;		_I2C1_MasterStop
 20426 ;; This function is called by:
 20427 ;;		_I2C1_DO_TX
 20428 ;;		_I2C1_DO_TX_EMPTY
 20429 ;;		_I2C1_DO_ADDRESS_NACK
 20430 ;;		_I2C1_MasterFsm
 20431 ;; This function uses a non-reentrant model
 20432 ;;
 20433                           
 20434     17F1                     _I2C1_DO_SEND_STOP:	
 20435                           ;psect for function _I2C1_DO_SEND_STOP
 20436                           
 20437     17F1                     l7654:	
 20438                           ;incstack = 0
 20439                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20440                           
 20441                           
 20442                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 20443     17F1  3197  27AD  3197   	fcall	_I2C1_MasterStop
 20444     17F4                     l7656:
 20445                           
 20446                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 20447     17F4  3000               	movlw	0
 20448     17F5                     l778:
 20449     17F5  0008               	return
 20450     17F6                     __end_of_I2C1_DO_SEND_STOP:
 20451                           
 20452                           	psect	text94
 20453     17EC                     __ptext94:	
 20454 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 20455 ;; Defined at:
 20456 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;		None
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;		None
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      enum E12795
 20463 ;; Registers used:
 20464 ;;		wreg, status,2, status,0, pclath, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20474 ;;Total ram usage:        0 bytes
 20475 ;; Hardware stack levels used: 1
 20476 ;; Hardware stack levels required when called: 5
 20477 ;; This function calls:
 20478 ;;		_I2C1_MasterEnableRestart
 20479 ;; This function is called by:
 20480 ;;		_I2C1_DO_TX_EMPTY
 20481 ;;		_I2C1_DO_ADDRESS_NACK
 20482 ;;		_I2C1_MasterFsm
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486     17EC                     _I2C1_DO_SEND_RESTART:	
 20487                           ;psect for function _I2C1_DO_SEND_RESTART
 20488                           
 20489     17EC                     l7680:	
 20490                           ;incstack = 0
 20491                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20492                           
 20493                           
 20494                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 20495     17EC  3197  27AA  3197   	fcall	_I2C1_MasterEnableRestart
 20496     17EF                     l7682:
 20497                           
 20498                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 20499     17EF  3001               	movlw	1
 20500     17F0                     l775:
 20501     17F0  0008               	return
 20502     17F1                     __end_of_I2C1_DO_SEND_RESTART:
 20503                           
 20504                           	psect	text95
 20505     17E7                     __ptext95:	
 20506 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 20507 ;; Defined at:
 20508 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 20509 ;; Parameters:    Size  Location     Type
 20510 ;;		None
 20511 ;; Auto vars:     Size  Location     Type
 20512 ;;		None
 20513 ;; Return value:  Size  Location     Type
 20514 ;;                  1    wreg      enum E12795
 20515 ;; Registers used:
 20516 ;;		wreg, status,2, status,0, pclath, cstack
 20517 ;; Tracked objects:
 20518 ;;		On entry : 0/0
 20519 ;;		On exit  : 0/0
 20520 ;;		Unchanged: 0/0
 20521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20526 ;;Total ram usage:        0 bytes
 20527 ;; Hardware stack levels used: 1
 20528 ;; Hardware stack levels required when called: 5
 20529 ;; This function calls:
 20530 ;;		_I2C1_MasterEnableRestart
 20531 ;; This function is called by:
 20532 ;;		_I2C1_DO_TX
 20533 ;;		_I2C1_MasterFsm
 20534 ;; This function uses a non-reentrant model
 20535 ;;
 20536                           
 20537     17E7                     _I2C1_DO_SEND_RESTART_WRITE:	
 20538                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 20539                           
 20540     17E7                     l7648:	
 20541                           ;incstack = 0
 20542                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20543                           
 20544                           
 20545                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 20546     17E7  3197  27AA  3197   	fcall	_I2C1_MasterEnableRestart
 20547     17EA                     l7650:
 20548                           
 20549                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 20550     17EA  3002               	movlw	2
 20551     17EB                     l772:
 20552     17EB  0008               	return
 20553     17EC                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 20554                           
 20555                           	psect	text96
 20556     17E2                     __ptext96:	
 20557 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 20558 ;; Defined at:
 20559 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 20560 ;; Parameters:    Size  Location     Type
 20561 ;;		None
 20562 ;; Auto vars:     Size  Location     Type
 20563 ;;		None
 20564 ;; Return value:  Size  Location     Type
 20565 ;;                  1    wreg      enum E12795
 20566 ;; Registers used:
 20567 ;;		wreg, status,2, status,0, pclath, cstack
 20568 ;; Tracked objects:
 20569 ;;		On entry : 0/0
 20570 ;;		On exit  : 0/0
 20571 ;;		Unchanged: 0/0
 20572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20577 ;;Total ram usage:        0 bytes
 20578 ;; Hardware stack levels used: 1
 20579 ;; Hardware stack levels required when called: 5
 20580 ;; This function calls:
 20581 ;;		_I2C1_MasterEnableRestart
 20582 ;; This function is called by:
 20583 ;;		_I2C1_DO_TX
 20584 ;;		_I2C1_MasterFsm
 20585 ;; This function uses a non-reentrant model
 20586 ;;
 20587                           
 20588     17E2                     _I2C1_DO_SEND_RESTART_READ:	
 20589                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 20590                           
 20591     17E2                     l7642:	
 20592                           ;incstack = 0
 20593                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20594                           
 20595                           
 20596                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 20597     17E2  3197  27AA  3197   	fcall	_I2C1_MasterEnableRestart
 20598     17E5                     l7644:
 20599                           
 20600                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 20601     17E5  3001               	movlw	1
 20602     17E6                     l769:
 20603     17E6  0008               	return
 20604     17E7                     __end_of_I2C1_DO_SEND_RESTART_READ:
 20605                           
 20606                           	psect	text97
 20607     088F                     __ptext97:	
 20608 ;; *************** function _I2C1_DO_RCEN *****************
 20609 ;; Defined at:
 20610 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 20611 ;; Parameters:    Size  Location     Type
 20612 ;;		None
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;		None
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  1    wreg      enum E12795
 20617 ;; Registers used:
 20618 ;;		wreg, status,2, status,0, pclath, cstack
 20619 ;; Tracked objects:
 20620 ;;		On entry : 0/0
 20621 ;;		On exit  : 0/0
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20628 ;;Total ram usage:        0 bytes
 20629 ;; Hardware stack levels used: 1
 20630 ;; Hardware stack levels required when called: 5
 20631 ;; This function calls:
 20632 ;;		_I2C1_MasterStartRx
 20633 ;; This function is called by:
 20634 ;;		_I2C1_MasterFsm
 20635 ;; This function uses a non-reentrant model
 20636 ;;
 20637                           
 20638     088F                     _I2C1_DO_RCEN:	
 20639                           ;psect for function _I2C1_DO_RCEN
 20640                           
 20641     088F                     l7826:	
 20642                           ;incstack = 0
 20643                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20644                           
 20645                           
 20646                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 20647     088F  0143               	movlb	3	; select bank3
 20648     0890  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 20649     0891                     l7828:
 20650                           
 20651                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 20652     0891  3197  27B0  3188   	fcall	_I2C1_MasterStartRx
 20653     0894                     l7830:
 20654                           
 20655                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 20656     0894  3004               	movlw	4
 20657     0895                     l745:
 20658     0895  0008               	return
 20659     0896                     __end_of_I2C1_DO_RCEN:
 20660                           
 20661                           	psect	text98
 20662     0698                     __ptext98:	
 20663 ;; *************** function _I2C1_DO_RX *****************
 20664 ;; Defined at:
 20665 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 20666 ;; Parameters:    Size  Location     Type
 20667 ;;		None
 20668 ;; Auto vars:     Size  Location     Type
 20669 ;;		None
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  1    wreg      enum E12795
 20672 ;; Registers used:
 20673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/0
 20676 ;;		On exit  : 0/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20683 ;;Total ram usage:        2 bytes
 20684 ;; Hardware stack levels used: 1
 20685 ;; Hardware stack levels required when called: 7
 20686 ;; This function calls:
 20687 ;;		NULL
 20688 ;;		_I2C1_CallbackReturnReset
 20689 ;;		_I2C1_CallbackReturnStop
 20690 ;;		_I2C1_DO_RX_NACK_RESTART
 20691 ;;		_I2C1_DO_RX_NACK_STOP
 20692 ;;		_I2C1_MasterGetRxData
 20693 ;;		_I2C1_MasterSendAck
 20694 ;;		_rd1RegCompleteHandler
 20695 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 20696 ;;		_rd2RegCompleteHandler
 20697 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 20698 ;;		_rdBlkRegCompleteHandler
 20699 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 20700 ;;		_wr1RegCompleteHandler
 20701 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 20702 ;;		_wr2RegCompleteHandler
 20703 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 20704 ;; This function is called by:
 20705 ;;		_I2C1_MasterFsm
 20706 ;; This function uses a non-reentrant model
 20707 ;;
 20708                           
 20709     0698                     _I2C1_DO_RX:	
 20710                           ;psect for function _I2C1_DO_RX
 20711                           
 20712     0698                     l7794:	
 20713                           ;incstack = 0
 20714                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20715                           
 20716                           
 20717                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 20718     0698  0143               	movlb	3	; select bank3
 20719     0699  083D               	movf	(_I2C1_Status^(0+384)+29),w
 20720     069A  0086               	movwf	6
 20721     069B  083E               	movf	((_I2C1_Status+1)^(0+384)+29),w
 20722     069C  0087               	movwf	7
 20723     069D  3197  27B3  3186   	fcall	_I2C1_MasterGetRxData
 20724     06A0  0081               	movwf	1
 20725     06A1                     l7796:
 20726     06A1  3001               	movlw	1
 20727     06A2  0143               	movlb	3	; select bank3
 20728     06A3  07BD               	addwf	(_I2C1_Status^(0+384)+29),f
 20729     06A4  3000               	movlw	0
 20730     06A5  3DBE               	addwfc	((_I2C1_Status+1)^(0+384)+29),f
 20731     06A6                     l7798:
 20732                           
 20733                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 20734     06A6  3001               	movlw	1
 20735     06A7  02BF               	subwf	(_I2C1_Status^(0+384)+31),f
 20736     06A8  3000               	movlw	0
 20737     06A9  3BC0               	subwfb	((_I2C1_Status+1)^(0+384)+31),f
 20738     06AA  083F               	movf	(_I2C1_Status^(0+384)+31),w
 20739     06AB  0440               	iorwf	((_I2C1_Status+1)^(0+384)+31),w
 20740     06AC  1903               	btfsc	3,2
 20741     06AD  2EAF               	goto	u4001
 20742     06AE  2EB0               	goto	u4000
 20743     06AF                     u4001:
 20744     06AF  2EB5               	goto	l733
 20745     06B0                     u4000:
 20746     06B0                     l7800:
 20747                           
 20748                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 20749     06B0  3197  27D4  3186   	fcall	_I2C1_MasterSendAck
 20750     06B3                     l7802:
 20751                           
 20752                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 20753     06B3  3005               	movlw	5
 20754     06B4  2EDD               	goto	l734
 20755     06B5                     l733:	
 20756                           ;mcc_generated_files/i2c1_master.c: 386:     else
 20757                           
 20758                           
 20759                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 20760     06B5  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 20761                           
 20762                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 20763     06B6  2EBF               	goto	l7818
 20764     06B7                     l7808:
 20765                           
 20766                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 20767     06B7  3188  2003  3186   	fcall	_I2C1_DO_RX_NACK_RESTART
 20768     06BA  2EDD               	goto	l734
 20769     06BB                     l7812:
 20770                           
 20771                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 20772     06BB  3197  27FB  3186   	fcall	_I2C1_DO_RX_NACK_STOP
 20773     06BE  2EDD               	goto	l734
 20774     06BF                     l7818:
 20775     06BF  082D               	movf	((_I2C1_Status+1)^(0+384)+12),w
 20776     06C0  00FA               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p+1
 20777     06C1  082C               	movf	(_I2C1_Status^(0+384)+12),w
 20778     06C2  00F9               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p
 20779     06C3  0821               	movf	(_I2C1_Status+1)^(0+384),w
 20780     06C4  008A               	movwf	10
 20781     06C5  0820               	movf	_I2C1_Status^(0+384),w
 20782     06C6  000A               	callw
 20783     06C7  3186               	pagesel	$
 20784     06C8  00FB               	movwf	??_I2C1_DO_RX
 20785     06C9  01FC               	clrf	??_I2C1_DO_RX+1
 20786                           
 20787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20788                           ; Switch size 1, requested type "simple"
 20789                           ; Number of cases is 1, Range of values is 0 to 0
 20790                           ; switch strategies available:
 20791                           ; Name         Instructions Cycles
 20792                           ; simple_byte            4     3 (average)
 20793                           ; direct_byte            8     6 (fixed)
 20794                           ; jumptable            260     6 (fixed)
 20795                           ;	Chosen strategy is simple_byte
 20796     06CA  087C               	movf	??_I2C1_DO_RX+1,w
 20797     06CB  3A00               	xorlw	0	; case 0
 20798     06CC  1903               	skipnz
 20799     06CD  2ECF               	goto	l8560
 20800     06CE  2EBB               	goto	l7812
 20801     06CF                     l8560:
 20802                           
 20803                           ; Switch size 1, requested type "simple"
 20804                           ; Number of cases is 4, Range of values is 1 to 4
 20805                           ; switch strategies available:
 20806                           ; Name         Instructions Cycles
 20807                           ; simple_byte           13     7 (average)
 20808                           ; direct_byte           17     9 (fixed)
 20809                           ; jumptable            263     9 (fixed)
 20810                           ;	Chosen strategy is simple_byte
 20811     06CF  087B               	movf	??_I2C1_DO_RX,w
 20812     06D0  3A01               	xorlw	1	; case 1
 20813     06D1  1903               	skipnz
 20814     06D2  2EBB               	goto	l7812
 20815     06D3  3A03               	xorlw	3	; case 2
 20816     06D4  1903               	skipnz
 20817     06D5  2EB7               	goto	l7808
 20818     06D6  3A01               	xorlw	1	; case 3
 20819     06D7  1903               	skipnz
 20820     06D8  2EB7               	goto	l7808
 20821     06D9  3A07               	xorlw	7	; case 4
 20822     06DA  1903               	skipnz
 20823     06DB  2EBB               	goto	l7812
 20824     06DC  2EBB               	goto	l7812
 20825     06DD                     l734:
 20826     06DD  0008               	return
 20827     06DE                     __end_of_I2C1_DO_RX:
 20828                           
 20829                           	psect	text99
 20830     0434                     __ptext99:	
 20831 ;; *************** function _I2C1_DO_TX *****************
 20832 ;; Defined at:
 20833 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 20834 ;; Parameters:    Size  Location     Type
 20835 ;;		None
 20836 ;; Auto vars:     Size  Location     Type
 20837 ;;		None
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  1    wreg      enum E12795
 20840 ;; Registers used:
 20841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20851 ;;Total ram usage:        2 bytes
 20852 ;; Hardware stack levels used: 1
 20853 ;; Hardware stack levels required when called: 7
 20854 ;; This function calls:
 20855 ;;		NULL
 20856 ;;		_I2C1_CallbackReturnReset
 20857 ;;		_I2C1_CallbackReturnStop
 20858 ;;		_I2C1_DO_SEND_RESTART_READ
 20859 ;;		_I2C1_DO_SEND_RESTART_WRITE
 20860 ;;		_I2C1_DO_SEND_STOP
 20861 ;;		_I2C1_MasterIsNack
 20862 ;;		_I2C1_MasterSendTxData
 20863 ;;		_rd1RegCompleteHandler
 20864 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 20865 ;;		_rd2RegCompleteHandler
 20866 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 20867 ;;		_rdBlkRegCompleteHandler
 20868 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 20869 ;;		_wr1RegCompleteHandler
 20870 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 20871 ;;		_wr2RegCompleteHandler
 20872 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 20873 ;; This function is called by:
 20874 ;;		_I2C1_MasterFsm
 20875 ;; This function uses a non-reentrant model
 20876 ;;
 20877                           
 20878     0434                     _I2C1_DO_TX:	
 20879                           ;psect for function _I2C1_DO_TX
 20880                           
 20881     0434                     l7760:	
 20882                           ;incstack = 0
 20883                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20884                           
 20885                           
 20886                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 20887     0434  3188  2017  3184   	fcall	_I2C1_MasterIsNack
 20888     0437  3A00               	xorlw	0
 20889     0438  1903               	skipnz
 20890     0439  2C3B               	goto	u3981
 20891     043A  2C3C               	goto	u3980
 20892     043B                     u3981:
 20893     043B  2C6D               	goto	l717
 20894     043C                     u3980:
 20895     043C  2C49               	goto	l7778
 20896     043D                     l7764:
 20897                           
 20898                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 20899     043D  3197  27E2  3184   	fcall	_I2C1_DO_SEND_RESTART_READ
 20900     0440  2C88               	goto	l720
 20901     0441                     l7768:
 20902                           
 20903                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 20904     0441  3197  27E7  3184   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 20905     0444  2C88               	goto	l720
 20906     0445                     l7772:
 20907                           
 20908                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 20909     0445  3197  27F1  3184   	fcall	_I2C1_DO_SEND_STOP
 20910     0448  2C88               	goto	l720
 20911     0449                     l7778:
 20912     0449  0143               	movlb	3	; select bank3
 20913     044A  0833               	movf	((_I2C1_Status+1)^(0+384)+18),w
 20914     044B  00FA               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p+1
 20915     044C  0832               	movf	(_I2C1_Status^(0+384)+18),w
 20916     044D  00F9               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p
 20917     044E  30A0               	movlw	low _I2C1_Status
 20918     044F  0086               	movwf	6
 20919     0450  3001               	movlw	high _I2C1_Status
 20920     0451  0087               	movwf	7
 20921     0452  3146               	addfsr 1,6
 20922     0453  3F41               	moviw [1]fsr1
 20923     0454  008A               	movwf	10
 20924     0455  3F40               	moviw [0]fsr1
 20925     0456  000A               	callw
 20926     0457  3184               	pagesel	$
 20927     0458  00FB               	movwf	??_I2C1_DO_TX
 20928     0459  01FC               	clrf	??_I2C1_DO_TX+1
 20929                           
 20930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20931                           ; Switch size 1, requested type "simple"
 20932                           ; Number of cases is 1, Range of values is 0 to 0
 20933                           ; switch strategies available:
 20934                           ; Name         Instructions Cycles
 20935                           ; simple_byte            4     3 (average)
 20936                           ; direct_byte            8     6 (fixed)
 20937                           ; jumptable            260     6 (fixed)
 20938                           ;	Chosen strategy is simple_byte
 20939     045A  087C               	movf	??_I2C1_DO_TX+1,w
 20940     045B  3A00               	xorlw	0	; case 0
 20941     045C  1903               	skipnz
 20942     045D  2C5F               	goto	l8562
 20943     045E  2C45               	goto	l7772
 20944     045F                     l8562:
 20945                           
 20946                           ; Switch size 1, requested type "simple"
 20947                           ; Number of cases is 4, Range of values is 1 to 4
 20948                           ; switch strategies available:
 20949                           ; Name         Instructions Cycles
 20950                           ; simple_byte           13     7 (average)
 20951                           ; direct_byte           17     9 (fixed)
 20952                           ; jumptable            263     9 (fixed)
 20953                           ;	Chosen strategy is simple_byte
 20954     045F  087B               	movf	??_I2C1_DO_TX,w
 20955     0460  3A01               	xorlw	1	; case 1
 20956     0461  1903               	skipnz
 20957     0462  2C45               	goto	l7772
 20958     0463  3A03               	xorlw	3	; case 2
 20959     0464  1903               	skipnz
 20960     0465  2C3D               	goto	l7764
 20961     0466  3A01               	xorlw	1	; case 3
 20962     0467  1903               	skipnz
 20963     0468  2C41               	goto	l7768
 20964     0469  3A07               	xorlw	7	; case 4
 20965     046A  1903               	skipnz
 20966     046B  2C45               	goto	l7772
 20967     046C  2C45               	goto	l7772
 20968     046D                     l717:	
 20969                           ;mcc_generated_files/i2c1_master.c: 370:     else
 20970                           
 20971                           
 20972                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 20973     046D  0143               	movlb	3	; select bank3
 20974     046E  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 20975     046F                     l7780:
 20976                           
 20977                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 20978     046F  083E               	movf	((_I2C1_Status+1)^(0+384)+29),w
 20979     0470  0087               	movwf	7
 20980     0471  083D               	movf	(_I2C1_Status^(0+384)+29),w
 20981     0472  0086               	movwf	6
 20982     0473  0ABD               	incf	(_I2C1_Status^(0+384)+29),f
 20983     0474  1903               	skipnz
 20984     0475  0ABE               	incf	((_I2C1_Status+1)^(0+384)+29),f
 20985     0476  0801               	movf	1,w
 20986     0477  3197  27D8  3184   	fcall	_I2C1_MasterSendTxData
 20987     047A                     l7782:
 20988                           
 20989                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 20990     047A  3001               	movlw	1
 20991     047B  0143               	movlb	3	; select bank3
 20992     047C  02BF               	subwf	(_I2C1_Status^(0+384)+31),f
 20993     047D  3000               	movlw	0
 20994     047E  3BC0               	subwfb	((_I2C1_Status+1)^(0+384)+31),f
 20995     047F  083F               	movf	(_I2C1_Status^(0+384)+31),w
 20996     0480  0440               	iorwf	((_I2C1_Status+1)^(0+384)+31),w
 20997     0481  1D03               	btfss	3,2
 20998     0482  2C84               	goto	u3991
 20999     0483  2C85               	goto	u3990
 21000     0484                     u3991:
 21001     0484  2C87               	goto	l7786
 21002     0485                     u3990:
 21003     0485                     l7784:
 21004     0485  3006               	movlw	6
 21005     0486  2C88               	goto	l720
 21006     0487                     l7786:
 21007     0487  3003               	movlw	3
 21008     0488                     l720:
 21009     0488  0008               	return
 21010     0489                     __end_of_I2C1_DO_TX:
 21011                           
 21012                           	psect	text100
 21013     0896                     __ptext100:	
 21014 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 21015 ;; Defined at:
 21016 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 21017 ;; Parameters:    Size  Location     Type
 21018 ;;		None
 21019 ;; Auto vars:     Size  Location     Type
 21020 ;;		None
 21021 ;; Return value:  Size  Location     Type
 21022 ;;                  1    wreg      enum E12795
 21023 ;; Registers used:
 21024 ;;		wreg, status,2, status,0, pclath, cstack
 21025 ;; Tracked objects:
 21026 ;;		On entry : 0/0
 21027 ;;		On exit  : 0/0
 21028 ;;		Unchanged: 0/0
 21029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21034 ;;Total ram usage:        0 bytes
 21035 ;; Hardware stack levels used: 1
 21036 ;; Hardware stack levels required when called: 5
 21037 ;; This function calls:
 21038 ;;		_I2C1_MasterSendTxData
 21039 ;; This function is called by:
 21040 ;;		_I2C1_MasterFsm
 21041 ;; This function uses a non-reentrant model
 21042 ;;
 21043                           
 21044     0896                     _I2C1_DO_SEND_ADR_WRITE:	
 21045                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 21046                           
 21047     0896                     l7752:	
 21048                           ;incstack = 0
 21049                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21050                           
 21051                           
 21052                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 21053     0896  0143               	movlb	3	; select bank3
 21054     0897  1443               	bsf	(_I2C1_Status^(0+384)+35),0
 21055     0898                     l7754:
 21056                           
 21057                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 21058     0898  353C               	lslf	(_I2C1_Status^(0+384)+28),w
 21059     0899  3197  27D8  3188   	fcall	_I2C1_MasterSendTxData
 21060     089C                     l7756:
 21061                           
 21062                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 21063     089C  3003               	movlw	3
 21064     089D                     l714:
 21065     089D  0008               	return
 21066     089E                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 21067                           
 21068                           	psect	text101
 21069     08A6                     __ptext101:	
 21070 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 21071 ;; Defined at:
 21072 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 21073 ;; Parameters:    Size  Location     Type
 21074 ;;		None
 21075 ;; Auto vars:     Size  Location     Type
 21076 ;;		None
 21077 ;; Return value:  Size  Location     Type
 21078 ;;                  1    wreg      enum E12795
 21079 ;; Registers used:
 21080 ;;		wreg, status,2, status,0, pclath, cstack
 21081 ;; Tracked objects:
 21082 ;;		On entry : 0/0
 21083 ;;		On exit  : 0/0
 21084 ;;		Unchanged: 0/0
 21085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21090 ;;Total ram usage:        0 bytes
 21091 ;; Hardware stack levels used: 1
 21092 ;; Hardware stack levels required when called: 5
 21093 ;; This function calls:
 21094 ;;		_I2C1_MasterSendTxData
 21095 ;; This function is called by:
 21096 ;;		_I2C1_MasterFsm
 21097 ;; This function uses a non-reentrant model
 21098 ;;
 21099                           
 21100     08A6                     _I2C1_DO_SEND_ADR_READ:	
 21101                           ;psect for function _I2C1_DO_SEND_ADR_READ
 21102                           
 21103     08A6                     l7744:	
 21104                           ;incstack = 0
 21105                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 21106                           
 21107                           
 21108                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 21109     08A6  0143               	movlb	3	; select bank3
 21110     08A7  1443               	bsf	(_I2C1_Status^(0+384)+35),0
 21111     08A8                     l7746:
 21112                           
 21113                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 21114     08A8  1403               	setc
 21115     08A9  0D3C               	rlf	(_I2C1_Status^(0+384)+28),w
 21116     08AA  3197  27D8  3188   	fcall	_I2C1_MasterSendTxData
 21117     08AD                     l7748:
 21118                           
 21119                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 21120     08AD  3005               	movlw	5
 21121     08AE                     l711:
 21122     08AE  0008               	return
 21123     08AF                     __end_of_I2C1_DO_SEND_ADR_READ:
 21124                           
 21125                           	psect	text102
 21126     17DD                     __ptext102:	
 21127 ;; *************** function _I2C1_DO_IDLE *****************
 21128 ;; Defined at:
 21129 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 21130 ;; Parameters:    Size  Location     Type
 21131 ;;		None
 21132 ;; Auto vars:     Size  Location     Type
 21133 ;;		None
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  1    wreg      enum E12795
 21136 ;; Registers used:
 21137 ;;		wreg, status,2
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21147 ;;Total ram usage:        0 bytes
 21148 ;; Hardware stack levels used: 1
 21149 ;; Hardware stack levels required when called: 4
 21150 ;; This function calls:
 21151 ;;		Nothing
 21152 ;; This function is called by:
 21153 ;;		_I2C1_MasterFsm
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157     17DD                     _I2C1_DO_IDLE:	
 21158                           ;psect for function _I2C1_DO_IDLE
 21159                           
 21160     17DD                     l7736:	
 21161                           ;incstack = 0
 21162                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 21163                           
 21164                           
 21165                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 21166     17DD  0143               	movlb	3	; select bank3
 21167     17DE  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 21168     17DF                     l7738:
 21169                           
 21170                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 21171     17DF  01C2               	clrf	(_I2C1_Status^(0+384)+34)
 21172     17E0                     l7740:
 21173                           
 21174                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 21175     17E0  300E               	movlw	14
 21176     17E1                     l708:
 21177     17E1  0008               	return
 21178     17E2                     __end_of_I2C1_DO_IDLE:
 21179                           
 21180                           	psect	text103
 21181     0E54                     __ptext103:	
 21182 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 21183 ;; Defined at:
 21184 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 21185 ;; Parameters:    Size  Location     Type
 21186 ;;		None
 21187 ;; Auto vars:     Size  Location     Type
 21188 ;;		None
 21189 ;; Return value:  Size  Location     Type
 21190 ;;                  1    wreg      enum E12795
 21191 ;; Registers used:
 21192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21193 ;; Tracked objects:
 21194 ;;		On entry : 0/0
 21195 ;;		On exit  : 0/0
 21196 ;;		Unchanged: 0/0
 21197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21202 ;;Total ram usage:        2 bytes
 21203 ;; Hardware stack levels used: 1
 21204 ;; Hardware stack levels required when called: 7
 21205 ;; This function calls:
 21206 ;;		NULL
 21207 ;;		_I2C1_CallbackReturnReset
 21208 ;;		_I2C1_CallbackReturnStop
 21209 ;;		_I2C1_DO_SEND_RESTART
 21210 ;;		_I2C1_DO_SEND_STOP
 21211 ;;		_I2C1_MasterSetIrq
 21212 ;;		_rd1RegCompleteHandler
 21213 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 21214 ;;		_rd2RegCompleteHandler
 21215 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 21216 ;;		_rdBlkRegCompleteHandler
 21217 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 21218 ;;		_wr1RegCompleteHandler
 21219 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 21220 ;;		_wr2RegCompleteHandler
 21221 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 21222 ;; This function is called by:
 21223 ;;		_I2C1_MasterFsm
 21224 ;; This function uses a non-reentrant model
 21225 ;;
 21226                           
 21227     0E54                     _I2C1_DO_TX_EMPTY:	
 21228                           ;psect for function _I2C1_DO_TX_EMPTY
 21229                           
 21230     0E54                     l7834:	
 21231                           ;incstack = 0
 21232                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21233                           
 21234                           
 21235                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 21236     0E54  0143               	movlb	3	; select bank3
 21237     0E55  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 21238                           
 21239                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21240     0E56  2E64               	goto	l7852
 21241     0E57                     l7836:
 21242                           
 21243                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 21244     0E57  3197  27EC  318E   	fcall	_I2C1_DO_SEND_RESTART
 21245     0E5A  2E82               	goto	l751
 21246     0E5B                     l7840:
 21247                           
 21248                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 21249     0E5B  3197  27B6  318E   	fcall	_I2C1_MasterSetIrq
 21250     0E5E                     l7842:
 21251                           
 21252                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 21253     0E5E  3003               	movlw	3
 21254     0E5F  2E82               	goto	l751
 21255     0E60                     l7846:
 21256                           
 21257                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 21258     0E60  3197  27F1  318E   	fcall	_I2C1_DO_SEND_STOP
 21259     0E63  2E82               	goto	l751
 21260     0E64                     l7852:
 21261     0E64  082D               	movf	((_I2C1_Status+1)^(0+384)+12),w
 21262     0E65  00FA               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p+1
 21263     0E66  082C               	movf	(_I2C1_Status^(0+384)+12),w
 21264     0E67  00F9               	movwf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p
 21265     0E68  0821               	movf	(_I2C1_Status+1)^(0+384),w
 21266     0E69  008A               	movwf	10
 21267     0E6A  0820               	movf	_I2C1_Status^(0+384),w
 21268     0E6B  000A               	callw
 21269     0E6C  318E               	pagesel	$
 21270     0E6D  00FB               	movwf	??_I2C1_DO_TX_EMPTY
 21271     0E6E  01FC               	clrf	??_I2C1_DO_TX_EMPTY+1
 21272                           
 21273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21274                           ; Switch size 1, requested type "simple"
 21275                           ; Number of cases is 1, Range of values is 0 to 0
 21276                           ; switch strategies available:
 21277                           ; Name         Instructions Cycles
 21278                           ; simple_byte            4     3 (average)
 21279                           ; direct_byte            8     6 (fixed)
 21280                           ; jumptable            260     6 (fixed)
 21281                           ;	Chosen strategy is simple_byte
 21282     0E6F  087C               	movf	??_I2C1_DO_TX_EMPTY+1,w
 21283     0E70  3A00               	xorlw	0	; case 0
 21284     0E71  1903               	skipnz
 21285     0E72  2E74               	goto	l8564
 21286     0E73  2E60               	goto	l7846
 21287     0E74                     l8564:
 21288                           
 21289                           ; Switch size 1, requested type "simple"
 21290                           ; Number of cases is 4, Range of values is 1 to 4
 21291                           ; switch strategies available:
 21292                           ; Name         Instructions Cycles
 21293                           ; simple_byte           13     7 (average)
 21294                           ; direct_byte           17     9 (fixed)
 21295                           ; jumptable            263     9 (fixed)
 21296                           ;	Chosen strategy is simple_byte
 21297     0E74  087B               	movf	??_I2C1_DO_TX_EMPTY,w
 21298     0E75  3A01               	xorlw	1	; case 1
 21299     0E76  1903               	skipnz
 21300     0E77  2E60               	goto	l7846
 21301     0E78  3A03               	xorlw	3	; case 2
 21302     0E79  1903               	skipnz
 21303     0E7A  2E57               	goto	l7836
 21304     0E7B  3A01               	xorlw	1	; case 3
 21305     0E7C  1903               	skipnz
 21306     0E7D  2E57               	goto	l7836
 21307     0E7E  3A07               	xorlw	7	; case 4
 21308     0E7F  1903               	skipnz
 21309     0E80  2E5B               	goto	l7840
 21310     0E81  2E60               	goto	l7846
 21311     0E82                     l751:
 21312     0E82  0008               	return
 21313     0E83                     __end_of_I2C1_DO_TX_EMPTY:
 21314                           
 21315                           	psect	text104
 21316     17B6                     __ptext104:	
 21317 ;; *************** function _I2C1_MasterSetIrq *****************
 21318 ;; Defined at:
 21319 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 21320 ;; Parameters:    Size  Location     Type
 21321 ;;		None
 21322 ;; Auto vars:     Size  Location     Type
 21323 ;;		None
 21324 ;; Return value:  Size  Location     Type
 21325 ;;                  1    wreg      void 
 21326 ;; Registers used:
 21327 ;;		None
 21328 ;; Tracked objects:
 21329 ;;		On entry : 0/0
 21330 ;;		On exit  : 0/0
 21331 ;;		Unchanged: 0/0
 21332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21337 ;;Total ram usage:        0 bytes
 21338 ;; Hardware stack levels used: 1
 21339 ;; Hardware stack levels required when called: 4
 21340 ;; This function calls:
 21341 ;;		Nothing
 21342 ;; This function is called by:
 21343 ;;		_I2C1_DO_TX_EMPTY
 21344 ;; This function uses a non-reentrant model
 21345 ;;
 21346                           
 21347     17B6                     _I2C1_MasterSetIrq:	
 21348                           ;psect for function _I2C1_MasterSetIrq
 21349                           
 21350     17B6                     l7686:	
 21351                           ;incstack = 0
 21352                           ; Regs used in _I2C1_MasterSetIrq: []
 21353                           
 21354                           
 21355                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 21356     17B6  014E               	movlb	14	; select bank14
 21357     17B7  140F               	bsf	15,0	;volatile
 21358     17B8                     l871:
 21359     17B8  0008               	return
 21360     17B9                     __end_of_I2C1_MasterSetIrq:
 21361                           
 21362                           	psect	text105
 21363     0817                     __ptext105:	
 21364 ;; *************** function _I2C1_MasterIsNack *****************
 21365 ;; Defined at:
 21366 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 21367 ;; Parameters:    Size  Location     Type
 21368 ;;		None
 21369 ;; Auto vars:     Size  Location     Type
 21370 ;;		None
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  1    wreg      _Bool 
 21373 ;; Registers used:
 21374 ;;		wreg, status,2, status,0
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21384 ;;Total ram usage:        0 bytes
 21385 ;; Hardware stack levels used: 1
 21386 ;; Hardware stack levels required when called: 4
 21387 ;; This function calls:
 21388 ;;		Nothing
 21389 ;; This function is called by:
 21390 ;;		_I2C1_MasterFsm
 21391 ;;		_I2C1_DO_TX
 21392 ;; This function uses a non-reentrant model
 21393 ;;
 21394                           
 21395     0817                     _I2C1_MasterIsNack:	
 21396                           ;psect for function _I2C1_MasterIsNack
 21397                           
 21398     0817                     l7636:	
 21399                           ;incstack = 0
 21400                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 21401                           
 21402                           
 21403                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 21404     0817  0143               	movlb	3	; select bank3
 21405     0818  0E11               	swapf	17,w	;volatile
 21406     0819  0C89               	rrf	9,f
 21407     081A  0C89               	rrf	9,f
 21408     081B  3901               	andlw	1
 21409     081C                     l844:
 21410     081C  0008               	return
 21411     081D                     __end_of_I2C1_MasterIsNack:
 21412                           
 21413                           	psect	text106
 21414     17D8                     __ptext106:	
 21415 ;; *************** function _I2C1_MasterSendTxData *****************
 21416 ;; Defined at:
 21417 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;  data            1    wreg     unsigned char 
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  data            1    0[COMMON] unsigned char 
 21422 ;; Return value:  Size  Location     Type
 21423 ;;                  1    wreg      void 
 21424 ;; Registers used:
 21425 ;;		wreg
 21426 ;; Tracked objects:
 21427 ;;		On entry : 0/0
 21428 ;;		On exit  : 0/0
 21429 ;;		Unchanged: 0/0
 21430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21435 ;;Total ram usage:        1 bytes
 21436 ;; Hardware stack levels used: 1
 21437 ;; Hardware stack levels required when called: 4
 21438 ;; This function calls:
 21439 ;;		Nothing
 21440 ;; This function is called by:
 21441 ;;		_I2C1_DO_SEND_ADR_READ
 21442 ;;		_I2C1_DO_SEND_ADR_WRITE
 21443 ;;		_I2C1_DO_TX
 21444 ;; This function uses a non-reentrant model
 21445 ;;
 21446                           
 21447     17D8                     _I2C1_MasterSendTxData:	
 21448                           ;psect for function _I2C1_MasterSendTxData
 21449                           
 21450                           
 21451                           ;incstack = 0
 21452                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 21453                           ;I2C1_MasterSendTxData@data stored from wreg
 21454     17D8  00F0               	movwf	I2C1_MasterSendTxData@data
 21455     17D9                     l7640:
 21456                           
 21457                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 21458     17D9  0870               	movf	I2C1_MasterSendTxData@data,w
 21459     17DA  0143               	movlb	3	; select bank3
 21460     17DB  008C               	movwf	12	;volatile
 21461     17DC                     l826:
 21462     17DC  0008               	return
 21463     17DD                     __end_of_I2C1_MasterSendTxData:
 21464                           
 21465                           	psect	text107
 21466     17D4                     __ptext107:	
 21467 ;; *************** function _I2C1_MasterSendAck *****************
 21468 ;; Defined at:
 21469 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;		None
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;		None
 21474 ;; Return value:  Size  Location     Type
 21475 ;;                  1    wreg      void 
 21476 ;; Registers used:
 21477 ;;		None
 21478 ;; Tracked objects:
 21479 ;;		On entry : 0/0
 21480 ;;		On exit  : 0/0
 21481 ;;		Unchanged: 0/0
 21482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21487 ;;Total ram usage:        0 bytes
 21488 ;; Hardware stack levels used: 1
 21489 ;; Hardware stack levels required when called: 4
 21490 ;; This function calls:
 21491 ;;		Nothing
 21492 ;; This function is called by:
 21493 ;;		_I2C1_DO_RX
 21494 ;;		_I2C1_DO_RX_ACK
 21495 ;; This function uses a non-reentrant model
 21496 ;;
 21497                           
 21498     17D4                     _I2C1_MasterSendAck:	
 21499                           ;psect for function _I2C1_MasterSendAck
 21500                           
 21501     17D4                     l7664:	
 21502                           ;incstack = 0
 21503                           ; Regs used in _I2C1_MasterSendAck: []
 21504                           
 21505                           
 21506                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 21507     17D4  0143               	movlb	3	; select bank3
 21508     17D5  1291               	bcf	17,5	;volatile
 21509                           
 21510                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 21511     17D6  1611               	bsf	17,4	;volatile
 21512     17D7                     l847:
 21513     17D7  0008               	return
 21514     17D8                     __end_of_I2C1_MasterSendAck:
 21515                           
 21516                           	psect	text108
 21517     17B3                     __ptext108:	
 21518 ;; *************** function _I2C1_MasterGetRxData *****************
 21519 ;; Defined at:
 21520 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 21521 ;; Parameters:    Size  Location     Type
 21522 ;;		None
 21523 ;; Auto vars:     Size  Location     Type
 21524 ;;		None
 21525 ;; Return value:  Size  Location     Type
 21526 ;;                  1    wreg      unsigned char 
 21527 ;; Registers used:
 21528 ;;		wreg
 21529 ;; Tracked objects:
 21530 ;;		On entry : 0/0
 21531 ;;		On exit  : 0/0
 21532 ;;		Unchanged: 0/0
 21533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21538 ;;Total ram usage:        0 bytes
 21539 ;; Hardware stack levels used: 1
 21540 ;; Hardware stack levels required when called: 4
 21541 ;; This function calls:
 21542 ;;		Nothing
 21543 ;; This function is called by:
 21544 ;;		_I2C1_DO_RX
 21545 ;; This function uses a non-reentrant model
 21546 ;;
 21547                           
 21548     17B3                     _I2C1_MasterGetRxData:	
 21549                           ;psect for function _I2C1_MasterGetRxData
 21550                           
 21551     17B3                     l7660:	
 21552                           ;incstack = 0
 21553                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 21554                           
 21555                           
 21556                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 21557     17B3  0143               	movlb	3	; select bank3
 21558     17B4  080C               	movf	12,w	;volatile
 21559     17B5                     l823:
 21560     17B5  0008               	return
 21561     17B6                     __end_of_I2C1_MasterGetRxData:
 21562                           
 21563                           	psect	text109
 21564     17D0                     __ptext109:	
 21565 ;; *************** function _I2C1_MasterSendNack *****************
 21566 ;; Defined at:
 21567 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 21568 ;; Parameters:    Size  Location     Type
 21569 ;;		None
 21570 ;; Auto vars:     Size  Location     Type
 21571 ;;		None
 21572 ;; Return value:  Size  Location     Type
 21573 ;;                  1    wreg      void 
 21574 ;; Registers used:
 21575 ;;		None
 21576 ;; Tracked objects:
 21577 ;;		On entry : 0/0
 21578 ;;		On exit  : 0/0
 21579 ;;		Unchanged: 0/0
 21580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21585 ;;Total ram usage:        0 bytes
 21586 ;; Hardware stack levels used: 1
 21587 ;; Hardware stack levels required when called: 4
 21588 ;; This function calls:
 21589 ;;		Nothing
 21590 ;; This function is called by:
 21591 ;;		_I2C1_DO_RX_NACK_STOP
 21592 ;;		_I2C1_DO_RX_NACK_RESTART
 21593 ;; This function uses a non-reentrant model
 21594 ;;
 21595                           
 21596     17D0                     _I2C1_MasterSendNack:	
 21597                           ;psect for function _I2C1_MasterSendNack
 21598                           
 21599     17D0                     l7596:	
 21600                           ;incstack = 0
 21601                           ; Regs used in _I2C1_MasterSendNack: []
 21602                           
 21603                           
 21604                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 21605     17D0  0143               	movlb	3	; select bank3
 21606     17D1  1691               	bsf	17,5	;volatile
 21607                           
 21608                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 21609     17D2  1611               	bsf	17,4	;volatile
 21610     17D3                     l850:
 21611     17D3  0008               	return
 21612     17D4                     __end_of_I2C1_MasterSendNack:
 21613                           
 21614                           	psect	text110
 21615     17B0                     __ptext110:	
 21616 ;; *************** function _I2C1_MasterStartRx *****************
 21617 ;; Defined at:
 21618 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 21619 ;; Parameters:    Size  Location     Type
 21620 ;;		None
 21621 ;; Auto vars:     Size  Location     Type
 21622 ;;		None
 21623 ;; Return value:  Size  Location     Type
 21624 ;;                  1    wreg      void 
 21625 ;; Registers used:
 21626 ;;		None
 21627 ;; Tracked objects:
 21628 ;;		On entry : 0/0
 21629 ;;		On exit  : 0/0
 21630 ;;		Unchanged: 0/0
 21631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21636 ;;Total ram usage:        0 bytes
 21637 ;; Hardware stack levels used: 1
 21638 ;; Hardware stack levels required when called: 4
 21639 ;; This function calls:
 21640 ;;		Nothing
 21641 ;; This function is called by:
 21642 ;;		_I2C1_DO_RCEN
 21643 ;; This function uses a non-reentrant model
 21644 ;;
 21645                           
 21646     17B0                     _I2C1_MasterStartRx:	
 21647                           ;psect for function _I2C1_MasterStartRx
 21648                           
 21649     17B0                     l7678:	
 21650                           ;incstack = 0
 21651                           ; Regs used in _I2C1_MasterStartRx: []
 21652                           
 21653                           
 21654                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 21655     17B0  0143               	movlb	3	; select bank3
 21656     17B1  1591               	bsf	17,3	;volatile
 21657     17B2                     l835:
 21658     17B2  0008               	return
 21659     17B3                     __end_of_I2C1_MasterStartRx:
 21660                           
 21661                           	psect	text111
 21662     0C4A                     __ptext111:	
 21663 ;; *************** function _rdBlkRegCompleteHandler@i2c_simple_master$F3602 *****************
 21664 ;; Defined at:
 21665 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21666 ;; Parameters:    Size  Location     Type
 21667 ;;  p               2    9[COMMON] PTR void 
 21668 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21669 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 21670 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;		None
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  1    wreg      enum E363
 21675 ;; Registers used:
 21676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : 0/0
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21686 ;;Total ram usage:        2 bytes
 21687 ;; Hardware stack levels used: 1
 21688 ;; Hardware stack levels required when called: 6
 21689 ;; This function calls:
 21690 ;;		_I2C1_SetBuffer
 21691 ;;		_I2C1_SetDataCompleteCallback
 21692 ;; This function is called by:
 21693 ;;		_i2c_readDataBlock
 21694 ;;		_I2C1_DO_TX
 21695 ;;		_I2C1_DO_RX
 21696 ;;		_I2C1_DO_TX_EMPTY
 21697 ;;		_I2C1_DO_ADDRESS_NACK
 21698 ;;		_I2C1_DO_RX_EMPTY
 21699 ;; This function uses a non-reentrant model
 21700 ;;
 21701                           
 21702     0C4A                     _rdBlkRegCompleteHandler@i2c_simple_master$F3602:	
 21703                           ;psect for function _rdBlkRegCompleteHandler@i2c_simple_master$F3602
 21704                           
 21705     0C4A                     l7728:	
 21706                           ;incstack = 0
 21707                           ; Regs used in _rdBlkRegCompleteHandler@i2c_simple_master$F3602: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 21708                           
 21709                           
 21710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 21711     0C4A  0879               	movf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p,w
 21712     0C4B  0086               	movwf	6
 21713     0C4C  0187               	clrf	7
 21714     0C4D  3142               	addfsr 1,2
 21715     0C4E  3F40               	moviw [0]fsr1
 21716     0C4F  00F0               	movwf	I2C1_SetBuffer@buffer
 21717     0C50  3F41               	moviw [1]fsr1
 21718     0C51  00F1               	movwf	I2C1_SetBuffer@buffer+1
 21719     0C52  0879               	movf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p,w
 21720     0C53  0086               	movwf	6
 21721     0C54  087A               	movf	rdBlkRegCompleteHandler@i2c_simple_master$F3602@p+1,w
 21722     0C55  0087               	movwf	7
 21723     0C56  3F40               	moviw [0]fsr1
 21724     0C57  00F2               	movwf	I2C1_SetBuffer@bufferSize
 21725     0C58  3F41               	moviw [1]fsr1
 21726     0C59  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 21727     0C5A  3189  2190  318C   	fcall	_I2C1_SetBuffer
 21728                           
 21729                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 21730     0C5D  3000               	movlw	0
 21731     0C5E  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 21732     0C5F  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 21733     0C60  3000               	movlw	0
 21734     0C61  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 21735     0C62  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 21736     0C63  3189  212F  318C   	fcall	_I2C1_SetDataCompleteCallback
 21737     0C66                     l7730:
 21738                           
 21739                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 21740     0C66  3002               	movlw	2
 21741     0C67                     l1986:
 21742     0C67  0008               	return
 21743     0C68                     __end_of_rdBlkRegCompleteHandler@i2c_simple_master$F3602:
 21744                           
 21745                           	psect	text112
 21746     0B36                     __ptext112:	
 21747 ;; *************** function _rd2RegCompleteHandler@i2c_simple_master$F3590 *****************
 21748 ;; Defined at:
 21749 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21750 ;; Parameters:    Size  Location     Type
 21751 ;;  p               2    9[COMMON] PTR void 
 21752 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21753 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 21754 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;		None
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      enum E363
 21759 ;; Registers used:
 21760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21770 ;;Total ram usage:        2 bytes
 21771 ;; Hardware stack levels used: 1
 21772 ;; Hardware stack levels required when called: 6
 21773 ;; This function calls:
 21774 ;;		_I2C1_SetBuffer
 21775 ;;		_I2C1_SetDataCompleteCallback
 21776 ;; This function is called by:
 21777 ;;		_i2c_read2ByteRegister
 21778 ;;		_I2C1_DO_TX
 21779 ;;		_I2C1_DO_RX
 21780 ;;		_I2C1_DO_TX_EMPTY
 21781 ;;		_I2C1_DO_ADDRESS_NACK
 21782 ;;		_I2C1_DO_RX_EMPTY
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786     0B36                     _rd2RegCompleteHandler@i2c_simple_master$F3590:	
 21787                           ;psect for function _rd2RegCompleteHandler@i2c_simple_master$F3590
 21788                           
 21789     0B36                     l7712:	
 21790                           ;incstack = 0
 21791                           ; Regs used in _rd2RegCompleteHandler@i2c_simple_master$F3590: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
 21792                           
 21793                           
 21794                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 21795     0B36  087A               	movf	rd2RegCompleteHandler@i2c_simple_master$F3590@p+1,w
 21796     0B37  00F1               	movwf	I2C1_SetBuffer@buffer+1
 21797     0B38  0879               	movf	rd2RegCompleteHandler@i2c_simple_master$F3590@p,w
 21798     0B39  00F0               	movwf	I2C1_SetBuffer@buffer
 21799     0B3A  3002               	movlw	2
 21800     0B3B  00F2               	movwf	I2C1_SetBuffer@bufferSize
 21801     0B3C  3000               	movlw	0
 21802     0B3D  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 21803     0B3E  3189  2190  318B   	fcall	_I2C1_SetBuffer
 21804     0B41                     l7714:
 21805                           
 21806                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 21807     0B41  3000               	movlw	0
 21808     0B42  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 21809     0B43  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 21810     0B44  3000               	movlw	0
 21811     0B45  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 21812     0B46  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 21813     0B47  3189  212F  318B   	fcall	_I2C1_SetDataCompleteCallback
 21814     0B4A                     l7716:
 21815                           
 21816                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 21817     0B4A  3002               	movlw	2
 21818     0B4B                     l1962:
 21819     0B4B  0008               	return
 21820     0B4C                     __end_of_rd2RegCompleteHandler@i2c_simple_master$F3590:
 21821                           
 21822                           	psect	text113
 21823     0B20                     __ptext113:	
 21824 ;; *************** function _rd1RegCompleteHandler@i2c_simple_master$F3582 *****************
 21825 ;; Defined at:
 21826 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21827 ;; Parameters:    Size  Location     Type
 21828 ;;  p               2    9[COMMON] PTR void 
 21829 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21830 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 21831 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 21832 ;; Auto vars:     Size  Location     Type
 21833 ;;		None
 21834 ;; Return value:  Size  Location     Type
 21835 ;;                  1    wreg      enum E363
 21836 ;; Registers used:
 21837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21838 ;; Tracked objects:
 21839 ;;		On entry : 0/0
 21840 ;;		On exit  : 0/0
 21841 ;;		Unchanged: 0/0
 21842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21847 ;;Total ram usage:        2 bytes
 21848 ;; Hardware stack levels used: 1
 21849 ;; Hardware stack levels required when called: 6
 21850 ;; This function calls:
 21851 ;;		_I2C1_SetBuffer
 21852 ;;		_I2C1_SetDataCompleteCallback
 21853 ;; This function is called by:
 21854 ;;		_i2c_read1ByteRegister
 21855 ;;		_I2C1_DO_TX
 21856 ;;		_I2C1_DO_RX
 21857 ;;		_I2C1_DO_TX_EMPTY
 21858 ;;		_I2C1_DO_ADDRESS_NACK
 21859 ;;		_I2C1_DO_RX_EMPTY
 21860 ;; This function uses a non-reentrant model
 21861 ;;
 21862                           
 21863     0B20                     _rd1RegCompleteHandler@i2c_simple_master$F3582:	
 21864                           ;psect for function _rd1RegCompleteHandler@i2c_simple_master$F3582
 21865                           
 21866     0B20                     l7704:	
 21867                           ;incstack = 0
 21868                           ; Regs used in _rd1RegCompleteHandler@i2c_simple_master$F3582: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
 21869                           
 21870                           
 21871                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 21872     0B20  087A               	movf	rd1RegCompleteHandler@i2c_simple_master$F3582@p+1,w
 21873     0B21  00F1               	movwf	I2C1_SetBuffer@buffer+1
 21874     0B22  0879               	movf	rd1RegCompleteHandler@i2c_simple_master$F3582@p,w
 21875     0B23  00F0               	movwf	I2C1_SetBuffer@buffer
 21876     0B24  3001               	movlw	1
 21877     0B25  00F2               	movwf	I2C1_SetBuffer@bufferSize
 21878     0B26  3000               	movlw	0
 21879     0B27  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 21880     0B28  3189  2190  318B   	fcall	_I2C1_SetBuffer
 21881     0B2B                     l7706:
 21882                           
 21883                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21884     0B2B  3000               	movlw	0
 21885     0B2C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 21886     0B2D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 21887     0B2E  3000               	movlw	0
 21888     0B2F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 21889     0B30  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 21890     0B31  3189  212F  318B   	fcall	_I2C1_SetDataCompleteCallback
 21891     0B34                     l7708:
 21892                           
 21893                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 21894     0B34  3002               	movlw	2
 21895     0B35                     l1947:
 21896     0B35  0008               	return
 21897     0B36                     __end_of_rd1RegCompleteHandler@i2c_simple_master$F3582:
 21898                           
 21899                           	psect	text114
 21900     0B0A                     __ptext114:	
 21901 ;; *************** function _wr1RegCompleteHandler@i2c_simple_master$F3572 *****************
 21902 ;; Defined at:
 21903 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;  p               2    9[COMMON] PTR void 
 21906 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21907 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 21908 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 21909 ;; Auto vars:     Size  Location     Type
 21910 ;;		None
 21911 ;; Return value:  Size  Location     Type
 21912 ;;                  1    wreg      enum E363
 21913 ;; Registers used:
 21914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21915 ;; Tracked objects:
 21916 ;;		On entry : 0/0
 21917 ;;		On exit  : 0/0
 21918 ;;		Unchanged: 0/0
 21919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;Total ram usage:        2 bytes
 21925 ;; Hardware stack levels used: 1
 21926 ;; Hardware stack levels required when called: 6
 21927 ;; This function calls:
 21928 ;;		_I2C1_SetBuffer
 21929 ;;		_I2C1_SetDataCompleteCallback
 21930 ;; This function is called by:
 21931 ;;		_i2c_write1ByteRegister
 21932 ;;		_I2C1_DO_TX
 21933 ;;		_I2C1_DO_RX
 21934 ;;		_I2C1_DO_TX_EMPTY
 21935 ;;		_I2C1_DO_ADDRESS_NACK
 21936 ;;		_I2C1_DO_RX_EMPTY
 21937 ;; This function uses a non-reentrant model
 21938 ;;
 21939                           
 21940     0B0A                     _wr1RegCompleteHandler@i2c_simple_master$F3572:	
 21941                           ;psect for function _wr1RegCompleteHandler@i2c_simple_master$F3572
 21942                           
 21943     0B0A                     l7696:	
 21944                           ;incstack = 0
 21945                           ; Regs used in _wr1RegCompleteHandler@i2c_simple_master$F3572: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
 21946                           
 21947                           
 21948                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 21949     0B0A  087A               	movf	wr1RegCompleteHandler@i2c_simple_master$F3572@p+1,w
 21950     0B0B  00F1               	movwf	I2C1_SetBuffer@buffer+1
 21951     0B0C  0879               	movf	wr1RegCompleteHandler@i2c_simple_master$F3572@p,w
 21952     0B0D  00F0               	movwf	I2C1_SetBuffer@buffer
 21953     0B0E  3001               	movlw	1
 21954     0B0F  00F2               	movwf	I2C1_SetBuffer@bufferSize
 21955     0B10  3000               	movlw	0
 21956     0B11  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 21957     0B12  3189  2190  318B   	fcall	_I2C1_SetBuffer
 21958     0B15                     l7698:
 21959                           
 21960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21961     0B15  3000               	movlw	0
 21962     0B16  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 21963     0B17  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 21964     0B18  3000               	movlw	0
 21965     0B19  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 21966     0B1A  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 21967     0B1B  3189  212F  318B   	fcall	_I2C1_SetDataCompleteCallback
 21968     0B1E                     l7700:
 21969                           
 21970                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 21971     0B1E  3004               	movlw	4
 21972     0B1F                     l1926:
 21973     0B1F  0008               	return
 21974     0B20                     __end_of_wr1RegCompleteHandler@i2c_simple_master$F3572:
 21975                           
 21976                           	psect	text115
 21977     0002                     __ptext115:	
 21978 ;; *************** function _I2C1_CallbackReturnReset *****************
 21979 ;; Defined at:
 21980 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 21981 ;; Parameters:    Size  Location     Type
 21982 ;;  funPtr          2    9[COMMON] PTR void 
 21983 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21984 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 21985 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 21986 ;; Auto vars:     Size  Location     Type
 21987 ;;		None
 21988 ;; Return value:  Size  Location     Type
 21989 ;;                  1    wreg      enum E363
 21990 ;; Registers used:
 21991 ;;		wreg
 21992 ;; Tracked objects:
 21993 ;;		On entry : 0/0
 21994 ;;		On exit  : 0/0
 21995 ;;		Unchanged: 0/0
 21996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22001 ;;Total ram usage:        2 bytes
 22002 ;; Hardware stack levels used: 1
 22003 ;; Hardware stack levels required when called: 4
 22004 ;; This function calls:
 22005 ;;		Nothing
 22006 ;; This function is called by:
 22007 ;;		_I2C1_Open
 22008 ;;		_I2C1_DO_TX
 22009 ;;		_I2C1_DO_RX
 22010 ;;		_I2C1_DO_TX_EMPTY
 22011 ;;		_I2C1_DO_ADDRESS_NACK
 22012 ;;		_I2C1_DO_RX_EMPTY
 22013 ;; This function uses a non-reentrant model
 22014 ;;
 22015                           
 22016     0002                     _I2C1_CallbackReturnReset:	
 22017                           ;psect for function _I2C1_CallbackReturnReset
 22018                           
 22019     0002                     l7692:	
 22020                           ;incstack = 0
 22021                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 22022                           
 22023                           
 22024                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 22025     0002  3005               	movlw	5
 22026     0003                     l807:
 22027     0003  0008               	return
 22028     0004                     __end_of_I2C1_CallbackReturnReset:
 22029                           
 22030                           	psect	text116
 22031     179C                     __ptext116:	
 22032 ;; *************** function _I2C1_CallbackReturnStop *****************
 22033 ;; Defined at:
 22034 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 22035 ;; Parameters:    Size  Location     Type
 22036 ;;  funPtr          2    9[COMMON] PTR void 
 22037 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22038 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22039 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22040 ;; Auto vars:     Size  Location     Type
 22041 ;;		None
 22042 ;; Return value:  Size  Location     Type
 22043 ;;                  1    wreg      enum E363
 22044 ;; Registers used:
 22045 ;;		wreg
 22046 ;; Tracked objects:
 22047 ;;		On entry : 0/0
 22048 ;;		On exit  : 0/0
 22049 ;;		Unchanged: 0/0
 22050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22055 ;;Total ram usage:        2 bytes
 22056 ;; Hardware stack levels used: 1
 22057 ;; Hardware stack levels required when called: 4
 22058 ;; This function calls:
 22059 ;;		Nothing
 22060 ;; This function is called by:
 22061 ;;		_I2C1_Open
 22062 ;;		_I2C1_SetCallback
 22063 ;;		_I2C1_DO_TX
 22064 ;;		_I2C1_DO_RX
 22065 ;;		_I2C1_DO_TX_EMPTY
 22066 ;;		_I2C1_DO_ADDRESS_NACK
 22067 ;;		_I2C1_DO_RX_EMPTY
 22068 ;; This function uses a non-reentrant model
 22069 ;;
 22070                           
 22071     179C                     _I2C1_CallbackReturnStop:	
 22072                           ;psect for function _I2C1_CallbackReturnStop
 22073                           
 22074     179C                     l7688:	
 22075                           ;incstack = 0
 22076                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 22077                           
 22078                           
 22079                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 22080     179C  3001               	movlw	1
 22081     179D                     l804:
 22082     179D  0008               	return
 22083     179E                     __end_of_I2C1_CallbackReturnStop:
 22084                           
 22085                           	psect	text117
 22086     0C2C                     __ptext117:	
 22087 ;; *************** function _rdBlkRegCompleteHandler *****************
 22088 ;; Defined at:
 22089 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  ptr             2    9[COMMON] PTR void 
 22092 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22093 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22094 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22095 ;; Auto vars:     Size  Location     Type
 22096 ;;		None
 22097 ;; Return value:  Size  Location     Type
 22098 ;;                  1    wreg      enum E363
 22099 ;; Registers used:
 22100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22101 ;; Tracked objects:
 22102 ;;		On entry : 0/0
 22103 ;;		On exit  : 0/0
 22104 ;;		Unchanged: 0/0
 22105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22110 ;;Total ram usage:        2 bytes
 22111 ;; Hardware stack levels used: 1
 22112 ;; Hardware stack levels required when called: 6
 22113 ;; This function calls:
 22114 ;;		_I2C1_SetBuffer
 22115 ;;		_I2C1_SetDataCompleteCallback
 22116 ;; This function is called by:
 22117 ;;		_I2C1_ReadDataBlock
 22118 ;;		_I2C1_DO_TX
 22119 ;;		_I2C1_DO_RX
 22120 ;;		_I2C1_DO_TX_EMPTY
 22121 ;;		_I2C1_DO_ADDRESS_NACK
 22122 ;;		_I2C1_DO_RX_EMPTY
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126     0C2C                     _rdBlkRegCompleteHandler:	
 22127                           ;psect for function _rdBlkRegCompleteHandler
 22128                           
 22129     0C2C                     l7630:	
 22130                           ;incstack = 0
 22131                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22132                           
 22133                           
 22134                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 22135     0C2C  0879               	movf	rdBlkRegCompleteHandler@ptr,w
 22136     0C2D  0086               	movwf	6
 22137     0C2E  0187               	clrf	7
 22138     0C2F  3142               	addfsr 1,2
 22139     0C30  3F40               	moviw [0]fsr1
 22140     0C31  00F0               	movwf	I2C1_SetBuffer@buffer
 22141     0C32  3F41               	moviw [1]fsr1
 22142     0C33  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22143     0C34  0879               	movf	rdBlkRegCompleteHandler@ptr,w
 22144     0C35  0086               	movwf	6
 22145     0C36  087A               	movf	rdBlkRegCompleteHandler@ptr+1,w
 22146     0C37  0087               	movwf	7
 22147     0C38  3F40               	moviw [0]fsr1
 22148     0C39  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22149     0C3A  3F41               	moviw [1]fsr1
 22150     0C3B  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22151     0C3C  3189  2190  318C   	fcall	_I2C1_SetBuffer
 22152                           
 22153                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22154     0C3F  3000               	movlw	0
 22155     0C40  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22156     0C41  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22157     0C42  3000               	movlw	0
 22158     0C43  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22159     0C44  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22160     0C45  3189  212F  318C   	fcall	_I2C1_SetDataCompleteCallback
 22161     0C48                     l7632:
 22162                           
 22163                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 22164     0C48  3002               	movlw	2
 22165     0C49                     l124:
 22166     0C49  0008               	return
 22167     0C4A                     __end_of_rdBlkRegCompleteHandler:
 22168                           
 22169                           	psect	text118
 22170     0AF4                     __ptext118:	
 22171 ;; *************** function _wr2RegCompleteHandler *****************
 22172 ;; Defined at:
 22173 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22174 ;; Parameters:    Size  Location     Type
 22175 ;;  ptr             2    9[COMMON] PTR void 
 22176 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22177 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22178 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22179 ;; Auto vars:     Size  Location     Type
 22180 ;;		None
 22181 ;; Return value:  Size  Location     Type
 22182 ;;                  1    wreg      enum E363
 22183 ;; Registers used:
 22184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22185 ;; Tracked objects:
 22186 ;;		On entry : 0/0
 22187 ;;		On exit  : 0/0
 22188 ;;		Unchanged: 0/0
 22189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22194 ;;Total ram usage:        2 bytes
 22195 ;; Hardware stack levels used: 1
 22196 ;; Hardware stack levels required when called: 6
 22197 ;; This function calls:
 22198 ;;		_I2C1_SetBuffer
 22199 ;;		_I2C1_SetDataCompleteCallback
 22200 ;; This function is called by:
 22201 ;;		_I2C1_Write2ByteRegister
 22202 ;;		_I2C1_DO_TX
 22203 ;;		_I2C1_DO_RX
 22204 ;;		_I2C1_DO_TX_EMPTY
 22205 ;;		_I2C1_DO_ADDRESS_NACK
 22206 ;;		_I2C1_DO_RX_EMPTY
 22207 ;; This function uses a non-reentrant model
 22208 ;;
 22209                           
 22210     0AF4                     _wr2RegCompleteHandler:	
 22211                           ;psect for function _wr2RegCompleteHandler
 22212                           
 22213     0AF4                     l7622:	
 22214                           ;incstack = 0
 22215                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22216                           
 22217                           
 22218                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 22219     0AF4  087A               	movf	wr2RegCompleteHandler@ptr+1,w
 22220     0AF5  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22221     0AF6  0879               	movf	wr2RegCompleteHandler@ptr,w
 22222     0AF7  00F0               	movwf	I2C1_SetBuffer@buffer
 22223     0AF8  3002               	movlw	2
 22224     0AF9  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22225     0AFA  3000               	movlw	0
 22226     0AFB  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22227     0AFC  3189  2190  318A   	fcall	_I2C1_SetBuffer
 22228     0AFF                     l7624:
 22229                           
 22230                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22231     0AFF  3000               	movlw	0
 22232     0B00  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22233     0B01  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22234     0B02  3000               	movlw	0
 22235     0B03  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22236     0B04  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22237     0B05  3189  212F  318A   	fcall	_I2C1_SetDataCompleteCallback
 22238     0B08                     l7626:
 22239                           
 22240                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 22241     0B08  3004               	movlw	4
 22242     0B09                     l121:
 22243     0B09  0008               	return
 22244     0B0A                     __end_of_wr2RegCompleteHandler:
 22245                           
 22246                           	psect	text119
 22247     0ADE                     __ptext119:	
 22248 ;; *************** function _wr1RegCompleteHandler *****************
 22249 ;; Defined at:
 22250 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22251 ;; Parameters:    Size  Location     Type
 22252 ;;  ptr             2    9[COMMON] PTR void 
 22253 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22254 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22255 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22256 ;; Auto vars:     Size  Location     Type
 22257 ;;		None
 22258 ;; Return value:  Size  Location     Type
 22259 ;;                  1    wreg      enum E363
 22260 ;; Registers used:
 22261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22262 ;; Tracked objects:
 22263 ;;		On entry : 0/0
 22264 ;;		On exit  : 0/0
 22265 ;;		Unchanged: 0/0
 22266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22271 ;;Total ram usage:        2 bytes
 22272 ;; Hardware stack levels used: 1
 22273 ;; Hardware stack levels required when called: 6
 22274 ;; This function calls:
 22275 ;;		_I2C1_SetBuffer
 22276 ;;		_I2C1_SetDataCompleteCallback
 22277 ;; This function is called by:
 22278 ;;		_I2C1_Write1ByteRegister
 22279 ;;		_I2C1_DO_TX
 22280 ;;		_I2C1_DO_RX
 22281 ;;		_I2C1_DO_TX_EMPTY
 22282 ;;		_I2C1_DO_ADDRESS_NACK
 22283 ;;		_I2C1_DO_RX_EMPTY
 22284 ;; This function uses a non-reentrant model
 22285 ;;
 22286                           
 22287     0ADE                     _wr1RegCompleteHandler:	
 22288                           ;psect for function _wr1RegCompleteHandler
 22289                           
 22290     0ADE                     l7614:	
 22291                           ;incstack = 0
 22292                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22293                           
 22294                           
 22295                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 22296     0ADE  087A               	movf	wr1RegCompleteHandler@ptr+1,w
 22297     0ADF  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22298     0AE0  0879               	movf	wr1RegCompleteHandler@ptr,w
 22299     0AE1  00F0               	movwf	I2C1_SetBuffer@buffer
 22300     0AE2  3001               	movlw	1
 22301     0AE3  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22302     0AE4  3000               	movlw	0
 22303     0AE5  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22304     0AE6  3189  2190  318A   	fcall	_I2C1_SetBuffer
 22305     0AE9                     l7616:
 22306                           
 22307                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22308     0AE9  3000               	movlw	0
 22309     0AEA  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22310     0AEB  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22311     0AEC  3000               	movlw	0
 22312     0AED  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22313     0AEE  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22314     0AEF  3189  212F  318A   	fcall	_I2C1_SetDataCompleteCallback
 22315     0AF2                     l7618:
 22316                           
 22317                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 22318     0AF2  3004               	movlw	4
 22319     0AF3                     l118:
 22320     0AF3  0008               	return
 22321     0AF4                     __end_of_wr1RegCompleteHandler:
 22322                           
 22323                           	psect	text120
 22324     0AC8                     __ptext120:	
 22325 ;; *************** function _rd2RegCompleteHandler *****************
 22326 ;; Defined at:
 22327 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22328 ;; Parameters:    Size  Location     Type
 22329 ;;  ptr             2    9[COMMON] PTR void 
 22330 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22331 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22332 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22333 ;; Auto vars:     Size  Location     Type
 22334 ;;		None
 22335 ;; Return value:  Size  Location     Type
 22336 ;;                  1    wreg      enum E363
 22337 ;; Registers used:
 22338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22339 ;; Tracked objects:
 22340 ;;		On entry : 0/0
 22341 ;;		On exit  : 0/0
 22342 ;;		Unchanged: 0/0
 22343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22348 ;;Total ram usage:        2 bytes
 22349 ;; Hardware stack levels used: 1
 22350 ;; Hardware stack levels required when called: 6
 22351 ;; This function calls:
 22352 ;;		_I2C1_SetBuffer
 22353 ;;		_I2C1_SetDataCompleteCallback
 22354 ;; This function is called by:
 22355 ;;		_I2C1_Read2ByteRegister
 22356 ;;		_I2C1_DO_TX
 22357 ;;		_I2C1_DO_RX
 22358 ;;		_I2C1_DO_TX_EMPTY
 22359 ;;		_I2C1_DO_ADDRESS_NACK
 22360 ;;		_I2C1_DO_RX_EMPTY
 22361 ;; This function uses a non-reentrant model
 22362 ;;
 22363                           
 22364     0AC8                     _rd2RegCompleteHandler:	
 22365                           ;psect for function _rd2RegCompleteHandler
 22366                           
 22367     0AC8                     l7606:	
 22368                           ;incstack = 0
 22369                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22370                           
 22371                           
 22372                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 22373     0AC8  087A               	movf	rd2RegCompleteHandler@ptr+1,w
 22374     0AC9  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22375     0ACA  0879               	movf	rd2RegCompleteHandler@ptr,w
 22376     0ACB  00F0               	movwf	I2C1_SetBuffer@buffer
 22377     0ACC  3002               	movlw	2
 22378     0ACD  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22379     0ACE  3000               	movlw	0
 22380     0ACF  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22381     0AD0  3189  2190  318A   	fcall	_I2C1_SetBuffer
 22382     0AD3                     l7608:
 22383                           
 22384                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22385     0AD3  3000               	movlw	0
 22386     0AD4  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22387     0AD5  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22388     0AD6  3000               	movlw	0
 22389     0AD7  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22390     0AD8  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22391     0AD9  3189  212F  318A   	fcall	_I2C1_SetDataCompleteCallback
 22392     0ADC                     l7610:
 22393                           
 22394                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 22395     0ADC  3002               	movlw	2
 22396     0ADD                     l115:
 22397     0ADD  0008               	return
 22398     0ADE                     __end_of_rd2RegCompleteHandler:
 22399                           
 22400                           	psect	text121
 22401     0AB2                     __ptext121:	
 22402 ;; *************** function _rd1RegCompleteHandler *****************
 22403 ;; Defined at:
 22404 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22405 ;; Parameters:    Size  Location     Type
 22406 ;;  ptr             2    9[COMMON] PTR void 
 22407 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22408 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22409 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22410 ;; Auto vars:     Size  Location     Type
 22411 ;;		None
 22412 ;; Return value:  Size  Location     Type
 22413 ;;                  1    wreg      enum E363
 22414 ;; Registers used:
 22415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22416 ;; Tracked objects:
 22417 ;;		On entry : 0/0
 22418 ;;		On exit  : 0/0
 22419 ;;		Unchanged: 0/0
 22420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22425 ;;Total ram usage:        2 bytes
 22426 ;; Hardware stack levels used: 1
 22427 ;; Hardware stack levels required when called: 6
 22428 ;; This function calls:
 22429 ;;		_I2C1_SetBuffer
 22430 ;;		_I2C1_SetDataCompleteCallback
 22431 ;; This function is called by:
 22432 ;;		_I2C1_Read1ByteRegister
 22433 ;;		_I2C1_DO_TX
 22434 ;;		_I2C1_DO_RX
 22435 ;;		_I2C1_DO_TX_EMPTY
 22436 ;;		_I2C1_DO_ADDRESS_NACK
 22437 ;;		_I2C1_DO_RX_EMPTY
 22438 ;; This function uses a non-reentrant model
 22439 ;;
 22440                           
 22441     0AB2                     _rd1RegCompleteHandler:	
 22442                           ;psect for function _rd1RegCompleteHandler
 22443                           
 22444     0AB2                     l7598:	
 22445                           ;incstack = 0
 22446                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22447                           
 22448                           
 22449                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 22450     0AB2  087A               	movf	rd1RegCompleteHandler@ptr+1,w
 22451     0AB3  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22452     0AB4  0879               	movf	rd1RegCompleteHandler@ptr,w
 22453     0AB5  00F0               	movwf	I2C1_SetBuffer@buffer
 22454     0AB6  3001               	movlw	1
 22455     0AB7  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22456     0AB8  3000               	movlw	0
 22457     0AB9  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22458     0ABA  3189  2190  318A   	fcall	_I2C1_SetBuffer
 22459     0ABD                     l7600:
 22460                           
 22461                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22462     0ABD  3000               	movlw	0
 22463     0ABE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22464     0ABF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22465     0AC0  3000               	movlw	0
 22466     0AC1  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22467     0AC2  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22468     0AC3  3189  212F  318A   	fcall	_I2C1_SetDataCompleteCallback
 22469     0AC6                     l7602:
 22470                           
 22471                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 22472     0AC6  3002               	movlw	2
 22473     0AC7                     l112:
 22474     0AC7  0008               	return
 22475     0AC8                     __end_of_rd1RegCompleteHandler:
 22476                           
 22477                           	psect	text122
 22478     0A9C                     __ptext122:	
 22479 ;; *************** function _wr2RegCompleteHandler@i2c_simple_master$F3596 *****************
 22480 ;; Defined at:
 22481 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;  p               2    9[COMMON] PTR void 
 22484 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22485 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22486 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22487 ;; Auto vars:     Size  Location     Type
 22488 ;;		None
 22489 ;; Return value:  Size  Location     Type
 22490 ;;                  1    wreg      enum E363
 22491 ;; Registers used:
 22492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22493 ;; Tracked objects:
 22494 ;;		On entry : 0/0
 22495 ;;		On exit  : 0/0
 22496 ;;		Unchanged: 0/0
 22497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22502 ;;Total ram usage:        2 bytes
 22503 ;; Hardware stack levels used: 1
 22504 ;; Hardware stack levels required when called: 6
 22505 ;; This function calls:
 22506 ;;		_I2C1_SetBuffer
 22507 ;;		_I2C1_SetDataCompleteCallback
 22508 ;; This function is called by:
 22509 ;;		_i2c_write2ByteRegister
 22510 ;;		_I2C1_DO_TX
 22511 ;;		_I2C1_DO_RX
 22512 ;;		_I2C1_DO_TX_EMPTY
 22513 ;;		_I2C1_DO_ADDRESS_NACK
 22514 ;;		_I2C1_DO_RX_EMPTY
 22515 ;; This function uses a non-reentrant model
 22516 ;;
 22517                           
 22518     0A9C                     _wr2RegCompleteHandler@i2c_simple_master$F3596:	
 22519                           ;psect for function _wr2RegCompleteHandler@i2c_simple_master$F3596
 22520                           
 22521     0A9C                     l7720:	
 22522                           ;incstack = 0
 22523                           ; Regs used in _wr2RegCompleteHandler@i2c_simple_master$F3596: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
 22524                           
 22525                           
 22526                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 22527     0A9C  087A               	movf	wr2RegCompleteHandler@i2c_simple_master$F3596@p+1,w
 22528     0A9D  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22529     0A9E  0879               	movf	wr2RegCompleteHandler@i2c_simple_master$F3596@p,w
 22530     0A9F  00F0               	movwf	I2C1_SetBuffer@buffer
 22531     0AA0  3002               	movlw	2
 22532     0AA1  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22533     0AA2  3000               	movlw	0
 22534     0AA3  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22535     0AA4  3189  2190  318A   	fcall	_I2C1_SetBuffer
 22536     0AA7                     l7722:
 22537                           
 22538                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 22539     0AA7  3000               	movlw	0
 22540     0AA8  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22541     0AA9  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22542     0AAA  3000               	movlw	0
 22543     0AAB  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22544     0AAC  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22545     0AAD  3189  212F  318A   	fcall	_I2C1_SetDataCompleteCallback
 22546     0AB0                     l7724:
 22547                           
 22548                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 22549     0AB0  3004               	movlw	4
 22550     0AB1                     l1974:
 22551     0AB1  0008               	return
 22552     0AB2                     __end_of_wr2RegCompleteHandler@i2c_simple_master$F3596:
 22553                           
 22554                           	psect	text123
 22555     092F                     __ptext123:	
 22556 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 22557 ;; Defined at:
 22558 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 22559 ;; Parameters:    Size  Location     Type
 22560 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 22561 ;;		 -> rdBlkRegCompleteHandler@i2c_simple_master$F3602(1), wr2RegCompleteHandler@i2c_simple_master$F3596(1), rd2RegComp
      +leteHandler@i2c_simple_master$F3590(1), rd1RegCompleteHandler@i2c_simple_master$F3582(1), 
 22562 ;;		 -> wr1RegCompleteHandler@i2c_simple_master$F3572(1), NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1),
      + 
 22563 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22564 ;;  ptr             2    7[COMMON] PTR void 
 22565 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22566 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22567 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22568 ;; Auto vars:     Size  Location     Type
 22569 ;;		None
 22570 ;; Return value:  Size  Location     Type
 22571 ;;                  1    wreg      void 
 22572 ;; Registers used:
 22573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22574 ;; Tracked objects:
 22575 ;;		On entry : 0/0
 22576 ;;		On exit  : 0/0
 22577 ;;		Unchanged: 0/0
 22578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22583 ;;Total ram usage:        4 bytes
 22584 ;; Hardware stack levels used: 1
 22585 ;; Hardware stack levels required when called: 5
 22586 ;; This function calls:
 22587 ;;		_I2C1_SetCallback
 22588 ;; This function is called by:
 22589 ;;		_rd1RegCompleteHandler
 22590 ;;		_rd2RegCompleteHandler
 22591 ;;		_wr1RegCompleteHandler
 22592 ;;		_wr2RegCompleteHandler
 22593 ;;		_rdBlkRegCompleteHandler
 22594 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 22595 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 22596 ;;		_i2c_read1ByteRegister
 22597 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 22598 ;;		_i2c_read2ByteRegister
 22599 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 22600 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 22601 ;;		_I2C1_Read1ByteRegister
 22602 ;;		_I2C1_Read2ByteRegister
 22603 ;;		_I2C1_Write1ByteRegister
 22604 ;;		_I2C1_Write2ByteRegister
 22605 ;;		_I2C1_ReadDataBlock
 22606 ;;		_i2c_write1ByteRegister
 22607 ;;		_i2c_write2ByteRegister
 22608 ;;		_i2c_readDataBlock
 22609 ;; This function uses a non-reentrant model
 22610 ;;
 22611                           
 22612     092F                     _I2C1_SetDataCompleteCallback:	
 22613                           ;psect for function _I2C1_SetDataCompleteCallback
 22614                           
 22615     092F                     l7584:	
 22616                           ;incstack = 0
 22617                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22618                           
 22619                           
 22620                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 22621     092F  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 22622     0930  00F1               	movwf	I2C1_SetCallback@cb+1
 22623     0931  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 22624     0932  00F0               	movwf	I2C1_SetCallback@cb
 22625     0933  0878               	movf	I2C1_SetDataCompleteCallback@ptr+1,w
 22626     0934  00F3               	movwf	I2C1_SetCallback@ptr+1
 22627     0935  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 22628     0936  00F2               	movwf	I2C1_SetCallback@ptr
 22629     0937  3000               	movlw	0
 22630     0938  318F  271A  3189   	fcall	_I2C1_SetCallback
 22631     093B                     l678:
 22632     093B  0008               	return
 22633     093C                     __end_of_I2C1_SetDataCompleteCallback:
 22634                           
 22635                           	psect	text124
 22636     0F1A                     __ptext124:	
 22637 ;; *************** function _I2C1_SetCallback *****************
 22638 ;; Defined at:
 22639 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 22640 ;; Parameters:    Size  Location     Type
 22641 ;;  idx             1    wreg     enum E12813
 22642 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 22643 ;;		 -> rdBlkRegCompleteHandler@i2c_simple_master$F3602(1), wr2RegCompleteHandler@i2c_simple_master$F3596(1), rd2RegComp
      +leteHandler@i2c_simple_master$F3590(1), rd1RegCompleteHandler@i2c_simple_master$F3582(1), 
 22644 ;;		 -> wr1RegCompleteHandler@i2c_simple_master$F3572(1), NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1),
      + 
 22645 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22646 ;;  ptr             2    2[COMMON] PTR void 
 22647 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22648 ;;		 -> i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@data(1), 
 22649 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22650 ;; Auto vars:     Size  Location     Type
 22651 ;;  idx             1    4[COMMON] enum E12813
 22652 ;; Return value:  Size  Location     Type
 22653 ;;                  1    wreg      void 
 22654 ;; Registers used:
 22655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22656 ;; Tracked objects:
 22657 ;;		On entry : 0/0
 22658 ;;		On exit  : 0/0
 22659 ;;		Unchanged: 0/0
 22660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22665 ;;Total ram usage:        5 bytes
 22666 ;; Hardware stack levels used: 1
 22667 ;; Hardware stack levels required when called: 4
 22668 ;; This function calls:
 22669 ;;		Nothing
 22670 ;; This function is called by:
 22671 ;;		_I2C1_SetDataCompleteCallback
 22672 ;;		_I2C1_SetAddressNackCallback
 22673 ;;		_I2C1_SetWriteCollisionCallback
 22674 ;;		_I2C1_SetDataNackCallback
 22675 ;;		_I2C1_SetTimeoutCallback
 22676 ;; This function uses a non-reentrant model
 22677 ;;
 22678                           
 22679     0F1A                     _I2C1_SetCallback:	
 22680                           ;psect for function _I2C1_SetCallback
 22681                           
 22682                           
 22683                           ;incstack = 0
 22684                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 22685                           ;I2C1_SetCallback@idx stored from wreg
 22686     0F1A  00F4               	movwf	I2C1_SetCallback@idx
 22687     0F1B                     l7578:
 22688                           
 22689                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 22690     0F1B  0870               	movf	I2C1_SetCallback@cb,w
 22691     0F1C  0471               	iorwf	I2C1_SetCallback@cb+1,w
 22692     0F1D  1903               	btfsc	3,2
 22693     0F1E  2F20               	goto	u3961
 22694     0F1F  2F21               	goto	u3960
 22695     0F20                     u3961:
 22696     0F20  2F3A               	goto	l7582
 22697     0F21                     u3960:
 22698     0F21                     l7580:
 22699                           
 22700                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 22701     0F21  3574               	lslf	I2C1_SetCallback@idx,w
 22702     0F22  3EA0               	addlw	low _I2C1_Status
 22703     0F23  0086               	movwf	6
 22704     0F24  3001               	movlw	high _I2C1_Status
 22705     0F25  3D87               	addwfc	7,f
 22706     0F26  3574               	lslf	I2C1_SetCallback@idx,w
 22707     0F27  3000               	movlw	0
 22708     0F28  3D87               	addwfc	7,f
 22709     0F29  0870               	movf	I2C1_SetCallback@cb,w
 22710     0F2A  3FC0               	movwi [0]fsr1
 22711     0F2B  0871               	movf	I2C1_SetCallback@cb+1,w
 22712     0F2C  3FC1               	movwi [1]fsr1
 22713                           
 22714                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 22715     0F2D  3574               	lslf	I2C1_SetCallback@idx,w
 22716     0F2E  3EAC               	addlw	low (_I2C1_Status+12)
 22717     0F2F  0086               	movwf	6
 22718     0F30  3001               	movlw	high (_I2C1_Status+12)
 22719     0F31  3D87               	addwfc	7,f
 22720     0F32  3574               	lslf	I2C1_SetCallback@idx,w
 22721     0F33  3000               	movlw	0
 22722     0F34  3D87               	addwfc	7,f
 22723     0F35  0872               	movf	I2C1_SetCallback@ptr,w
 22724     0F36  3FC0               	movwi [0]fsr1
 22725     0F37  0873               	movf	I2C1_SetCallback@ptr+1,w
 22726     0F38  3FC1               	movwi [1]fsr1
 22727                           
 22728                           ;mcc_generated_files/i2c1_master.c: 304:     }
 22729     0F39  2F51               	goto	l695
 22730     0F3A                     l7582:
 22731                           
 22732                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 22733     0F3A  3574               	lslf	I2C1_SetCallback@idx,w
 22734     0F3B  3EA0               	addlw	low _I2C1_Status
 22735     0F3C  0086               	movwf	6
 22736     0F3D  3001               	movlw	high _I2C1_Status
 22737     0F3E  3D87               	addwfc	7,f
 22738     0F3F  3574               	lslf	I2C1_SetCallback@idx,w
 22739     0F40  3000               	movlw	0
 22740     0F41  3D87               	addwfc	7,f
 22741     0F42  309C               	movlw	low (low _I2C1_CallbackReturnStop)
 22742     0F43  3FC0               	movwi [0]fsr1
 22743     0F44  3000               	movlw	high (low _I2C1_CallbackReturnStop)
 22744     0F45  3FC1               	movwi [1]fsr1
 22745                           
 22746                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 22747     0F46  3574               	lslf	I2C1_SetCallback@idx,w
 22748     0F47  3EAC               	addlw	low (_I2C1_Status+12)
 22749     0F48  0086               	movwf	6
 22750     0F49  3001               	movlw	high (_I2C1_Status+12)
 22751     0F4A  3D87               	addwfc	7,f
 22752     0F4B  3574               	lslf	I2C1_SetCallback@idx,w
 22753     0F4C  3000               	movlw	0
 22754     0F4D  3D87               	addwfc	7,f
 22755     0F4E  3000               	movlw	0
 22756     0F4F  3FC0               	movwi [0]fsr1
 22757     0F50  3FC1               	movwi [1]fsr1
 22758     0F51                     l695:
 22759     0F51  0008               	return
 22760     0F52                     __end_of_I2C1_SetCallback:
 22761                           
 22762                           	psect	text125
 22763     0990                     __ptext125:	
 22764 ;; *************** function _I2C1_SetBuffer *****************
 22765 ;; Defined at:
 22766 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 22767 ;; Parameters:    Size  Location     Type
 22768 ;;  buffer          2    0[COMMON] PTR void 
 22769 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 22770 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 22771 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 22772 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 22773 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), I2C1_ReadDataBlock@r
      +eg(1), 
 22774 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@
      +data(2), 
 22775 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 22776 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 22777 ;;  bufferSize      2    2[COMMON] unsigned int 
 22778 ;; Auto vars:     Size  Location     Type
 22779 ;;		None
 22780 ;; Return value:  Size  Location     Type
 22781 ;;                  1    wreg      void 
 22782 ;; Registers used:
 22783 ;;		wreg
 22784 ;; Tracked objects:
 22785 ;;		On entry : 0/0
 22786 ;;		On exit  : 0/0
 22787 ;;		Unchanged: 0/0
 22788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22793 ;;Total ram usage:        4 bytes
 22794 ;; Hardware stack levels used: 1
 22795 ;; Hardware stack levels required when called: 4
 22796 ;; This function calls:
 22797 ;;		Nothing
 22798 ;; This function is called by:
 22799 ;;		_rd1RegCompleteHandler
 22800 ;;		_rd2RegCompleteHandler
 22801 ;;		_wr1RegCompleteHandler
 22802 ;;		_wr2RegCompleteHandler
 22803 ;;		_rdBlkRegCompleteHandler
 22804 ;;		_wr1RegCompleteHandler@i2c_simple_master$F3572
 22805 ;;		_rd1RegCompleteHandler@i2c_simple_master$F3582
 22806 ;;		_i2c_read1ByteRegister
 22807 ;;		_rd2RegCompleteHandler@i2c_simple_master$F3590
 22808 ;;		_i2c_read2ByteRegister
 22809 ;;		_wr2RegCompleteHandler@i2c_simple_master$F3596
 22810 ;;		_rdBlkRegCompleteHandler@i2c_simple_master$F3602
 22811 ;;		_I2C1_Read1ByteRegister
 22812 ;;		_I2C1_Read2ByteRegister
 22813 ;;		_I2C1_Write1ByteRegister
 22814 ;;		_I2C1_Write2ByteRegister
 22815 ;;		_I2C1_WriteNBytes
 22816 ;;		_I2C1_ReadNBytes
 22817 ;;		_I2C1_ReadDataBlock
 22818 ;;		_i2c_write1ByteRegister
 22819 ;;		_i2c_writeNBytes
 22820 ;;		_i2c_write2ByteRegister
 22821 ;;		_i2c_readDataBlock
 22822 ;;		_i2c_readNBytes
 22823 ;; This function uses a non-reentrant model
 22824 ;;
 22825                           
 22826     0990                     _I2C1_SetBuffer:	
 22827                           ;psect for function _I2C1_SetBuffer
 22828                           
 22829     0990                     l7586:	
 22830                           ;incstack = 0
 22831                           ; Regs used in _I2C1_SetBuffer: [wreg]
 22832                           
 22833                           
 22834                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 22835     0990  0143               	movlb	3	; select bank3
 22836     0991  1DC3               	btfss	(_I2C1_Status^(0+384)+35),3
 22837     0992  2994               	goto	u3971
 22838     0993  2995               	goto	u3970
 22839     0994                     u3971:
 22840     0994  299E               	goto	l675
 22841     0995                     u3970:
 22842     0995                     l7588:
 22843                           
 22844                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 22845     0995  0871               	movf	I2C1_SetBuffer@buffer+1,w
 22846     0996  00BE               	movwf	((_I2C1_Status+1)^(0+384)+29)
 22847     0997  0870               	movf	I2C1_SetBuffer@buffer,w
 22848     0998  00BD               	movwf	(_I2C1_Status^(0+384)+29)
 22849                           
 22850                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 22851     0999  0873               	movf	I2C1_SetBuffer@bufferSize+1,w
 22852     099A  00C0               	movwf	((_I2C1_Status+1)^(0+384)+31)
 22853     099B  0872               	movf	I2C1_SetBuffer@bufferSize,w
 22854     099C  00BF               	movwf	(_I2C1_Status^(0+384)+31)
 22855     099D                     l7590:
 22856                           
 22857                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 22858     099D  11C3               	bcf	(_I2C1_Status^(0+384)+35),3
 22859     099E                     l675:
 22860     099E  0008               	return
 22861     099F                     __end_of_I2C1_SetBuffer:
 22862                           
 22863                           	psect	text126
 22864     17AD                     __ptext126:	
 22865 ;; *************** function _I2C1_MasterStop *****************
 22866 ;; Defined at:
 22867 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;		None
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;		None
 22872 ;; Return value:  Size  Location     Type
 22873 ;;                  1    wreg      void 
 22874 ;; Registers used:
 22875 ;;		None
 22876 ;; Tracked objects:
 22877 ;;		On entry : 0/0
 22878 ;;		On exit  : 0/0
 22879 ;;		Unchanged: 0/0
 22880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22885 ;;Total ram usage:        0 bytes
 22886 ;; Hardware stack levels used: 1
 22887 ;; Hardware stack levels required when called: 4
 22888 ;; This function calls:
 22889 ;;		Nothing
 22890 ;; This function is called by:
 22891 ;;		_I2C1_DO_SEND_STOP
 22892 ;; This function uses a non-reentrant model
 22893 ;;
 22894                           
 22895     17AD                     _I2C1_MasterStop:	
 22896                           ;psect for function _I2C1_MasterStop
 22897                           
 22898     17AD                     l7594:	
 22899                           ;incstack = 0
 22900                           ; Regs used in _I2C1_MasterStop: []
 22901                           
 22902                           
 22903                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 22904     17AD  0143               	movlb	3	; select bank3
 22905     17AE  1511               	bsf	17,2	;volatile
 22906     17AF                     l841:
 22907     17AF  0008               	return
 22908     17B0                     __end_of_I2C1_MasterStop:
 22909                           
 22910                           	psect	text127
 22911     17AA                     __ptext127:	
 22912 ;; *************** function _I2C1_MasterEnableRestart *****************
 22913 ;; Defined at:
 22914 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;		None
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;                  1    wreg      void 
 22921 ;; Registers used:
 22922 ;;		None
 22923 ;; Tracked objects:
 22924 ;;		On entry : 0/0
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22932 ;;Total ram usage:        0 bytes
 22933 ;; Hardware stack levels used: 1
 22934 ;; Hardware stack levels required when called: 4
 22935 ;; This function calls:
 22936 ;;		Nothing
 22937 ;; This function is called by:
 22938 ;;		_I2C1_DO_SEND_RESTART_READ
 22939 ;;		_I2C1_DO_SEND_RESTART_WRITE
 22940 ;;		_I2C1_DO_SEND_RESTART
 22941 ;;		_I2C1_DO_RX_EMPTY
 22942 ;; This function uses a non-reentrant model
 22943 ;;
 22944                           
 22945     17AA                     _I2C1_MasterEnableRestart:	
 22946                           ;psect for function _I2C1_MasterEnableRestart
 22947                           
 22948     17AA                     l7592:	
 22949                           ;incstack = 0
 22950                           ; Regs used in _I2C1_MasterEnableRestart: []
 22951                           
 22952                           
 22953                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 22954     17AA  0143               	movlb	3	; select bank3
 22955     17AB  1491               	bsf	17,1	;volatile
 22956     17AC                     l829:
 22957     17AC  0008               	return
 22958     17AD                     __end_of_I2C1_MasterEnableRestart:
 22959                           
 22960                           	psect	text128
 22961     17A7                     __ptext128:	
 22962 ;; *************** function _I2C1_MasterStart *****************
 22963 ;; Defined at:
 22964 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 22965 ;; Parameters:    Size  Location     Type
 22966 ;;		None
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;		None
 22969 ;; Return value:  Size  Location     Type
 22970 ;;                  1    wreg      void 
 22971 ;; Registers used:
 22972 ;;		None
 22973 ;; Tracked objects:
 22974 ;;		On entry : 0/0
 22975 ;;		On exit  : 0/0
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22982 ;;Total ram usage:        0 bytes
 22983 ;; Hardware stack levels used: 1
 22984 ;; Hardware stack levels required when called: 4
 22985 ;; This function calls:
 22986 ;;		Nothing
 22987 ;; This function is called by:
 22988 ;;		_I2C1_MasterOperation
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           
 22992     17A7                     _I2C1_MasterStart:	
 22993                           ;psect for function _I2C1_MasterStart
 22994                           
 22995     17A7                     l7906:	
 22996                           ;incstack = 0
 22997                           ; Regs used in _I2C1_MasterStart: []
 22998                           
 22999                           
 23000                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 23001     17A7  0143               	movlb	3	; select bank3
 23002     17A8  1411               	bsf	17,0	;volatile
 23003     17A9                     l838:
 23004     17A9  0008               	return
 23005     17AA                     __end_of_I2C1_MasterStart:
 23006                           
 23007                           	psect	text129
 23008     0B78                     __ptext129:	
 23009 ;; *************** function _I2C1_Close *****************
 23010 ;; Defined at:
 23011 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 23012 ;; Parameters:    Size  Location     Type
 23013 ;;		None
 23014 ;; Auto vars:     Size  Location     Type
 23015 ;;  returnValue     1    0[COMMON] enum E358
 23016 ;; Return value:  Size  Location     Type
 23017 ;;                  1    wreg      enum E358
 23018 ;; Registers used:
 23019 ;;		wreg, status,2, status,0, pclath, cstack
 23020 ;; Tracked objects:
 23021 ;;		On entry : 0/0
 23022 ;;		On exit  : 0/0
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23029 ;;Total ram usage:        1 bytes
 23030 ;; Hardware stack levels used: 1
 23031 ;; Hardware stack levels required when called: 5
 23032 ;; This function calls:
 23033 ;;		_I2C1_MasterClearIrq
 23034 ;;		_I2C1_MasterClose
 23035 ;;		_I2C1_MasterDisableIrq
 23036 ;; This function is called by:
 23037 ;;		_i2c_read1ByteRegister
 23038 ;;		_i2c_read2ByteRegister
 23039 ;;		_I2C1_Read1ByteRegister
 23040 ;;		_I2C1_Read2ByteRegister
 23041 ;;		_I2C1_Write1ByteRegister
 23042 ;;		_I2C1_Write2ByteRegister
 23043 ;;		_I2C1_WriteNBytes
 23044 ;;		_I2C1_ReadNBytes
 23045 ;;		_I2C1_ReadDataBlock
 23046 ;;		_i2c_write1ByteRegister
 23047 ;;		_i2c_writeNBytes
 23048 ;;		_i2c_write2ByteRegister
 23049 ;;		_i2c_readDataBlock
 23050 ;;		_i2c_readNBytes
 23051 ;; This function uses a non-reentrant model
 23052 ;;
 23053                           
 23054     0B78                     _I2C1_Close:	
 23055                           ;psect for function _I2C1_Close
 23056                           
 23057     0B78                     l7992:	
 23058                           ;incstack = 0
 23059                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 23060                           
 23061                           
 23062                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 23063     0B78  3001               	movlw	1
 23064     0B79  00F0               	movwf	I2C1_Close@returnValue
 23065                           
 23066                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 23067     0B7A  0143               	movlb	3	; select bank3
 23068     0B7B  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 23069     0B7C  2B7E               	goto	u4091
 23070     0B7D  2B7F               	goto	u4090
 23071     0B7E                     u4091:
 23072     0B7E  2B8E               	goto	l8000
 23073     0B7F                     u4090:
 23074     0B7F                     l7994:
 23075                           
 23076                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 23077     0B7F  1143               	bcf	(_I2C1_Status^(0+384)+35),2
 23078                           
 23079                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 23080     0B80  30FF               	movlw	255
 23081     0B81  00BC               	movwf	(_I2C1_Status^(0+384)+28)
 23082     0B82                     l7996:
 23083                           
 23084                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 23085     0B82  3197  279E  318B   	fcall	_I2C1_MasterClearIrq
 23086                           
 23087                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 23088     0B85  3197  27A4  318B   	fcall	_I2C1_MasterDisableIrq
 23089                           
 23090                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 23091     0B88  3197  27A1  318B   	fcall	_I2C1_MasterClose
 23092     0B8B                     l7998:
 23093                           
 23094                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 23095     0B8B  0143               	movlb	3	; select bank3
 23096     0B8C  0842               	movf	(_I2C1_Status^(0+384)+34),w
 23097     0B8D  00F0               	movwf	I2C1_Close@returnValue
 23098     0B8E                     l8000:
 23099                           
 23100                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 23101     0B8E  0870               	movf	I2C1_Close@returnValue,w
 23102     0B8F                     l656:
 23103     0B8F  0008               	return
 23104     0B90                     __end_of_I2C1_Close:
 23105                           
 23106                           	psect	text130
 23107     17A4                     __ptext130:	
 23108 ;; *************** function _I2C1_MasterDisableIrq *****************
 23109 ;; Defined at:
 23110 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 23111 ;; Parameters:    Size  Location     Type
 23112 ;;		None
 23113 ;; Auto vars:     Size  Location     Type
 23114 ;;		None
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  1    wreg      void 
 23117 ;; Registers used:
 23118 ;;		None
 23119 ;; Tracked objects:
 23120 ;;		On entry : 0/0
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23128 ;;Total ram usage:        0 bytes
 23129 ;; Hardware stack levels used: 1
 23130 ;; Hardware stack levels required when called: 4
 23131 ;; This function calls:
 23132 ;;		Nothing
 23133 ;; This function is called by:
 23134 ;;		_I2C1_Close
 23135 ;;		_I2C1_SetTimeOut
 23136 ;; This function uses a non-reentrant model
 23137 ;;
 23138                           
 23139     17A4                     _I2C1_MasterDisableIrq:	
 23140                           ;psect for function _I2C1_MasterDisableIrq
 23141                           
 23142     17A4                     l7928:	
 23143                           ;incstack = 0
 23144                           ; Regs used in _I2C1_MasterDisableIrq: []
 23145                           
 23146                           
 23147                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 23148     17A4  014E               	movlb	14	; select bank14
 23149     17A5  1019               	bcf	25,0	;volatile
 23150     17A6                     l865:
 23151     17A6  0008               	return
 23152     17A7                     __end_of_I2C1_MasterDisableIrq:
 23153                           
 23154                           	psect	text131
 23155     17A1                     __ptext131:	
 23156 ;; *************** function _I2C1_MasterClose *****************
 23157 ;; Defined at:
 23158 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 23159 ;; Parameters:    Size  Location     Type
 23160 ;;		None
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;		None
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  1    wreg      void 
 23165 ;; Registers used:
 23166 ;;		None
 23167 ;; Tracked objects:
 23168 ;;		On entry : 0/0
 23169 ;;		On exit  : 0/0
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23176 ;;Total ram usage:        0 bytes
 23177 ;; Hardware stack levels used: 1
 23178 ;; Hardware stack levels required when called: 4
 23179 ;; This function calls:
 23180 ;;		Nothing
 23181 ;; This function is called by:
 23182 ;;		_I2C1_Close
 23183 ;; This function uses a non-reentrant model
 23184 ;;
 23185                           
 23186     17A1                     _I2C1_MasterClose:	
 23187                           ;psect for function _I2C1_MasterClose
 23188                           
 23189     17A1                     l7930:	
 23190                           ;incstack = 0
 23191                           ; Regs used in _I2C1_MasterClose: []
 23192                           
 23193                           
 23194                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 23195     17A1  0143               	movlb	3	; select bank3
 23196     17A2  1290               	bcf	16,5	;volatile
 23197     17A3                     l820:
 23198     17A3  0008               	return
 23199     17A4                     __end_of_I2C1_MasterClose:
 23200                           
 23201                           	psect	text132
 23202     179E                     __ptext132:	
 23203 ;; *************** function _I2C1_MasterClearIrq *****************
 23204 ;; Defined at:
 23205 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 23206 ;; Parameters:    Size  Location     Type
 23207 ;;		None
 23208 ;; Auto vars:     Size  Location     Type
 23209 ;;		None
 23210 ;; Return value:  Size  Location     Type
 23211 ;;                  1    wreg      void 
 23212 ;; Registers used:
 23213 ;;		None
 23214 ;; Tracked objects:
 23215 ;;		On entry : 0/0
 23216 ;;		On exit  : 0/0
 23217 ;;		Unchanged: 0/0
 23218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23223 ;;Total ram usage:        0 bytes
 23224 ;; Hardware stack levels used: 1
 23225 ;; Hardware stack levels required when called: 4
 23226 ;; This function calls:
 23227 ;;		Nothing
 23228 ;; This function is called by:
 23229 ;;		_I2C1_Open
 23230 ;;		_I2C1_Close
 23231 ;;		_I2C1_MasterFsm
 23232 ;; This function uses a non-reentrant model
 23233 ;;
 23234                           
 23235     179E                     _I2C1_MasterClearIrq:	
 23236                           ;psect for function _I2C1_MasterClearIrq
 23237                           
 23238     179E                     l7734:	
 23239                           ;incstack = 0
 23240                           ; Regs used in _I2C1_MasterClearIrq: []
 23241                           
 23242                           
 23243                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 23244     179E  014E               	movlb	14	; select bank14
 23245     179F  100F               	bcf	15,0	;volatile
 23246     17A0                     l868:
 23247     17A0  0008               	return
 23248     17A1                     __end_of_I2C1_MasterClearIrq:
 23249                           
 23250                           	psect	intentry
 23251     0004                     __pintentry:	
 23252 ;; *************** function _INTERRUPT_InterruptManager *****************
 23253 ;; Defined at:
 23254 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23255 ;; Parameters:    Size  Location     Type
 23256 ;;		None
 23257 ;; Auto vars:     Size  Location     Type
 23258 ;;		None
 23259 ;; Return value:  Size  Location     Type
 23260 ;;                  1    wreg      void 
 23261 ;; Registers used:
 23262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23263 ;; Tracked objects:
 23264 ;;		On entry : 0/0
 23265 ;;		On exit  : 0/0
 23266 ;;		Unchanged: 0/0
 23267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23272 ;;Total ram usage:        0 bytes
 23273 ;; Hardware stack levels used: 1
 23274 ;; Hardware stack levels required when called: 3
 23275 ;; This function calls:
 23276 ;;		NULL
 23277 ;;		_EUSART1_Receive_ISR
 23278 ;;		_EUSART1_Transmit_ISR
 23279 ;;		_EUSART2_Receive_ISR
 23280 ;;		_EUSART2_Transmit_ISR
 23281 ;;		_PIN_MANAGER_IOC
 23282 ;;		_TMR0_ISR
 23283 ;; This function is called by:
 23284 ;;		Interrupt level 1
 23285 ;; This function uses a non-reentrant model
 23286 ;;
 23287                           
 23288     0004                     _INTERRUPT_InterruptManager:
 23289                           
 23290                           ;incstack = 0
 23291 ;; hardware stack exceeded
 23292     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 23293                           
 23294                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23295     0005  3180               	pagesel	$
 23296     0006                     i1l7014:
 23297                           
 23298                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 23299     0006  014E               	movlb	14	; select bank14
 23300     0007  1E96               	btfss	22,5	;volatile
 23301     0008  280A               	goto	u346_21
 23302     0009  280B               	goto	u346_20
 23303     000A                     u346_21:
 23304     000A  2813               	goto	i1l393
 23305     000B                     u346_20:
 23306     000B                     i1l7016:
 23307     000B  1E8C               	btfss	12,5	;volatile
 23308     000C  280E               	goto	u347_21
 23309     000D  280F               	goto	u347_20
 23310     000E                     u347_21:
 23311     000E  2813               	goto	i1l393
 23312     000F                     u347_20:
 23313     000F                     i1l7018:
 23314                           
 23315                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 23316     000F  3189  2181  3180   	fcall	_TMR0_ISR
 23317                           
 23318                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 23319     0012  285F               	goto	i1l407
 23320     0013                     i1l393:	
 23321                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
 23322                           
 23323     0013  1E16               	btfss	22,4	;volatile
 23324     0014  2816               	goto	u348_21
 23325     0015  2817               	goto	u348_20
 23326     0016                     u348_21:
 23327     0016  281F               	goto	i1l395
 23328     0017                     u348_20:
 23329     0017                     i1l7020:
 23330     0017  1E0C               	btfss	12,4	;volatile
 23331     0018  281A               	goto	u349_21
 23332     0019  281B               	goto	u349_20
 23333     001A                     u349_21:
 23334     001A  281F               	goto	i1l395
 23335     001B                     u349_20:
 23336     001B                     i1l7022:
 23337                           
 23338                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 23339     001B  3189  21BD  3180   	fcall	_PIN_MANAGER_IOC
 23340                           
 23341                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 23342     001E  285F               	goto	i1l407
 23343     001F                     i1l395:	
 23344                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 23345                           
 23346     001F  1F0B               	btfss	11,6	;volatile
 23347     0020  2822               	goto	u350_21
 23348     0021  2823               	goto	u350_20
 23349     0022                     u350_21:
 23350     0022  285F               	goto	i1l401
 23351     0023                     u350_20:
 23352     0023                     i1l7024:
 23353                           
 23354                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 23355     0023  1F19               	btfss	25,6	;volatile
 23356     0024  2826               	goto	u351_21
 23357     0025  2827               	goto	u351_20
 23358     0026                     u351_21:
 23359     0026  2832               	goto	i1l398
 23360     0027                     u351_20:
 23361     0027                     i1l7026:
 23362     0027  1F0F               	btfss	15,6	;volatile
 23363     0028  282A               	goto	u352_21
 23364     0029  282B               	goto	u352_20
 23365     002A                     u352_21:
 23366     002A  2832               	goto	i1l398
 23367     002B                     u352_20:
 23368     002B                     i1l7028:
 23369                           
 23370                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_TxDefaultInterruptHandler();
 23371     002B  0141               	movlb	1	; select bank1
 23372     002C  0851               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 23373     002D  008A               	movwf	10
 23374     002E  0850               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 23375     002F  000A               	callw
 23376     0030  3180               	pagesel	$
 23377                           
 23378                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23379     0031  285F               	goto	i1l407
 23380     0032                     i1l398:	
 23381                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 23382                           
 23383     0032  1F99               	btfss	25,7	;volatile
 23384     0033  2835               	goto	u353_21
 23385     0034  2836               	goto	u353_20
 23386     0035                     u353_21:
 23387     0035  2841               	goto	i1l400
 23388     0036                     u353_20:
 23389     0036                     i1l7030:
 23390     0036  1F8F               	btfss	15,7	;volatile
 23391     0037  2839               	goto	u354_21
 23392     0038  283A               	goto	u354_20
 23393     0039                     u354_21:
 23394     0039  2841               	goto	i1l400
 23395     003A                     u354_20:
 23396     003A                     i1l7032:
 23397                           
 23398                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART2_RxDefaultInterruptHandler();
 23399     003A  0141               	movlb	1	; select bank1
 23400     003B  084F               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 23401     003C  008A               	movwf	10
 23402     003D  084E               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 23403     003E  000A               	callw
 23404     003F  3180               	pagesel	$
 23405                           
 23406                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23407     0040  285F               	goto	i1l407
 23408     0041                     i1l400:	
 23409                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 23410                           
 23411     0041  1E19               	btfss	25,4	;volatile
 23412     0042  2844               	goto	u355_21
 23413     0043  2845               	goto	u355_20
 23414     0044                     u355_21:
 23415     0044  2850               	goto	i1l402
 23416     0045                     u355_20:
 23417     0045                     i1l7034:
 23418     0045  1E0F               	btfss	15,4	;volatile
 23419     0046  2848               	goto	u356_21
 23420     0047  2849               	goto	u356_20
 23421     0048                     u356_21:
 23422     0048  2850               	goto	i1l402
 23423     0049                     u356_20:
 23424     0049                     i1l7036:
 23425                           
 23426                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_TxDefaultInterruptHandler();
 23427     0049  0141               	movlb	1	; select bank1
 23428     004A  084D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 23429     004B  008A               	movwf	10
 23430     004C  084C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 23431     004D  000A               	callw
 23432     004E  3180               	pagesel	$
 23433                           
 23434                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23435     004F  285F               	goto	i1l407
 23436     0050                     i1l402:	
 23437                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23438                           
 23439     0050  1E99               	btfss	25,5	;volatile
 23440     0051  2853               	goto	u357_21
 23441     0052  2854               	goto	u357_20
 23442     0053                     u357_21:
 23443     0053  285F               	goto	i1l401
 23444     0054                     u357_20:
 23445     0054                     i1l7038:
 23446     0054  1E8F               	btfss	15,5	;volatile
 23447     0055  2857               	goto	u358_21
 23448     0056  2858               	goto	u358_20
 23449     0057                     u358_21:
 23450     0057  285F               	goto	i1l401
 23451     0058                     u358_20:
 23452     0058                     i1l7040:
 23453                           
 23454                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART1_RxDefaultInterruptHandler();
 23455     0058  0142               	movlb	2	; select bank2
 23456     0059  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 23457     005A  008A               	movwf	10
 23458     005B  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 23459     005C  000A               	callw
 23460     005D  3180               	pagesel	$
 23461                           
 23462                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 23463     005E  285F               	goto	i1l407
 23464     005F                     i1l401:
 23465     005F                     i1l407:
 23466     005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 23467     0060  0009               	retfie
 23468     0061                     __end_of_INTERRUPT_InterruptManager:
 23469                           
 23470                           	psect	text134
 23471     0981                     __ptext134:	
 23472 ;; *************** function _TMR0_ISR *****************
 23473 ;; Defined at:
 23474 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23475 ;; Parameters:    Size  Location     Type
 23476 ;;		None
 23477 ;; Auto vars:     Size  Location     Type
 23478 ;;		None
 23479 ;; Return value:  Size  Location     Type
 23480 ;;                  1    wreg      void 
 23481 ;; Registers used:
 23482 ;;		wreg, status,2, status,0, pclath, cstack
 23483 ;; Tracked objects:
 23484 ;;		On entry : 0/0
 23485 ;;		On exit  : 0/0
 23486 ;;		Unchanged: 0/0
 23487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23492 ;;Total ram usage:        0 bytes
 23493 ;; Hardware stack levels used: 1
 23494 ;; Hardware stack levels required when called: 1
 23495 ;; This function calls:
 23496 ;;		NULL
 23497 ;;		_TMR0_DefaultInterruptHandler
 23498 ;; This function is called by:
 23499 ;;		_INTERRUPT_InterruptManager
 23500 ;; This function uses a non-reentrant model
 23501 ;;
 23502                           
 23503     0981                     _TMR0_ISR:	
 23504                           ;psect for function _TMR0_ISR
 23505                           
 23506     0981                     i1l6374:	
 23507                           ;incstack = 0
 23508                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23509                           
 23510                           
 23511                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23512     0981  014E               	movlb	14	; select bank14
 23513     0982  128C               	bcf	12,5	;volatile
 23514     0983                     i1l6376:
 23515                           
 23516                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23517     0983  0141               	movlb	1	; select bank1
 23518     0984  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 23519     0985  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 23520     0986  1903               	btfsc	3,2
 23521     0987  2989               	goto	u284_21
 23522     0988  298A               	goto	u284_20
 23523     0989                     u284_21:
 23524     0989  298F               	goto	i1l1044
 23525     098A                     u284_20:
 23526     098A                     i1l6378:
 23527                           
 23528                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23529     098A  0847               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 23530     098B  008A               	movwf	10
 23531     098C  0846               	movf	_TMR0_InterruptHandler^(0+128),w
 23532     098D  000A               	callw
 23533     098E  3189               	pagesel	$
 23534     098F                     i1l1044:
 23535     098F  0008               	return
 23536     0990                     __end_of_TMR0_ISR:
 23537                           
 23538                           	psect	text135
 23539     179B                     __ptext135:	
 23540 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23541 ;; Defined at:
 23542 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23543 ;; Parameters:    Size  Location     Type
 23544 ;;		None
 23545 ;; Auto vars:     Size  Location     Type
 23546 ;;		None
 23547 ;; Return value:  Size  Location     Type
 23548 ;;                  1    wreg      void 
 23549 ;; Registers used:
 23550 ;;		None
 23551 ;; Tracked objects:
 23552 ;;		On entry : 0/0
 23553 ;;		On exit  : 0/0
 23554 ;;		Unchanged: 0/0
 23555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23560 ;;Total ram usage:        0 bytes
 23561 ;; Hardware stack levels used: 1
 23562 ;; This function calls:
 23563 ;;		Nothing
 23564 ;; This function is called by:
 23565 ;;		_TMR0_Initialize
 23566 ;;		_TMR0_ISR
 23567 ;; This function uses a non-reentrant model
 23568 ;;
 23569                           
 23570     179B                     _TMR0_DefaultInterruptHandler:	
 23571                           ;psect for function _TMR0_DefaultInterruptHandler
 23572                           
 23573     179B                     i1l1050:	
 23574                           ;incstack = 0
 23575                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23576                           
 23577     179B  0008               	return
 23578     179C                     __end_of_TMR0_DefaultInterruptHandler:
 23579                           
 23580                           	psect	text136
 23581     09BD                     __ptext136:	
 23582 ;; *************** function _PIN_MANAGER_IOC *****************
 23583 ;; Defined at:
 23584 ;;		line 155 in file "mcc_generated_files/pin_manager.c"
 23585 ;; Parameters:    Size  Location     Type
 23586 ;;		None
 23587 ;; Auto vars:     Size  Location     Type
 23588 ;;		None
 23589 ;; Return value:  Size  Location     Type
 23590 ;;                  1    wreg      void 
 23591 ;; Registers used:
 23592 ;;		wreg, status,2, status,0, pclath, cstack
 23593 ;; Tracked objects:
 23594 ;;		On entry : 0/0
 23595 ;;		On exit  : 0/0
 23596 ;;		Unchanged: 0/0
 23597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23602 ;;Total ram usage:        0 bytes
 23603 ;; Hardware stack levels used: 1
 23604 ;; Hardware stack levels required when called: 2
 23605 ;; This function calls:
 23606 ;;		_IOCAF6_ISR
 23607 ;;		_IOCAF7_ISR
 23608 ;; This function is called by:
 23609 ;;		_INTERRUPT_InterruptManager
 23610 ;; This function uses a non-reentrant model
 23611 ;;
 23612                           
 23613     09BD                     _PIN_MANAGER_IOC:	
 23614                           ;psect for function _PIN_MANAGER_IOC
 23615                           
 23616     09BD                     i1l6380:	
 23617                           ;incstack = 0
 23618 ;; hardware stack exceeded
 23619                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 23620                           
 23621                           
 23622                           ;mcc_generated_files/pin_manager.c: 158:     if(IOCAFbits.IOCAF6 == 1)
 23623     09BD  017E               	movlb	62	; select bank62
 23624     09BE  1F3F               	btfss	63,6	;volatile
 23625     09BF  29C1               	goto	u285_21
 23626     09C0  29C2               	goto	u285_20
 23627     09C1                     u285_21:
 23628     09C1  29C5               	goto	i1l6384
 23629     09C2                     u285_20:
 23630     09C2                     i1l6382:
 23631                           
 23632                           ;mcc_generated_files/pin_manager.c: 159:     {;mcc_generated_files/pin_manager.c: 160:  
      +                                 IOCAF6_ISR();
 23633     09C2  3189  2163  3189   	fcall	_IOCAF6_ISR
 23634     09C5                     i1l6384:
 23635                           
 23636                           ;mcc_generated_files/pin_manager.c: 163:     if(IOCAFbits.IOCAF7 == 1)
 23637     09C5  017E               	movlb	62	; select bank62
 23638     09C6  1FBF               	btfss	63,7	;volatile
 23639     09C7  29C9               	goto	u286_21
 23640     09C8  29CA               	goto	u286_20
 23641     09C9                     u286_21:
 23642     09C9  29CD               	goto	i1l523
 23643     09CA                     u286_20:
 23644     09CA                     i1l6386:
 23645                           
 23646                           ;mcc_generated_files/pin_manager.c: 164:     {;mcc_generated_files/pin_manager.c: 165:  
      +                                 IOCAF7_ISR();
 23647     09CA  3189  2172  3189   	fcall	_IOCAF7_ISR
 23648     09CD                     i1l523:
 23649     09CD  0008               	return
 23650     09CE                     __end_of_PIN_MANAGER_IOC:
 23651                           
 23652                           	psect	text137
 23653     0972                     __ptext137:	
 23654 ;; *************** function _IOCAF7_ISR *****************
 23655 ;; Defined at:
 23656 ;;		line 202 in file "mcc_generated_files/pin_manager.c"
 23657 ;; Parameters:    Size  Location     Type
 23658 ;;		None
 23659 ;; Auto vars:     Size  Location     Type
 23660 ;;		None
 23661 ;; Return value:  Size  Location     Type
 23662 ;;                  1    wreg      void 
 23663 ;; Registers used:
 23664 ;;		wreg, status,2, status,0, pclath, cstack
 23665 ;; Tracked objects:
 23666 ;;		On entry : 0/0
 23667 ;;		On exit  : 0/0
 23668 ;;		Unchanged: 0/0
 23669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23674 ;;Total ram usage:        0 bytes
 23675 ;; Hardware stack levels used: 1
 23676 ;; Hardware stack levels required when called: 1
 23677 ;; This function calls:
 23678 ;;		NULL
 23679 ;;		_IOCAF7_DefaultInterruptHandler
 23680 ;; This function is called by:
 23681 ;;		_PIN_MANAGER_IOC
 23682 ;; This function uses a non-reentrant model
 23683 ;;
 23684                           
 23685     0972                     _IOCAF7_ISR:	
 23686                           ;psect for function _IOCAF7_ISR
 23687                           
 23688     0972                     i1l6144:	
 23689                           ;incstack = 0
 23690 ;; hardware stack exceeded
 23691                           ; Regs used in _IOCAF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 23692                           
 23693                           
 23694                           ;mcc_generated_files/pin_manager.c: 207:     if(IOCAF7_InterruptHandler)
 23695     0972  0141               	movlb	1	; select bank1
 23696     0973  0848               	movf	_IOCAF7_InterruptHandler^(0+128),w
 23697     0974  0449               	iorwf	(_IOCAF7_InterruptHandler+1)^(0+128),w
 23698     0975  1903               	btfsc	3,2
 23699     0976  2978               	goto	u270_21
 23700     0977  2979               	goto	u270_20
 23701     0978                     u270_21:
 23702     0978  297E               	goto	i1l6148
 23703     0979                     u270_20:
 23704     0979                     i1l6146:
 23705                           
 23706                           ;mcc_generated_files/pin_manager.c: 208:     {;mcc_generated_files/pin_manager.c: 209:  
      +                                 IOCAF7_InterruptHandler();
 23707     0979  0849               	movf	(_IOCAF7_InterruptHandler+1)^(0+128),w
 23708     097A  008A               	movwf	10
 23709     097B  0848               	movf	_IOCAF7_InterruptHandler^(0+128),w
 23710     097C  000A               	callw
 23711     097D  3189               	pagesel	$
 23712     097E                     i1l6148:
 23713                           
 23714                           ;mcc_generated_files/pin_manager.c: 211:     IOCAFbits.IOCAF7 = 0;
 23715     097E  017E               	movlb	62	; select bank62
 23716     097F  13BF               	bcf	63,7	;volatile
 23717     0980                     i1l537:
 23718     0980  0008               	return
 23719     0981                     __end_of_IOCAF7_ISR:
 23720                           
 23721                           	psect	text138
 23722     17CC                     __ptext138:	
 23723 ;; *************** function _IOCAF7_DefaultInterruptHandler *****************
 23724 ;; Defined at:
 23725 ;;		line 224 in file "mcc_generated_files/pin_manager.c"
 23726 ;; Parameters:    Size  Location     Type
 23727 ;;		None
 23728 ;; Auto vars:     Size  Location     Type
 23729 ;;		None
 23730 ;; Return value:  Size  Location     Type
 23731 ;;                  1    wreg      void 
 23732 ;; Registers used:
 23733 ;;		None
 23734 ;; Tracked objects:
 23735 ;;		On entry : 0/0
 23736 ;;		On exit  : 0/0
 23737 ;;		Unchanged: 0/0
 23738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23743 ;;Total ram usage:        0 bytes
 23744 ;; Hardware stack levels used: 1
 23745 ;; This function calls:
 23746 ;;		Nothing
 23747 ;; This function is called by:
 23748 ;;		_PIN_MANAGER_Initialize
 23749 ;;		_IOCAF7_ISR
 23750 ;; This function uses a non-reentrant model
 23751 ;;
 23752                           
 23753     17CC                     _IOCAF7_DefaultInterruptHandler:	
 23754                           ;psect for function _IOCAF7_DefaultInterruptHandler
 23755                           
 23756     17CC                     i1l5924:	
 23757                           ;incstack = 0
 23758 ;; hardware stack exceeded
 23759                           ; Regs used in _IOCAF7_DefaultInterruptHandler: []
 23760                           
 23761                           
 23762                           ;mcc_generated_files/pin_manager.c: 227:     pushed = 1;
 23763     17CC  3001               	movlw	1
 23764     17CD  0140               	movlb	0	; select bank0
 23765     17CE  00E5               	movwf	_pushed
 23766     17CF                     i1l543:
 23767     17CF  0008               	return
 23768     17D0                     __end_of_IOCAF7_DefaultInterruptHandler:
 23769                           
 23770                           	psect	text139
 23771     0963                     __ptext139:	
 23772 ;; *************** function _IOCAF6_ISR *****************
 23773 ;; Defined at:
 23774 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 23775 ;; Parameters:    Size  Location     Type
 23776 ;;		None
 23777 ;; Auto vars:     Size  Location     Type
 23778 ;;		None
 23779 ;; Return value:  Size  Location     Type
 23780 ;;                  1    wreg      void 
 23781 ;; Registers used:
 23782 ;;		wreg, status,2, status,0, pclath, cstack
 23783 ;; Tracked objects:
 23784 ;;		On entry : 0/0
 23785 ;;		On exit  : 0/0
 23786 ;;		Unchanged: 0/0
 23787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23792 ;;Total ram usage:        0 bytes
 23793 ;; Hardware stack levels used: 1
 23794 ;; Hardware stack levels required when called: 1
 23795 ;; This function calls:
 23796 ;;		NULL
 23797 ;;		_IOCAF6_DefaultInterruptHandler
 23798 ;; This function is called by:
 23799 ;;		_PIN_MANAGER_IOC
 23800 ;; This function uses a non-reentrant model
 23801 ;;
 23802                           
 23803     0963                     _IOCAF6_ISR:	
 23804                           ;psect for function _IOCAF6_ISR
 23805                           
 23806     0963                     i1l6138:	
 23807                           ;incstack = 0
 23808 ;; hardware stack exceeded
 23809                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 23810                           
 23811                           
 23812                           ;mcc_generated_files/pin_manager.c: 177:     if(IOCAF6_InterruptHandler)
 23813     0963  0141               	movlb	1	; select bank1
 23814     0964  084A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 23815     0965  044B               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 23816     0966  1903               	btfsc	3,2
 23817     0967  2969               	goto	u269_21
 23818     0968  296A               	goto	u269_20
 23819     0969                     u269_21:
 23820     0969  296F               	goto	i1l6142
 23821     096A                     u269_20:
 23822     096A                     i1l6140:
 23823                           
 23824                           ;mcc_generated_files/pin_manager.c: 178:     {;mcc_generated_files/pin_manager.c: 179:  
      +                                 IOCAF6_InterruptHandler();
 23825     096A  084B               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 23826     096B  008A               	movwf	10
 23827     096C  084A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 23828     096D  000A               	callw
 23829     096E  3189               	pagesel	$
 23830     096F                     i1l6142:
 23831                           
 23832                           ;mcc_generated_files/pin_manager.c: 181:     IOCAFbits.IOCAF6 = 0;
 23833     096F  017E               	movlb	62	; select bank62
 23834     0970  133F               	bcf	63,6	;volatile
 23835     0971                     i1l527:
 23836     0971  0008               	return
 23837     0972                     __end_of_IOCAF6_ISR:
 23838                           
 23839                           	psect	text140
 23840     179A                     __ptext140:	
 23841 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 23842 ;; Defined at:
 23843 ;;		line 194 in file "mcc_generated_files/pin_manager.c"
 23844 ;; Parameters:    Size  Location     Type
 23845 ;;		None
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;		None
 23848 ;; Return value:  Size  Location     Type
 23849 ;;                  1    wreg      void 
 23850 ;; Registers used:
 23851 ;;		None
 23852 ;; Tracked objects:
 23853 ;;		On entry : 0/0
 23854 ;;		On exit  : 0/0
 23855 ;;		Unchanged: 0/0
 23856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23861 ;;Total ram usage:        0 bytes
 23862 ;; Hardware stack levels used: 1
 23863 ;; This function calls:
 23864 ;;		Nothing
 23865 ;; This function is called by:
 23866 ;;		_PIN_MANAGER_Initialize
 23867 ;;		_IOCAF6_ISR
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871     179A                     _IOCAF6_DefaultInterruptHandler:	
 23872                           ;psect for function _IOCAF6_DefaultInterruptHandler
 23873                           
 23874     179A                     i1l533:	
 23875                           ;incstack = 0
 23876 ;; hardware stack exceeded
 23877                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 23878                           
 23879     179A  0008               	return
 23880     179B                     __end_of_IOCAF6_DefaultInterruptHandler:
 23881                           
 23882                           	psect	text141
 23883     0C68                     __ptext141:	
 23884 ;; *************** function _EUSART2_Transmit_ISR *****************
 23885 ;; Defined at:
 23886 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 23887 ;; Parameters:    Size  Location     Type
 23888 ;;		None
 23889 ;; Auto vars:     Size  Location     Type
 23890 ;;		None
 23891 ;; Return value:  Size  Location     Type
 23892 ;;                  1    wreg      void 
 23893 ;; Registers used:
 23894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23895 ;; Tracked objects:
 23896 ;;		On entry : 0/0
 23897 ;;		On exit  : 0/0
 23898 ;;		Unchanged: 0/0
 23899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23904 ;;Total ram usage:        0 bytes
 23905 ;; Hardware stack levels used: 1
 23906 ;; This function calls:
 23907 ;;		Nothing
 23908 ;; This function is called by:
 23909 ;;		_EUSART2_Initialize
 23910 ;;		_INTERRUPT_InterruptManager
 23911 ;; This function uses a non-reentrant model
 23912 ;;
 23913                           
 23914     0C68                     _EUSART2_Transmit_ISR:	
 23915                           ;psect for function _EUSART2_Transmit_ISR
 23916                           
 23917     0C68                     i1l6456:	
 23918                           ;incstack = 0
 23919                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 23920                           
 23921                           
 23922                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 23923     0C68  3008               	movlw	8
 23924     0C69  0140               	movlb	0	; select bank0
 23925     0C6A  0258               	subwf	_eusart2TxBufferRemaining,w	;volatile
 23926     0C6B  1803               	skipnc
 23927     0C6C  2C6E               	goto	u294_21
 23928     0C6D  2C6F               	goto	u294_20
 23929     0C6E                     u294_21:
 23930     0C6E  2C84               	goto	i1l1317
 23931     0C6F                     u294_20:
 23932     0C6F                     i1l6458:
 23933                           
 23934                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 23935     0C6F  0859               	movf	_eusart2TxTail,w
 23936     0C70  3E4C               	addlw	(low (_eusart2TxBuffer| (0+256)))& (0+255)
 23937     0C71  0086               	movwf	6
 23938     0C72  3001               	movlw	1	; select bank2/3
 23939     0C73  0087               	movwf	7
 23940     0C74  0801               	movf	1,w
 23941     0C75  0154               	movlb	20	; select bank20
 23942     0C76  009A               	movwf	26	;volatile
 23943     0C77                     i1l6460:
 23944     0C77  3001               	movlw	1
 23945     0C78  0140               	movlb	0	; select bank0
 23946     0C79  07D9               	addwf	_eusart2TxTail,f	;volatile
 23947     0C7A                     i1l6462:
 23948                           
 23949                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 23950     0C7A  3008               	movlw	8
 23951     0C7B  0259               	subwf	_eusart2TxTail,w	;volatile
 23952     0C7C  1C03               	skipc
 23953     0C7D  2C7F               	goto	u295_21
 23954     0C7E  2C80               	goto	u295_20
 23955     0C7F                     u295_21:
 23956     0C7F  2C81               	goto	i1l6466
 23957     0C80                     u295_20:
 23958     0C80                     i1l6464:
 23959                           
 23960                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 23961     0C80  01D9               	clrf	_eusart2TxTail	;volatile
 23962     0C81                     i1l6466:
 23963                           
 23964                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 23965     0C81  3001               	movlw	1
 23966     0C82  07D8               	addwf	_eusart2TxBufferRemaining,f	;volatile
 23967                           
 23968                           ;mcc_generated_files/eusart2.c: 209:     }
 23969     0C83  2C86               	goto	i1l1320
 23970     0C84                     i1l1317:	
 23971                           ;mcc_generated_files/eusart2.c: 210:     else
 23972                           
 23973                           
 23974                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 23975     0C84  014E               	movlb	14	; select bank14
 23976     0C85  1319               	bcf	25,6	;volatile
 23977     0C86                     i1l1320:
 23978     0C86  0008               	return
 23979     0C87                     __end_of_EUSART2_Transmit_ISR:
 23980                           
 23981                           	psect	text142
 23982     0758                     __ptext142:	
 23983 ;; *************** function _EUSART2_Receive_ISR *****************
 23984 ;; Defined at:
 23985 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 23986 ;; Parameters:    Size  Location     Type
 23987 ;;		None
 23988 ;; Auto vars:     Size  Location     Type
 23989 ;;		None
 23990 ;; Return value:  Size  Location     Type
 23991 ;;                  1    wreg      void 
 23992 ;; Registers used:
 23993 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23994 ;; Tracked objects:
 23995 ;;		On entry : 0/0
 23996 ;;		On exit  : 0/0
 23997 ;;		Unchanged: 0/0
 23998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24003 ;;Total ram usage:        0 bytes
 24004 ;; Hardware stack levels used: 1
 24005 ;; Hardware stack levels required when called: 2
 24006 ;; This function calls:
 24007 ;;		NULL
 24008 ;;		_EUSART2_DefaultErrorHandler
 24009 ;;		_EUSART2_DefaultFramingErrorHandler
 24010 ;;		_EUSART2_DefaultOverrunErrorHandler
 24011 ;;		_EUSART2_RxDataHandler
 24012 ;; This function is called by:
 24013 ;;		_EUSART2_Initialize
 24014 ;;		_INTERRUPT_InterruptManager
 24015 ;; This function uses a non-reentrant model
 24016 ;;
 24017                           
 24018     0758                     _EUSART2_Receive_ISR:	
 24019                           ;psect for function _EUSART2_Receive_ISR
 24020                           
 24021     0758                     i1l6468:	
 24022                           ;incstack = 0
 24023 ;; hardware stack exceeded
 24024                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24025                           
 24026                           
 24027                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 24028     0758  0140               	movlb	0	; select bank0
 24029     0759  0857               	movf	_eusart2RxHead,w	;volatile
 24030     075A  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24031     075B  0086               	movwf	6
 24032     075C  0187               	clrf	7
 24033     075D  0181               	clrf	1
 24034     075E                     i1l6470:
 24035                           
 24036                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 24037     075E  0154               	movlb	20	; select bank20
 24038     075F  1D1D               	btfss	29,2	;volatile
 24039     0760  2F62               	goto	u296_21
 24040     0761  2F63               	goto	u296_20
 24041     0762                     u296_21:
 24042     0762  2F6F               	goto	i1l6476
 24043     0763                     u296_20:
 24044     0763                     i1l6472:
 24045                           
 24046                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 24047     0763  0140               	movlb	0	; select bank0
 24048     0764  0857               	movf	_eusart2RxHead,w	;volatile
 24049     0765  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24050     0766  0086               	movwf	6
 24051     0767  0187               	clrf	7
 24052     0768  1481               	bsf	1,1
 24053     0769                     i1l6474:
 24054                           
 24055                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 24056     0769  0142               	movlb	2	; select bank2
 24057     076A  0859               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 24058     076B  008A               	movwf	10
 24059     076C  0858               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 24060     076D  000A               	callw
 24061     076E  3187               	pagesel	$
 24062     076F                     i1l6476:
 24063                           
 24064                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 24065     076F  0154               	movlb	20	; select bank20
 24066     0770  1C9D               	btfss	29,1	;volatile
 24067     0771  2F73               	goto	u297_21
 24068     0772  2F74               	goto	u297_20
 24069     0773                     u297_21:
 24070     0773  2F80               	goto	i1l6482
 24071     0774                     u297_20:
 24072     0774                     i1l6478:
 24073                           
 24074                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 24075     0774  0140               	movlb	0	; select bank0
 24076     0775  0857               	movf	_eusart2RxHead,w	;volatile
 24077     0776  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24078     0777  0086               	movwf	6
 24079     0778  0187               	clrf	7
 24080     0779  1501               	bsf	1,2
 24081     077A                     i1l6480:
 24082                           
 24083                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 24084     077A  0142               	movlb	2	; select bank2
 24085     077B  0857               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 24086     077C  008A               	movwf	10
 24087     077D  0856               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 24088     077E  000A               	callw
 24089     077F  3187               	pagesel	$
 24090     0780                     i1l6482:
 24091                           
 24092                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 24093     0780  0140               	movlb	0	; select bank0
 24094     0781  0857               	movf	_eusart2RxHead,w	;volatile
 24095     0782  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24096     0783  0086               	movwf	6
 24097     0784  0187               	clrf	7
 24098     0785  0801               	movf	1,w
 24099     0786  1903               	btfsc	3,2
 24100     0787  2F89               	goto	u298_21
 24101     0788  2F8A               	goto	u298_20
 24102     0789                     u298_21:
 24103     0789  2F91               	goto	i1l6486
 24104     078A                     u298_20:
 24105     078A                     i1l6484:
 24106                           
 24107                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 24108     078A  0142               	movlb	2	; select bank2
 24109     078B  0855               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 24110     078C  008A               	movwf	10
 24111     078D  0854               	movf	_EUSART2_ErrorHandler^(0+256),w
 24112     078E  000A               	callw
 24113     078F  3187               	pagesel	$
 24114                           
 24115                           ;mcc_generated_files/eusart2.c: 233:     } else {
 24116     0790  2F94               	goto	i1l1327
 24117     0791                     i1l6486:
 24118                           
 24119                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 24120     0791  318A  2286  3187   	fcall	_EUSART2_RxDataHandler
 24121     0794                     i1l1327:
 24122     0794  0008               	return
 24123     0795                     __end_of_EUSART2_Receive_ISR:
 24124                           
 24125                           	psect	text143
 24126     17C8                     __ptext143:	
 24127 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 24128 ;; Defined at:
 24129 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 24130 ;; Parameters:    Size  Location     Type
 24131 ;;		None
 24132 ;; Auto vars:     Size  Location     Type
 24133 ;;		None
 24134 ;; Return value:  Size  Location     Type
 24135 ;;                  1    wreg      void 
 24136 ;; Registers used:
 24137 ;;		None
 24138 ;; Tracked objects:
 24139 ;;		On entry : 0/0
 24140 ;;		On exit  : 0/0
 24141 ;;		Unchanged: 0/0
 24142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24147 ;;Total ram usage:        0 bytes
 24148 ;; Hardware stack levels used: 1
 24149 ;; This function calls:
 24150 ;;		Nothing
 24151 ;; This function is called by:
 24152 ;;		_EUSART2_Initialize
 24153 ;;		_EUSART2_Receive_ISR
 24154 ;; This function uses a non-reentrant model
 24155 ;;
 24156                           
 24157     17C8                     _EUSART2_DefaultOverrunErrorHandler:	
 24158                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 24159                           
 24160     17C8                     i1l6242:	
 24161                           ;incstack = 0
 24162                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 24163                           
 24164                           
 24165                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 24166     17C8  0154               	movlb	20	; select bank20
 24167     17C9  121D               	bcf	29,4	;volatile
 24168                           
 24169                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 24170     17CA  161D               	bsf	29,4	;volatile
 24171     17CB                     i1l1337:
 24172     17CB  0008               	return
 24173     17CC                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 24174                           
 24175                           	psect	text144
 24176     1799                     __ptext144:	
 24177 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 24178 ;; Defined at:
 24179 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 24180 ;; Parameters:    Size  Location     Type
 24181 ;;		None
 24182 ;; Auto vars:     Size  Location     Type
 24183 ;;		None
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1    wreg      void 
 24186 ;; Registers used:
 24187 ;;		None
 24188 ;; Tracked objects:
 24189 ;;		On entry : 0/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24197 ;;Total ram usage:        0 bytes
 24198 ;; Hardware stack levels used: 1
 24199 ;; This function calls:
 24200 ;;		Nothing
 24201 ;; This function is called by:
 24202 ;;		_EUSART2_Initialize
 24203 ;;		_EUSART2_Receive_ISR
 24204 ;; This function uses a non-reentrant model
 24205 ;;
 24206                           
 24207     1799                     _EUSART2_DefaultFramingErrorHandler:	
 24208                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 24209                           
 24210     1799                     i1l1334:	
 24211                           ;incstack = 0
 24212                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 24213                           
 24214     1799  0008               	return
 24215     179A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 24216                           
 24217                           	psect	text145
 24218     17C4                     __ptext145:	
 24219 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 24220 ;; Defined at:
 24221 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 24222 ;; Parameters:    Size  Location     Type
 24223 ;;		None
 24224 ;; Auto vars:     Size  Location     Type
 24225 ;;		None
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  1    wreg      void 
 24228 ;; Registers used:
 24229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24239 ;;Total ram usage:        0 bytes
 24240 ;; Hardware stack levels used: 1
 24241 ;; Hardware stack levels required when called: 1
 24242 ;; This function calls:
 24243 ;;		_EUSART2_RxDataHandler
 24244 ;; This function is called by:
 24245 ;;		_EUSART2_Initialize
 24246 ;;		_EUSART2_Receive_ISR
 24247 ;; This function uses a non-reentrant model
 24248 ;;
 24249                           
 24250     17C4                     _EUSART2_DefaultErrorHandler:	
 24251                           ;psect for function _EUSART2_DefaultErrorHandler
 24252                           
 24253     17C4                     i1l6244:	
 24254                           ;incstack = 0
 24255 ;; hardware stack exceeded
 24256                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24257                           
 24258                           
 24259                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 24260     17C4  318A  2286  3197   	fcall	_EUSART2_RxDataHandler
 24261     17C7                     i1l1340:
 24262     17C7  0008               	return
 24263     17C8                     __end_of_EUSART2_DefaultErrorHandler:
 24264                           
 24265                           	psect	text146
 24266     0A86                     __ptext146:	
 24267 ;; *************** function _EUSART2_RxDataHandler *****************
 24268 ;; Defined at:
 24269 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 24270 ;; Parameters:    Size  Location     Type
 24271 ;;		None
 24272 ;; Auto vars:     Size  Location     Type
 24273 ;;		None
 24274 ;; Return value:  Size  Location     Type
 24275 ;;                  1    wreg      void 
 24276 ;; Registers used:
 24277 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24278 ;; Tracked objects:
 24279 ;;		On entry : 0/0
 24280 ;;		On exit  : 0/0
 24281 ;;		Unchanged: 0/0
 24282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24287 ;;Total ram usage:        0 bytes
 24288 ;; Hardware stack levels used: 1
 24289 ;; This function calls:
 24290 ;;		Nothing
 24291 ;; This function is called by:
 24292 ;;		_EUSART2_Receive_ISR
 24293 ;;		_EUSART2_DefaultErrorHandler
 24294 ;; This function uses a non-reentrant model
 24295 ;;
 24296                           
 24297     0A86                     _EUSART2_RxDataHandler:	
 24298                           ;psect for function _EUSART2_RxDataHandler
 24299                           
 24300     0A86                     i1l5958:	
 24301                           ;incstack = 0
 24302                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24303                           
 24304                           
 24305                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24306     0A86  0140               	movlb	0	; select bank0
 24307     0A87  0857               	movf	_eusart2RxHead,w
 24308     0A88  3E44               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 24309     0A89  0086               	movwf	6
 24310     0A8A  3001               	movlw	1	; select bank2/3
 24311     0A8B  0087               	movwf	7
 24312     0A8C  0154               	movlb	20	; select bank20
 24313     0A8D  0819               	movf	25,w	;volatile
 24314     0A8E  0081               	movwf	1
 24315     0A8F                     i1l5960:
 24316     0A8F  3001               	movlw	1
 24317     0A90  0140               	movlb	0	; select bank0
 24318     0A91  07D7               	addwf	_eusart2RxHead,f	;volatile
 24319     0A92                     i1l5962:
 24320                           
 24321                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24322     0A92  3008               	movlw	8
 24323     0A93  0257               	subwf	_eusart2RxHead,w	;volatile
 24324     0A94  1C03               	skipc
 24325     0A95  2A97               	goto	u258_21
 24326     0A96  2A98               	goto	u258_20
 24327     0A97                     u258_21:
 24328     0A97  2A99               	goto	i1l5966
 24329     0A98                     u258_20:
 24330     0A98                     i1l5964:
 24331                           
 24332                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 24333     0A98  01D7               	clrf	_eusart2RxHead	;volatile
 24334     0A99                     i1l5966:
 24335                           
 24336                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 24337     0A99  3001               	movlw	1
 24338     0A9A  07D5               	addwf	_eusart2RxCount,f	;volatile
 24339     0A9B                     i1l1331:
 24340     0A9B  0008               	return
 24341     0A9C                     __end_of_EUSART2_RxDataHandler:
 24342                           
 24343                           	psect	text147
 24344     0C0E                     __ptext147:	
 24345 ;; *************** function _EUSART1_Transmit_ISR *****************
 24346 ;; Defined at:
 24347 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;		None
 24350 ;; Auto vars:     Size  Location     Type
 24351 ;;		None
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1    wreg      void 
 24354 ;; Registers used:
 24355 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24356 ;; Tracked objects:
 24357 ;;		On entry : 0/0
 24358 ;;		On exit  : 0/0
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24365 ;;Total ram usage:        0 bytes
 24366 ;; Hardware stack levels used: 1
 24367 ;; This function calls:
 24368 ;;		Nothing
 24369 ;; This function is called by:
 24370 ;;		_EUSART1_Initialize
 24371 ;;		_INTERRUPT_InterruptManager
 24372 ;; This function uses a non-reentrant model
 24373 ;;
 24374                           
 24375     0C0E                     _EUSART1_Transmit_ISR:	
 24376                           ;psect for function _EUSART1_Transmit_ISR
 24377                           
 24378     0C0E                     i1l6424:	
 24379                           ;incstack = 0
 24380                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24381                           
 24382                           
 24383                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 24384     0C0E  3008               	movlw	8
 24385     0C0F  0140               	movlb	0	; select bank0
 24386     0C10  025F               	subwf	_eusart1TxBufferRemaining,w	;volatile
 24387     0C11  1803               	skipnc
 24388     0C12  2C14               	goto	u289_21
 24389     0C13  2C15               	goto	u289_20
 24390     0C14                     u289_21:
 24391     0C14  2C29               	goto	i1l1173
 24392     0C15                     u289_20:
 24393     0C15                     i1l6426:
 24394                           
 24395                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 24396     0C15  0860               	movf	_eusart1TxTail,w
 24397     0C16  3EB8               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 24398     0C17  0086               	movwf	6
 24399     0C18  0187               	clrf	7
 24400     0C19  0801               	movf	1,w
 24401     0C1A  0142               	movlb	2	; select bank2
 24402     0C1B  009A               	movwf	26	;volatile
 24403     0C1C                     i1l6428:
 24404     0C1C  3001               	movlw	1
 24405     0C1D  0140               	movlb	0	; select bank0
 24406     0C1E  07E0               	addwf	_eusart1TxTail,f	;volatile
 24407     0C1F                     i1l6430:
 24408                           
 24409                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 24410     0C1F  3008               	movlw	8
 24411     0C20  0260               	subwf	_eusart1TxTail,w	;volatile
 24412     0C21  1C03               	skipc
 24413     0C22  2C24               	goto	u290_21
 24414     0C23  2C25               	goto	u290_20
 24415     0C24                     u290_21:
 24416     0C24  2C26               	goto	i1l6434
 24417     0C25                     u290_20:
 24418     0C25                     i1l6432:
 24419                           
 24420                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 24421     0C25  01E0               	clrf	_eusart1TxTail	;volatile
 24422     0C26                     i1l6434:
 24423                           
 24424                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 24425     0C26  3001               	movlw	1
 24426     0C27  07DF               	addwf	_eusart1TxBufferRemaining,f	;volatile
 24427                           
 24428                           ;mcc_generated_files/eusart1.c: 209:     }
 24429     0C28  2C2B               	goto	i1l1176
 24430     0C29                     i1l1173:	
 24431                           ;mcc_generated_files/eusart1.c: 210:     else
 24432                           
 24433                           
 24434                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 24435     0C29  014E               	movlb	14	; select bank14
 24436     0C2A  1219               	bcf	25,4	;volatile
 24437     0C2B                     i1l1176:
 24438     0C2B  0008               	return
 24439     0C2C                     __end_of_EUSART1_Transmit_ISR:
 24440                           
 24441                           	psect	text148
 24442     0795                     __ptext148:	
 24443 ;; *************** function _EUSART1_Receive_ISR *****************
 24444 ;; Defined at:
 24445 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 24446 ;; Parameters:    Size  Location     Type
 24447 ;;		None
 24448 ;; Auto vars:     Size  Location     Type
 24449 ;;		None
 24450 ;; Return value:  Size  Location     Type
 24451 ;;                  1    wreg      void 
 24452 ;; Registers used:
 24453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24454 ;; Tracked objects:
 24455 ;;		On entry : 0/0
 24456 ;;		On exit  : 0/0
 24457 ;;		Unchanged: 0/0
 24458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24463 ;;Total ram usage:        0 bytes
 24464 ;; Hardware stack levels used: 1
 24465 ;; Hardware stack levels required when called: 2
 24466 ;; This function calls:
 24467 ;;		NULL
 24468 ;;		_EUSART1_DefaultErrorHandler
 24469 ;;		_EUSART1_DefaultFramingErrorHandler
 24470 ;;		_EUSART1_DefaultOverrunErrorHandler
 24471 ;;		_EUSART1_RxDataHandler
 24472 ;; This function is called by:
 24473 ;;		_EUSART1_Initialize
 24474 ;;		_INTERRUPT_InterruptManager
 24475 ;; This function uses a non-reentrant model
 24476 ;;
 24477                           
 24478     0795                     _EUSART1_Receive_ISR:	
 24479                           ;psect for function _EUSART1_Receive_ISR
 24480                           
 24481     0795                     i1l6436:	
 24482                           ;incstack = 0
 24483 ;; hardware stack exceeded
 24484                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24485                           
 24486                           
 24487                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24488     0795  0140               	movlb	0	; select bank0
 24489     0796  085E               	movf	_eusart1RxHead,w	;volatile
 24490     0797  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24491     0798  0086               	movwf	6
 24492     0799  0187               	clrf	7
 24493     079A  0181               	clrf	1
 24494     079B                     i1l6438:
 24495                           
 24496                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 24497     079B  0142               	movlb	2	; select bank2
 24498     079C  1D1D               	btfss	29,2	;volatile
 24499     079D  2F9F               	goto	u291_21
 24500     079E  2FA0               	goto	u291_20
 24501     079F                     u291_21:
 24502     079F  2FAC               	goto	i1l6444
 24503     07A0                     u291_20:
 24504     07A0                     i1l6440:
 24505                           
 24506                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24507     07A0  0140               	movlb	0	; select bank0
 24508     07A1  085E               	movf	_eusart1RxHead,w	;volatile
 24509     07A2  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24510     07A3  0086               	movwf	6
 24511     07A4  0187               	clrf	7
 24512     07A5  1481               	bsf	1,1
 24513     07A6                     i1l6442:
 24514                           
 24515                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 24516     07A6  0142               	movlb	2	; select bank2
 24517     07A7  085F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 24518     07A8  008A               	movwf	10
 24519     07A9  085E               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 24520     07AA  000A               	callw
 24521     07AB  3187               	pagesel	$
 24522     07AC                     i1l6444:
 24523                           
 24524                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 24525     07AC  0142               	movlb	2	; select bank2
 24526     07AD  1C9D               	btfss	29,1	;volatile
 24527     07AE  2FB0               	goto	u292_21
 24528     07AF  2FB1               	goto	u292_20
 24529     07B0                     u292_21:
 24530     07B0  2FBD               	goto	i1l6450
 24531     07B1                     u292_20:
 24532     07B1                     i1l6446:
 24533                           
 24534                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24535     07B1  0140               	movlb	0	; select bank0
 24536     07B2  085E               	movf	_eusart1RxHead,w	;volatile
 24537     07B3  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24538     07B4  0086               	movwf	6
 24539     07B5  0187               	clrf	7
 24540     07B6  1501               	bsf	1,2
 24541     07B7                     i1l6448:
 24542                           
 24543                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 24544     07B7  0142               	movlb	2	; select bank2
 24545     07B8  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 24546     07B9  008A               	movwf	10
 24547     07BA  085C               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 24548     07BB  000A               	callw
 24549     07BC  3187               	pagesel	$
 24550     07BD                     i1l6450:
 24551                           
 24552                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24553     07BD  0140               	movlb	0	; select bank0
 24554     07BE  085E               	movf	_eusart1RxHead,w	;volatile
 24555     07BF  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24556     07C0  0086               	movwf	6
 24557     07C1  0187               	clrf	7
 24558     07C2  0801               	movf	1,w
 24559     07C3  1903               	btfsc	3,2
 24560     07C4  2FC6               	goto	u293_21
 24561     07C5  2FC7               	goto	u293_20
 24562     07C6                     u293_21:
 24563     07C6  2FCE               	goto	i1l6454
 24564     07C7                     u293_20:
 24565     07C7                     i1l6452:
 24566                           
 24567                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 24568     07C7  0142               	movlb	2	; select bank2
 24569     07C8  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 24570     07C9  008A               	movwf	10
 24571     07CA  085A               	movf	_EUSART1_ErrorHandler^(0+256),w
 24572     07CB  000A               	callw
 24573     07CC  3187               	pagesel	$
 24574                           
 24575                           ;mcc_generated_files/eusart1.c: 233:     } else {
 24576     07CD  2FD1               	goto	i1l1183
 24577     07CE                     i1l6454:
 24578                           
 24579                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 24580     07CE  318A  2271  3187   	fcall	_EUSART1_RxDataHandler
 24581     07D1                     i1l1183:
 24582     07D1  0008               	return
 24583     07D2                     __end_of_EUSART1_Receive_ISR:
 24584                           
 24585                           	psect	text149
 24586     17C0                     __ptext149:	
 24587 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24588 ;; Defined at:
 24589 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;		None
 24592 ;; Auto vars:     Size  Location     Type
 24593 ;;		None
 24594 ;; Return value:  Size  Location     Type
 24595 ;;                  1    wreg      void 
 24596 ;; Registers used:
 24597 ;;		None
 24598 ;; Tracked objects:
 24599 ;;		On entry : 0/0
 24600 ;;		On exit  : 0/0
 24601 ;;		Unchanged: 0/0
 24602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24607 ;;Total ram usage:        0 bytes
 24608 ;; Hardware stack levels used: 1
 24609 ;; This function calls:
 24610 ;;		Nothing
 24611 ;; This function is called by:
 24612 ;;		_EUSART1_Initialize
 24613 ;;		_EUSART1_Receive_ISR
 24614 ;; This function uses a non-reentrant model
 24615 ;;
 24616                           
 24617     17C0                     _EUSART1_DefaultOverrunErrorHandler:	
 24618                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 24619                           
 24620     17C0                     i1l6238:	
 24621                           ;incstack = 0
 24622                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 24623                           
 24624                           
 24625                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 24626     17C0  0142               	movlb	2	; select bank2
 24627     17C1  121D               	bcf	29,4	;volatile
 24628                           
 24629                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 24630     17C2  161D               	bsf	29,4	;volatile
 24631     17C3                     i1l1193:
 24632     17C3  0008               	return
 24633     17C4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 24634                           
 24635                           	psect	text150
 24636     1798                     __ptext150:	
 24637 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24638 ;; Defined at:
 24639 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;		None
 24642 ;; Auto vars:     Size  Location     Type
 24643 ;;		None
 24644 ;; Return value:  Size  Location     Type
 24645 ;;                  1    wreg      void 
 24646 ;; Registers used:
 24647 ;;		None
 24648 ;; Tracked objects:
 24649 ;;		On entry : 0/0
 24650 ;;		On exit  : 0/0
 24651 ;;		Unchanged: 0/0
 24652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24657 ;;Total ram usage:        0 bytes
 24658 ;; Hardware stack levels used: 1
 24659 ;; This function calls:
 24660 ;;		Nothing
 24661 ;; This function is called by:
 24662 ;;		_EUSART1_Initialize
 24663 ;;		_EUSART1_Receive_ISR
 24664 ;; This function uses a non-reentrant model
 24665 ;;
 24666                           
 24667     1798                     _EUSART1_DefaultFramingErrorHandler:	
 24668                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 24669                           
 24670     1798                     i1l1190:	
 24671                           ;incstack = 0
 24672                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 24673                           
 24674     1798  0008               	return
 24675     1799                     __end_of_EUSART1_DefaultFramingErrorHandler:
 24676                           
 24677                           	psect	text151
 24678     17BC                     __ptext151:	
 24679 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 24680 ;; Defined at:
 24681 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;		None
 24684 ;; Auto vars:     Size  Location     Type
 24685 ;;		None
 24686 ;; Return value:  Size  Location     Type
 24687 ;;                  1    wreg      void 
 24688 ;; Registers used:
 24689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24690 ;; Tracked objects:
 24691 ;;		On entry : 0/0
 24692 ;;		On exit  : 0/0
 24693 ;;		Unchanged: 0/0
 24694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24699 ;;Total ram usage:        0 bytes
 24700 ;; Hardware stack levels used: 1
 24701 ;; Hardware stack levels required when called: 1
 24702 ;; This function calls:
 24703 ;;		_EUSART1_RxDataHandler
 24704 ;; This function is called by:
 24705 ;;		_EUSART1_Initialize
 24706 ;;		_EUSART1_Receive_ISR
 24707 ;; This function uses a non-reentrant model
 24708 ;;
 24709                           
 24710     17BC                     _EUSART1_DefaultErrorHandler:	
 24711                           ;psect for function _EUSART1_DefaultErrorHandler
 24712                           
 24713     17BC                     i1l6240:	
 24714                           ;incstack = 0
 24715 ;; hardware stack exceeded
 24716                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24717                           
 24718                           
 24719                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 24720     17BC  318A  2271  3197   	fcall	_EUSART1_RxDataHandler
 24721     17BF                     i1l1196:
 24722     17BF  0008               	return
 24723     17C0                     __end_of_EUSART1_DefaultErrorHandler:
 24724                           
 24725                           	psect	text152
 24726     0A71                     __ptext152:	
 24727 ;; *************** function _EUSART1_RxDataHandler *****************
 24728 ;; Defined at:
 24729 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;		None
 24732 ;; Auto vars:     Size  Location     Type
 24733 ;;		None
 24734 ;; Return value:  Size  Location     Type
 24735 ;;                  1    wreg      void 
 24736 ;; Registers used:
 24737 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24738 ;; Tracked objects:
 24739 ;;		On entry : 0/0
 24740 ;;		On exit  : 0/0
 24741 ;;		Unchanged: 0/0
 24742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24747 ;;Total ram usage:        0 bytes
 24748 ;; Hardware stack levels used: 1
 24749 ;; This function calls:
 24750 ;;		Nothing
 24751 ;; This function is called by:
 24752 ;;		_EUSART1_Receive_ISR
 24753 ;;		_EUSART1_DefaultErrorHandler
 24754 ;; This function uses a non-reentrant model
 24755 ;;
 24756                           
 24757     0A71                     _EUSART1_RxDataHandler:	
 24758                           ;psect for function _EUSART1_RxDataHandler
 24759                           
 24760     0A71                     i1l5938:	
 24761                           ;incstack = 0
 24762                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24763                           
 24764                           
 24765                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 24766     0A71  0140               	movlb	0	; select bank0
 24767     0A72  085E               	movf	_eusart1RxHead,w
 24768     0A73  3EB0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 24769     0A74  0086               	movwf	6
 24770     0A75  0187               	clrf	7
 24771     0A76  0142               	movlb	2	; select bank2
 24772     0A77  0819               	movf	25,w	;volatile
 24773     0A78  0081               	movwf	1
 24774     0A79                     i1l5940:
 24775     0A79  3001               	movlw	1
 24776     0A7A  0140               	movlb	0	; select bank0
 24777     0A7B  07DE               	addwf	_eusart1RxHead,f	;volatile
 24778     0A7C                     i1l5942:
 24779                           
 24780                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 24781     0A7C  3008               	movlw	8
 24782     0A7D  025E               	subwf	_eusart1RxHead,w	;volatile
 24783     0A7E  1C03               	skipc
 24784     0A7F  2A81               	goto	u257_21
 24785     0A80  2A82               	goto	u257_20
 24786     0A81                     u257_21:
 24787     0A81  2A83               	goto	i1l5946
 24788     0A82                     u257_20:
 24789     0A82                     i1l5944:
 24790                           
 24791                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 24792     0A82  01DE               	clrf	_eusart1RxHead	;volatile
 24793     0A83                     i1l5946:
 24794                           
 24795                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 24796     0A83  3001               	movlw	1
 24797     0A84  07DC               	addwf	_eusart1RxCount,f	;volatile
 24798     0A85                     i1l1187:
 24799     0A85  0008               	return
 24800     0A86                     __end_of_EUSART1_RxDataHandler:
 24801     0003                     ___latbits      equ	3
 24802     007E                     btemp           set	126	;btemp
 24803     007E                     int$flags       set	126
 24804     007E                     wtemp0          set	126
 24805                           
 24806                           	psect	config
 24807                           
 24808                           ;Config register CONFIG1 @ 0x8007
 24809                           ;	External Oscillator mode selection bits
 24810                           ;	FEXTOSC = OFF, Oscillator not enabled
 24811                           ;	Power-up default value for COSC bits
 24812                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 24813                           ;	Clock Out Enable bit
 24814                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 24815                           ;	Clock Switch Enable bit
 24816                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 24817                           ;	Fail-Safe Clock Monitor Enable bit
 24818                           ;	FCMEN = ON, FSCM timer enabled
 24819     8007                     	org	32775
 24820     8007  3FEC               	dw	16364
 24821                           
 24822                           ;Config register CONFIG2 @ 0x8008
 24823                           ;	Master Clear Enable bit
 24824                           ;	MCLRE = ON, MCLR pin is Master Clear function
 24825                           ;	Power-up Timer Enable bit
 24826                           ;	PWRTS = OFF, PWRT disabled
 24827                           ;	Low-Power BOR enable bit
 24828                           ;	LPBOREN = OFF, ULPBOR disabled
 24829                           ;	Brown-out reset enable bits
 24830                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 24831                           ;	Brown-out Reset Voltage Selection
 24832                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 24833                           ;	Zero-cross detect disable
 24834                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 24835                           ;	Peripheral Pin Select one-way control
 24836                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 24837                           ;	Stack Overflow/Underflow Reset Enable bit
 24838                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 24839     8008                     	org	32776
 24840     8008  3FFF               	dw	16383
 24841                           
 24842                           ;Config register CONFIG3 @ 0x8009
 24843                           ;	WDT Period Select bits
 24844                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 24845                           ;	WDT operating mode
 24846                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 24847                           ;	WDT Window Select bits
 24848                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 24849                           ;	WDT input clock selector
 24850                           ;	WDTCCS = SC, Software Control
 24851     8009                     	org	32777
 24852     8009  3F9F               	dw	16287
 24853                           
 24854                           ;Config register CONFIG4 @ 0x800A
 24855                           ;	Boot Block Size Selection bits
 24856                           ;	BBSIZE = BB512, 512 words boot block size
 24857                           ;	Boot Block Enable bit
 24858                           ;	BBEN = OFF, Boot Block disabled
 24859                           ;	SAF Enable bit
 24860                           ;	SAFEN = OFF, SAF disabled
 24861                           ;	Application Block Write Protection bit
 24862                           ;	WRTAPP = OFF, Application Block not write protected
 24863                           ;	Boot Block Write Protection bit
 24864                           ;	WRTB = OFF, Boot Block not write protected
 24865                           ;	Configuration Register Write Protection bit
 24866                           ;	WRTC = OFF, Configuration Register not write protected
 24867                           ;	Data EEPROM write protection bit
 24868                           ;	WRTD = OFF, Data EEPROM NOT write protected
 24869                           ;	Storage Area Flash Write Protection bit
 24870                           ;	WRTSAF = OFF, SAF not write protected
 24871                           ;	Low Voltage Programming Enable bit
 24872                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 24873     800A                     	org	32778
 24874     800A  3FFF               	dw	16383
 24875                           
 24876                           ;Config register CONFIG5 @ 0x800B
 24877                           ;	UserNVM Program memory code protection bit
 24878                           ;	CP = OFF, UserNVM code protection disabled
 24879     800B                     	org	32779
 24880     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    130
    Data        17
    BSS         629
    Persistent  58
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      79
    BANK1            80      0      50
    BANK2            80      0      66
    BANK3            80      0      53
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    BMA253_GetAccelDataX@xAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(2) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12882[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$4873	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c_simple_master$F3582(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c_simple_master$F3590(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c_simple_master$F3602(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c_simple_master$F3572(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c_simple_master$F3596(), 
		 -> NULL(), 

    I2C1_DO_TX$4873$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$4878	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12795[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$4872	const PTR FTN()enum E12795 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c_simple_master$F3582(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c_simple_master$F3590(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c_simple_master$F3602(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c_simple_master$F3572(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c_simple_master$F3596(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c_simple_master$F3582(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c_simple_master$F3590(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c_simple_master$F3602(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c_simple_master$F3572(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c_simple_master$F3596(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c_simple_master$F3582(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c_simple_master$F3590(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c_simple_master$F3602(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c_simple_master$F3572(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c_simple_master$F3596(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12728[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    IOCAF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF7_DefaultInterruptHandler(), NULL(), 

    IOCAF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF7_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial@main$F2767(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    MCP9844_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    rd1RegCompleteHandler@i2c_simple_master$F3582@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c_simple_master$F3590@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c_simple_master$F3602@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c_simple_master$F3602@p$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F545(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E12482,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    S1215$0$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S1215$callbackPayload	PTR void [6] size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S1215$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c_simple_master$F3582(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c_simple_master$F3590(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c_simple_master$F3602(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c_simple_master$F3572(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c_simple_master$F3596(), 
		 -> NULL(), 

    S1215$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S185$data	PTR unsigned char  size(2) Largest target is 0

    S3251$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3251$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3251$callbackTable	PTR FTN(PTR void ,)enum E12728[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S3251$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S334$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    S334$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S334$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S334$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S334$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S334$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F545(), 

    S334$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S334$SetSystemMode	PTR FTN(enum E12482,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S334$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S334$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S34$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S34$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S34$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    S34$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S34$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S34$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S34$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S34$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    S34$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S34$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S34$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S34$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial@main$F2767(BANK4[80]), statusBuffer(BANK6[80]), 
		 -> STR_3(CODE[11]), STR_5(CODE[12]), STR_6(CODE[6]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial@main$F2767(BANK4[80]), statusBuffer(BANK6[80]), 
		 -> STR_3(CODE[11]), STR_5(CODE[12]), STR_6(CODE[6]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    wr1RegCompleteHandler@i2c_simple_master$F3572@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c_simple_master$F3596@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_LIGHTBLUE_LedState
    _main->_LIGHTBLUE_PushButton
    _service_acceleremoterInterrupt->_LIGHTBLUE_AccState
    _LIGHTBLUE_AccState->_LIGHTBLUE_SendPacket
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF7_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _RN487X_Init->_RN487X_Delay
    _RN487X_Read@rn487x_interface$F545->_EUSART1_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c_simple_master$F3582
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c_simple_master$F3590
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c_simple_master$F3602
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c_simple_master$F3572
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c_simple_master$F3596
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c_simple_master$F3582
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c_simple_master$F3590
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c_simple_master$F3602
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c_simple_master$F3572
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c_simple_master$F3596
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c_simple_master$F3582
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c_simple_master$F3590
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c_simple_master$F3602
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c_simple_master$F3572
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c_simple_master$F3596
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c_simple_master$F3582
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c_simple_master$F3590
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c_simple_master$F3602
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c_simple_master$F3572
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c_simple_master$F3596
    _wr2RegCompleteHandler@i2c_simple_master$F3596->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c_simple_master$F3572->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c_simple_master$F3602->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c_simple_master$F3590->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c_simple_master$F3582->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_MCP9844_GetTemperatureValue
    _MCP9844_GetTemperatureValue->_MCP9844_CalcTemperature
    _MCP9844_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataX
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_BMA253_NewAccelDataRdyX
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  323130
                                             38 BANK0      2     2      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
                       _RN487X_Write *
                  _SYSTEM_Initialize
     _service_acceleremoterInterrupt
 ---------------------------------------------------------------------------------
 (1) _service_acceleremoterInterrupt                       0     0      0     649
                 _LIGHTBLUE_AccState
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_AccState                                   4     4      0     649
                                             10 COMMON     4     4      0
              _LIGHTBLUE_GetAccState
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_GetAccState                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     299
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      23
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      46
         _IOCAF6_SetInterruptHandler
         _IOCAF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF7_SetInterruptHandler                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     115
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     115
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0    1420
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0    1420
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    1     1      0    1420
                                             34 BANK0      1     1      0
              _RN487X_MessageHandler *
  _RN487X_Read@rn487x_interface$F545 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1    1307
                                             13 COMMON     1     0      1
                                             33 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     4      3     595
                                              6 COMMON     7     4      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     1      5     182
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     0      3      90
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0      63
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0      63
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 35    34      1     373
                                              5 COMMON     2     1      1
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     1      2      75
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0     121
                                              1 COMMON     1     1      0
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     141
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
  _RN487X_Read@rn487x_interface$F545 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1      24
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F545                    0     0      0      24
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2      47
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0   32237
                                             25 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
        _MCP9844_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _MCP9844_GetTemperatureValue                          1     0      1   31409
                                             24 BANK0      1     0      1
            _MCP9844_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _MCP9844_CalcTemperature                             11     9      2   31375
                                             13 BANK0     11     9      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2   31208
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     2      1     336
                                              6 COMMON     3     2      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       22    22      0     792
                                             10 COMMON     1     1      0
                                              0 BANK0     21    21      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0     649
                                             10 COMMON     4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0     711
                                              6 COMMON     2     2      0
                                              0 BANK0      7     7      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1     233
                                              2 COMMON     4     3      1
                      _EUSART1_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0      29
                                              0 COMMON     2     2      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0     717
                                             10 COMMON     4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0  283534
                                             19 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     0      3     342
                                              8 COMMON     3     0      3
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     1      2     246
                                              5 COMMON     3     1      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SendPacket                                 4     3      1     326
                                              6 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2      97
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RN487X_Write                                         1     0      1     104
                                              5 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     0      1      63
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               4     2      2  282564
                                             15 BANK0      4     2      2
               _BMA253_GetAccelDataX
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyX
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataX                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyX
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyX                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1   31306
                                             13 COMMON     1     0      1
                                              4 BANK0      5     5      0
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4     445
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      84
                                              0 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0   29733
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0   29733
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0   29649
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0   29649
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_simple_ma *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_simple_ma *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_simple_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_simple_ma *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_simple_ma *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0    7424
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_simple_ma *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_simple_ma *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_simple_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_simple_ma *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_simple_ma *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      47
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      47
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      47
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_simple_ma *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_simple_ma *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_simple_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_simple_ma *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_simple_ma *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_simple_ma *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_simple_ma *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_simple_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_simple_ma *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_simple_ma *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c_simple_master$F3596       2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c_simple_master$F3572       2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c_simple_master$F3602     2     0      2     776
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2     761
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c_simple_master$F3590       2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c_simple_master$F3582       2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         4     0      4     493
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4     206
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             2     0      2       0
                                              9 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            2     0      2       0
                                              9 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              0 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
                         _IOCAF7_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCAF7_ISR                                          0     0      0       0
                                NULL *
     _IOCAF7_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataX
         _BMA253_NewAccelDataRdyX
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c_simple_master$F3582 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c_simple_master$F3590 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c_simple_master$F3602 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c_simple_master$F3572 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c_simple_master$F3596 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c_simple_master$F3582 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c_simple_master$F3590 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c_simple_master$F3602 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c_simple_master$F3572 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c_simple_master$F3596 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c_simple_master$F3582 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c_simple_master$F3590 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c_simple_master$F3602 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c_simple_master$F3572 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c_simple_master$F3596 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c_simple_master$F3582 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c_simple_master$F3590 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c_simple_master$F3602 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c_simple_master$F3572 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c_simple_master$F3596 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyX
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _MCP9844_GetTemperatureValue
       _MCP9844_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F545 *
         _EUSART1_Read *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
       _DELAY_milliseconds
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F545 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
       _IOCAF7_SetInterruptHandler
     _PMD_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _service_acceleremoterInterrupt *
     _LIGHTBLUE_AccState
       _LIGHTBLUE_GetAccState
       _LIGHTBLUE_SendPacket
       _LIGHTBLUE_SplitByte

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *
     _IOCAF7_ISR
       NULL(Fake) *
       _IOCAF7_DefaultInterruptHandler *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     40      79     98.8%
BANK1               80      0      50     62.5%
BANK2               80      0      66     82.5%
BANK3               80      0      53     66.2%
BANK4               80      0      80    100.0%
BANK5               80      0      64     80.0%
BANK6               80      0      80    100.0%
BANK7               80      0      80    100.0%
BANK8               80      0      80    100.0%
BANK9               80      0      80    100.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     726      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Feb 15 17:17:17 2025

                               _eusart1TxBufferRemaining 005F  
                                 ?_EUSART2_RxDataHandler 0070  
                       ??_IOCAF7_DefaultInterruptHandler 0070  
                        ?_IOCAF7_DefaultInterruptHandler 0070  
                                    _do_I2C_SEND_RESTART 0000  
                                                    l112 0AC7  
                                                    l121 0B09  
                                                    l115 0ADD  
                                                    l124 0C49  
                                                    l118 0AF3  
                                                    l230 0C0D  
                                                    l311 08F9  
                                                    l320 08EE  
                                                    l304 08D4  
                                                    l314 08FC  
                                                    l307 08A5  
                                                    l323 08F1  
                                                    l331 091E  
                                                    l316 08FE  
                                                    l325 08F3  
                                                    l341 07FE  
                                                    l237 092E  
                                                    l334 0920  
                                                    l246 05BE  
                                                    l351 0CCA  
                                                    l247 05BA  
                                                    l336 0921  
                                                    l328 0917  
                                                    l344 0576  
                                                    l249 05C0  
                                                    l338 0922  
                                                    l362 0FB4  
                                                    l530 0876  
                                                    l292 17BB  
                                                    l364 0FC4  
                                                    l540 087C  
                                                    l701 0948  
                                                    l357 0EE5  
                                                    l518 0433  
                                                    l711 08AE  
                                                    l295 090A  
                                                    l199 03DC  
                                                    l720 0488  
                                                    l705 0DFC  
                                                    l714 089D  
                                                    l298 08CA  
                                                    l820 17A3  
                                                    l804 179D  
                                                    l708 17E1  
                                                    l660 0C9C  
                                                    l652 0FFF  
                                                    l717 046D  
                                                    l733 06B5  
                                                    l734 06DD  
                                                    l662 0CA7  
                                                    l807 0003  
                                                    l823 17B5  
                                                    l751 0E82  
                                                    l656 0B8F  
                                                    l648 08C0  
                                                    l841 17AF  
                                                    l745 0895  
                                                    l817 0955  
                                                    l850 17D3  
                                                    l826 17DC  
                                                    l930 08DE  
                                                    l675 099E  
                                                    l835 17B2  
                                                    l844 081C  
                                                    l772 17EB  
                                                    l668 0811  
                                                    l684 0962  
                                                    l829 17AC  
                                                    l781 17FA  
                                                    l933 08E8  
                                                    l838 17A9  
                                                    l678 093B  
                                                    l790 080C  
                                                    l695 0F51  
                                                    l847 17D7  
                                                    l871 17B8  
                                                    l775 17F0  
                                                    l927 0BF1  
                                                    l784 17FF  
                                                    l865 17A6  
                                                    l769 17E6  
                                                    l778 17F5  
                                                    l874 081D  
                                                    l962 0B61  
                                                    l787 0807  
                                                    l868 17A0  
                                                    l796 0E27  
                                                    l878 0822  
                                           ?_RN487X_Init 0070  
                        BMA253_NewAccelDataRdyX@xNewData 0029  
                                           ?_RN487X_Read 0070  
                             __end_of_DELAY_milliseconds 0A24  
                           LIGHTBLUE_SendPacket@packetID 0079  
                                  ?_I2C1_MasterOperation 0070  
                 __end_of_EUSART2_SetFramingErrorHandler 085F  
                         _EUSART2_SetFramingErrorHandler 0859  
                                                    _rad 004E  
                                                    wreg 0009  
                                 ?_I2C1_MasterSendTxData 0070  
                                   _I2C1_DO_RX_NACK_STOP 17FB  
                              ?_I2C1_MasterEnableRestart 0070  
                        BMA253_NewAccelDataRdyY@yNewData 0029  
                                   I2C1_SetBuffer@buffer 0070  
                                                   l1025 0A70  
                                                   l1202 0846  
                                                   l1211 084C  
                                ??_rd2RegCompleteHandler 007B  
                                                   l1205 083A  
                                                   l1142 0757  
                                                   l1047 0882  
                                                   l1208 0852  
                                                   l1161 0CEE  
                                                   l1170 0D13  
                                                   l1058 0A23  
                                                   l1148 08B7  
                                                   l1166 0CF5  
                                                   l1510 0BA7  
                                                   l1167 0CFE  
                                                   l1343 085E  
                                          ?_RN487X_Delay 0072  
                                                   l1600 0816  
                                                   l1352 0870  
                                                   l1513 0F19  
                                                   l1522 0D5E  
                                                   l1346 0864  
                                                   l1450 0B77  
                                                   l1426 01C0  
                                                   l1507 0828  
                                                   l1603 09BC  
                                                   l1355 086A  
                                                   l1516 0A36  
                                                   l1613 0F66  
                                                   l1349 0858  
                                                   l1437 0226  
                                                   l1606 07FF  
                                                   l1622 0F8A  
                                                   l1534 02F6  
                                                   l1286 071A  
                                                   l1199 0840  
                                                   l1519 0A5C  
                                                   l1616 0F69  
                                                   l1528 0EB3  
                                                   l1553 00E4  
                                                   l1546 00C6  
                                                   l1651 0DAC  
                                                   l1564 012A  
                                                   l1645 0D85  
                                                   l1582 037E  
                                                   l1591 0834  
                                                   l1576 018D  
                                                   l2800 0BA8  
                                                   l1681 0A00  
                                                   l1657 0DD3  
                                                   l1585 09AD  
                                                   l6002 09AF  
                                                   l2802 0BBF  
                                                   l1594 0802  
                                                   l1675 09DE  
                                                   l1588 0E53  
                                                   l6004 09B9  
                                                   l6100 0406  
                                                   l1669 0697  
                                                   l1597 082E  
                                                   l1926 0B1F  
                                                   l1678 09EF  
                                                   l1694 0916  
                                                   l6110 040B  
                                                   l6102 0407  
                                                   l2807 04D8  
                                                   l6200 0745  
                                                   l6120 041F  
                                                   l6112 040C  
                                                   l6104 0408  
                                                   l1697 0D38  
                                                   l1962 0B4B  
                                                   l6050 0C08  
                                                   l6042 0BF2  
                                                   l6202 0750  
                                                   l6210 06E7  
                                                   l6130 042A  
                                                   l6122 0421  
                                                   l6114 0413  
                                                   l6106 0409  
                                                   l1947 0B35  
                                                   l1971 0651  
                                                   l6044 0BF8  
                                                   l6204 0755  
                                                   l6220 06F9  
                                                   l6212 06F0  
                                                   l6132 042C  
                                                   l6124 0424  
                                                   l6116 041A  
                                                   l6108 040A  
                                                   l2781 0BD8  
                                                   l1974 0AB1  
                                                   l6302 0F82  
                                                   l6062 08F4  
                                                   l6054 0C0C  
                                                   l6230 0718  
                                                   l6222 06FA  
                                                   l6214 06F3  
                                                   l6206 06DE  
                                                   l6150 08B8  
                                                   l6134 042E  
                                                   l6126 0426  
                                                   l6118 041C  
                                                   l6070 03E0  
                                                   l1959 0528  
                                                   l2775 0A49  
                                                   l8000 0B8E  
                                                   l6064 08E9  
                                                   l6048 0BFA  
                                                   l6224 0701  
                                                   l6216 06F5  
                                                   l6208 06E0  
                                                   l6152 08BA  
                                                   l6136 0431  
                                                   l6128 0428  
                                                   l6080 03EA  
                                                   l6072 03E2  
                                                   l6160 0B4C  
                                                   l1986 0C67  
                                                   l8010 04E1  
                                                   l6058 089E  
                                                   l6066 0919  
                                                   l2794 0609  
                                                   l6226 0708  
                                                   l6218 06F7  
                                                   l6154 08BD  
                                                   l6162 08D5  
                                                   l6090 03FC  
                                                   l6082 03ED  
                                                   l6074 03E4  
                                                   l6170 0A62  
                                                   l6250 0A4F  
                                                   l8020 050D  
                                                   l8012 04EB  
                                                   l8004 04DB  
                                                   l8100 0D25  
                                                   l6180 071B  
                                                   l6228 0713  
                                                   l6156 08BF  
                                                   l6164 08D8  
                                                   l6092 03FE  
                                                   l6084 03EF  
                                                   l6076 03E6  
                                                   l6068 03DD  
                                                   l6172 0A63  
                                                   l6252 0A56  
                                                   l6500 0B74  
                                                   l8030 0527  
                                                   l8022 0517  
                                                   l8014 04F6  
                                                   l8110 0652  
                                                   l8102 0D34  
                                                   l5710 04AB  
                                                   l5702 0498  
                                                   l6350 0923  
                                                   l6190 0732  
                                                   l6182 071D  
                                                   l6166 08DA  
                                                   l6094 0400  
                                                   l6086 03F4  
                                                   l6078 03E8  
                                                   l6158 08DF  
                                                   l6174 0A65  
                                                   l6246 0A4A  
                                                   l6502 0B76  
                                                   l8016 0501  
                                                   l8040 09DF  
                                                   l8120 0677  
                                                   l8112 065A  
                                                   l6256 099F  
                                                   l6600 0143  
                                                   l6360 03C5  
                                                   l6344 17B9  
                                                   l5720 0BA8  
                                                   l5712 04B4  
                                                   l5704 049A  
                                                   l6352 092B  
                                                   l6192 0734  
                                                   l6184 0724  
                                                   l6096 0402  
                                                   l6088 03FA  
                                                   l6176 0A66  
                                                   l6168 0A5D  
                                                   l6248 0A4E  
                                                   l8026 051D  
                                                   l8018 050A  
                                                   l8034 09CE  
                                                   l8042 09EE  
                                                   l8122 0680  
                                                   l8114 0660  
                                                   l6282 0829  
                                                   l6290 0F53  
                                                   l6610 0165  
                                                   l6602 0156  
                                                   l6530 0A30  
                                                   l8106 090B  
                                                   l6362 03CE  
                                                   l5722 0BB2  
                                                   l5714 04BA  
                                                   l5706 049E  
                                                   l6354 092D  
                                                   l6194 0736  
                                                   l6186 072D  
                                                   l6098 0404  
                                                   l6178 0A6D  
                                                   l8028 0521  
                                                   l8036 09DD  
                                                   l8124 0688  
                                                   l8116 0669  
                                                   l8108 0652  
                                                   l8140 0EE6  
                                                   l6540 0D4B  
                                                   l6532 0D39  
                                                   l6292 0F54  
                                                   l6612 016B  
                                                   l6604 015C  
                                                   l6524 0A24  
                                                   l8060 062C  
                                                   l8052 060C  
                                                   l8132 0B90  
                                                   l5740 0CBA  
                                                   l5732 07D2  
                                                   l5716 04CA  
                                                   l5708 04A2  
                                                   l5900 05AF  
                                                   l6348 0923  
                                                   l6196 0737  
                                                   l6188 0730  
                                                   l8300 0196  
                                                   l8070 0D5F  
                                                   l8046 09F0  
                                                   l8126 068E  
                                                   l8118 0671  
                                                   l5670 0BC5  
                                                   l8150 0F13  
                                                   l8142 0EE8  
                                                   l6286 0812  
                                                   l6542 0D51  
                                                   l6534 0D3D  
                                                   l6294 0F62  
                                                   l6606 015F  
                                                   l6278 082F  
                                                   l6526 0A28  
                                                   l6550 0E90  
                                                   l6630 0279  
                                                   l8062 0635  
                                                   l8054 060C  
                                                   l8134 0B92  
                                                   l5910 08CB  
                                                   l6358 037F  
                                                   l5742 0CBF  
                                                   l5750 0ECD  
                                                   l5734 0529  
                                                   l5726 0BB4  
                                                   l5902 05B5  
                                                   l6198 073E  
                                                   l6390 0BE2  
                                                   l8310 01AA  
                                                   l8302 0199  
                                                   l7600 0ABD  
                                                   l8072 0D5F  
                                                   l8080 0D86  
                                                   l8048 09FF  
                                                   l5680 0CEF  
                                                   l5672 0BC9  
                                                   l8144 0EEF  
                                                   l6544 0D58  
                                                   l6536 0D3E  
                                                   l6296 0F6C  
                                                   l6560 00C9  
                                                   l6616 016E  
                                                   l6528 0A29  
                                                   l6552 0E97  
                                                   l6640 02E0  
                                                   l6632 027C  
                                                   l6624 0253  
                                                   l8064 0638  
                                                   l8056 0616  
                                                   l8136 0B97  
                                                   l5736 0CA9  
                                                   l5664 0A37  
                                                   l5752 0ED0  
                                                   l5744 0EB4  
                                                   l5728 0BBE  
                                                   l5760 05E6  
                                                   l5840 0FB7  
                                                   l5832 0F8B  
                                                   l5904 05B7  
                                                   l5920 0871  
                                                   l6392 0BE5  
                                                   l8320 01F1  
                                                   l8312 01BA  
                                                   l8304 01A1  
                                                   l7602 0AC6  
                                                   l7610 0ADC  
                                                   l8074 0D67  
                                                   l8082 0D8E  
                                                   l8090 0DB5  
                                                   l5690 0D0E  
                                                   l5682 0CFA  
                                                   l5826 08FF  
                                                   l5674 0BD2  
                                                   l8146 0EFB  
                                                   l6538 0D45  
                                                   l6298 0F76  
                                                   l6570 00E6  
                                                   l6562 00CB  
                                                   l6554 0E9A  
                                                   l6546 0E83  
                                                   l6642 02E2  
                                                   l6634 0287  
                                                   l6626 025C  
                                                   l8066 0640  
                                                   l8058 0621  
                                                   l8138 0BA1  
                                                   l5914 0A12  
                                                   l5842 08AF  
                                                   l5738 0CAE  
                                                   l5666 0A39  
                                                   l5746 0EBB  
                                                   l5770 0608  
                                                   l5754 05C1  
                                                   l5834 0F9C  
                                                   l5906 05BC  
                                                   l5930 084D  
                                                   l5922 0877  
                                                   l6490 0B62  
                                                   l8322 01F7  
                                                   l8314 01C9  
                                                   l8330 0207  
                                                   l8306 01A4  
                                                   l7700 0B1E  
                                                   l8076 0D77  
                                                   l8084 0D9E  
                                                   l8092 0DC5  
                                                   l5692 0D0F  
                                                   l5684 0CFF  
                                                   l5668 0BC0  
                                                   l8148 0F07  
                                                   l6580 0108  
                                                   l6572 00E9  
                                                   l6564 00CE  
                                                   l6556 0EAD  
                                                   l6548 0E87  
                                                   l6644 02EB  
                                                   l6636 029E  
                                                   l6628 0267  
                                                   l5916 0A13  
                                                   l5780 0CDD  
                                                   l5828 08C1  
                                                   l5748 0EBE  
                                                   l5764 05E8  
                                                   l5756 05C7  
                                                   l5836 0FA0  
                                                   l5932 083B  
                                                   l6388 0BD9  
                                                   l6492 0B67  
                                                   l8332 0216  
                                                   l8324 01FD  
                                                   l8316 01DB  
                                                   l8308 01A9  
                                                   l7606 0AC8  
                                                   l7614 0ADE  
                                                   l7622 0AF4  
                                                   l7630 0C2C  
                                                   l8078 0D86  
                                                   l8086 0DAD  
                                                   l5686 0D06  
                                                   l5694 0D11  
                                                   l5678 0CEF  
                                                   l6590 0123  
                                                   l6582 010B  
                                                   l6574 00EF  
                                                   l6566 00D4  
                                                   l6558 00C5  
                                                   l6638 02B0  
                                                   l8094 0D14  
                                                   l5918 0A17  
                                                   l5790 0CEB  
                                                   l5782 0CDF  
                                                   l5774 0CCB  
                                                   l5758 05D3  
                                                   l5766 05FA  
                                                   l5838 0FAE  
                                                   l5934 0841  
                                                   l5950 086B  
                                                   l5926 087D  
                                                   l6494 0B69  
                                                   l8334 022F  
                                                   l8326 0202  
                                                   l8318 01E6  
                                                   l7720 0A9C  
                                                   l7608 0AD3  
                                                   l7616 0AE9  
                                                   l7624 0AFF  
                                                   l7632 0C48  
                                                   l7704 0B20  
                                                   l7712 0B36  
                                                   l7640 17D9  
                                                   l7800 06B0  
                                                   l8088 0DAD  
                                                   l5688 0D08  
                                                   l6488 0823  
                                                   l6592 0128  
                                                   l6584 0111  
                                                   l6576 00F8  
                                                   l6568 00DD  
                                                   l8096 0D20  
                                                   l5792 0CED  
                                                   l5784 0CE5  
                                                   l5776 0CCB  
                                                   l5696 0489  
                                                   l5768 05FF  
                                                   l5936 0835  
                                                   l5928 0847  
                                                   l5952 0859  
                                                   l6496 0B6B  
                                                   l8336 0242  
                                                   l8328 0205  
                                                   l7722 0AA7  
                                                   l7618 0AF2  
                                                   l7626 0B08  
                                                   l7706 0B2B  
                                                   l7714 0B41  
                                                   l7730 0C66  
                                                   l7802 06B3  
                                                   l7642 17E2  
                                                   l7650 17EA  
                                                   l5970 0315  
                                                   l6594 012D  
                                                   l6586 011A  
                                                   l6578 00FF  
                                                   l8098 0D23  
                                                   l5786 0CE6  
                                                   l5778 0CD1  
                                                   l5698 0495  
                                                   l5890 058E  
                                                   l5882 0577  
                                                   l5954 085F  
                                                   l6498 0B71  
                                                   l7580 0F21  
                                                   l7724 0AB0  
                                                   l7708 0B34  
                                                   l7716 0B4A  
                                                   l7660 17B3  
                                                   l7636 0817  
                                                   l7740 17E0  
                                                   l7812 06BB  
                                                   l7644 17E5  
                                                   l7900 0DDC  
                                                   l5980 0369  
                                                   l5972 0318  
                                                   l6596 0133  
                                                   l6588 0121  
                                                   l5788 0CE8  
                                                   l5892 0593  
                                                   l5884 0582  
                                                   l5956 0853  
                                                   l5948 0865  
                                                   l8292 018E  
                                                   l7734 179E  
                                                   l7590 099D  
                                                   l7582 0F3A  
                                                   l7830 0894  
                                                   l7654 17F1  
                                                   l7902 0DE4  
                                                   l7910 093D  
                                                   l5982 036B  
                                                   l5974 0323  
                                                   l5990 0E40  
                                                   l6598 013C  
                                                   l5894 059F  
                                                   l5886 0587  
                                                   l8294 0191  
                                                   l7592 17AA  
                                                   l7584 092F  
                                                   l7728 0C4A  
                                                   l7664 17D4  
                                                   l7840 0E5B  
                                                   l7736 17DD  
                                                   l7744 08A6  
                                                   l7752 0896  
                                                   l7760 0434  
                                                   l8560 06CF  
                                                   l7808 06B7  
                                                   l7648 17E7  
                                                   l7680 17EC  
                                                   l7656 17F4  
                                                   l7672 17FB  
                                                   l7904 0DE7  
                                                   l7912 0940  
                                                   l7920 094F  
                                                   l5984 0373  
                                                   l5976 0343  
                                                   l5968 02F8  
                                                   l5992 0E42  
                                                   l5896 05A6  
                                                   l5888 058D  
                                                   l8296 0192  
                                                   l7930 17A1  
                                                   l7906 17A7  
                                                   l7594 17AD  
                                                   l7586 0990  
                                                   l7578 0F1B  
                                                   l7842 0E5E  
                                                   l7834 0E54  
                                                   l7738 17DF  
                                                   l7746 08A8  
                                                   l7754 0898  
                                                   l8562 045F  
                                                   l7818 06BF  
                                                   l7826 088F  
                                                   l7682 17EF  
                                                   l7674 17FE  
                                                   l7666 0803  
                                                   l7914 0943  
                                                   l7922 0952  
                                                   l5978 035B  
                                                   l5994 0E4D  
                                                   l5986 0E28  
                                                   l5898 05AC  
                                                   l8298 0193  
                                                   l7588 0995  
                                                   l7692 0002  
                                                   l7596 17D0  
                                                   l8564 0E74  
                                                   l7836 0E57  
                                                   l7852 0E64  
                                                   l7748 08AD  
                                                   l7756 089C  
                                                   l7780 046F  
                                                   l7772 0445  
                                                   l7764 043D  
                                                   l7828 0891  
                                                   l7860 17F6  
                                                   l7668 0806  
                                                   l7908 093C  
                                                   l7940 0C98  
                                                   l7932 0C89  
                                                   l7924 0954  
                                                   l7916 0949  
                                                   l5996 0E4F  
                                                   l5988 0E30  
                                                   l8556 0176  
                                                   l7598 0AB2  
                                                   l7678 17B0  
                                                   l7686 17B6  
                                                   l7846 0E60  
                                                   l7782 047A  
                                                   l7862 17F9  
                                                   l7870 080B  
                                                   l8558 0E1F  
                                                   l7942 0C9F  
                                                   l7934 0C90  
                                                   l7918 094E  
                                                   l7950 0FC6  
                                                   l5998 0800  
                        BMA253_NewAccelDataRdyZ@zNewData 0029  
                                                   l7928 17A4  
                                                   l7688 179C  
                                                   l7696 0B0A  
                                                   l7784 0485  
                                                   l7768 0441  
                                                   l7880 0E06  
                                                   l7944 0CA2  
                                                   l7936 0C91  
                                                   l7960 0FD2  
                                                   l7952 0FCD  
                                                   l7698 0B15  
                                                   l7786 0487  
                                                   l7778 0449  
                                                   l7794 0698  
                                                   l7866 0808  
                                                   l7874 0DFD  
                                                   l7938 0C93  
                                                   l7946 0CA5  
                                                   l7970 0FE5  
                                                   l7962 0FD4  
                                                   l7954 0FCF  
                                                   l7796 06A1  
                                                   l7868 080A  
                                                   l7876 0E02  
                                                   l7980 0FFA  
                                                   l7972 0FE9  
                                                   l7964 0FD8  
                                                   l7956 0FD0  
                                                   l7798 06A6  
                                                   l7886 0E0A  
                                                   l7974 0FEF  
                                                   l7966 0FDD  
                                                   l7958 0FD1  
                                                   l7982 0FFE  
                                                   l7992 0B78  
                                                   l7896 0DD4  
                                                   l7976 0FF1  
                                                   l7968 0FDF  
                                                   l7994 0B7F  
                                                   l7898 0DD7  
                                                   l7978 0FF7  
                                                   l7986 0956  
                                                   l7996 0B82  
                                                   l7988 080D  
                                                   l7998 0B8B  
                                                   STR_1 1091  
                                                   STR_2 1086  
                                                   STR_3 1086  
                                                   STR_4 107A  
                                                   STR_5 107A  
                                                   STR_6 1091  
                                                   u2200 0495  
                                                   u3000 0B71  
                                                   u2201 0494  
                                                   u3001 0B70  
                                                   u3010 0EAD  
                                                   u2210 04AB  
                                                   u3011 0EAC  
                                                   u2211 04AA  
                                                   u3020 00D4  
                                                   u2220 04B4  
                                                   u2300 05C7  
                                                   u3021 00D3  
                                                   u2221 04B3  
                                                   u2301 05C6  
                                                   _LATA 0018  
                                                   u3030 00EF  
                                                   u2150 0A49  
                                                   u2230 04BA  
                                                   u2310 05E6  
                                                   _LATB 0019  
                                                   u3031 00EE  
                                                   u3015 0EA9  
                                                   u2151 0A48  
                                                   u2231 04B9  
                                                   u2311 05E5  
                                                   _LATC 001A  
                                                   u4000 06B0  
                                                   u2160 0BD2  
                                                   u3120 02EB  
                                                   u2240 04CA  
                                                   u2320 05FF  
                                                   u2400 0F9C  
                                                   u4001 06AF  
                                                   u2161 0BD1  
                                                   u3121 02EA  
                                                   u3105 028A  
                                                   u2241 04C9  
                                                   u2321 05FE  
                                                   u2401 0F9B  
                                                   u4010 0822  
                                                   u2170 0CF5  
                                                   u3050 0111  
                                                   u2250 0BB2  
                                                   u2330 0608  
                                                   u2410 0FAE  
                                                   u4011 0821  
                                                   u2171 0CF4  
                                                   u3051 0110  
                                                   u3115 02B7  
                                                   u2251 0BB1  
                                                   u2331 0607  
                                                   u2411 0FAD  
                                                   u4020 0DDC  
                                                   u4100 04EB  
                                                   u2180 0CFA  
                                                   u3060 0128  
                                                   u2340 0CD1  
                                                   u2420 08B6  
                                                   u2260 0BBE  
                                                   u4021 0DDB  
                                                   u4101 04EA  
                                                   u2181 0CF9  
                                                   u3061 0127  
                                                   u3045 0102  
                                                   u2341 0CD0  
                                                   u2421 08B4  
                                                   u2261 0BBD  
                                                   u4030 0DE4  
                                                   u4110 0517  
                                                   u2190 0D0E  
                                                   u3070 0133  
                                                   u2350 0CE5  
                                                   u2430 08B7  
                                                   u2270 0CAE  
                                                   u4031 0DE3  
                                                   u4111 0516  
                                                   u2191 0D0D  
                                                   u3071 0132  
                                                   u2351 0CE4  
                                                   u2271 0CAD  
                                                   u4040 0948  
                                                   u4120 051C  
                                                   u2600 0373  
                                                   u3080 0164  
                                                   u4200 0616  
                                                   u2280 0CBF  
                                                   u2520 0587  
                                                   u4041 0947  
                                                   u4121 051B  
                                                   u2601 0372  
                                                   u3081 0163  
                                                   u4201 0615  
                                                   u2281 0CBE  
                                                   u2521 0586  
                                                   u4050 094E  
                                                   u4130 0527  
                                                   u3090 016B  
                                                   u4210 0640  
                                                   u2290 0EE5  
                                                   u2530 058D  
                                                   u4051 094D  
                                                   u4131 0526  
                                                   u3091 016A  
                                                   u4211 063F  
                                                   u2291 0EE4  
                                                   u2531 058C  
                                                   u4060 0C90  
                                                   u4140 09DA  
                                                   u4220 0D67  
                                                   u2540 05A6  
                                                   u4061 0C8F  
                                                   u4141 09D8  
                                                   u4221 0D66  
                                                   u2541 05A5  
                                                   u4070 0C98  
                                                   u4150 09DB  
                                                   u4230 0D8E  
                                                   u2550 05B5  
                                                   u4071 0C97  
                                                   u4231 0D8D  
                                                   u2295 0EE1  
                                                   u2551 05B4  
                                                   u4080 0FCD  
                                                   u4160 09EB  
                                                   u4240 0DB5  
                                                   u2560 0A23  
                                                   u2640 0BF8  
                                                   u2800 092B  
                                                   u4081 0FCC  
                                                   u4161 09E9  
                                                   u4241 0DB4  
                                                   u2561 0A22  
                                                   u2641 0BF7  
                                                   u2801 092A  
                                                   u4090 0B7F  
                                                   u4170 09EC  
                                                   u4250 065A  
                                                   u2810 03DC  
                                                   u2650 0C08  
                                                   u4091 0B7E  
                                                   u4251 0659  
                                                   u2811 03DB  
                                                   u2651 0C07  
                                                   u4180 09FC  
                                                   u4260 0671  
                                                   u2660 08F9  
                                                   u4500 022E  
                                                   u4181 09FA  
                                                   u4261 0670  
                                                   u2661 08F8  
                                                   u4501 022D  
                                                   u4190 09FD  
                                                   u4270 0688  
                                                   u2670 08EE  
                                                   u4510 0250  
                                                   u4430 01A1  
                                                   u4271 0687  
                                                   u2671 08ED  
                                                   u4511 024F  
                                                   u4431 01A0  
                                                   u2760 0F62  
                                                   u2680 091E  
                                                   u4440 01A9  
                                                   u2761 0F61  
                                                   u2681 091D  
                                                   u4441 01A8  
                             LIGHTBLUE_PushButton@button 007D  
                                                   u2770 0F66  
                                                   u4450 01C8  
                                                   u2595 032E  
                                                   u2771 0F65  
                                                   u2755 0F57  
                                                   u4451 01C7  
                                                   u2780 0F71  
                                                   u4460 01E6  
                                                   _PMD0 0796  
                                                   u2781 0F6F  
                                                   u4461 01E5  
                                                   _PMD1 0797  
                                                   u2790 0F72  
                                                   u4470 01F1  
                                                   _PMD2 0798  
                                                   u4471 01F0  
                                                   _PMD3 0799  
                                                   u4480 01F7  
                                                   _PMD4 079A  
                                                   u4481 01F6  
                                                   _PMD5 079B  
                                                   u4490 0215  
                                                   _PMD6 079C  
                                                   u4627 0A14  
                                                   u4491 0214  
                                                   _PMD7 079D  
                                                   u2990 0B67  
                                                   u2991 0B66  
                                                   u3960 0F21  
                                                   u3961 0F20  
                                                   u3970 0995  
                                                   u3971 0994  
                                                   u3980 043C  
                                                   u3981 043B  
                                                   u3990 0485  
                                                   u3991 0484  
                                          ?_RN487X_Reset 0070  
                        BMA253_GetAccelDataXYZ@accelData 002F  
                                                   _WPUA 1F39  
                                                   _WPUB 1F44  
                                                   _WPUC 1F4F  
                                                   _WPUE 1F65  
                                  ??_EUSART2_Receive_ISR 0070  
                                ??_wr2RegCompleteHandler 007B  
                                       ??_I2C1_MasterFsm 0020  
                                          _EUSART1_Write 0CEF  
                                          ?_RN487X_Write 0075  
                              ??_I2C1_CallbackReturnStop 007B  
                                                   __hex 01C4  
                                                   _main 018E  
                                                   _peek 006A  
                                          ?_EUSART1_Read 0070  
                                                   _uart 1000  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                          ??_LIGHTBLUE_TemperatureSensor 007D  
                                                   start 0061  
                                       ??_I2C1_SetBuffer 0074  
                           __end_of_EUSART2_Transmit_ISR 0C87  
                                           _statusBuffer 0320  
                         BMA253_GetAccelDataX@xAccelData 002A  
                                ??_LIGHTBLUE_AccelSensor 007E  
                          I2C1_CallbackReturnStop@funPtr 0079  
                  __end_of_LIGHTBLUE_ParseIncomingPacket 018E  
                          _LIGHTBLUE_ParseIncomingPacket 00C3  
                                __end_of_TMR0_Initialize 0A71  
                                           _do_I2C_RESET 0000  
                         ??_TMR0_DefaultInterruptHandler 0070  
                          __end_of_OSCILLATOR_Initialize 08DF  
                                  _eusart1RxStatusBuffer 00A8  
                                      __end_of_I2C1_Open 1000  
                                                  ?_main 0070  
                          __end_of_rn487x_driver_version 1808  
                                                  i1l400 0041  
                                                  i1l401 005F  
                                                  i1l402 0050  
                                                  i1l407 005F  
                                                  i1l523 09CD  
                                                  i1l533 179A  
                                                  i1l527 0971  
                                                  i1l543 17CF  
                                                  i1l537 0980  
                                                  i1l393 0013  
                                                  i1l395 001F  
                                                  i1l398 0032  
                             __end_of_i2c1_fsmStateTable 1068  
                                                  _OSCEN 0891  
                                                  _TMR0H 059D  
                                                  _TMR0L 059C  
                                                  _TRISA 0012  
                                                  _TRISB 0013  
                                                  _TRISC 0014  
                                                  _TRISE 0016  
                                 ??_I2C1_MasterGetRxData 0070  
                            LIGHTBLUE_PushButton@payload 007A  
                                  ?_I2C1_DO_RX_NACK_STOP 0070  
                              ?_TMR0_SetInterruptHandler 0070  
                             ??_I2C1_CallbackReturnReset 007B  
                                      ??_I2C1_MasterOpen 0070  
                                   _EUSART1_Transmit_ISR 0C0E  
                                      ??_I2C1_MasterStop 0070  
                                      ??_I2C1_Initialize 0070  
                                       __end_of_TMR0_ISR 0990  
                                                  _pHead 006B  
                                __end_of_PIN_MANAGER_IOC 09CE  
                                                  _flats 0062  
                                         ??_RN487X_Delay 0074  
                         BMA253_GetAccelDataY@yAccelData 002A  
                                         ??_RN487X_Reset 0071  
                                  _i2c_read1ByteRegister 04D9  
                                         ?_EUSART1_Write 0070  
                                         ??_RN487X_Write 0076  
                                                  pclath 000A  
                                         ??_EUSART1_Read 0070  
                              LIGHTBLUE_PerformAction@id 0074  
                                                  status 0003  
                                                  wtemp0 007E  
                                           ??_I2C1_DO_RX 007B  
                                           ??_I2C1_DO_TX 007B  
                                        __end_of_strncmp 04D9  
                                 ??_RN487X_SetSystemMode 0071  
             __end_of_EUSART1_DefaultFramingErrorHandler 1799  
                   ??_EUSART1_DefaultFramingErrorHandler 0070  
                    ?_EUSART1_DefaultFramingErrorHandler 0070  
                     _EUSART1_DefaultFramingErrorHandler 1798  
                                 ??_I2C1_DO_ADDRESS_NACK 007B  
                                           ??_I2C1_Close 0070  
                  __end_of_EUSART2_SetTxInterruptHandler 0871  
                          _EUSART2_SetTxInterruptHandler 086B  
                                          _fsmStateTable 1028  
                                        __initialization 0063  
                                 _rn487x_PrintMessageEnd 0529  
                                             _i2c_status 0120  
                             __end_of_EUSART1_Initialize 0758  
                                           __end_of_main 0253  
                                           __end_of_uart 1028  
                            ?_LIGHTBLUE_GetErrorLedValue 0070  
                               _LIGHTBLUE_UpdateErrorLed 07FF  
                             __end_of_RN487X_is_rx_ready 08D5  
                            ?_INTERRUPT_InterruptManager 0070  
                              LIGHTBLUE_AccState@payload 007A  
                             ?_LIGHTBLUE_GetDataLedValue 0070  
                         BMA253_GetAccelDataZ@zAccelData 002A  
                                          _do_I2C_DO_ACK 0000  
                                 ??_I2C1_MasterOperation 007D  
                                                 ??_main 0046  
                              ?_rn487x_PrintMessageStart 0070  
                                          _INTERRUPTbits 006E  
                    __end_of_EUSART2_DefaultErrorHandler 17C8  
                            _EUSART2_DefaultErrorHandler 17C4  
                                _LIGHTBLUE_PerformAction 0F52  
                       RN487X_MessageHandler@messageType 0041  
                       __end_of_LIGHTBLUE_SendSerialData 02F7  
                                  ?_EUSART1_Transmit_ISR 0070  
                                     __end_of_I2C1_DO_RX 06DE  
                                     __end_of_I2C1_DO_TX 0489  
                                 _serialIndex@main$F2768 0053  
                                       _RN487X_DataReady 0BF2  
                                     __end_of_I2C1_Close 0B90  
                             __end_of_EUSART2_Initialize 071B  
                           ??_IOCAF6_SetInterruptHandler 0072  
                               _eusart2TxBufferRemaining 0058  
                                                 _ANSELA 1F38  
                                                 _ANSELB 1F43  
                                                 _ANSELC 1F4E  
                           ??_LIGHTBLUE_SetErrorLedValue 0070  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                  _i2c_read2ByteRegister 060A  
                                                 _RC1REG 0119  
                                                 _RC2REG 0A19  
                                                 _RB1PPS 1F19  
                                                 _RB2PPS 1F1A  
                                                 _RC1PPS 1F21  
                                                 _RC1STA 011D  
                                                 _RB4PPS 1F1C  
                                                 _RC2PPS 1F22  
                                                 _RC2STA 0A1D  
                                                 i1l1050 179B  
                                                 _RC4PPS 1F24  
                                                 i1l1044 098F  
                                                 i1l1320 0C86  
                                                 i1l1331 0A9B  
                                                 i1l1340 17C7  
                                                 i1l1173 0C29  
                                                 i1l1317 0C84  
                                                 i1l1190 1798  
                                                 i1l1334 1799  
                                                 i1l1183 07D1  
                                                 i1l1327 0794  
                                                 i1l1176 0C2B  
                                                 i1l1193 17C3  
                                                 i1l1337 17CB  
                                                 _ODCONA 1F3A  
                                                 _ODCONB 1F45  
                                                 i1l1187 0A85  
                                                 _ODCONC 1F50  
                                                 i1l1196 17BF  
                                                 _ODCONE 1F66  
                                ??_LIGHTBLUE_GetAccState 0070  
                                                 _RN487X 1068  
                                                 i1l6140 096A  
                                                 i1l7020 0017  
                                                 i1l6142 096F  
                                                 i1l7030 0036  
                                                 i1l7022 001B  
                                                 i1l7014 0006  
                                                 i1l6240 17BC  
                                                 i1l6144 0972  
                                                 i1l7040 0058  
                                                 i1l7032 003A  
                                                 i1l7024 0023  
                                                 i1l7016 000B  
                                                 i1l6242 17C8  
                                                 i1l6138 0963  
                                                 i1l6146 0979  
                                                 i1l7034 0045  
                                                 i1l7026 0027  
                                                 i1l7018 000F  
                                                 i1l6244 17C4  
                                                 i1l6148 097E  
                                                 i1l7036 0049  
                                                 i1l7028 002B  
                                                 i1l6238 17C0  
                                                 i1l6430 0C1F  
                                                 i1l7038 0054  
                                                 i1l6440 07A0  
                                                 i1l6432 0C25  
                                                 i1l6424 0C0E  
                                                 i1l6450 07BD  
                                                 i1l6442 07A6  
                                                 i1l6434 0C26  
                                                 i1l6426 0C15  
                                                 i1l6452 07C7  
                                                 i1l6444 07AC  
                                                 i1l6436 0795  
                                                 i1l6428 0C1C  
                                                 i1l6460 0C77  
                                                 i1l6380 09BD  
                                                 i1l6454 07CE  
                                                 i1l6446 07B1  
                                                 i1l6438 079B  
                                                 i1l6470 075E  
                                                 i1l6462 0C7A  
                                                 i1l6382 09C2  
                                                 i1l6374 0981  
                                                 i1l6448 07B7  
                                                 i1l6480 077A  
                                                 i1l6472 0763  
                                                 i1l6464 0C80  
                                                 i1l6456 0C68  
                                                 i1l6384 09C5  
                                                 i1l6376 0983  
                                                 i1l6482 0780  
                                                 i1l6474 0769  
                                                 i1l6466 0C81  
                                                 i1l6458 0C6F  
                                                 i1l6386 09CA  
                                                 i1l6378 098A  
                                                 i1l5940 0A79  
                                                 i1l6484 078A  
                                                 i1l6476 076F  
                                                 i1l6468 0758  
                                                 i1l5924 17CC  
                                                 i1l5942 0A7C  
                                                 i1l6486 0791  
                                                 i1l6478 0774  
                                                 i1l5944 0A82  
                                                 i1l5960 0A8F  
                                                 i1l5946 0A83  
                                                 i1l5938 0A71  
                                                 i1l5962 0A92  
                                                 i1l5964 0A98  
                                                 i1l5966 0A99  
                                                 i1l5958 0A86  
                                                 _INLVLA 1F3C  
                                                 _INLVLB 1F47  
                                                 _INLVLC 1F52  
                                                 u270_20 0979  
                                                 u350_20 0023  
                                                 u270_21 0978  
                                                 u350_21 0022  
                                                 u351_20 0027  
                                                 u351_21 0026  
                                                 u352_20 002B  
                                                 u352_21 002A  
                                                 u257_20 0A82  
                                                 u353_20 0036  
                                                 u257_21 0A81  
                                                 u353_21 0035  
                                                 u290_20 0C25  
                                                 u258_20 0A98  
                                                 u354_20 003A  
                                                 u346_20 000B  
                                                 u290_21 0C24  
                                                 u258_21 0A97  
                                                 u354_21 0039  
                                                 u346_21 000A  
                                                 u291_20 07A0  
                                                 u355_20 0045  
                                                 u347_20 000F  
                                                 u291_21 079F  
                                                 u355_21 0044  
                                                 u347_21 000E  
                                                 u292_20 07B1  
                                                 u284_20 098A  
                                                 u356_20 0049  
                                                 u348_20 0017  
                                                 u292_21 07B0  
                                                 u284_21 0989  
                                                 u356_21 0048  
                                                 u348_21 0016  
                                                 u293_20 07C7  
                                                 u269_20 096A  
                                                 u285_20 09C2  
                                                 u357_20 0054  
                                                 u349_20 001B  
                                                 u293_21 07C6  
                                                 u269_21 0969  
                                                 u285_21 09C1  
                                                 u357_21 0053  
                                                 u349_21 001A  
                                                 u294_20 0C6F  
                                                 u286_20 09CA  
                                                 u358_20 0058  
                                                 u294_21 0C6E  
                                                 u286_21 09C9  
                                                 u358_21 0057  
                                                 u295_20 0C80  
                                                 u295_21 0C7F  
                                                 u296_20 0763  
                                                 u296_21 0762  
                                                 u289_20 0C15  
                                                 u297_20 0774  
                                                 u289_21 0C14  
                                                 u297_21 0773  
                                                 u298_20 078A  
                                                 u298_21 0789  
                                      send_spi_read@data 00C2  
                                                 _OSCFRQ 0893  
                                                 _TX1REG 011A  
                                                 _TX2REG 0A1A  
                                                 _TX1STA 011E  
                                                 _TX2STA 0A1E  
                                      ?_I2C1_MasterClose 0070  
                           ?_MCP9844_GetTemperatureValue 0038  
                                ??_I2C1_MasterDisableIrq 0070  
                                      ?_I2C1_MasterStart 0070  
                                      ?_I2C1_MasterWrite 0070  
                               ?_I2C1_MasterWaitForEvent 0070  
                                     ??_I2C1_MasterClose 0070  
                                       _I2C1_DO_TX_EMPTY 0E54  
                            BMA253_GetAccelDataX@lsbData 002D  
                            BMA253_GetAccelDataX@msbData 002E  
                                     ??_I2C1_MasterStart 0070  
                            BMA253_GetAccelDataY@lsbData 002D  
                      BMA253_GetAccelDataXYZ@sensorValue 0031  
                                     ??_I2C1_MasterWrite 007D  
                            BMA253_GetAccelDataY@msbData 002E  
                 LIGHTBLUE_TemperatureSensor@temperature 003E  
                            BMA253_GetAccelDataZ@lsbData 002D  
                            BMA253_GetAccelDataZ@msbData 002E  
                                                 _cmdBuf 02A0  
                             _lightBlueSerial@main$F2767 0220  
                                                 _bitMap 004C  
                           __end_of_BMA253_GetAccelDataX 0D86  
                           __end_of_BMA253_GetAccelDataY 0DAD  
                           __end_of_BMA253_GetAccelDataZ 0DD4  
                              RN487X_FilterData@readChar 0042  
                               ?_EUSART1_SetErrorHandler 0070  
                                       ?_TMR0_Initialize 0070  
                            _EUSART2_FramingErrorHandler 0158  
                       ??_EUSART1_SetOverrunErrorHandler 0072  
                        ?_EUSART1_SetOverrunErrorHandler 0070  
                                                 _pushed 0065  
                      __end_of_LIGHTBLUE_GetDataLedValue 082F  
                                                 _strchr 0BA8  
                               ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                                 _strcpy 0A37  
                                                 _strlen 0BC0  
                                                 _strstr 05C1  
                                      ?_I2C1_SetCallback 0070  
              __end_of_RN487X_Read@rn487x_interface$F545 08CB  
                      _RN487X_Read@rn487x_interface$F545 08C1  
                     ?_RN487X_Read@rn487x_interface$F546 0070  
                    ??_RN487X_Read@rn487x_interface$F548 0071  
                                 ??_I2C1_DO_RX_NACK_STOP 0070  
                            LIGHTBLUE_SendPacket@payload 0076  
                                  _I2C1_DO_SEND_ADR_READ 08A6  
                                         _PMD_Initialize 08DF  
                                _BMA253_NewAccelDataRdyX 09CE  
                                _BMA253_NewAccelDataRdyY 09DF  
                                _BMA253_NewAccelDataRdyZ 09F0  
                          ?_I2C1_SetDataCompleteCallback 0075  
                                     ??_I2C1_SetCallback 0074  
                                   _EUSART2_Transmit_ISR 0C68  
                             LIGHTBLUE_PerformAction@led 0075  
                                 ?_i2c_read1ByteRegister 007D  
                                        ??_EUSART1_Write 0071  
               TMR0_SetInterruptHandler@InterruptHandler 0070  
             IOCAF7_SetInterruptHandler@InterruptHandler 0070  
             IOCAF6_SetInterruptHandler@InterruptHandler 0070  
                                       ?_PIN_MANAGER_IOC 0070  
                                        _eusart1RxBuffer 00B0  
                                              ??_strncmp 0075  
                                _I2C1_DO_RX_NACK_RESTART 0803  
                                           ??_IOCAF6_ISR 0070  
                                           ??_IOCAF7_ISR 0070  
                                  _RN487X_MessageHandler 0F8B  
                                        _eusart2RxBuffer 0144  
                                        _eusart1TxBuffer 00B8  
                                      _SYSTEM_Initialize 0BD9  
                         I2C1_SetDataCompleteCallback@cb 0075  
                                        _eusart2TxBuffer 014C  
                                __end_of__initialization 00BF  
                                _protocol_version_number 1804  
                                       _do_I2C_SEND_STOP 0000  
                        I2C1_MasterOperation@returnValue 0023  
                                     ?_SYSTEM_Initialize 0070  
                                          ??_I2C1_Poller 007D  
                          ??_MCP9844_GetTemperatureValue 007D  
                                ??_EUSART2_RxDataHandler 0070  
                          __end_of_EUSART1_RxDataHandler 0A86  
                                _rdBlkRegCompleteHandler 0C2C  
                             __end_of_spi2_configuration 1804  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK3 0A01  
                                    ??_SYSTEM_Initialize 0072  
                       __end_of_I2C1_MasterEnableRestart 17AD  
                                              ?_TMR0_ISR 0070  
                                   __end_of_RN487X_Delay 08A6  
                         ?_EUSART2_SetTxInterruptHandler 0070  
                               ??_BMA253_GetAccelDataXYZ 007E  
                                   __end_of_RN487X_Reset 08FF  
                                _MCP9844_CalcTemperature 0D14  
                                   __end_of_RN487X_Write 090B  
                              ??_LIGHTBLUE_PerformAction 0073  
                                 __end_of_PMD_Initialize 08E9  
                           ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                         ?_LIGHTBLUE_SendProtocolVersion 0070  
                                ??_I2C1_MasterSendTxData 0070  
                                     __end_of_IOCAF6_ISR 0972  
                                     __end_of_IOCAF7_ISR 0981  
                                   __end_of_EUSART1_Read 0CEF  
                                    _LIGHTBLUE_SplitByte 0E28  
                                      RN487X_Reset@value 0070  
                                 ??_EUSART1_Transmit_ISR 0070  
                                    _LIGHTBLUE_SplitWord 099F  
                             __end_of_LIGHTBLUE_AccState 0A5D  
                              ?_LIGHTBLUE_GetButtonValue 0070  
                               ?_EUSART2_SetErrorHandler 0070  
                                  ?_EUSART2_Transmit_ISR 0070  
                            __end_of_EUSART1_Receive_ISR 07D2  
                                  __end_of_I2C1_DO_RESET 080D  
                 __end_of_IOCAF7_DefaultInterruptHandler 17D0  
                         _IOCAF7_DefaultInterruptHandler 17CC  
                                 ?_i2c_read2ByteRegister 0024  
                                 _do_I2C_DO_NACK_RESTART 0000  
                              __end_of_SYSTEM_Initialize 0BF2  
                               _LIGHTBLUE_SendSerialData 0253  
                                          _eusart1RxHead 005E  
                                          _eusart1TxHead 0061  
                                          _eusart2RxHead 0057  
                                      ??_SPI2_Initialize 0070  
                                          _eusart1RxTail 005D  
                                          _eusart2TxHead 005A  
                                             __pbssBANK0 0048  
                                             __pbssBANK1 00A0  
                                             __pbssBANK2 0120  
                                             __pbssBANK3 01A0  
                                             __pbssBANK4 0220  
                                             __pbssBANK5 02A0  
                                             __pbssBANK6 0320  
                                             __pbssBANK7 03A0  
                                             __pbssBANK8 0420  
                                             __pbssBANK9 04A0  
                                          _eusart1TxTail 0060  
                                          _eusart2RxTail 0056  
                        __end_of_I2C1_MasterWaitForEvent 0823  
                      _EUSART1_TxDefaultInterruptHandler 00CC  
                                          _eusart2TxTail 0059  
                        ??_EUSART1_SetRxInterruptHandler 0072  
       rdBlkRegCompleteHandler@i2c_simple_master$F3602@p 0079  
         wr1RegCompleteHandler@i2c_simple_master$F3572@p 0079  
         rd2RegCompleteHandler@i2c_simple_master$F3590@p 0079  
         rd1RegCompleteHandler@i2c_simple_master$F3582@p 0079  
         wr2RegCompleteHandler@i2c_simple_master$F3596@p 0079  
                             __end_of_LIGHTBLUE_LedState 0D5F  
                          __end_of_rd2RegCompleteHandler 0ADE  
                                     _DELAY_milliseconds 0A12  
                           __end_of_LIGHTBLUE_Initialize 0829  
                                   I2C1_Open@returnValue 0071  
                       ??_EUSART2_SetFramingErrorHandler 0072  
                        ?_EUSART2_SetFramingErrorHandler 0070  
                                   ?_LIGHTBLUE_SplitByte 0075  
                                   ?_LIGHTBLUE_SplitWord 0078  
                          __end_of_wr2RegCompleteHandler 0B0A  
                                  _rd1RegCompleteHandler 0AB2  
                                      _I2C1_DO_SEND_STOP 17F1  
                                  _wr1RegCompleteHandler 0ADE  
                        __end_of_EUSART1_SetErrorHandler 083B  
                                    ?_DELAY_milliseconds 0070  
                                             __pmaintext 018E  
                               rd1RegCompleteHandler@ptr 0079  
                         LIGHTBLUE_SendSerialData@length 0078  
                       __end_of_TMR0_SetInterruptHandler 0883  
                                     ?_I2C1_DO_SEND_STOP 0070  
                       rn487x_PrintMessage@passedMessage 0075  
                        rn487x_PrintMessage@messageIndex 0040  
                                             ??_TMR0_ISR 0070  
                                        _I2C1_MasterOpen 0949  
                                             __pintentry 0004  
                                        _I2C1_MasterStop 17AD  
                                        _I2C1_Initialize 08B8  
                           __end_of_LIGHTBLUE_SendPacket 037F  
                                    __end_of_I2C1_Poller 0949  
                          __end_of_LIGHTBLUE_AccelSensor 0F1A  
                              ??_BMA253_NewAccelDataRdyX 007E  
                              ??_BMA253_NewAccelDataRdyY 007E  
                              ??_BMA253_NewAccelDataRdyZ 007E  
                                        ?_PMD_Initialize 0070  
                                 ?_I2C1_DO_SEND_ADR_READ 0070  
                                                ?_strchr 0070  
                                    ??_I2C1_DO_SEND_STOP 0070  
                                                ?_strcpy 0070  
                                                ?_strlen 0070  
                 __end_of_EUSART1_SetFramingErrorHandler 0841  
                         _EUSART1_SetFramingErrorHandler 083B  
                                                ?_strstr 0076  
                                  _eusart2RxStatusBuffer 00A0  
                           ?_EUSART1_DefaultErrorHandler 0070  
                                      _I2C1_MasterIsNack 0817  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                                                _SP2BRGH 0A1C  
                                                _SP2BRGL 0A1B  
                                   ??_DELAY_milliseconds 0072  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                              _I2C1_Open 0FC5  
                            __end_of_EUSART2_Receive_ISR 0795  
                     __end_of_IOCAF6_SetInterruptHandler 0877  
                             _IOCAF6_SetInterruptHandler 0871  
                              ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                _OSCSTAT 0890  
                                                _OSCTUNE 0892  
                                      _I2C1_MasterSetIrq 17B6  
                                                _SSP1ADD 018D  
                                                _SSP2ADD 0197  
                                                _SLRCONA 1F3B  
                                                _SLRCONB 1F46  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP2BUF 0196  
                                                _SSP1MSK 018E  
                     __end_of_LIGHTBLUE_SetErrorLedValue 09BD  
                             _LIGHTBLUE_SetErrorLedValue 09AE  
                                     ?_I2C1_MasterIsNack 0070  
                             ?_I2C1_DO_SEND_RESTART_READ 0070  
                                 ?_RN487X_MessageHandler 007D  
                             _accelerometerInterruptBits 0066  
                         ??_I2C1_SetDataCompleteCallback 0079  
                                     ?_I2C1_MasterSetIrq 0070  
                                   _BMA253_GetAccelDataX 0D5F  
                                   _BMA253_GetAccelDataY 0D86  
                                   _BMA253_GetAccelDataZ 0DAD  
                                        _asyncBufferSize 006C  
                                  ??_LIGHTBLUE_SplitByte 0077  
                                     _i2c1_fsmStateTable 1048  
                                     _sendSpiReadRequest 0064  
                                     _i2c1_driver_i2cISR 00C0  
                                  ??_LIGHTBLUE_SplitWord 007B  
                                    ??_I2C1_MasterIsNack 0070  
                                                _i2c_ISR 0000  
                              __end_of_I2C1_DO_SEND_STOP 17F6  
                              ??_rdBlkRegCompleteHandler 007B  
                             ??_LIGHTBLUE_UpdateErrorLed 0070  
                                     I2C1_SetCallback@cb 0070  
                                ?_rn487x_PrintMessageEnd 0070  
                                    _rn487x_PrintMessage 0EB4  
                                    ??_I2C1_MasterSetIrq 0070  
                                      _RN487X_FilterData 0577  
                               __end_of_RN487X_DataReady 0C0E  
                           __end_of_LIGHTBLUE_PushButton 0A37  
                              ??_MCP9844_CalcTemperature 002F  
                                     ?_RN487X_FilterData 0070  
                                    _EUSART1_is_rx_ready 08AF  
                        __end_of_EUSART2_SetErrorHandler 0859  
                                          ?_I2C1_DO_IDLE 0070  
                                          ?_I2C1_DO_RCEN 0070  
              LIGHTBLUE_ParseIncomingPacket@receivedByte 0026  
                                    _EUSART1_is_tx_ready 0000  
                                      _RN487X_IndicateRx 08E9  
                            ??_LIGHTBLUE_GetDataLedValue 0070  
                                                __ptext1 0B62  
                                                __ptext2 0A4A  
                                                __ptext3 0800  
                                                __ptext4 0BD9  
                                                __ptext5 0A5D  
                                                __ptext6 087D  
                                                __ptext7 0B4C  
                                                __ptext8 08DF  
                                                __ptext9 03DD  
                               _I2C1_MasterEnableRestart 17AA  
                       MCP9844_CalcTemperature@lowerByte 0035  
                              __end_of_I2C1_MasterIsNack 081D  
                           ?_I2C1_SetAddressNackCallback 0075  
                                    ??_RN487X_FilterData 007E  
                                   ?_rn487x_PrintMessage 0075  
             __end_of_EUSART2_DefaultOverrunErrorHandler 17CC  
                   ??_EUSART2_DefaultOverrunErrorHandler 0070  
                    ?_EUSART2_DefaultOverrunErrorHandler 0070  
                     _EUSART2_DefaultOverrunErrorHandler 17C8  
                                  _OSCILLATOR_Initialize 08D5  
                                 ??_EUSART2_Transmit_ISR 0070  
                                     ?_RN487X_IndicateRx 0070  
                              __end_of_I2C1_MasterSetIrq 17B9  
                               __end_of_I2C1_DO_TX_EMPTY 0E83  
                                     _EUSART1_Initialize 071B  
                               ??_PIN_MANAGER_Initialize 0072  
                                              _IOCAFbits 1F3F  
                               wr1RegCompleteHandler@ptr 0079  
                                  _rn487x_driver_version 1806  
                                             ?_I2C1_Open 0070  
                                              _IOCANbits 1F3E  
                                              _IOCAPbits 1F3D  
                          ??_EUSART1_DefaultErrorHandler 0070  
                               ?_I2C1_CallbackReturnStop 0079  
                                     _RN487X_is_rx_ready 08CB  
                 MCP9844_GetTemperatureValue@temperature 0038  
                               _do_I2C_SEND_RESTART_READ 0000  
                                i2c_read1ByteRegister@d2 0028  
                                                clrloop0 0884  
                                    ??_RN487X_IndicateRx 0071  
                                  ?_BMA253_GetAccelDataX 002A  
                                  ?_BMA253_GetAccelDataY 002A  
                                  ?_BMA253_GetAccelDataZ 002A  
                                                _strncmp 0489  
                      rn487x_PrintMessage@printCharacter 0020  
                      __end_of_I2C1_DO_SEND_RESTART_READ 17E7  
                                   end_of_initialization 00BF  
                             __end_of_I2C1_MasterSendAck 17D8  
                                   ?_EUSART1_is_rx_ready 0070  
                    __end_of_LIGHTBLUE_TemperatureSensor 0BA8  
                            _LIGHTBLUE_TemperatureSensor 0B90  
                                    _I2C1_MasterClearIrq 179E  
                                    ?_EUSART1_Initialize 0070  
                         __end_of_rn487x_PrintMessageEnd 0577  
                                                init_ram 0889  
                             __end_of_I2C1_MasterStartRx 17B3  
                            _EUSART1_OverrunErrorHandler 015C  
                                 ?_rd1RegCompleteHandler 0079  
                                                initloop 088A  
                                 _I2C1_DO_SEND_ADR_WRITE 0896  
                       MCP9844_CalcTemperature@upperByte 0034  
                          __end_of_LIGHTBLUE_GetAccState 0803  
                                    ?_RN487X_is_rx_ready 0070  
                       ??_service_acceleremoterInterrupt 007E  
                        ?_service_acceleremoterInterrupt 0070  
                              __end_of_RN487X_FilterData 05C1  
                           __end_of_I2C1_DO_SEND_RESTART 17F1  
                                __end_of_I2C1_MasterOpen 0956  
                                 ?_wr1RegCompleteHandler 0079  
                                __end_of_I2C1_MasterStop 17B0  
                                __end_of_I2C1_Initialize 08C1  
                  __end_of_EUSART1_SetRxInterruptHandler 084D  
                          _EUSART1_SetRxInterruptHandler 0847  
                                            _I2C1_Poller 093C  
                              ?_I2C1_CallbackReturnReset 0079  
                                     _EUSART2_Initialize 06DE  
                          __end_of_I2C1_MasterDisableIrq 17A7  
                                            _I2C1_Status 01A0  
                            LIGHTBLUE_PerformAction@data 0072  
                                  LIGHTBLUE_AccState@acc 007D  
                        __end_of_protocol_version_number 1806  
                             __end_of_RN487X_IsConnected 17BC  
                              _do_I2C_SEND_RESTART_WRITE 0000  
                                    _I2C1_MasterSendNack 17D0  
                    __end_of_I2C1_SetAddressNackCallback 0963  
                            _I2C1_SetAddressNackCallback 0956  
                              __end_of_RN487X_IndicateRx 08F4  
                                   ?_I2C1_MasterClearIrq 0070  
                                         ??_I2C1_DO_IDLE 0070  
                                   ??_EUSART1_Initialize 0072  
                                                strchr@c 0071  
                                                strchr@s 0070  
                                         ??_I2C1_DO_RCEN 0070  
                             LIGHTBLUE_SplitByte@payload 0075  
                     __end_of_I2C1_DO_SEND_RESTART_WRITE 17EC  
                             _I2C1_DO_SEND_RESTART_WRITE 17E7  
                                    ?_EUSART2_Initialize 0070  
                                                strcpy@d 0072  
                                                strlen@a 0073  
                                                strlen@s 0070  
                                             _returnStop 0000  
                                                strstr@h 0076  
                               _TMR0_SetInterruptHandler 087D  
                                                strstr@n 0077  
                                              _PORTAbits 000C  
                                   ??_RN487X_is_rx_ready 0070  
                        __end_of_rdBlkRegCompleteHandler 0C4A  
                                  ??_rn487x_PrintMessage 0076  
                                   _LIGHTBLUE_Initialize 0823  
                                _statusBuffer@main$F1076 03A0  
                                _statusBuffer@main$F2766 04A0  
                                ??_i2c_read1ByteRegister 007E  
                                _IOCAF6_InterruptHandler 00CA  
                          ??_I2C1_SetAddressNackCallback 0079  
                                 RN487X_Delay@delayCount 0072  
                                              _TRISAbits 0012  
                                              _TRISCbits 0014  
                        I2C1_SetDataCompleteCallback@ptr 0077  
                         I2C1_CallbackReturnReset@funPtr 0079  
                           ??_IOCAF7_SetInterruptHandler 0072  
                                   ?_I2C1_MasterSendNack 0070  
                                    EUSART1_Write@txData 0070  
                                  ??_EUSART1_is_rx_ready 0070  
                                           _RN487X_Delay 089E  
                                   ??_EUSART2_Initialize 0072  
                                 _BMA253_GetAccelDataXYZ 0652  
                                   _LIGHTBLUE_SendPacket 02F7  
                                           _RN487X_Reset 08F4  
                              _LIGHTBLUE_GetDataLedValue 0829  
                                           _RN487X_Write 08FF  
                             rdBlkRegCompleteHandler@ptr 0079  
                                         __end_of_RN487X 107A  
                                           _EUSART1_Read 0CCB  
                       __end_of_LIGHTBLUE_GetButtonValue 0835  
                          __end_of_EUSART2_RxDataHandler 0A9C  
                                            _do_I2C_IDLE 0000  
                                            _do_I2C_RCEN 0000  
                                  ??_I2C1_MasterClearIrq 0070  
                               _rn487x_PrintMessageStart 07D2  
                                         _I2C1_DO_RX_ACK 17F6  
                                 ?_OSCILLATOR_Initialize 0070  
                                  ?_LIGHTBLUE_Initialize 0070  
                                          ??_RN487X_Init 0074  
                                          ??_RN487X_Read 007E  
                             ??_LIGHTBLUE_SendSerialData 0077  
                                        _SPI2_Initialize 0B4C  
                        RN487X_FilterData@asyncBuffering 0068  
                        __end_of_I2C1_CallbackReturnStop 179E  
                          __end_of_I2C1_MasterSendTxData 17DD  
                                         __end_of_strchr 0BC0  
                                ??_i2c_read2ByteRegister 0026  
                                         __end_of_strcpy 0A4A  
                                         __end_of_strlen 0BD9  
                                     _spi2_configuration 1800  
                                         __end_of_strstr 060A  
                                    start_initialization 0063  
                           LIGHTBLUE_AccelSensor@payload 0033  
                                            ??_I2C1_Open 0070  
                                    _i2c_busCollisionISR 0000  
                 LIGHTBLUE_SendProtocolVersion@dataIndex 0034  
                                 ??_BMA253_GetAccelDataX 002B  
                                 ??_BMA253_GetAccelDataY 002B  
                                 ??_BMA253_GetAccelDataZ 002B  
                                  ??_I2C1_MasterSendNack 0070  
          EUSART2_SetRxInterruptHandler@interruptHandler 0070  
          EUSART2_SetTxInterruptHandler@interruptHandler 0070  
          EUSART1_SetRxInterruptHandler@interruptHandler 0070  
          EUSART1_SetTxInterruptHandler@interruptHandler 0070  
                                   _LIGHTBLUE_PushButton 0A24  
                               LIGHTBLUE_SplitByte@value 0076  
                                  __end_of_EUSART1_Write 0D14  
                                  ?_LIGHTBLUE_SendPacket 0076  
                        ??_LIGHTBLUE_SendProtocolVersion 007A  
                                     _LIGHTBLUE_AccState 0A4A  
                               I2C1_SetBuffer@bufferSize 0072  
                                       ?_I2C1_MasterOpen 0070  
                 __end_of_EUSART2_SetOverrunErrorHandler 0865  
                         _EUSART2_SetOverrunErrorHandler 085F  
                                       ?_I2C1_MasterStop 0070  
                                       ?_I2C1_Initialize 0070  
                                    ?_LIGHTBLUE_AccState 0070  
                 MCP9844_CalcTemperature@temperatureData 0036  
                                       ??_PMD_Initialize 0070  
                           i2c_read1ByteRegister@address 0024  
                                 __end_of_I2C1_DO_RX_ACK 17FB  
                                  _EUSART1_RxDataHandler 0A71  
                                ??_I2C1_DO_SEND_ADR_READ 0070  
                         ?_EUSART1_SetRxInterruptHandler 0070  
                                     _LIGHTBLUE_LedState 0D39  
                                            __pdataBANK3 01C4  
                                               ??_strchr 0073  
                                               ??_strcpy 0072  
                                               ??_strlen 0072  
                                       I2C1_Open@address 0070  
                                         _eusart1RxCount 005C  
                                               ??_strstr 0079  
                                         _eusart2RxCount 0055  
                                    ?_LIGHTBLUE_LedState 0070  
                                ??_RN487X_MessageHandler 007E  
                                   _I2C1_DO_SEND_RESTART 17EC  
                      _EUSART1_RxDefaultInterruptHandler 0160  
                                              ___latbits 0003  
                                   ??_LIGHTBLUE_AccState 007A  
                                          __pcstackBANK0 0020  
                         ?_LIGHTBLUE_ParseIncomingPacket 0070  
                            ?_IOCAF6_SetInterruptHandler 0070  
                                              _do_I2C_RX 0000  
                                              _do_I2C_TX 0000  
                                  ?_LIGHTBLUE_PushButton 0070  
                                    __end_of_RN487X_Init 03DD  
                                    __end_of_RN487X_Read 092F  
                            ?_LIGHTBLUE_SetErrorLedValue 0070  
                            ??_I2C1_DO_SEND_RESTART_READ 0070  
                        ??_EUSART1_SetTxInterruptHandler 0072  
                                   __end_of_I2C1_DO_IDLE 17E2  
                       ??_EUSART1_SetFramingErrorHandler 0072  
                        ?_EUSART1_SetFramingErrorHandler 0070  
                        ??_EUSART2_SetRxInterruptHandler 0072  
                                   __end_of_I2C1_DO_RCEN 0896  
                    __end_of_MCP9844_GetTemperatureValue 0917  
                            _MCP9844_GetTemperatureValue 090B  
                          I2C1_SetAddressNackCallback@cb 0075  
                                              _dataReady 0069  
                                        _do_I2C_TX_EMPTY 0000  
                                  _TMR0_InterruptHandler 00C6  
                                   ??_LIGHTBLUE_LedState 007A  
                                              __pnvBANK1 00C6  
                                              __pnvBANK2 0154  
                                  _rd2RegCompleteHandler 0AC8  
                                _IOCAF7_InterruptHandler 00C8  
                                  __end_of_fsmStateTable 1048  
                                              _main$4879 0047  
                                 _PIN_MANAGER_Initialize 03DD  
                                  _wr2RegCompleteHandler 0AF4  
                       ??_IOCAF6_DefaultInterruptHandler 0070  
                        ?_IOCAF6_DefaultInterruptHandler 0070  
                             ??_I2C1_MasterEnableRestart 0070  
                               rd2RegCompleteHandler@ptr 0079  
                               ?_LIGHTBLUE_PerformAction 0072  
                                         _I2C1_MasterFsm 0DD4  
                                      ?_RN487X_DataReady 0070  
                                __end_of_SPI2_Initialize 0B62  
                                        ?_I2C1_DO_RX_ACK 0070  
                                              __ptext100 0896  
                                              __ptext101 08A6  
                                              __ptext110 17B0  
                                              __ptext102 17DD  
                                              __ptext111 0C4A  
                                              __ptext103 0E54  
                                              __ptext120 0AC8  
                                              __ptext112 0B36  
                                              __ptext104 17B6  
                                              __ptext121 0AB2  
                                              __ptext113 0B20  
                                              __ptext105 0817  
                                              __ptext130 17A4  
                                              __ptext122 0A9C  
                                              __ptext114 0B0A  
                                              __ptext106 17D8  
                                              __ptext131 17A1  
                                              __ptext123 092F  
                                              __ptext115 0002  
                                              __ptext107 17D4  
                                              __ptext140 179A  
                                              __ptext132 179E  
                                              __ptext124 0F1A  
                                              __ptext116 179C  
                                              __ptext108 17B3  
                                              __ptext141 0C68  
                                              __ptext125 0990  
                                              __ptext117 0C2C  
                                              __ptext109 17D0  
                                              __ptext150 1798  
                                              __ptext142 0758  
                                              __ptext134 0981  
                                              __ptext126 17AD  
                                              __ptext118 0AF4  
                                              __ptext151 17BC  
                                              __ptext143 17C8  
                                              __ptext135 179B  
                                              __ptext127 17AA  
                                              __ptext119 0ADE  
                                              __ptext152 0A71  
                                              __ptext144 1799  
                                              __ptext136 09BD  
                                              __ptext128 17A7  
                                              __ptext145 17C4  
                                              __ptext137 0972  
                                              __ptext129 0B78  
                                              __ptext146 0A86  
                                              __ptext138 17CC  
                                              __ptext147 0C0E  
                                              __ptext139 0963  
                                              __ptext148 0795  
                                              __ptext149 17C0  
                           ??_LIGHTBLUE_GetErrorLedValue 0070  
                            _i2c1_driver_busCollisionISR 0048  
                               _LIGHTBLUE_GetButtonValue 082F  
                      _EUSART2_TxDefaultInterruptHandler 00D0  
                                     ??_RN487X_DataReady 007E  
                     LIGHTBLUE_SendProtocolVersion@value 0033  
                                 ??_LIGHTBLUE_Initialize 0070  
                                _I2C1_MasterWaitForEvent 081D  
                                       _I2C1_MasterClose 17A1  
                                         _I2C1_SetBuffer 0990  
                           ??_INTERRUPT_InterruptManager 0070  
                                         _sequenceNumber 0052  
                            i2c_read2ByteRegister@result 002B  
                                       _I2C1_MasterStart 17A7  
                                              _connected 0067  
                                       _I2C1_MasterWrite 080D  
                                  _LIGHTBLUE_AccelSensor 0EE6  
                                               _BAUD1CON 011F  
                                               _BAUD2CON 0A1F  
             __end_of_EUSART1_DefaultOverrunErrorHandler 17C4  
                   ??_EUSART1_DefaultOverrunErrorHandler 0070  
                    ?_EUSART1_DefaultOverrunErrorHandler 0070  
                     _EUSART1_DefaultOverrunErrorHandler 17C0  
                                  ?_I2C1_DO_SEND_RESTART 0070  
                                   _EUSART1_ErrorHandler 015A  
                           ?_EUSART2_DefaultErrorHandler 0070  
                                      ?_I2C1_DO_TX_EMPTY 0070  
                     __end_of_IOCAF7_SetInterruptHandler 087D  
                             _IOCAF7_SetInterruptHandler 0877  
                                _EUSART1_SetErrorHandler 0835  
                            __end_of_LIGHTBLUE_SplitByte 0E54  
                       __end_of_I2C1_CallbackReturnReset 0004  
                            __end_of_LIGHTBLUE_SplitWord 09AE  
                               LIGHTBLUE_SplitWord@value 0079  
                                     ??_I2C1_DO_TX_EMPTY 007B  
                                 ??_LIGHTBLUE_SendPacket 0077  
                                     _EUSART1_is_tx_done 0000  
                                ??_rd1RegCompleteHandler 007B  
                                               ?_strncmp 0070  
                                ?_I2C1_DO_SEND_ADR_WRITE 0070  
                              I2C1_MasterSendTxData@data 0070  
                                ??_wr1RegCompleteHandler 007B  
                   LIGHTBLUE_SendProtocolVersion@payload 0020  
                                      ??_TMR0_Initialize 0072  
                                       _I2C1_SetCallback 0F1A  
                                      _RN487X_is_tx_done 0000  
                                 i2c_read1ByteRegister@e 0025  
                                               _LATAbits 0018  
                EUSART2_SetErrorHandler@interruptHandler 0070  
                EUSART1_SetErrorHandler@interruptHandler 0070  
                                 i2c_read1ByteRegister@x 0026  
                                               _LATCbits 001A  
                                             _I2C1_DO_RX 0698  
                                             _I2C1_DO_TX 0434  
                                              clear_ram0 0883  
                                               _PIE0bits 0716  
                                               _PIE3bits 0719  
               LIGHTBLUE_ParseIncomingPacket@parserState 0051  
                                             _I2C1_Close 0B78  
                  __end_of_LIGHTBLUE_SendProtocolVersion 0EB4  
                          _LIGHTBLUE_SendProtocolVersion 0E83  
                                           ?_I2C1_Poller 0070  
                                 __end_of_I2C1_MasterFsm 0DFD  
                           __end_of_I2C1_MasterGetRxData 17B6  
                             ??_TMR0_SetInterruptHandler 0072  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                 ?_EUSART1_RxDataHandler 0070  
                                     _I2C1_MasterSendAck 17D4  
                               ?_BMA253_NewAccelDataRdyX 0070  
                         DELAY_milliseconds@milliseconds 0070  
                               ?_BMA253_NewAccelDataRdyY 0070  
                               ?_BMA253_NewAccelDataRdyZ 0070  
                __end_of_rn487x_PrintIndicatorCharacters 0CCB  
                      ??_rn487x_PrintIndicatorCharacters 0071  
                       ?_rn487x_PrintIndicatorCharacters 0070  
                        _rn487x_PrintIndicatorCharacters 0CA8  
                              _I2C1_DO_SEND_RESTART_READ 17E2  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                               _SSP2CON1 019A  
                                               _SSP2CON2 019B  
                                               _TMR0_ISR 0981  
                                 __end_of_I2C1_SetBuffer 099F  
                                               _SSP1STAT 018F  
                                               _SSP2STAT 0199  
                                      ??_PIN_MANAGER_IOC 0070  
                   __end_of_I2C1_SetDataCompleteCallback 093C  
                           _I2C1_SetDataCompleteCallback 092F  
                                     _I2C1_MasterStartRx 17B0  
                            ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                 __end_of_service_acceleremoterInterrupt 0B78  
                         _service_acceleremoterInterrupt 0B62  
                                    ?_I2C1_MasterSendAck 0070  
                         LIGHTBLUE_AccelSensor@accelData 0040  
                              ?_LIGHTBLUE_UpdateErrorLed 0070  
                               ?_I2C1_DO_RX_NACK_RESTART 0070  
             rn487x_PrintIndicatorCharacters@messageType 0071  
                                            _RN487X_Init 037F  
                                            _RN487X_Read 0923  
                           __end_of_RN487X_SetSystemMode 0923  
                                    ?_I2C1_MasterStartRx 0070  
                           __end_of_I2C1_DO_ADDRESS_NACK 0E28  
                                 ??_LIGHTBLUE_PushButton 007A  
                                     _RN487X_IsConnected 17B9  
                               wr2RegCompleteHandler@ptr 0079  
                          __end_of_i2c_read1ByteRegister 0529  
                                ?_BMA253_GetAccelDataXYZ 002F  
                         __end_of_I2C1_DO_SEND_ADR_WRITE 089E  
                          ??_EUSART2_DefaultErrorHandler 0070  
                                          _I2C1_DO_RESET 0808  
                                            _asyncBuffer 006D  
                                  I2C1_Close@returnValue 0070  
                               ?_rdBlkRegCompleteHandler 0079  
                                    I2C1_SetCallback@idx 0074  
                                    I2C1_SetCallback@ptr 0072  
                                    ?_RN487X_IsConnected 0070  
                              LIGHTBLUE_LedState@payload 007A  
                                _EUSART2_SetErrorHandler 0853  
                                   ??_I2C1_MasterSendAck 0070  
                  LIGHTBLUE_ParseIncomingPacket@packetID 004F  
                                  EUSART1_Read@readValue 0070  
                                 ?_rd2RegCompleteHandler 0079  
                            _EUSART2_OverrunErrorHandler 0156  
                                    _do_I2C_DO_NACK_STOP 0000  
                           __end_of_I2C1_MasterOperation 0CA8  
                             ??_rn487x_PrintMessageStart 0071  
                        __end_of_LIGHTBLUE_PerformAction 0F8B  
                               ?_MCP9844_CalcTemperature 002D  
                                 ?_wr2RegCompleteHandler 0079  
                                   ??_I2C1_MasterStartRx 0070  
                     LIGHTBLUE_SendSerialData@serialData 0076  
                  __end_of_EUSART1_SetTxInterruptHandler 0853  
                          _EUSART1_SetTxInterruptHandler 084D  
                                  _LIGHTBLUE_GetAccState 0800  
                                        ?_I2C1_MasterFsm 0070  
                  __end_of_EUSART2_SetRxInterruptHandler 086B  
                          _EUSART2_SetRxInterruptHandler 0865  
                    LIGHTBLUE_ParseIncomingPacket@length 0050  
                              ??_I2C1_MasterWaitForEvent 0070  
                            __end_of_rn487x_PrintMessage 0EE6  
                                  _I2C1_MasterDisableIrq 17A4  
                                       ?_SPI2_Initialize 0070  
                                ??_OSCILLATOR_Initialize 0070  
                                        ?_I2C1_SetBuffer 0070  
                                   ??_RN487X_IsConnected 0070  
                                 ?_LIGHTBLUE_AccelSensor 0070  
                                 ??_I2C1_DO_SEND_RESTART 0070  
                              ??_EUSART1_SetErrorHandler 0072  
                    __end_of_EUSART1_DefaultErrorHandler 17C0  
                            _EUSART1_DefaultErrorHandler 17BC  
                            __end_of_EUSART1_is_rx_ready 08B8  
                                             _T0CON0bits 059E  
                         __end_of_BMA253_GetAccelDataXYZ 0698  
                                   _EUSART2_ErrorHandler 0154  
                                         ?_I2C1_DO_RESET 0070  
                     LIGHTBLUE_TemperatureSensor@payload 0039  
                          __end_of_i2c_read2ByteRegister 0652  
                                               __ptext10 0877  
                                               __ptext11 0871  
                                               __ptext20 071B  
                                               __ptext12 08D5  
                                               __ptext21 084D  
                                               __ptext13 08B8  
                                               __ptext30 05C1  
                                               __ptext22 0847  
                                               __ptext14 06DE  
                                               __ptext31 0489  
                                               __ptext23 0841  
                                               __ptext15 086B  
                                               __ptext40 08CB  
                                               __ptext32 0BA8  
                                               __ptext24 083B  
                                               __ptext16 0865  
                                               __ptext41 08AF  
                                               __ptext33 07D2  
                                               __ptext25 0835  
                                               __ptext17 085F  
                                               __ptext50 090B  
                                               __ptext42 0917  
                                               __ptext34 0529  
                                               __ptext26 0923  
                                               __ptext18 0859  
                                               __ptext51 0D14  
                                               __ptext43 08F4  
                                               __ptext35 0EB4  
                                               __ptext27 0BF2  
                                               __ptext19 0853  
                                               __ptext60 07FF  
                                               __ptext52 060A  
                                               __ptext44 08C1  
                                               __ptext36 0A37  
                                               __ptext28 0577  
                                               __ptext61 0D39  
                                               __ptext53 0253  
                                               __ptext45 0CCB  
                                               __ptext37 0CA8  
                                               __ptext29 0F8B  
                                               __ptext70 08FF  
                                               __ptext62 0812  
                                               __ptext54 0E83  
                                               __ptext46 08E9  
                                               __ptext38 17B9  
                                               __ptext71 0CEF  
                                               __ptext63 0829  
                                               __ptext55 0A24  
                                               __ptext47 089E  
                                               __ptext39 037F  
                                               __ptext80 0956  
                                               __ptext72 0652  
                                               __ptext64 0823  
                                               __ptext56 082F  
                                               __ptext48 0A12  
                                               __ptext81 0FC5  
                                               __ptext73 0DAD  
                                               __ptext65 0EE6  
                                               __ptext57 00C3  
                                               __ptext49 0B90  
                                               __ptext90 0803  
                                               __ptext82 0949  
                                               __ptext74 09F0  
                                               __ptext66 099F  
                                               __ptext58 0F52  
                                               __ptext91 17FB  
                                               __ptext83 080D  
                                               __ptext75 0D86  
                                               __ptext67 0E28  
                                               __ptext59 09AE  
                                               __ptext92 17F6  
                                               __ptext84 0C87  
                                               __ptext76 09DF  
                                               __ptext68 02F7  
                                               __ptext93 17F1  
                                               __ptext85 093C  
                                               __ptext77 0D5F  
                                               __ptext69 0BC0  
                                               __ptext94 17EC  
                                               __ptext86 081D  
                                               __ptext78 09CE  
                                               __ptext95 17E7  
                                               __ptext87 0DD4  
                                               __ptext79 04D9  
                                               __ptext96 17E2  
                                               __ptext88 0DFD  
                                               __ptext97 088F  
                                               __ptext89 0808  
                                               __ptext98 0698  
                                               __ptext99 0434  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                                           _SSP2CON1bits 019A  
                                             _IOCAF6_ISR 0963  
                                             _IOCAF7_ISR 0972  
                                             strcpy@dest 0070  
                               _I2C1_CallbackReturnReset 0002  
                                            ?_I2C1_DO_RX 0070  
                                            ?_I2C1_DO_TX 0070  
             __end_of_EUSART2_DefaultFramingErrorHandler 179A  
                   ??_EUSART2_DefaultFramingErrorHandler 0070  
                    ?_EUSART2_DefaultFramingErrorHandler 0070  
                     _EUSART2_DefaultFramingErrorHandler 1799  
                        __end_of_BMA253_NewAccelDataRdyX 09DF  
                        __end_of_BMA253_NewAccelDataRdyY 09F0  
                        __end_of_BMA253_NewAccelDataRdyZ 0A01  
                                        _lightBlueSerial 0420  
                   __end_of_TMR0_DefaultInterruptHandler 179C  
                           _TMR0_DefaultInterruptHandler 179B  
                            __end_of_I2C1_MasterClearIrq 17A1  
                           __end_of_I2C1_DO_RX_NACK_STOP 1800  
                                            ?_I2C1_Close 0070  
                                             _RC1STAbits 011D  
                                             _RC2STAbits 0A1D  
         EUSART2_SetOverrunErrorHandler@interruptHandler 0070  
         EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                     __end_of_LIGHTBLUE_GetErrorLedValue 0817  
                             _LIGHTBLUE_GetErrorLedValue 0812  
                                               int$flags 007E  
                        __end_of_I2C1_DO_RX_NACK_RESTART 0808  
                               I2C1_MasterOperation@read 0022  
                     __end_of_INTERRUPT_InterruptManager 0061  
                             _INTERRUPT_InterruptManager 0004  
                                  _EUSART2_RxDataHandler 0A86  
                                           _SSP1STATbits 018F  
                               i2c_read1ByteRegister@reg 007D  
                          __end_of_I2C1_DO_SEND_ADR_READ 08AF  
                            _EUSART1_FramingErrorHandler 015E  
                                           _I2C1_DO_IDLE 17DD  
                                    _EUSART1_Receive_ISR 0795  
                                           _I2C1_DO_RCEN 088F  
__end_of_rdBlkRegCompleteHandler@i2c_simple_master$F3602 0C68  
      ??_rdBlkRegCompleteHandler@i2c_simple_master$F3602 007B  
       ?_rdBlkRegCompleteHandler@i2c_simple_master$F3602 0079  
        _rdBlkRegCompleteHandler@i2c_simple_master$F3602 0C4A  
  __end_of_wr1RegCompleteHandler@i2c_simple_master$F3572 0B20  
        ??_wr1RegCompleteHandler@i2c_simple_master$F3572 007B  
         ?_wr1RegCompleteHandler@i2c_simple_master$F3572 0079  
          _wr1RegCompleteHandler@i2c_simple_master$F3572 0B0A  
  __end_of_rd1RegCompleteHandler@i2c_simple_master$F3582 0B36  
  __end_of_rd2RegCompleteHandler@i2c_simple_master$F3590 0B4C  
        ??_rd2RegCompleteHandler@i2c_simple_master$F3590 007B  
        ??_rd1RegCompleteHandler@i2c_simple_master$F3582 007B  
         ?_rd2RegCompleteHandler@i2c_simple_master$F3590 0079  
         ?_rd1RegCompleteHandler@i2c_simple_master$F3582 0079  
          _rd2RegCompleteHandler@i2c_simple_master$F3590 0B36  
          _rd1RegCompleteHandler@i2c_simple_master$F3582 0B20  
                                  LIGHTBLUE_LedState@led 007D  
  __end_of_wr2RegCompleteHandler@i2c_simple_master$F3596 0AB2  
        ??_wr2RegCompleteHandler@i2c_simple_master$F3596 007B  
         ?_wr2RegCompleteHandler@i2c_simple_master$F3596 0079  
          _wr2RegCompleteHandler@i2c_simple_master$F3596 0A9C  
                            __end_of_I2C1_MasterSendNack 17D4  
                       ??_EUSART2_SetOverrunErrorHandler 0072  
                        ?_EUSART2_SetOverrunErrorHandler 0070  
                                             _INTCONbits 000B  
                         I2C1_SetAddressNackCallback@ptr 0077  
                               ??_rn487x_PrintMessageEnd 0071  
                                         __pstringtext10 1091  
                                         __pstringtext11 0000  
                                   _I2C1_MasterGetRxData 17B3  
                                  _I2C1_MasterSendTxData 17D8  
                          __end_of_RN487X_MessageHandler 0FC5  
                              ??_EUSART2_SetErrorHandler 0072  
                                 _do_I2C_DO_ADDRESS_NACK 0000  
                        __end_of_MCP9844_CalcTemperature 0D39  
                                               intlevel1 0000  
                           RN487X_MessageHandler@message 007D  
                                     RN487X_Write@txData 0075  
                               __end_of_I2C1_MasterClose 17A4  
                                   ?_EUSART1_Receive_ISR 0070  
                                ?_PIN_MANAGER_Initialize 0070  
                               __end_of_I2C1_MasterStart 17AA  
                              ?_LIGHTBLUE_SendSerialData 0076  
                               __end_of_I2C1_MasterWrite 0812  
                 __end_of_EUSART1_SetOverrunErrorHandler 0847  
                         _EUSART1_SetOverrunErrorHandler 0841  
                                 ?_LIGHTBLUE_GetAccState 0070  
                                              strcpy@src 0071  
                                       ??_I2C1_DO_RX_ACK 0070  
                             ??_LIGHTBLUE_GetButtonValue 0070  
                                _I2C1_CallbackReturnStop 179C  
                           __end_of_EUSART1_Transmit_ISR 0C2C  
                        ??_LIGHTBLUE_ParseIncomingPacket 0076  
                     _LIGHTBLUE_ParseIncomingPacket$3100 0022  
                     _LIGHTBLUE_ParseIncomingPacket$3101 0024  
                     _LIGHTBLUE_ParseIncomingPacket$3099 0020  
                                            _serialIndex 0063  
                                   _RN487X_SetSystemMode 0917  
                          ?_TMR0_DefaultInterruptHandler 0070  
                                   _I2C1_DO_ADDRESS_NACK 0DFD  
                                 ?_I2C1_MasterDisableIrq 0070  
                           i2c_read2ByteRegister@address 002A  
         EUSART2_SetFramingErrorHandler@interruptHandler 0070  
         EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                         ?_EUSART1_SetTxInterruptHandler 0070  
                               RN487X_SetSystemMode@mode 0070  
                         ?_EUSART2_SetRxInterruptHandler 0070  
                      LIGHTBLUE_ParseIncomingPacket@data 004A  
                                     _eusart1RxLastError 005B  
                                          __pstringtext1 1000  
                                          __pstringtext2 1028  
                                          __pstringtext3 1048  
                                          __pstringtext4 1068  
                                          __pstringtext5 1800  
                                          __pstringtext6 1804  
                                          __pstringtext7 1806  
                                          __pstringtext8 107A  
                                          __pstringtext9 1086  
                                    _EUSART2_Receive_ISR 0758  
                        LIGHTBLUE_SetErrorLedValue@value 0071  
                               __end_of_I2C1_SetCallback 0F52  
                                             _SSP1DATPPS 1EC6  
                                             _SSP2DATPPS 1EC9  
                                             _SSP1CLKPPS 1EC5  
                                        ??_I2C1_DO_RESET 0070  
                                             _SSP2CLKPPS 1EC8  
                 __end_of_IOCAF6_DefaultInterruptHandler 179B  
                         _IOCAF6_DefaultInterruptHandler 179A  
                                   _I2C1_MasterOperation 0C87  
                                        _TMR0_Initialize 0A5D  
                                               strncmp@l 0070  
                                               strncmp@n 0073  
                                               strncmp@r 0071  
                                  ?_I2C1_MasterGetRxData 0070  
                               i2c_read2ByteRegister@reg 0024  
                                            _returnReset 0000  
                            ?_IOCAF7_SetInterruptHandler 0070  
                                               strstr@nl 007B  
                                             _TX1STAbits 011E  
                                             _TX2STAbits 0A1E  
                                            ?_IOCAF6_ISR 0070  
                                            ?_IOCAF7_ISR 0070  
                                  ??_EUSART1_Receive_ISR 0070  
                         __end_of_PIN_MANAGER_Initialize 0434  
                           ?_LIGHTBLUE_TemperatureSensor 0070  
                        ??_EUSART2_SetTxInterruptHandler 0072  
                          __end_of_rd1RegCompleteHandler 0AC8  
                                   ?_EUSART2_Receive_ISR 0070  
                                     _eusart2RxLastError 0054  
                       __end_of_rn487x_PrintMessageStart 07FF  
                                        _PIN_MANAGER_IOC 09BD  
                          __end_of_wr1RegCompleteHandler 0AF4  
                                  _do_I2C_SEND_ADR_WRITE 0000  
                                ??_EUSART1_RxDataHandler 0070  
                                   _do_I2C_SEND_ADR_READ 0000  
                       __end_of_LIGHTBLUE_UpdateErrorLed 0800  
                                  ?_RN487X_SetSystemMode 0070  
                      _EUSART2_RxDefaultInterruptHandler 00CE  
                                  ?_I2C1_DO_ADDRESS_NACK 0070  
                             LIGHTBLUE_SplitWord@payload 0078  
                                 RN487X_IndicateRx@value 0070  
