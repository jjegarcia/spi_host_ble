

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Feb 15 18:33:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    33                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,noexec
    34                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,noexec
    35                           	psect	inittext,global,class=CODE,space=0,delta=2
    36                           	psect	clrtext,global,class=CODE,space=0,delta=2
    37                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    40                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    70                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    71                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    72                           	psect	text33,local,class=CODE,space=0,merge=1,inline,delta=2
    73                           	psect	text34,local,class=CODE,space=0,merge=1,inline,delta=2
    74                           	psect	text35,local,class=CODE,space=0,merge=1,inline,delta=2
    75                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2,group=2
    76                           	psect	text37,local,class=CODE,space=0,merge=1,inline,delta=2
    77                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,space=0,merge=1,inline,delta=2
    80                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text62,local,class=CODE,space=0,merge=1,inline,delta=2
   102                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text65,local,class=CODE,space=0,merge=1,inline,delta=2
   105                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text67,local,class=CODE,space=0,merge=1,inline,delta=2
   107                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2,group=2
   117                           	psect	text78,local,class=CODE,space=0,merge=1,inline,delta=2
   118                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text90,local,class=CODE,space=0,merge=1,inline,delta=2
   130                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   133                           	psect	text94,local,class=CODE,space=0,merge=1,inline,delta=2
   134                           	psect	text95,local,class=CODE,space=0,merge=1,inline,delta=2
   135                           	psect	text96,local,class=CODE,space=0,merge=1,delta=2
   136                           	psect	text97,local,class=CODE,space=0,merge=1,delta=2
   137                           	psect	text98,local,class=CODE,space=0,merge=1,delta=2
   138                           	psect	text99,local,class=CODE,space=0,merge=1,delta=2
   139                           	psect	text100,local,class=CODE,space=0,merge=1,delta=2
   140                           	psect	text101,local,class=CODE,space=0,merge=1,delta=2
   141                           	psect	text102,local,class=CODE,space=0,merge=1,delta=2
   142                           	psect	text103,local,class=CODE,space=0,merge=1,delta=2
   143                           	psect	text104,local,class=CODE,space=0,merge=1,delta=2
   144                           	psect	text105,local,class=CODE,space=0,merge=1,delta=2
   145                           	psect	text106,local,class=CODE,space=0,merge=1,delta=2
   146                           	psect	text107,local,class=CODE,space=0,merge=1,delta=2
   147                           	psect	text108,local,class=CODE,space=0,merge=1,delta=2
   148                           	psect	text109,local,class=CODE,space=0,merge=1,delta=2
   149                           	psect	text110,local,class=CODE,space=0,merge=1,delta=2
   150                           	psect	text111,local,class=CODE,space=0,merge=1,delta=2
   151                           	psect	text112,local,class=CODE,space=0,merge=1,inline,delta=2
   152                           	psect	text113,local,class=CODE,space=0,merge=1,inline,delta=2
   153                           	psect	text114,local,class=CODE,space=0,merge=1,inline,delta=2
   154                           	psect	text115,local,class=CODE,space=0,merge=1,inline,delta=2
   155                           	psect	text116,local,class=CODE,space=0,merge=1,inline,delta=2
   156                           	psect	text117,local,class=CODE,space=0,merge=1,inline,delta=2
   157                           	psect	text118,local,class=CODE,space=0,merge=1,inline,delta=2
   158                           	psect	text119,local,class=CODE,space=0,merge=1,delta=2
   159                           	psect	text120,local,class=CODE,space=0,merge=1,delta=2
   160                           	psect	text121,local,class=CODE,space=0,merge=1,delta=2
   161                           	psect	text122,local,class=CODE,space=0,merge=1,delta=2
   162                           	psect	text123,local,class=CODE,space=0,merge=1,delta=2
   163                           	psect	text124,local,class=CODE,space=0,merge=1,delta=2
   164                           	psect	text125,local,class=CODE,space=0,merge=1,delta=2
   165                           	psect	text126,local,class=CODE,space=0,merge=1,delta=2
   166                           	psect	text127,local,class=CODE,space=0,merge=1,delta=2
   167                           	psect	text128,local,class=CODE,space=0,merge=1,delta=2
   168                           	psect	text129,local,class=CODE,space=0,merge=1,delta=2
   169                           	psect	text130,local,class=CODE,space=0,merge=1,delta=2
   170                           	psect	text131,local,class=CODE,space=0,merge=1,delta=2
   171                           	psect	text132,local,class=CODE,space=0,merge=1,delta=2
   172                           	psect	text133,local,class=CODE,space=0,merge=1,delta=2
   173                           	psect	text134,local,class=CODE,space=0,merge=1,inline,delta=2
   174                           	psect	text135,local,class=CODE,space=0,merge=1,inline,delta=2
   175                           	psect	text136,local,class=CODE,space=0,merge=1,inline,delta=2
   176                           	psect	text137,local,class=CODE,space=0,merge=1,delta=2
   177                           	psect	text138,local,class=CODE,space=0,merge=1,inline,delta=2
   178                           	psect	text139,local,class=CODE,space=0,merge=1,inline,delta=2
   179                           	psect	text140,local,class=CODE,space=0,merge=1,inline,delta=2
   180                           	psect	intentry,global,class=CODE,space=0,delta=2
   181                           	psect	text142,local,class=CODE,space=0,merge=1,delta=2
   182                           	psect	text143,local,class=CODE,space=0,merge=1,delta=2
   183                           	psect	text144,local,class=CODE,space=0,merge=1,delta=2
   184                           	psect	text145,local,class=CODE,space=0,merge=1,delta=2
   185                           	psect	text146,local,class=CODE,space=0,merge=1,delta=2
   186                           	psect	text147,local,class=CODE,space=0,merge=1,delta=2
   187                           	psect	text148,local,class=CODE,space=0,merge=1,delta=2
   188                           	psect	text149,local,class=CODE,space=0,merge=1,delta=2
   189                           	psect	text150,local,class=CODE,space=0,merge=1,delta=2
   190                           	psect	text151,local,class=CODE,space=0,merge=1,delta=2
   191                           	psect	text152,local,class=CODE,space=0,merge=1,delta=2
   192                           	psect	text153,local,class=CODE,space=0,merge=1,delta=2
   193                           	psect	text154,local,class=CODE,space=0,merge=1,delta=2
   194                           	psect	text155,local,class=CODE,space=0,merge=1,delta=2
   195                           	psect	text156,local,class=CODE,space=0,merge=1,delta=2
   196                           	psect	text157,local,class=CODE,space=0,merge=1,delta=2
   197                           	psect	text158,local,class=CODE,space=0,merge=1,delta=2
   198                           	psect	text159,local,class=CODE,space=0,merge=1,delta=2
   199                           	psect	text160,local,class=CODE,space=0,merge=1,delta=2
   200                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   201                           	dabs	1,0x7E,2
   202     0000                     
   203                           ; Generated 25/01/2024 GMT
   204                           ; 
   205                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   206                           ; All rights reserved.
   207                           ; 
   208                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   209                           ; 
   210                           ; Redistribution and use in source and binary forms, with or without modification, are
   211                           ; permitted provided that the following conditions are met:
   212                           ; 
   213                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   214                           ;        conditions and the following disclaimer.
   215                           ; 
   216                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   217                           ;        of conditions and the following disclaimer in the documentation and/or other
   218                           ;        materials provided with the distribution. Publication is not required when
   219                           ;        this file is used in an embedded application.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC16LF18456 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237     0008                     bsr             equ	8
   238     0005                     fsr0h           equ	5
   239     0004                     fsr0l           equ	4
   240     0007                     fsr1h           equ	7
   241     0006                     fsr1l           equ	6
   242     0000                     indf            equ	0
   243     0000                     indf0           equ	0
   244     0001                     indf1           equ	1
   245     000B                     intcon          equ	11
   246     0002                     pc              equ	2
   247     0002                     pcl             equ	2
   248     000A                     pclath          equ	10
   249     0003                     status          equ	3
   250     0009                     wreg            equ	9
   251     0000                     INDF0           equ	0	;# 
   252     0001                     INDF1           equ	1	;# 
   253     0002                     PCL             equ	2	;# 
   254     0003                     STATUS          equ	3	;# 
   255     0004                     FSR0L           equ	4	;# 
   256     0005                     FSR0H           equ	5	;# 
   257     0006                     FSR1L           equ	6	;# 
   258     0007                     FSR1H           equ	7	;# 
   259     0008                     BSR             equ	8	;# 
   260     0009                     WREG            equ	9	;# 
   261     000A                     PCLATH          equ	10	;# 
   262     000B                     INTCON          equ	11	;# 
   263     000C                     PORTA           equ	12	;# 
   264     000D                     PORTB           equ	13	;# 
   265     000E                     PORTC           equ	14	;# 
   266     0010                     PORTE           equ	16	;# 
   267     0012                     TRISA           equ	18	;# 
   268     0013                     TRISB           equ	19	;# 
   269     0014                     TRISC           equ	20	;# 
   270     0016                     TRISE           equ	22	;# 
   271     0018                     LATA            equ	24	;# 
   272     0019                     LATB            equ	25	;# 
   273     001A                     LATC            equ	26	;# 
   274     008C                     ADLTH           equ	140	;# 
   275     008C                     ADLTHL          equ	140	;# 
   276     008D                     ADLTHH          equ	141	;# 
   277     008E                     ADUTH           equ	142	;# 
   278     008E                     ADUTHL          equ	142	;# 
   279     008F                     ADUTHH          equ	143	;# 
   280     0090                     ADERR           equ	144	;# 
   281     0090                     ADERRL          equ	144	;# 
   282     0091                     ADERRH          equ	145	;# 
   283     0092                     ADSTPT          equ	146	;# 
   284     0092                     ADSTPTL         equ	146	;# 
   285     0093                     ADSTPTH         equ	147	;# 
   286     0094                     ADFLTR          equ	148	;# 
   287     0094                     ADFLTRL         equ	148	;# 
   288     0095                     ADFLTRH         equ	149	;# 
   289     0096                     ADACC           equ	150	;# 
   290     0096                     ADACCL          equ	150	;# 
   291     0097                     ADACCH          equ	151	;# 
   292     0098                     ADACCU          equ	152	;# 
   293     0099                     ADCNT           equ	153	;# 
   294     009A                     ADRPT           equ	154	;# 
   295     009B                     ADPREV          equ	155	;# 
   296     009B                     ADPREVL         equ	155	;# 
   297     009C                     ADPREVH         equ	156	;# 
   298     009D                     ADRES           equ	157	;# 
   299     009D                     ADRESL          equ	157	;# 
   300     009E                     ADRESH          equ	158	;# 
   301     009F                     ADPCH           equ	159	;# 
   302     010C                     ADACQ           equ	268	;# 
   303     010C                     ADACQL          equ	268	;# 
   304     010D                     ADACQH          equ	269	;# 
   305     010E                     ADCAP           equ	270	;# 
   306     010F                     ADPRE           equ	271	;# 
   307     010F                     ADPREL          equ	271	;# 
   308     0110                     ADPREH          equ	272	;# 
   309     0111                     ADCON0          equ	273	;# 
   310     0112                     ADCON1          equ	274	;# 
   311     0113                     ADCON2          equ	275	;# 
   312     0114                     ADCON3          equ	276	;# 
   313     0115                     ADSTAT          equ	277	;# 
   314     0116                     ADREF           equ	278	;# 
   315     0117                     ADACT           equ	279	;# 
   316     0118                     ADCLK           equ	280	;# 
   317     0119                     RC1REG          equ	281	;# 
   318     0119                     RCREG           equ	281	;# 
   319     0119                     RCREG1          equ	281	;# 
   320     011A                     TX1REG          equ	282	;# 
   321     011A                     TXREG1          equ	282	;# 
   322     011A                     TXREG           equ	282	;# 
   323     011B                     SP1BRG          equ	283	;# 
   324     011B                     SPBRG           equ	283	;# 
   325     011B                     SP1BRGL         equ	283	;# 
   326     011B                     SPBRG1          equ	283	;# 
   327     011B                     SPBRGL          equ	283	;# 
   328     011C                     SP1BRGH         equ	284	;# 
   329     011C                     SPBRGH          equ	284	;# 
   330     011C                     SPBRGH1         equ	284	;# 
   331     011D                     RC1STA          equ	285	;# 
   332     011D                     RCSTA1          equ	285	;# 
   333     011D                     RCSTA           equ	285	;# 
   334     011E                     TX1STA          equ	286	;# 
   335     011E                     TXSTA1          equ	286	;# 
   336     011E                     TXSTA           equ	286	;# 
   337     011F                     BAUD1CON        equ	287	;# 
   338     011F                     BAUDCON1        equ	287	;# 
   339     011F                     BAUDCTL1        equ	287	;# 
   340     011F                     BAUDCON         equ	287	;# 
   341     011F                     BAUDCTL         equ	287	;# 
   342     018C                     SSP1BUF         equ	396	;# 
   343     018D                     SSP1ADD         equ	397	;# 
   344     018E                     SSP1MSK         equ	398	;# 
   345     018F                     SSP1STAT        equ	399	;# 
   346     0190                     SSP1CON1        equ	400	;# 
   347     0191                     SSP1CON2        equ	401	;# 
   348     0192                     SSP1CON3        equ	402	;# 
   349     0196                     SSP2BUF         equ	406	;# 
   350     0197                     SSP2ADD         equ	407	;# 
   351     0198                     SSP2MSK         equ	408	;# 
   352     0199                     SSP2STAT        equ	409	;# 
   353     019A                     SSP2CON1        equ	410	;# 
   354     019B                     SSP2CON2        equ	411	;# 
   355     019C                     SSP2CON3        equ	412	;# 
   356     020C                     TMR1            equ	524	;# 
   357     020C                     TMR1L           equ	524	;# 
   358     020D                     TMR1H           equ	525	;# 
   359     020E                     T1CON           equ	526	;# 
   360     020E                     TMR1CON         equ	526	;# 
   361     020F                     T1GCON          equ	527	;# 
   362     020F                     TMR1GCON        equ	527	;# 
   363     0210                     T1GATE          equ	528	;# 
   364     0210                     TMR1GATE        equ	528	;# 
   365     0211                     T1CLK           equ	529	;# 
   366     0211                     TMR1CLK         equ	529	;# 
   367     0211                     PR1             equ	529	;# 
   368     0212                     TMR3            equ	530	;# 
   369     0212                     TMR3L           equ	530	;# 
   370     0213                     TMR3H           equ	531	;# 
   371     0214                     T3CON           equ	532	;# 
   372     0214                     TMR3CON         equ	532	;# 
   373     0215                     T3GCON          equ	533	;# 
   374     0215                     TMR3GCON        equ	533	;# 
   375     0216                     T3GATE          equ	534	;# 
   376     0216                     TMR3GATE        equ	534	;# 
   377     0217                     T3CLK           equ	535	;# 
   378     0217                     TMR3CLK         equ	535	;# 
   379     0217                     PR3             equ	535	;# 
   380     0218                     TMR5            equ	536	;# 
   381     0218                     TMR5L           equ	536	;# 
   382     0219                     TMR5H           equ	537	;# 
   383     021A                     T5CON           equ	538	;# 
   384     021A                     TMR5CON         equ	538	;# 
   385     021B                     T5GCON          equ	539	;# 
   386     021B                     TMR5GCON        equ	539	;# 
   387     021C                     T5GATE          equ	540	;# 
   388     021C                     TMR5GATE        equ	540	;# 
   389     021D                     T5CLK           equ	541	;# 
   390     021D                     TMR5CLK         equ	541	;# 
   391     021D                     PR5             equ	541	;# 
   392     021E                     CCPTMRS0        equ	542	;# 
   393     021F                     CCPTMRS1        equ	543	;# 
   394     028C                     T2TMR           equ	652	;# 
   395     028C                     TMR2            equ	652	;# 
   396     028D                     T2PR            equ	653	;# 
   397     028D                     PR2             equ	653	;# 
   398     028E                     T2CON           equ	654	;# 
   399     028F                     T2HLT           equ	655	;# 
   400     0290                     T2CLKCON        equ	656	;# 
   401     0291                     T2RST           equ	657	;# 
   402     0292                     T4TMR           equ	658	;# 
   403     0292                     TMR4            equ	658	;# 
   404     0293                     T4PR            equ	659	;# 
   405     0293                     PR4             equ	659	;# 
   406     0294                     T4CON           equ	660	;# 
   407     0295                     T4HLT           equ	661	;# 
   408     0296                     T4CLKCON        equ	662	;# 
   409     0297                     T4RST           equ	663	;# 
   410     0298                     T6TMR           equ	664	;# 
   411     0298                     TMR6            equ	664	;# 
   412     0299                     T6PR            equ	665	;# 
   413     0299                     PR6             equ	665	;# 
   414     029A                     T6CON           equ	666	;# 
   415     029B                     T6HLT           equ	667	;# 
   416     029C                     T6CLKCON        equ	668	;# 
   417     029D                     T6RST           equ	669	;# 
   418     029F                     ADCPCON0        equ	671	;# 
   419     030C                     CCPR1           equ	780	;# 
   420     030C                     CCPR1L          equ	780	;# 
   421     030D                     CCPR1H          equ	781	;# 
   422     030E                     CCP1CON         equ	782	;# 
   423     030F                     CCP1CAP         equ	783	;# 
   424     0310                     CCPR2           equ	784	;# 
   425     0310                     CCPR2L          equ	784	;# 
   426     0311                     CCPR2H          equ	785	;# 
   427     0312                     CCP2CON         equ	786	;# 
   428     0313                     CCP2CAP         equ	787	;# 
   429     0314                     CCPR3           equ	788	;# 
   430     0314                     CCPR3L          equ	788	;# 
   431     0315                     CCPR3H          equ	789	;# 
   432     0316                     CCP3CON         equ	790	;# 
   433     0317                     CCP3CAP         equ	791	;# 
   434     0318                     CCPR4           equ	792	;# 
   435     0318                     CCPR4L          equ	792	;# 
   436     0319                     CCPR4H          equ	793	;# 
   437     031A                     CCP4CON         equ	794	;# 
   438     031B                     CCP4CAP         equ	795	;# 
   439     031C                     CCPR5           equ	796	;# 
   440     031C                     CCPR5L          equ	796	;# 
   441     031D                     CCPR5H          equ	797	;# 
   442     031E                     CCP5CON         equ	798	;# 
   443     031F                     CCP5CAP         equ	799	;# 
   444     038C                     PWM6DC          equ	908	;# 
   445     038C                     PWM6DCL         equ	908	;# 
   446     038D                     PWM6DCH         equ	909	;# 
   447     038E                     PWM6CON         equ	910	;# 
   448     0390                     PWM7DC          equ	912	;# 
   449     0390                     PWM7DCL         equ	912	;# 
   450     0391                     PWM7DCH         equ	913	;# 
   451     0392                     PWM7CON         equ	914	;# 
   452     048C                     SMT1TMR         equ	1164	;# 
   453     048C                     SMT1TMRL        equ	1164	;# 
   454     048D                     SMT1TMRH        equ	1165	;# 
   455     048E                     SMT1TMRU        equ	1166	;# 
   456     048F                     SMT1CPR         equ	1167	;# 
   457     048F                     SMT1CPRL        equ	1167	;# 
   458     0490                     SMT1CPRH        equ	1168	;# 
   459     0491                     SMT1CPRU        equ	1169	;# 
   460     0492                     SMT1CPW         equ	1170	;# 
   461     0492                     SMT1CPWL        equ	1170	;# 
   462     0493                     SMT1CPWH        equ	1171	;# 
   463     0494                     SMT1CPWU        equ	1172	;# 
   464     0495                     SMT1PR          equ	1173	;# 
   465     0495                     SMT1PRL         equ	1173	;# 
   466     0496                     SMT1PRH         equ	1174	;# 
   467     0497                     SMT1PRU         equ	1175	;# 
   468     0498                     SMT1CON0        equ	1176	;# 
   469     0499                     SMT1CON1        equ	1177	;# 
   470     049A                     SMT1STAT        equ	1178	;# 
   471     049B                     SMT1CLK         equ	1179	;# 
   472     049C                     SMT1SIG         equ	1180	;# 
   473     049D                     SMT1WIN         equ	1181	;# 
   474     050C                     SMT2TMR         equ	1292	;# 
   475     050C                     SMT2TMRL        equ	1292	;# 
   476     050D                     SMT2TMRH        equ	1293	;# 
   477     050E                     SMT2TMRU        equ	1294	;# 
   478     050F                     SMT2CPR         equ	1295	;# 
   479     050F                     SMT2CPRL        equ	1295	;# 
   480     0510                     SMT2CPRH        equ	1296	;# 
   481     0511                     SMT2CPRU        equ	1297	;# 
   482     0512                     SMT2CPW         equ	1298	;# 
   483     0512                     SMT2CPWL        equ	1298	;# 
   484     0513                     SMT2CPWH        equ	1299	;# 
   485     0514                     SMT2CPWU        equ	1300	;# 
   486     0515                     SMT2PR          equ	1301	;# 
   487     0515                     SMT2PRL         equ	1301	;# 
   488     0516                     SMT2PRH         equ	1302	;# 
   489     0517                     SMT2PRU         equ	1303	;# 
   490     0518                     SMT2CON0        equ	1304	;# 
   491     0519                     SMT2CON1        equ	1305	;# 
   492     051A                     SMT2STAT        equ	1306	;# 
   493     051B                     SMT2CLK         equ	1307	;# 
   494     051C                     SMT2SIG         equ	1308	;# 
   495     051D                     SMT2WIN         equ	1309	;# 
   496     058C                     NCO1ACC         equ	1420	;# 
   497     058C                     NCO1ACCL        equ	1420	;# 
   498     058D                     NCO1ACCH        equ	1421	;# 
   499     058E                     NCO1ACCU        equ	1422	;# 
   500     058F                     NCO1INC         equ	1423	;# 
   501     058F                     NCO1INCL        equ	1423	;# 
   502     0590                     NCO1INCH        equ	1424	;# 
   503     0591                     NCO1INCU        equ	1425	;# 
   504     0592                     NCO1CON         equ	1426	;# 
   505     0593                     NCO1CLK         equ	1427	;# 
   506     059C                     TMR0L           equ	1436	;# 
   507     059C                     TMR0            equ	1436	;# 
   508     059D                     TMR0H           equ	1437	;# 
   509     059D                     PR0             equ	1437	;# 
   510     059E                     T0CON0          equ	1438	;# 
   511     059F                     T0CON1          equ	1439	;# 
   512     060C                     CWG1CLK         equ	1548	;# 
   513     060C                     CWG1CLKCON      equ	1548	;# 
   514     060D                     CWG1ISM         equ	1549	;# 
   515     060D                     CWG1DAT         equ	1549	;# 
   516     060E                     CWG1DBR         equ	1550	;# 
   517     060F                     CWG1DBF         equ	1551	;# 
   518     0610                     CWG1CON0        equ	1552	;# 
   519     0611                     CWG1CON1        equ	1553	;# 
   520     0612                     CWG1AS0         equ	1554	;# 
   521     0613                     CWG1AS1         equ	1555	;# 
   522     0614                     CWG1STR         equ	1556	;# 
   523     0616                     CWG2CLK         equ	1558	;# 
   524     0616                     CWG2CLKCON      equ	1558	;# 
   525     0617                     CWG2ISM         equ	1559	;# 
   526     0617                     CWG2DAT         equ	1559	;# 
   527     0618                     CWG2DBR         equ	1560	;# 
   528     0619                     CWG2DBF         equ	1561	;# 
   529     061A                     CWG2CON0        equ	1562	;# 
   530     061B                     CWG2CON1        equ	1563	;# 
   531     061C                     CWG2AS0         equ	1564	;# 
   532     061D                     CWG2AS1         equ	1565	;# 
   533     061E                     CWG2STR         equ	1566	;# 
   534     068C                     CWG3CLK         equ	1676	;# 
   535     068C                     CWG3CLKCON      equ	1676	;# 
   536     068D                     CWG3ISM         equ	1677	;# 
   537     068D                     CWG3DAT         equ	1677	;# 
   538     068E                     CWG3DBR         equ	1678	;# 
   539     068F                     CWG3DBF         equ	1679	;# 
   540     0690                     CWG3CON0        equ	1680	;# 
   541     0691                     CWG3CON1        equ	1681	;# 
   542     0692                     CWG3AS0         equ	1682	;# 
   543     0693                     CWG3AS1         equ	1683	;# 
   544     0694                     CWG3STR         equ	1684	;# 
   545     070C                     PIR0            equ	1804	;# 
   546     070D                     PIR1            equ	1805	;# 
   547     070E                     PIR2            equ	1806	;# 
   548     070F                     PIR3            equ	1807	;# 
   549     0710                     PIR4            equ	1808	;# 
   550     0711                     PIR5            equ	1809	;# 
   551     0712                     PIR6            equ	1810	;# 
   552     0713                     PIR7            equ	1811	;# 
   553     0714                     PIR8            equ	1812	;# 
   554     0716                     PIE0            equ	1814	;# 
   555     0717                     PIE1            equ	1815	;# 
   556     0718                     PIE2            equ	1816	;# 
   557     0719                     PIE3            equ	1817	;# 
   558     071A                     PIE4            equ	1818	;# 
   559     071B                     PIE5            equ	1819	;# 
   560     071C                     PIE6            equ	1820	;# 
   561     071D                     PIE7            equ	1821	;# 
   562     071E                     PIE8            equ	1822	;# 
   563     0796                     PMD0            equ	1942	;# 
   564     0797                     PMD1            equ	1943	;# 
   565     0798                     PMD2            equ	1944	;# 
   566     0799                     PMD3            equ	1945	;# 
   567     079A                     PMD4            equ	1946	;# 
   568     079B                     PMD5            equ	1947	;# 
   569     079C                     PMD6            equ	1948	;# 
   570     079D                     PMD7            equ	1949	;# 
   571     080C                     WDTCON0         equ	2060	;# 
   572     080D                     WDTCON1         equ	2061	;# 
   573     080E                     WDTPSL          equ	2062	;# 
   574     080F                     WDTPSH          equ	2063	;# 
   575     0810                     WDTTMR          equ	2064	;# 
   576     0811                     BORCON          equ	2065	;# 
   577     0813                     PCON0           equ	2067	;# 
   578     0814                     PCON1           equ	2068	;# 
   579     081A                     NVMADR          equ	2074	;# 
   580     081A                     NVMADRL         equ	2074	;# 
   581     081B                     NVMADRH         equ	2075	;# 
   582     081C                     NVMDAT          equ	2076	;# 
   583     081C                     NVMDATL         equ	2076	;# 
   584     081D                     NVMDATH         equ	2077	;# 
   585     081E                     NVMCON1         equ	2078	;# 
   586     081F                     NVMCON2         equ	2079	;# 
   587     088C                     CPUDOZE         equ	2188	;# 
   588     088D                     OSCCON1         equ	2189	;# 
   589     088E                     OSCCON2         equ	2190	;# 
   590     088F                     OSCCON3         equ	2191	;# 
   591     0890                     OSCSTAT         equ	2192	;# 
   592     0891                     OSCEN           equ	2193	;# 
   593     0892                     OSCTUNE         equ	2194	;# 
   594     0893                     OSCFRQ          equ	2195	;# 
   595     0895                     CLKRCON         equ	2197	;# 
   596     0896                     CLKRCLK         equ	2198	;# 
   597     0897                     MD1CON0         equ	2199	;# 
   598     0898                     MD1CON1         equ	2200	;# 
   599     0899                     MD1SRC          equ	2201	;# 
   600     089A                     MD1CARL         equ	2202	;# 
   601     089B                     MD1CARH         equ	2203	;# 
   602     090C                     FVRCON          equ	2316	;# 
   603     090E                     DAC1CON0        equ	2318	;# 
   604     090F                     DAC1CON1        equ	2319	;# 
   605     091F                     ZCDCON          equ	2335	;# 
   606     098F                     CMOUT           equ	2447	;# 
   607     098F                     CMSTAT          equ	2447	;# 
   608     0990                     CM1CON0         equ	2448	;# 
   609     0991                     CM1CON1         equ	2449	;# 
   610     0992                     CM1NCH          equ	2450	;# 
   611     0993                     CM1PCH          equ	2451	;# 
   612     0994                     CM2CON0         equ	2452	;# 
   613     0995                     CM2CON1         equ	2453	;# 
   614     0996                     CM2NCH          equ	2454	;# 
   615     0997                     CM2PCH          equ	2455	;# 
   616     0A19                     RC2REG          equ	2585	;# 
   617     0A19                     RCREG2          equ	2585	;# 
   618     0A1A                     TX2REG          equ	2586	;# 
   619     0A1A                     TXREG2          equ	2586	;# 
   620     0A1B                     SP2BRG          equ	2587	;# 
   621     0A1B                     SP2BRGL         equ	2587	;# 
   622     0A1B                     SPBRG2          equ	2587	;# 
   623     0A1C                     SP2BRGH         equ	2588	;# 
   624     0A1C                     SPBRGH2         equ	2588	;# 
   625     0A1D                     RC2STA          equ	2589	;# 
   626     0A1D                     RCSTA2          equ	2589	;# 
   627     0A1E                     TX2STA          equ	2590	;# 
   628     0A1E                     TXSTA2          equ	2590	;# 
   629     0A1F                     BAUD2CON        equ	2591	;# 
   630     0A1F                     BAUDCON2        equ	2591	;# 
   631     0A1F                     BAUDCTL2        equ	2591	;# 
   632     1E0F                     CLCDATA         equ	7695	;# 
   633     1E10                     CLC1CON         equ	7696	;# 
   634     1E11                     CLC1POL         equ	7697	;# 
   635     1E12                     CLC1SEL0        equ	7698	;# 
   636     1E13                     CLC1SEL1        equ	7699	;# 
   637     1E14                     CLC1SEL2        equ	7700	;# 
   638     1E15                     CLC1SEL3        equ	7701	;# 
   639     1E16                     CLC1GLS0        equ	7702	;# 
   640     1E17                     CLC1GLS1        equ	7703	;# 
   641     1E18                     CLC1GLS2        equ	7704	;# 
   642     1E19                     CLC1GLS3        equ	7705	;# 
   643     1E1A                     CLC2CON         equ	7706	;# 
   644     1E1B                     CLC2POL         equ	7707	;# 
   645     1E1C                     CLC2SEL0        equ	7708	;# 
   646     1E1D                     CLC2SEL1        equ	7709	;# 
   647     1E1E                     CLC2SEL2        equ	7710	;# 
   648     1E1F                     CLC2SEL3        equ	7711	;# 
   649     1E20                     CLC2GLS0        equ	7712	;# 
   650     1E21                     CLC2GLS1        equ	7713	;# 
   651     1E22                     CLC2GLS2        equ	7714	;# 
   652     1E23                     CLC2GLS3        equ	7715	;# 
   653     1E24                     CLC3CON         equ	7716	;# 
   654     1E25                     CLC3POL         equ	7717	;# 
   655     1E26                     CLC3SEL0        equ	7718	;# 
   656     1E27                     CLC3SEL1        equ	7719	;# 
   657     1E28                     CLC3SEL2        equ	7720	;# 
   658     1E29                     CLC3SEL3        equ	7721	;# 
   659     1E2A                     CLC3GLS0        equ	7722	;# 
   660     1E2B                     CLC3GLS1        equ	7723	;# 
   661     1E2C                     CLC3GLS2        equ	7724	;# 
   662     1E2D                     CLC3GLS3        equ	7725	;# 
   663     1E2E                     CLC4CON         equ	7726	;# 
   664     1E2F                     CLC4POL         equ	7727	;# 
   665     1E30                     CLC4SEL0        equ	7728	;# 
   666     1E31                     CLC4SEL1        equ	7729	;# 
   667     1E32                     CLC4SEL2        equ	7730	;# 
   668     1E33                     CLC4SEL3        equ	7731	;# 
   669     1E34                     CLC4GLS0        equ	7732	;# 
   670     1E35                     CLC4GLS1        equ	7733	;# 
   671     1E36                     CLC4GLS2        equ	7734	;# 
   672     1E37                     CLC4GLS3        equ	7735	;# 
   673     1E8F                     PPSLOCK         equ	7823	;# 
   674     1E90                     INTPPS          equ	7824	;# 
   675     1E91                     T0CKIPPS        equ	7825	;# 
   676     1E92                     T1CKIPPS        equ	7826	;# 
   677     1E93                     T1GPPS          equ	7827	;# 
   678     1E94                     T3CKIPPS        equ	7828	;# 
   679     1E95                     T3GPPS          equ	7829	;# 
   680     1E96                     T5CKIPPS        equ	7830	;# 
   681     1E97                     T5GPPS          equ	7831	;# 
   682     1E9C                     T2INPPS         equ	7836	;# 
   683     1E9D                     T4INPPS         equ	7837	;# 
   684     1E9E                     T6INPPS         equ	7838	;# 
   685     1EA1                     CCP1PPS         equ	7841	;# 
   686     1EA2                     CCP2PPS         equ	7842	;# 
   687     1EA3                     CCP3PPS         equ	7843	;# 
   688     1EA4                     CCP4PPS         equ	7844	;# 
   689     1EA5                     CCP5PPS         equ	7845	;# 
   690     1EA9                     SMT1WINPPS      equ	7849	;# 
   691     1EAA                     SMT1SIGPPS      equ	7850	;# 
   692     1EAB                     SMT2WINPPS      equ	7851	;# 
   693     1EAC                     SMT2SIGPPS      equ	7852	;# 
   694     1EB1                     CWG1PPS         equ	7857	;# 
   695     1EB2                     CWG2PPS         equ	7858	;# 
   696     1EB3                     CWG3PPS         equ	7859	;# 
   697     1EB8                     MDCARLPPS       equ	7864	;# 
   698     1EB9                     MDCARHPPS       equ	7865	;# 
   699     1EBA                     MDSRCPPS        equ	7866	;# 
   700     1EBB                     CLCIN0PPS       equ	7867	;# 
   701     1EBC                     CLCIN1PPS       equ	7868	;# 
   702     1EBD                     CLCIN2PPS       equ	7869	;# 
   703     1EBE                     CLCIN3PPS       equ	7870	;# 
   704     1EC3                     ADACTPPS        equ	7875	;# 
   705     1EC5                     SSP1CLKPPS      equ	7877	;# 
   706     1EC6                     SSP1DATPPS      equ	7878	;# 
   707     1EC7                     SSP1SSPPS       equ	7879	;# 
   708     1EC8                     SSP2CLKPPS      equ	7880	;# 
   709     1EC9                     SSP2DATPPS      equ	7881	;# 
   710     1ECA                     SSP2SSPPS       equ	7882	;# 
   711     1ECB                     RX1PPS          equ	7883	;# 
   712     1ECC                     CK1PPS          equ	7884	;# 
   713     1ECD                     RX2PPS          equ	7885	;# 
   714     1ECE                     CK2PPS          equ	7886	;# 
   715     1F10                     RA0PPS          equ	7952	;# 
   716     1F11                     RA1PPS          equ	7953	;# 
   717     1F12                     RA2PPS          equ	7954	;# 
   718     1F13                     RA3PPS          equ	7955	;# 
   719     1F14                     RA4PPS          equ	7956	;# 
   720     1F15                     RA5PPS          equ	7957	;# 
   721     1F16                     RA6PPS          equ	7958	;# 
   722     1F17                     RA7PPS          equ	7959	;# 
   723     1F18                     RB0PPS          equ	7960	;# 
   724     1F19                     RB1PPS          equ	7961	;# 
   725     1F1A                     RB2PPS          equ	7962	;# 
   726     1F1B                     RB3PPS          equ	7963	;# 
   727     1F1C                     RB4PPS          equ	7964	;# 
   728     1F1D                     RB5PPS          equ	7965	;# 
   729     1F1E                     RB6PPS          equ	7966	;# 
   730     1F1F                     RB7PPS          equ	7967	;# 
   731     1F20                     RC0PPS          equ	7968	;# 
   732     1F21                     RC1PPS          equ	7969	;# 
   733     1F22                     RC2PPS          equ	7970	;# 
   734     1F23                     RC3PPS          equ	7971	;# 
   735     1F24                     RC4PPS          equ	7972	;# 
   736     1F25                     RC5PPS          equ	7973	;# 
   737     1F26                     RC6PPS          equ	7974	;# 
   738     1F27                     RC7PPS          equ	7975	;# 
   739     1F38                     ANSELA          equ	7992	;# 
   740     1F39                     WPUA            equ	7993	;# 
   741     1F3A                     ODCONA          equ	7994	;# 
   742     1F3B                     SLRCONA         equ	7995	;# 
   743     1F3C                     INLVLA          equ	7996	;# 
   744     1F3D                     IOCAP           equ	7997	;# 
   745     1F3E                     IOCAN           equ	7998	;# 
   746     1F3F                     IOCAF           equ	7999	;# 
   747     1F43                     ANSELB          equ	8003	;# 
   748     1F44                     WPUB            equ	8004	;# 
   749     1F45                     ODCONB          equ	8005	;# 
   750     1F46                     SLRCONB         equ	8006	;# 
   751     1F47                     INLVLB          equ	8007	;# 
   752     1F48                     IOCBP           equ	8008	;# 
   753     1F49                     IOCBN           equ	8009	;# 
   754     1F4A                     IOCBF           equ	8010	;# 
   755     1F4E                     ANSELC          equ	8014	;# 
   756     1F4F                     WPUC            equ	8015	;# 
   757     1F50                     ODCONC          equ	8016	;# 
   758     1F51                     SLRCONC         equ	8017	;# 
   759     1F52                     INLVLC          equ	8018	;# 
   760     1F53                     IOCCP           equ	8019	;# 
   761     1F54                     IOCCN           equ	8020	;# 
   762     1F55                     IOCCF           equ	8021	;# 
   763     1F65                     WPUE            equ	8037	;# 
   764     1F66                     ODCONE          equ	8038	;# 
   765     1F67                     SLRCONE         equ	8039	;# 
   766     1F68                     INLVLE          equ	8040	;# 
   767     1F69                     IOCEP           equ	8041	;# 
   768     1F6A                     IOCEN           equ	8042	;# 
   769     1F6B                     IOCEF           equ	8043	;# 
   770     1FE4                     STATUS_SHAD     equ	8164	;# 
   771     1FE5                     WREG_SHAD       equ	8165	;# 
   772     1FE6                     BSR_SHAD        equ	8166	;# 
   773     1FE7                     PCLATH_SHAD     equ	8167	;# 
   774     1FE8                     FSR0_SHAD       equ	8168	;# 
   775     1FE8                     FSR0L_SHAD      equ	8168	;# 
   776     1FE9                     FSR0H_SHAD      equ	8169	;# 
   777     1FEA                     FSR1L_SHAD      equ	8170	;# 
   778     1FEB                     FSR1H_SHAD      equ	8171	;# 
   779     1FED                     STKPTR          equ	8173	;# 
   780     1FEE                     TOSL            equ	8174	;# 
   781     1FEF                     TOSH            equ	8175	;# 
   782     0000                     INDF0           equ	0	;# 
   783     0001                     INDF1           equ	1	;# 
   784     0002                     PCL             equ	2	;# 
   785     0003                     STATUS          equ	3	;# 
   786     0004                     FSR0L           equ	4	;# 
   787     0005                     FSR0H           equ	5	;# 
   788     0006                     FSR1L           equ	6	;# 
   789     0007                     FSR1H           equ	7	;# 
   790     0008                     BSR             equ	8	;# 
   791     0009                     WREG            equ	9	;# 
   792     000A                     PCLATH          equ	10	;# 
   793     000B                     INTCON          equ	11	;# 
   794     000C                     PORTA           equ	12	;# 
   795     000D                     PORTB           equ	13	;# 
   796     000E                     PORTC           equ	14	;# 
   797     0010                     PORTE           equ	16	;# 
   798     0012                     TRISA           equ	18	;# 
   799     0013                     TRISB           equ	19	;# 
   800     0014                     TRISC           equ	20	;# 
   801     0016                     TRISE           equ	22	;# 
   802     0018                     LATA            equ	24	;# 
   803     0019                     LATB            equ	25	;# 
   804     001A                     LATC            equ	26	;# 
   805     008C                     ADLTH           equ	140	;# 
   806     008C                     ADLTHL          equ	140	;# 
   807     008D                     ADLTHH          equ	141	;# 
   808     008E                     ADUTH           equ	142	;# 
   809     008E                     ADUTHL          equ	142	;# 
   810     008F                     ADUTHH          equ	143	;# 
   811     0090                     ADERR           equ	144	;# 
   812     0090                     ADERRL          equ	144	;# 
   813     0091                     ADERRH          equ	145	;# 
   814     0092                     ADSTPT          equ	146	;# 
   815     0092                     ADSTPTL         equ	146	;# 
   816     0093                     ADSTPTH         equ	147	;# 
   817     0094                     ADFLTR          equ	148	;# 
   818     0094                     ADFLTRL         equ	148	;# 
   819     0095                     ADFLTRH         equ	149	;# 
   820     0096                     ADACC           equ	150	;# 
   821     0096                     ADACCL          equ	150	;# 
   822     0097                     ADACCH          equ	151	;# 
   823     0098                     ADACCU          equ	152	;# 
   824     0099                     ADCNT           equ	153	;# 
   825     009A                     ADRPT           equ	154	;# 
   826     009B                     ADPREV          equ	155	;# 
   827     009B                     ADPREVL         equ	155	;# 
   828     009C                     ADPREVH         equ	156	;# 
   829     009D                     ADRES           equ	157	;# 
   830     009D                     ADRESL          equ	157	;# 
   831     009E                     ADRESH          equ	158	;# 
   832     009F                     ADPCH           equ	159	;# 
   833     010C                     ADACQ           equ	268	;# 
   834     010C                     ADACQL          equ	268	;# 
   835     010D                     ADACQH          equ	269	;# 
   836     010E                     ADCAP           equ	270	;# 
   837     010F                     ADPRE           equ	271	;# 
   838     010F                     ADPREL          equ	271	;# 
   839     0110                     ADPREH          equ	272	;# 
   840     0111                     ADCON0          equ	273	;# 
   841     0112                     ADCON1          equ	274	;# 
   842     0113                     ADCON2          equ	275	;# 
   843     0114                     ADCON3          equ	276	;# 
   844     0115                     ADSTAT          equ	277	;# 
   845     0116                     ADREF           equ	278	;# 
   846     0117                     ADACT           equ	279	;# 
   847     0118                     ADCLK           equ	280	;# 
   848     0119                     RC1REG          equ	281	;# 
   849     0119                     RCREG           equ	281	;# 
   850     0119                     RCREG1          equ	281	;# 
   851     011A                     TX1REG          equ	282	;# 
   852     011A                     TXREG1          equ	282	;# 
   853     011A                     TXREG           equ	282	;# 
   854     011B                     SP1BRG          equ	283	;# 
   855     011B                     SPBRG           equ	283	;# 
   856     011B                     SP1BRGL         equ	283	;# 
   857     011B                     SPBRG1          equ	283	;# 
   858     011B                     SPBRGL          equ	283	;# 
   859     011C                     SP1BRGH         equ	284	;# 
   860     011C                     SPBRGH          equ	284	;# 
   861     011C                     SPBRGH1         equ	284	;# 
   862     011D                     RC1STA          equ	285	;# 
   863     011D                     RCSTA1          equ	285	;# 
   864     011D                     RCSTA           equ	285	;# 
   865     011E                     TX1STA          equ	286	;# 
   866     011E                     TXSTA1          equ	286	;# 
   867     011E                     TXSTA           equ	286	;# 
   868     011F                     BAUD1CON        equ	287	;# 
   869     011F                     BAUDCON1        equ	287	;# 
   870     011F                     BAUDCTL1        equ	287	;# 
   871     011F                     BAUDCON         equ	287	;# 
   872     011F                     BAUDCTL         equ	287	;# 
   873     018C                     SSP1BUF         equ	396	;# 
   874     018D                     SSP1ADD         equ	397	;# 
   875     018E                     SSP1MSK         equ	398	;# 
   876     018F                     SSP1STAT        equ	399	;# 
   877     0190                     SSP1CON1        equ	400	;# 
   878     0191                     SSP1CON2        equ	401	;# 
   879     0192                     SSP1CON3        equ	402	;# 
   880     0196                     SSP2BUF         equ	406	;# 
   881     0197                     SSP2ADD         equ	407	;# 
   882     0198                     SSP2MSK         equ	408	;# 
   883     0199                     SSP2STAT        equ	409	;# 
   884     019A                     SSP2CON1        equ	410	;# 
   885     019B                     SSP2CON2        equ	411	;# 
   886     019C                     SSP2CON3        equ	412	;# 
   887     020C                     TMR1            equ	524	;# 
   888     020C                     TMR1L           equ	524	;# 
   889     020D                     TMR1H           equ	525	;# 
   890     020E                     T1CON           equ	526	;# 
   891     020E                     TMR1CON         equ	526	;# 
   892     020F                     T1GCON          equ	527	;# 
   893     020F                     TMR1GCON        equ	527	;# 
   894     0210                     T1GATE          equ	528	;# 
   895     0210                     TMR1GATE        equ	528	;# 
   896     0211                     T1CLK           equ	529	;# 
   897     0211                     TMR1CLK         equ	529	;# 
   898     0211                     PR1             equ	529	;# 
   899     0212                     TMR3            equ	530	;# 
   900     0212                     TMR3L           equ	530	;# 
   901     0213                     TMR3H           equ	531	;# 
   902     0214                     T3CON           equ	532	;# 
   903     0214                     TMR3CON         equ	532	;# 
   904     0215                     T3GCON          equ	533	;# 
   905     0215                     TMR3GCON        equ	533	;# 
   906     0216                     T3GATE          equ	534	;# 
   907     0216                     TMR3GATE        equ	534	;# 
   908     0217                     T3CLK           equ	535	;# 
   909     0217                     TMR3CLK         equ	535	;# 
   910     0217                     PR3             equ	535	;# 
   911     0218                     TMR5            equ	536	;# 
   912     0218                     TMR5L           equ	536	;# 
   913     0219                     TMR5H           equ	537	;# 
   914     021A                     T5CON           equ	538	;# 
   915     021A                     TMR5CON         equ	538	;# 
   916     021B                     T5GCON          equ	539	;# 
   917     021B                     TMR5GCON        equ	539	;# 
   918     021C                     T5GATE          equ	540	;# 
   919     021C                     TMR5GATE        equ	540	;# 
   920     021D                     T5CLK           equ	541	;# 
   921     021D                     TMR5CLK         equ	541	;# 
   922     021D                     PR5             equ	541	;# 
   923     021E                     CCPTMRS0        equ	542	;# 
   924     021F                     CCPTMRS1        equ	543	;# 
   925     028C                     T2TMR           equ	652	;# 
   926     028C                     TMR2            equ	652	;# 
   927     028D                     T2PR            equ	653	;# 
   928     028D                     PR2             equ	653	;# 
   929     028E                     T2CON           equ	654	;# 
   930     028F                     T2HLT           equ	655	;# 
   931     0290                     T2CLKCON        equ	656	;# 
   932     0291                     T2RST           equ	657	;# 
   933     0292                     T4TMR           equ	658	;# 
   934     0292                     TMR4            equ	658	;# 
   935     0293                     T4PR            equ	659	;# 
   936     0293                     PR4             equ	659	;# 
   937     0294                     T4CON           equ	660	;# 
   938     0295                     T4HLT           equ	661	;# 
   939     0296                     T4CLKCON        equ	662	;# 
   940     0297                     T4RST           equ	663	;# 
   941     0298                     T6TMR           equ	664	;# 
   942     0298                     TMR6            equ	664	;# 
   943     0299                     T6PR            equ	665	;# 
   944     0299                     PR6             equ	665	;# 
   945     029A                     T6CON           equ	666	;# 
   946     029B                     T6HLT           equ	667	;# 
   947     029C                     T6CLKCON        equ	668	;# 
   948     029D                     T6RST           equ	669	;# 
   949     029F                     ADCPCON0        equ	671	;# 
   950     030C                     CCPR1           equ	780	;# 
   951     030C                     CCPR1L          equ	780	;# 
   952     030D                     CCPR1H          equ	781	;# 
   953     030E                     CCP1CON         equ	782	;# 
   954     030F                     CCP1CAP         equ	783	;# 
   955     0310                     CCPR2           equ	784	;# 
   956     0310                     CCPR2L          equ	784	;# 
   957     0311                     CCPR2H          equ	785	;# 
   958     0312                     CCP2CON         equ	786	;# 
   959     0313                     CCP2CAP         equ	787	;# 
   960     0314                     CCPR3           equ	788	;# 
   961     0314                     CCPR3L          equ	788	;# 
   962     0315                     CCPR3H          equ	789	;# 
   963     0316                     CCP3CON         equ	790	;# 
   964     0317                     CCP3CAP         equ	791	;# 
   965     0318                     CCPR4           equ	792	;# 
   966     0318                     CCPR4L          equ	792	;# 
   967     0319                     CCPR4H          equ	793	;# 
   968     031A                     CCP4CON         equ	794	;# 
   969     031B                     CCP4CAP         equ	795	;# 
   970     031C                     CCPR5           equ	796	;# 
   971     031C                     CCPR5L          equ	796	;# 
   972     031D                     CCPR5H          equ	797	;# 
   973     031E                     CCP5CON         equ	798	;# 
   974     031F                     CCP5CAP         equ	799	;# 
   975     038C                     PWM6DC          equ	908	;# 
   976     038C                     PWM6DCL         equ	908	;# 
   977     038D                     PWM6DCH         equ	909	;# 
   978     038E                     PWM6CON         equ	910	;# 
   979     0390                     PWM7DC          equ	912	;# 
   980     0390                     PWM7DCL         equ	912	;# 
   981     0391                     PWM7DCH         equ	913	;# 
   982     0392                     PWM7CON         equ	914	;# 
   983     048C                     SMT1TMR         equ	1164	;# 
   984     048C                     SMT1TMRL        equ	1164	;# 
   985     048D                     SMT1TMRH        equ	1165	;# 
   986     048E                     SMT1TMRU        equ	1166	;# 
   987     048F                     SMT1CPR         equ	1167	;# 
   988     048F                     SMT1CPRL        equ	1167	;# 
   989     0490                     SMT1CPRH        equ	1168	;# 
   990     0491                     SMT1CPRU        equ	1169	;# 
   991     0492                     SMT1CPW         equ	1170	;# 
   992     0492                     SMT1CPWL        equ	1170	;# 
   993     0493                     SMT1CPWH        equ	1171	;# 
   994     0494                     SMT1CPWU        equ	1172	;# 
   995     0495                     SMT1PR          equ	1173	;# 
   996     0495                     SMT1PRL         equ	1173	;# 
   997     0496                     SMT1PRH         equ	1174	;# 
   998     0497                     SMT1PRU         equ	1175	;# 
   999     0498                     SMT1CON0        equ	1176	;# 
  1000     0499                     SMT1CON1        equ	1177	;# 
  1001     049A                     SMT1STAT        equ	1178	;# 
  1002     049B                     SMT1CLK         equ	1179	;# 
  1003     049C                     SMT1SIG         equ	1180	;# 
  1004     049D                     SMT1WIN         equ	1181	;# 
  1005     050C                     SMT2TMR         equ	1292	;# 
  1006     050C                     SMT2TMRL        equ	1292	;# 
  1007     050D                     SMT2TMRH        equ	1293	;# 
  1008     050E                     SMT2TMRU        equ	1294	;# 
  1009     050F                     SMT2CPR         equ	1295	;# 
  1010     050F                     SMT2CPRL        equ	1295	;# 
  1011     0510                     SMT2CPRH        equ	1296	;# 
  1012     0511                     SMT2CPRU        equ	1297	;# 
  1013     0512                     SMT2CPW         equ	1298	;# 
  1014     0512                     SMT2CPWL        equ	1298	;# 
  1015     0513                     SMT2CPWH        equ	1299	;# 
  1016     0514                     SMT2CPWU        equ	1300	;# 
  1017     0515                     SMT2PR          equ	1301	;# 
  1018     0515                     SMT2PRL         equ	1301	;# 
  1019     0516                     SMT2PRH         equ	1302	;# 
  1020     0517                     SMT2PRU         equ	1303	;# 
  1021     0518                     SMT2CON0        equ	1304	;# 
  1022     0519                     SMT2CON1        equ	1305	;# 
  1023     051A                     SMT2STAT        equ	1306	;# 
  1024     051B                     SMT2CLK         equ	1307	;# 
  1025     051C                     SMT2SIG         equ	1308	;# 
  1026     051D                     SMT2WIN         equ	1309	;# 
  1027     058C                     NCO1ACC         equ	1420	;# 
  1028     058C                     NCO1ACCL        equ	1420	;# 
  1029     058D                     NCO1ACCH        equ	1421	;# 
  1030     058E                     NCO1ACCU        equ	1422	;# 
  1031     058F                     NCO1INC         equ	1423	;# 
  1032     058F                     NCO1INCL        equ	1423	;# 
  1033     0590                     NCO1INCH        equ	1424	;# 
  1034     0591                     NCO1INCU        equ	1425	;# 
  1035     0592                     NCO1CON         equ	1426	;# 
  1036     0593                     NCO1CLK         equ	1427	;# 
  1037     059C                     TMR0L           equ	1436	;# 
  1038     059C                     TMR0            equ	1436	;# 
  1039     059D                     TMR0H           equ	1437	;# 
  1040     059D                     PR0             equ	1437	;# 
  1041     059E                     T0CON0          equ	1438	;# 
  1042     059F                     T0CON1          equ	1439	;# 
  1043     060C                     CWG1CLK         equ	1548	;# 
  1044     060C                     CWG1CLKCON      equ	1548	;# 
  1045     060D                     CWG1ISM         equ	1549	;# 
  1046     060D                     CWG1DAT         equ	1549	;# 
  1047     060E                     CWG1DBR         equ	1550	;# 
  1048     060F                     CWG1DBF         equ	1551	;# 
  1049     0610                     CWG1CON0        equ	1552	;# 
  1050     0611                     CWG1CON1        equ	1553	;# 
  1051     0612                     CWG1AS0         equ	1554	;# 
  1052     0613                     CWG1AS1         equ	1555	;# 
  1053     0614                     CWG1STR         equ	1556	;# 
  1054     0616                     CWG2CLK         equ	1558	;# 
  1055     0616                     CWG2CLKCON      equ	1558	;# 
  1056     0617                     CWG2ISM         equ	1559	;# 
  1057     0617                     CWG2DAT         equ	1559	;# 
  1058     0618                     CWG2DBR         equ	1560	;# 
  1059     0619                     CWG2DBF         equ	1561	;# 
  1060     061A                     CWG2CON0        equ	1562	;# 
  1061     061B                     CWG2CON1        equ	1563	;# 
  1062     061C                     CWG2AS0         equ	1564	;# 
  1063     061D                     CWG2AS1         equ	1565	;# 
  1064     061E                     CWG2STR         equ	1566	;# 
  1065     068C                     CWG3CLK         equ	1676	;# 
  1066     068C                     CWG3CLKCON      equ	1676	;# 
  1067     068D                     CWG3ISM         equ	1677	;# 
  1068     068D                     CWG3DAT         equ	1677	;# 
  1069     068E                     CWG3DBR         equ	1678	;# 
  1070     068F                     CWG3DBF         equ	1679	;# 
  1071     0690                     CWG3CON0        equ	1680	;# 
  1072     0691                     CWG3CON1        equ	1681	;# 
  1073     0692                     CWG3AS0         equ	1682	;# 
  1074     0693                     CWG3AS1         equ	1683	;# 
  1075     0694                     CWG3STR         equ	1684	;# 
  1076     070C                     PIR0            equ	1804	;# 
  1077     070D                     PIR1            equ	1805	;# 
  1078     070E                     PIR2            equ	1806	;# 
  1079     070F                     PIR3            equ	1807	;# 
  1080     0710                     PIR4            equ	1808	;# 
  1081     0711                     PIR5            equ	1809	;# 
  1082     0712                     PIR6            equ	1810	;# 
  1083     0713                     PIR7            equ	1811	;# 
  1084     0714                     PIR8            equ	1812	;# 
  1085     0716                     PIE0            equ	1814	;# 
  1086     0717                     PIE1            equ	1815	;# 
  1087     0718                     PIE2            equ	1816	;# 
  1088     0719                     PIE3            equ	1817	;# 
  1089     071A                     PIE4            equ	1818	;# 
  1090     071B                     PIE5            equ	1819	;# 
  1091     071C                     PIE6            equ	1820	;# 
  1092     071D                     PIE7            equ	1821	;# 
  1093     071E                     PIE8            equ	1822	;# 
  1094     0796                     PMD0            equ	1942	;# 
  1095     0797                     PMD1            equ	1943	;# 
  1096     0798                     PMD2            equ	1944	;# 
  1097     0799                     PMD3            equ	1945	;# 
  1098     079A                     PMD4            equ	1946	;# 
  1099     079B                     PMD5            equ	1947	;# 
  1100     079C                     PMD6            equ	1948	;# 
  1101     079D                     PMD7            equ	1949	;# 
  1102     080C                     WDTCON0         equ	2060	;# 
  1103     080D                     WDTCON1         equ	2061	;# 
  1104     080E                     WDTPSL          equ	2062	;# 
  1105     080F                     WDTPSH          equ	2063	;# 
  1106     0810                     WDTTMR          equ	2064	;# 
  1107     0811                     BORCON          equ	2065	;# 
  1108     0813                     PCON0           equ	2067	;# 
  1109     0814                     PCON1           equ	2068	;# 
  1110     081A                     NVMADR          equ	2074	;# 
  1111     081A                     NVMADRL         equ	2074	;# 
  1112     081B                     NVMADRH         equ	2075	;# 
  1113     081C                     NVMDAT          equ	2076	;# 
  1114     081C                     NVMDATL         equ	2076	;# 
  1115     081D                     NVMDATH         equ	2077	;# 
  1116     081E                     NVMCON1         equ	2078	;# 
  1117     081F                     NVMCON2         equ	2079	;# 
  1118     088C                     CPUDOZE         equ	2188	;# 
  1119     088D                     OSCCON1         equ	2189	;# 
  1120     088E                     OSCCON2         equ	2190	;# 
  1121     088F                     OSCCON3         equ	2191	;# 
  1122     0890                     OSCSTAT         equ	2192	;# 
  1123     0891                     OSCEN           equ	2193	;# 
  1124     0892                     OSCTUNE         equ	2194	;# 
  1125     0893                     OSCFRQ          equ	2195	;# 
  1126     0895                     CLKRCON         equ	2197	;# 
  1127     0896                     CLKRCLK         equ	2198	;# 
  1128     0897                     MD1CON0         equ	2199	;# 
  1129     0898                     MD1CON1         equ	2200	;# 
  1130     0899                     MD1SRC          equ	2201	;# 
  1131     089A                     MD1CARL         equ	2202	;# 
  1132     089B                     MD1CARH         equ	2203	;# 
  1133     090C                     FVRCON          equ	2316	;# 
  1134     090E                     DAC1CON0        equ	2318	;# 
  1135     090F                     DAC1CON1        equ	2319	;# 
  1136     091F                     ZCDCON          equ	2335	;# 
  1137     098F                     CMOUT           equ	2447	;# 
  1138     098F                     CMSTAT          equ	2447	;# 
  1139     0990                     CM1CON0         equ	2448	;# 
  1140     0991                     CM1CON1         equ	2449	;# 
  1141     0992                     CM1NCH          equ	2450	;# 
  1142     0993                     CM1PCH          equ	2451	;# 
  1143     0994                     CM2CON0         equ	2452	;# 
  1144     0995                     CM2CON1         equ	2453	;# 
  1145     0996                     CM2NCH          equ	2454	;# 
  1146     0997                     CM2PCH          equ	2455	;# 
  1147     0A19                     RC2REG          equ	2585	;# 
  1148     0A19                     RCREG2          equ	2585	;# 
  1149     0A1A                     TX2REG          equ	2586	;# 
  1150     0A1A                     TXREG2          equ	2586	;# 
  1151     0A1B                     SP2BRG          equ	2587	;# 
  1152     0A1B                     SP2BRGL         equ	2587	;# 
  1153     0A1B                     SPBRG2          equ	2587	;# 
  1154     0A1C                     SP2BRGH         equ	2588	;# 
  1155     0A1C                     SPBRGH2         equ	2588	;# 
  1156     0A1D                     RC2STA          equ	2589	;# 
  1157     0A1D                     RCSTA2          equ	2589	;# 
  1158     0A1E                     TX2STA          equ	2590	;# 
  1159     0A1E                     TXSTA2          equ	2590	;# 
  1160     0A1F                     BAUD2CON        equ	2591	;# 
  1161     0A1F                     BAUDCON2        equ	2591	;# 
  1162     0A1F                     BAUDCTL2        equ	2591	;# 
  1163     1E0F                     CLCDATA         equ	7695	;# 
  1164     1E10                     CLC1CON         equ	7696	;# 
  1165     1E11                     CLC1POL         equ	7697	;# 
  1166     1E12                     CLC1SEL0        equ	7698	;# 
  1167     1E13                     CLC1SEL1        equ	7699	;# 
  1168     1E14                     CLC1SEL2        equ	7700	;# 
  1169     1E15                     CLC1SEL3        equ	7701	;# 
  1170     1E16                     CLC1GLS0        equ	7702	;# 
  1171     1E17                     CLC1GLS1        equ	7703	;# 
  1172     1E18                     CLC1GLS2        equ	7704	;# 
  1173     1E19                     CLC1GLS3        equ	7705	;# 
  1174     1E1A                     CLC2CON         equ	7706	;# 
  1175     1E1B                     CLC2POL         equ	7707	;# 
  1176     1E1C                     CLC2SEL0        equ	7708	;# 
  1177     1E1D                     CLC2SEL1        equ	7709	;# 
  1178     1E1E                     CLC2SEL2        equ	7710	;# 
  1179     1E1F                     CLC2SEL3        equ	7711	;# 
  1180     1E20                     CLC2GLS0        equ	7712	;# 
  1181     1E21                     CLC2GLS1        equ	7713	;# 
  1182     1E22                     CLC2GLS2        equ	7714	;# 
  1183     1E23                     CLC2GLS3        equ	7715	;# 
  1184     1E24                     CLC3CON         equ	7716	;# 
  1185     1E25                     CLC3POL         equ	7717	;# 
  1186     1E26                     CLC3SEL0        equ	7718	;# 
  1187     1E27                     CLC3SEL1        equ	7719	;# 
  1188     1E28                     CLC3SEL2        equ	7720	;# 
  1189     1E29                     CLC3SEL3        equ	7721	;# 
  1190     1E2A                     CLC3GLS0        equ	7722	;# 
  1191     1E2B                     CLC3GLS1        equ	7723	;# 
  1192     1E2C                     CLC3GLS2        equ	7724	;# 
  1193     1E2D                     CLC3GLS3        equ	7725	;# 
  1194     1E2E                     CLC4CON         equ	7726	;# 
  1195     1E2F                     CLC4POL         equ	7727	;# 
  1196     1E30                     CLC4SEL0        equ	7728	;# 
  1197     1E31                     CLC4SEL1        equ	7729	;# 
  1198     1E32                     CLC4SEL2        equ	7730	;# 
  1199     1E33                     CLC4SEL3        equ	7731	;# 
  1200     1E34                     CLC4GLS0        equ	7732	;# 
  1201     1E35                     CLC4GLS1        equ	7733	;# 
  1202     1E36                     CLC4GLS2        equ	7734	;# 
  1203     1E37                     CLC4GLS3        equ	7735	;# 
  1204     1E8F                     PPSLOCK         equ	7823	;# 
  1205     1E90                     INTPPS          equ	7824	;# 
  1206     1E91                     T0CKIPPS        equ	7825	;# 
  1207     1E92                     T1CKIPPS        equ	7826	;# 
  1208     1E93                     T1GPPS          equ	7827	;# 
  1209     1E94                     T3CKIPPS        equ	7828	;# 
  1210     1E95                     T3GPPS          equ	7829	;# 
  1211     1E96                     T5CKIPPS        equ	7830	;# 
  1212     1E97                     T5GPPS          equ	7831	;# 
  1213     1E9C                     T2INPPS         equ	7836	;# 
  1214     1E9D                     T4INPPS         equ	7837	;# 
  1215     1E9E                     T6INPPS         equ	7838	;# 
  1216     1EA1                     CCP1PPS         equ	7841	;# 
  1217     1EA2                     CCP2PPS         equ	7842	;# 
  1218     1EA3                     CCP3PPS         equ	7843	;# 
  1219     1EA4                     CCP4PPS         equ	7844	;# 
  1220     1EA5                     CCP5PPS         equ	7845	;# 
  1221     1EA9                     SMT1WINPPS      equ	7849	;# 
  1222     1EAA                     SMT1SIGPPS      equ	7850	;# 
  1223     1EAB                     SMT2WINPPS      equ	7851	;# 
  1224     1EAC                     SMT2SIGPPS      equ	7852	;# 
  1225     1EB1                     CWG1PPS         equ	7857	;# 
  1226     1EB2                     CWG2PPS         equ	7858	;# 
  1227     1EB3                     CWG3PPS         equ	7859	;# 
  1228     1EB8                     MDCARLPPS       equ	7864	;# 
  1229     1EB9                     MDCARHPPS       equ	7865	;# 
  1230     1EBA                     MDSRCPPS        equ	7866	;# 
  1231     1EBB                     CLCIN0PPS       equ	7867	;# 
  1232     1EBC                     CLCIN1PPS       equ	7868	;# 
  1233     1EBD                     CLCIN2PPS       equ	7869	;# 
  1234     1EBE                     CLCIN3PPS       equ	7870	;# 
  1235     1EC3                     ADACTPPS        equ	7875	;# 
  1236     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1237     1EC6                     SSP1DATPPS      equ	7878	;# 
  1238     1EC7                     SSP1SSPPS       equ	7879	;# 
  1239     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1240     1EC9                     SSP2DATPPS      equ	7881	;# 
  1241     1ECA                     SSP2SSPPS       equ	7882	;# 
  1242     1ECB                     RX1PPS          equ	7883	;# 
  1243     1ECC                     CK1PPS          equ	7884	;# 
  1244     1ECD                     RX2PPS          equ	7885	;# 
  1245     1ECE                     CK2PPS          equ	7886	;# 
  1246     1F10                     RA0PPS          equ	7952	;# 
  1247     1F11                     RA1PPS          equ	7953	;# 
  1248     1F12                     RA2PPS          equ	7954	;# 
  1249     1F13                     RA3PPS          equ	7955	;# 
  1250     1F14                     RA4PPS          equ	7956	;# 
  1251     1F15                     RA5PPS          equ	7957	;# 
  1252     1F16                     RA6PPS          equ	7958	;# 
  1253     1F17                     RA7PPS          equ	7959	;# 
  1254     1F18                     RB0PPS          equ	7960	;# 
  1255     1F19                     RB1PPS          equ	7961	;# 
  1256     1F1A                     RB2PPS          equ	7962	;# 
  1257     1F1B                     RB3PPS          equ	7963	;# 
  1258     1F1C                     RB4PPS          equ	7964	;# 
  1259     1F1D                     RB5PPS          equ	7965	;# 
  1260     1F1E                     RB6PPS          equ	7966	;# 
  1261     1F1F                     RB7PPS          equ	7967	;# 
  1262     1F20                     RC0PPS          equ	7968	;# 
  1263     1F21                     RC1PPS          equ	7969	;# 
  1264     1F22                     RC2PPS          equ	7970	;# 
  1265     1F23                     RC3PPS          equ	7971	;# 
  1266     1F24                     RC4PPS          equ	7972	;# 
  1267     1F25                     RC5PPS          equ	7973	;# 
  1268     1F26                     RC6PPS          equ	7974	;# 
  1269     1F27                     RC7PPS          equ	7975	;# 
  1270     1F38                     ANSELA          equ	7992	;# 
  1271     1F39                     WPUA            equ	7993	;# 
  1272     1F3A                     ODCONA          equ	7994	;# 
  1273     1F3B                     SLRCONA         equ	7995	;# 
  1274     1F3C                     INLVLA          equ	7996	;# 
  1275     1F3D                     IOCAP           equ	7997	;# 
  1276     1F3E                     IOCAN           equ	7998	;# 
  1277     1F3F                     IOCAF           equ	7999	;# 
  1278     1F43                     ANSELB          equ	8003	;# 
  1279     1F44                     WPUB            equ	8004	;# 
  1280     1F45                     ODCONB          equ	8005	;# 
  1281     1F46                     SLRCONB         equ	8006	;# 
  1282     1F47                     INLVLB          equ	8007	;# 
  1283     1F48                     IOCBP           equ	8008	;# 
  1284     1F49                     IOCBN           equ	8009	;# 
  1285     1F4A                     IOCBF           equ	8010	;# 
  1286     1F4E                     ANSELC          equ	8014	;# 
  1287     1F4F                     WPUC            equ	8015	;# 
  1288     1F50                     ODCONC          equ	8016	;# 
  1289     1F51                     SLRCONC         equ	8017	;# 
  1290     1F52                     INLVLC          equ	8018	;# 
  1291     1F53                     IOCCP           equ	8019	;# 
  1292     1F54                     IOCCN           equ	8020	;# 
  1293     1F55                     IOCCF           equ	8021	;# 
  1294     1F65                     WPUE            equ	8037	;# 
  1295     1F66                     ODCONE          equ	8038	;# 
  1296     1F67                     SLRCONE         equ	8039	;# 
  1297     1F68                     INLVLE          equ	8040	;# 
  1298     1F69                     IOCEP           equ	8041	;# 
  1299     1F6A                     IOCEN           equ	8042	;# 
  1300     1F6B                     IOCEF           equ	8043	;# 
  1301     1FE4                     STATUS_SHAD     equ	8164	;# 
  1302     1FE5                     WREG_SHAD       equ	8165	;# 
  1303     1FE6                     BSR_SHAD        equ	8166	;# 
  1304     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1305     1FE8                     FSR0_SHAD       equ	8168	;# 
  1306     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1307     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1308     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1309     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1310     1FED                     STKPTR          equ	8173	;# 
  1311     1FEE                     TOSL            equ	8174	;# 
  1312     1FEF                     TOSH            equ	8175	;# 
  1313     0000                     INDF0           equ	0	;# 
  1314     0001                     INDF1           equ	1	;# 
  1315     0002                     PCL             equ	2	;# 
  1316     0003                     STATUS          equ	3	;# 
  1317     0004                     FSR0L           equ	4	;# 
  1318     0005                     FSR0H           equ	5	;# 
  1319     0006                     FSR1L           equ	6	;# 
  1320     0007                     FSR1H           equ	7	;# 
  1321     0008                     BSR             equ	8	;# 
  1322     0009                     WREG            equ	9	;# 
  1323     000A                     PCLATH          equ	10	;# 
  1324     000B                     INTCON          equ	11	;# 
  1325     000C                     PORTA           equ	12	;# 
  1326     000D                     PORTB           equ	13	;# 
  1327     000E                     PORTC           equ	14	;# 
  1328     0010                     PORTE           equ	16	;# 
  1329     0012                     TRISA           equ	18	;# 
  1330     0013                     TRISB           equ	19	;# 
  1331     0014                     TRISC           equ	20	;# 
  1332     0016                     TRISE           equ	22	;# 
  1333     0018                     LATA            equ	24	;# 
  1334     0019                     LATB            equ	25	;# 
  1335     001A                     LATC            equ	26	;# 
  1336     008C                     ADLTH           equ	140	;# 
  1337     008C                     ADLTHL          equ	140	;# 
  1338     008D                     ADLTHH          equ	141	;# 
  1339     008E                     ADUTH           equ	142	;# 
  1340     008E                     ADUTHL          equ	142	;# 
  1341     008F                     ADUTHH          equ	143	;# 
  1342     0090                     ADERR           equ	144	;# 
  1343     0090                     ADERRL          equ	144	;# 
  1344     0091                     ADERRH          equ	145	;# 
  1345     0092                     ADSTPT          equ	146	;# 
  1346     0092                     ADSTPTL         equ	146	;# 
  1347     0093                     ADSTPTH         equ	147	;# 
  1348     0094                     ADFLTR          equ	148	;# 
  1349     0094                     ADFLTRL         equ	148	;# 
  1350     0095                     ADFLTRH         equ	149	;# 
  1351     0096                     ADACC           equ	150	;# 
  1352     0096                     ADACCL          equ	150	;# 
  1353     0097                     ADACCH          equ	151	;# 
  1354     0098                     ADACCU          equ	152	;# 
  1355     0099                     ADCNT           equ	153	;# 
  1356     009A                     ADRPT           equ	154	;# 
  1357     009B                     ADPREV          equ	155	;# 
  1358     009B                     ADPREVL         equ	155	;# 
  1359     009C                     ADPREVH         equ	156	;# 
  1360     009D                     ADRES           equ	157	;# 
  1361     009D                     ADRESL          equ	157	;# 
  1362     009E                     ADRESH          equ	158	;# 
  1363     009F                     ADPCH           equ	159	;# 
  1364     010C                     ADACQ           equ	268	;# 
  1365     010C                     ADACQL          equ	268	;# 
  1366     010D                     ADACQH          equ	269	;# 
  1367     010E                     ADCAP           equ	270	;# 
  1368     010F                     ADPRE           equ	271	;# 
  1369     010F                     ADPREL          equ	271	;# 
  1370     0110                     ADPREH          equ	272	;# 
  1371     0111                     ADCON0          equ	273	;# 
  1372     0112                     ADCON1          equ	274	;# 
  1373     0113                     ADCON2          equ	275	;# 
  1374     0114                     ADCON3          equ	276	;# 
  1375     0115                     ADSTAT          equ	277	;# 
  1376     0116                     ADREF           equ	278	;# 
  1377     0117                     ADACT           equ	279	;# 
  1378     0118                     ADCLK           equ	280	;# 
  1379     0119                     RC1REG          equ	281	;# 
  1380     0119                     RCREG           equ	281	;# 
  1381     0119                     RCREG1          equ	281	;# 
  1382     011A                     TX1REG          equ	282	;# 
  1383     011A                     TXREG1          equ	282	;# 
  1384     011A                     TXREG           equ	282	;# 
  1385     011B                     SP1BRG          equ	283	;# 
  1386     011B                     SPBRG           equ	283	;# 
  1387     011B                     SP1BRGL         equ	283	;# 
  1388     011B                     SPBRG1          equ	283	;# 
  1389     011B                     SPBRGL          equ	283	;# 
  1390     011C                     SP1BRGH         equ	284	;# 
  1391     011C                     SPBRGH          equ	284	;# 
  1392     011C                     SPBRGH1         equ	284	;# 
  1393     011D                     RC1STA          equ	285	;# 
  1394     011D                     RCSTA1          equ	285	;# 
  1395     011D                     RCSTA           equ	285	;# 
  1396     011E                     TX1STA          equ	286	;# 
  1397     011E                     TXSTA1          equ	286	;# 
  1398     011E                     TXSTA           equ	286	;# 
  1399     011F                     BAUD1CON        equ	287	;# 
  1400     011F                     BAUDCON1        equ	287	;# 
  1401     011F                     BAUDCTL1        equ	287	;# 
  1402     011F                     BAUDCON         equ	287	;# 
  1403     011F                     BAUDCTL         equ	287	;# 
  1404     018C                     SSP1BUF         equ	396	;# 
  1405     018D                     SSP1ADD         equ	397	;# 
  1406     018E                     SSP1MSK         equ	398	;# 
  1407     018F                     SSP1STAT        equ	399	;# 
  1408     0190                     SSP1CON1        equ	400	;# 
  1409     0191                     SSP1CON2        equ	401	;# 
  1410     0192                     SSP1CON3        equ	402	;# 
  1411     0196                     SSP2BUF         equ	406	;# 
  1412     0197                     SSP2ADD         equ	407	;# 
  1413     0198                     SSP2MSK         equ	408	;# 
  1414     0199                     SSP2STAT        equ	409	;# 
  1415     019A                     SSP2CON1        equ	410	;# 
  1416     019B                     SSP2CON2        equ	411	;# 
  1417     019C                     SSP2CON3        equ	412	;# 
  1418     020C                     TMR1            equ	524	;# 
  1419     020C                     TMR1L           equ	524	;# 
  1420     020D                     TMR1H           equ	525	;# 
  1421     020E                     T1CON           equ	526	;# 
  1422     020E                     TMR1CON         equ	526	;# 
  1423     020F                     T1GCON          equ	527	;# 
  1424     020F                     TMR1GCON        equ	527	;# 
  1425     0210                     T1GATE          equ	528	;# 
  1426     0210                     TMR1GATE        equ	528	;# 
  1427     0211                     T1CLK           equ	529	;# 
  1428     0211                     TMR1CLK         equ	529	;# 
  1429     0211                     PR1             equ	529	;# 
  1430     0212                     TMR3            equ	530	;# 
  1431     0212                     TMR3L           equ	530	;# 
  1432     0213                     TMR3H           equ	531	;# 
  1433     0214                     T3CON           equ	532	;# 
  1434     0214                     TMR3CON         equ	532	;# 
  1435     0215                     T3GCON          equ	533	;# 
  1436     0215                     TMR3GCON        equ	533	;# 
  1437     0216                     T3GATE          equ	534	;# 
  1438     0216                     TMR3GATE        equ	534	;# 
  1439     0217                     T3CLK           equ	535	;# 
  1440     0217                     TMR3CLK         equ	535	;# 
  1441     0217                     PR3             equ	535	;# 
  1442     0218                     TMR5            equ	536	;# 
  1443     0218                     TMR5L           equ	536	;# 
  1444     0219                     TMR5H           equ	537	;# 
  1445     021A                     T5CON           equ	538	;# 
  1446     021A                     TMR5CON         equ	538	;# 
  1447     021B                     T5GCON          equ	539	;# 
  1448     021B                     TMR5GCON        equ	539	;# 
  1449     021C                     T5GATE          equ	540	;# 
  1450     021C                     TMR5GATE        equ	540	;# 
  1451     021D                     T5CLK           equ	541	;# 
  1452     021D                     TMR5CLK         equ	541	;# 
  1453     021D                     PR5             equ	541	;# 
  1454     021E                     CCPTMRS0        equ	542	;# 
  1455     021F                     CCPTMRS1        equ	543	;# 
  1456     028C                     T2TMR           equ	652	;# 
  1457     028C                     TMR2            equ	652	;# 
  1458     028D                     T2PR            equ	653	;# 
  1459     028D                     PR2             equ	653	;# 
  1460     028E                     T2CON           equ	654	;# 
  1461     028F                     T2HLT           equ	655	;# 
  1462     0290                     T2CLKCON        equ	656	;# 
  1463     0291                     T2RST           equ	657	;# 
  1464     0292                     T4TMR           equ	658	;# 
  1465     0292                     TMR4            equ	658	;# 
  1466     0293                     T4PR            equ	659	;# 
  1467     0293                     PR4             equ	659	;# 
  1468     0294                     T4CON           equ	660	;# 
  1469     0295                     T4HLT           equ	661	;# 
  1470     0296                     T4CLKCON        equ	662	;# 
  1471     0297                     T4RST           equ	663	;# 
  1472     0298                     T6TMR           equ	664	;# 
  1473     0298                     TMR6            equ	664	;# 
  1474     0299                     T6PR            equ	665	;# 
  1475     0299                     PR6             equ	665	;# 
  1476     029A                     T6CON           equ	666	;# 
  1477     029B                     T6HLT           equ	667	;# 
  1478     029C                     T6CLKCON        equ	668	;# 
  1479     029D                     T6RST           equ	669	;# 
  1480     029F                     ADCPCON0        equ	671	;# 
  1481     030C                     CCPR1           equ	780	;# 
  1482     030C                     CCPR1L          equ	780	;# 
  1483     030D                     CCPR1H          equ	781	;# 
  1484     030E                     CCP1CON         equ	782	;# 
  1485     030F                     CCP1CAP         equ	783	;# 
  1486     0310                     CCPR2           equ	784	;# 
  1487     0310                     CCPR2L          equ	784	;# 
  1488     0311                     CCPR2H          equ	785	;# 
  1489     0312                     CCP2CON         equ	786	;# 
  1490     0313                     CCP2CAP         equ	787	;# 
  1491     0314                     CCPR3           equ	788	;# 
  1492     0314                     CCPR3L          equ	788	;# 
  1493     0315                     CCPR3H          equ	789	;# 
  1494     0316                     CCP3CON         equ	790	;# 
  1495     0317                     CCP3CAP         equ	791	;# 
  1496     0318                     CCPR4           equ	792	;# 
  1497     0318                     CCPR4L          equ	792	;# 
  1498     0319                     CCPR4H          equ	793	;# 
  1499     031A                     CCP4CON         equ	794	;# 
  1500     031B                     CCP4CAP         equ	795	;# 
  1501     031C                     CCPR5           equ	796	;# 
  1502     031C                     CCPR5L          equ	796	;# 
  1503     031D                     CCPR5H          equ	797	;# 
  1504     031E                     CCP5CON         equ	798	;# 
  1505     031F                     CCP5CAP         equ	799	;# 
  1506     038C                     PWM6DC          equ	908	;# 
  1507     038C                     PWM6DCL         equ	908	;# 
  1508     038D                     PWM6DCH         equ	909	;# 
  1509     038E                     PWM6CON         equ	910	;# 
  1510     0390                     PWM7DC          equ	912	;# 
  1511     0390                     PWM7DCL         equ	912	;# 
  1512     0391                     PWM7DCH         equ	913	;# 
  1513     0392                     PWM7CON         equ	914	;# 
  1514     048C                     SMT1TMR         equ	1164	;# 
  1515     048C                     SMT1TMRL        equ	1164	;# 
  1516     048D                     SMT1TMRH        equ	1165	;# 
  1517     048E                     SMT1TMRU        equ	1166	;# 
  1518     048F                     SMT1CPR         equ	1167	;# 
  1519     048F                     SMT1CPRL        equ	1167	;# 
  1520     0490                     SMT1CPRH        equ	1168	;# 
  1521     0491                     SMT1CPRU        equ	1169	;# 
  1522     0492                     SMT1CPW         equ	1170	;# 
  1523     0492                     SMT1CPWL        equ	1170	;# 
  1524     0493                     SMT1CPWH        equ	1171	;# 
  1525     0494                     SMT1CPWU        equ	1172	;# 
  1526     0495                     SMT1PR          equ	1173	;# 
  1527     0495                     SMT1PRL         equ	1173	;# 
  1528     0496                     SMT1PRH         equ	1174	;# 
  1529     0497                     SMT1PRU         equ	1175	;# 
  1530     0498                     SMT1CON0        equ	1176	;# 
  1531     0499                     SMT1CON1        equ	1177	;# 
  1532     049A                     SMT1STAT        equ	1178	;# 
  1533     049B                     SMT1CLK         equ	1179	;# 
  1534     049C                     SMT1SIG         equ	1180	;# 
  1535     049D                     SMT1WIN         equ	1181	;# 
  1536     050C                     SMT2TMR         equ	1292	;# 
  1537     050C                     SMT2TMRL        equ	1292	;# 
  1538     050D                     SMT2TMRH        equ	1293	;# 
  1539     050E                     SMT2TMRU        equ	1294	;# 
  1540     050F                     SMT2CPR         equ	1295	;# 
  1541     050F                     SMT2CPRL        equ	1295	;# 
  1542     0510                     SMT2CPRH        equ	1296	;# 
  1543     0511                     SMT2CPRU        equ	1297	;# 
  1544     0512                     SMT2CPW         equ	1298	;# 
  1545     0512                     SMT2CPWL        equ	1298	;# 
  1546     0513                     SMT2CPWH        equ	1299	;# 
  1547     0514                     SMT2CPWU        equ	1300	;# 
  1548     0515                     SMT2PR          equ	1301	;# 
  1549     0515                     SMT2PRL         equ	1301	;# 
  1550     0516                     SMT2PRH         equ	1302	;# 
  1551     0517                     SMT2PRU         equ	1303	;# 
  1552     0518                     SMT2CON0        equ	1304	;# 
  1553     0519                     SMT2CON1        equ	1305	;# 
  1554     051A                     SMT2STAT        equ	1306	;# 
  1555     051B                     SMT2CLK         equ	1307	;# 
  1556     051C                     SMT2SIG         equ	1308	;# 
  1557     051D                     SMT2WIN         equ	1309	;# 
  1558     058C                     NCO1ACC         equ	1420	;# 
  1559     058C                     NCO1ACCL        equ	1420	;# 
  1560     058D                     NCO1ACCH        equ	1421	;# 
  1561     058E                     NCO1ACCU        equ	1422	;# 
  1562     058F                     NCO1INC         equ	1423	;# 
  1563     058F                     NCO1INCL        equ	1423	;# 
  1564     0590                     NCO1INCH        equ	1424	;# 
  1565     0591                     NCO1INCU        equ	1425	;# 
  1566     0592                     NCO1CON         equ	1426	;# 
  1567     0593                     NCO1CLK         equ	1427	;# 
  1568     059C                     TMR0L           equ	1436	;# 
  1569     059C                     TMR0            equ	1436	;# 
  1570     059D                     TMR0H           equ	1437	;# 
  1571     059D                     PR0             equ	1437	;# 
  1572     059E                     T0CON0          equ	1438	;# 
  1573     059F                     T0CON1          equ	1439	;# 
  1574     060C                     CWG1CLK         equ	1548	;# 
  1575     060C                     CWG1CLKCON      equ	1548	;# 
  1576     060D                     CWG1ISM         equ	1549	;# 
  1577     060D                     CWG1DAT         equ	1549	;# 
  1578     060E                     CWG1DBR         equ	1550	;# 
  1579     060F                     CWG1DBF         equ	1551	;# 
  1580     0610                     CWG1CON0        equ	1552	;# 
  1581     0611                     CWG1CON1        equ	1553	;# 
  1582     0612                     CWG1AS0         equ	1554	;# 
  1583     0613                     CWG1AS1         equ	1555	;# 
  1584     0614                     CWG1STR         equ	1556	;# 
  1585     0616                     CWG2CLK         equ	1558	;# 
  1586     0616                     CWG2CLKCON      equ	1558	;# 
  1587     0617                     CWG2ISM         equ	1559	;# 
  1588     0617                     CWG2DAT         equ	1559	;# 
  1589     0618                     CWG2DBR         equ	1560	;# 
  1590     0619                     CWG2DBF         equ	1561	;# 
  1591     061A                     CWG2CON0        equ	1562	;# 
  1592     061B                     CWG2CON1        equ	1563	;# 
  1593     061C                     CWG2AS0         equ	1564	;# 
  1594     061D                     CWG2AS1         equ	1565	;# 
  1595     061E                     CWG2STR         equ	1566	;# 
  1596     068C                     CWG3CLK         equ	1676	;# 
  1597     068C                     CWG3CLKCON      equ	1676	;# 
  1598     068D                     CWG3ISM         equ	1677	;# 
  1599     068D                     CWG3DAT         equ	1677	;# 
  1600     068E                     CWG3DBR         equ	1678	;# 
  1601     068F                     CWG3DBF         equ	1679	;# 
  1602     0690                     CWG3CON0        equ	1680	;# 
  1603     0691                     CWG3CON1        equ	1681	;# 
  1604     0692                     CWG3AS0         equ	1682	;# 
  1605     0693                     CWG3AS1         equ	1683	;# 
  1606     0694                     CWG3STR         equ	1684	;# 
  1607     070C                     PIR0            equ	1804	;# 
  1608     070D                     PIR1            equ	1805	;# 
  1609     070E                     PIR2            equ	1806	;# 
  1610     070F                     PIR3            equ	1807	;# 
  1611     0710                     PIR4            equ	1808	;# 
  1612     0711                     PIR5            equ	1809	;# 
  1613     0712                     PIR6            equ	1810	;# 
  1614     0713                     PIR7            equ	1811	;# 
  1615     0714                     PIR8            equ	1812	;# 
  1616     0716                     PIE0            equ	1814	;# 
  1617     0717                     PIE1            equ	1815	;# 
  1618     0718                     PIE2            equ	1816	;# 
  1619     0719                     PIE3            equ	1817	;# 
  1620     071A                     PIE4            equ	1818	;# 
  1621     071B                     PIE5            equ	1819	;# 
  1622     071C                     PIE6            equ	1820	;# 
  1623     071D                     PIE7            equ	1821	;# 
  1624     071E                     PIE8            equ	1822	;# 
  1625     0796                     PMD0            equ	1942	;# 
  1626     0797                     PMD1            equ	1943	;# 
  1627     0798                     PMD2            equ	1944	;# 
  1628     0799                     PMD3            equ	1945	;# 
  1629     079A                     PMD4            equ	1946	;# 
  1630     079B                     PMD5            equ	1947	;# 
  1631     079C                     PMD6            equ	1948	;# 
  1632     079D                     PMD7            equ	1949	;# 
  1633     080C                     WDTCON0         equ	2060	;# 
  1634     080D                     WDTCON1         equ	2061	;# 
  1635     080E                     WDTPSL          equ	2062	;# 
  1636     080F                     WDTPSH          equ	2063	;# 
  1637     0810                     WDTTMR          equ	2064	;# 
  1638     0811                     BORCON          equ	2065	;# 
  1639     0813                     PCON0           equ	2067	;# 
  1640     0814                     PCON1           equ	2068	;# 
  1641     081A                     NVMADR          equ	2074	;# 
  1642     081A                     NVMADRL         equ	2074	;# 
  1643     081B                     NVMADRH         equ	2075	;# 
  1644     081C                     NVMDAT          equ	2076	;# 
  1645     081C                     NVMDATL         equ	2076	;# 
  1646     081D                     NVMDATH         equ	2077	;# 
  1647     081E                     NVMCON1         equ	2078	;# 
  1648     081F                     NVMCON2         equ	2079	;# 
  1649     088C                     CPUDOZE         equ	2188	;# 
  1650     088D                     OSCCON1         equ	2189	;# 
  1651     088E                     OSCCON2         equ	2190	;# 
  1652     088F                     OSCCON3         equ	2191	;# 
  1653     0890                     OSCSTAT         equ	2192	;# 
  1654     0891                     OSCEN           equ	2193	;# 
  1655     0892                     OSCTUNE         equ	2194	;# 
  1656     0893                     OSCFRQ          equ	2195	;# 
  1657     0895                     CLKRCON         equ	2197	;# 
  1658     0896                     CLKRCLK         equ	2198	;# 
  1659     0897                     MD1CON0         equ	2199	;# 
  1660     0898                     MD1CON1         equ	2200	;# 
  1661     0899                     MD1SRC          equ	2201	;# 
  1662     089A                     MD1CARL         equ	2202	;# 
  1663     089B                     MD1CARH         equ	2203	;# 
  1664     090C                     FVRCON          equ	2316	;# 
  1665     090E                     DAC1CON0        equ	2318	;# 
  1666     090F                     DAC1CON1        equ	2319	;# 
  1667     091F                     ZCDCON          equ	2335	;# 
  1668     098F                     CMOUT           equ	2447	;# 
  1669     098F                     CMSTAT          equ	2447	;# 
  1670     0990                     CM1CON0         equ	2448	;# 
  1671     0991                     CM1CON1         equ	2449	;# 
  1672     0992                     CM1NCH          equ	2450	;# 
  1673     0993                     CM1PCH          equ	2451	;# 
  1674     0994                     CM2CON0         equ	2452	;# 
  1675     0995                     CM2CON1         equ	2453	;# 
  1676     0996                     CM2NCH          equ	2454	;# 
  1677     0997                     CM2PCH          equ	2455	;# 
  1678     0A19                     RC2REG          equ	2585	;# 
  1679     0A19                     RCREG2          equ	2585	;# 
  1680     0A1A                     TX2REG          equ	2586	;# 
  1681     0A1A                     TXREG2          equ	2586	;# 
  1682     0A1B                     SP2BRG          equ	2587	;# 
  1683     0A1B                     SP2BRGL         equ	2587	;# 
  1684     0A1B                     SPBRG2          equ	2587	;# 
  1685     0A1C                     SP2BRGH         equ	2588	;# 
  1686     0A1C                     SPBRGH2         equ	2588	;# 
  1687     0A1D                     RC2STA          equ	2589	;# 
  1688     0A1D                     RCSTA2          equ	2589	;# 
  1689     0A1E                     TX2STA          equ	2590	;# 
  1690     0A1E                     TXSTA2          equ	2590	;# 
  1691     0A1F                     BAUD2CON        equ	2591	;# 
  1692     0A1F                     BAUDCON2        equ	2591	;# 
  1693     0A1F                     BAUDCTL2        equ	2591	;# 
  1694     1E0F                     CLCDATA         equ	7695	;# 
  1695     1E10                     CLC1CON         equ	7696	;# 
  1696     1E11                     CLC1POL         equ	7697	;# 
  1697     1E12                     CLC1SEL0        equ	7698	;# 
  1698     1E13                     CLC1SEL1        equ	7699	;# 
  1699     1E14                     CLC1SEL2        equ	7700	;# 
  1700     1E15                     CLC1SEL3        equ	7701	;# 
  1701     1E16                     CLC1GLS0        equ	7702	;# 
  1702     1E17                     CLC1GLS1        equ	7703	;# 
  1703     1E18                     CLC1GLS2        equ	7704	;# 
  1704     1E19                     CLC1GLS3        equ	7705	;# 
  1705     1E1A                     CLC2CON         equ	7706	;# 
  1706     1E1B                     CLC2POL         equ	7707	;# 
  1707     1E1C                     CLC2SEL0        equ	7708	;# 
  1708     1E1D                     CLC2SEL1        equ	7709	;# 
  1709     1E1E                     CLC2SEL2        equ	7710	;# 
  1710     1E1F                     CLC2SEL3        equ	7711	;# 
  1711     1E20                     CLC2GLS0        equ	7712	;# 
  1712     1E21                     CLC2GLS1        equ	7713	;# 
  1713     1E22                     CLC2GLS2        equ	7714	;# 
  1714     1E23                     CLC2GLS3        equ	7715	;# 
  1715     1E24                     CLC3CON         equ	7716	;# 
  1716     1E25                     CLC3POL         equ	7717	;# 
  1717     1E26                     CLC3SEL0        equ	7718	;# 
  1718     1E27                     CLC3SEL1        equ	7719	;# 
  1719     1E28                     CLC3SEL2        equ	7720	;# 
  1720     1E29                     CLC3SEL3        equ	7721	;# 
  1721     1E2A                     CLC3GLS0        equ	7722	;# 
  1722     1E2B                     CLC3GLS1        equ	7723	;# 
  1723     1E2C                     CLC3GLS2        equ	7724	;# 
  1724     1E2D                     CLC3GLS3        equ	7725	;# 
  1725     1E2E                     CLC4CON         equ	7726	;# 
  1726     1E2F                     CLC4POL         equ	7727	;# 
  1727     1E30                     CLC4SEL0        equ	7728	;# 
  1728     1E31                     CLC4SEL1        equ	7729	;# 
  1729     1E32                     CLC4SEL2        equ	7730	;# 
  1730     1E33                     CLC4SEL3        equ	7731	;# 
  1731     1E34                     CLC4GLS0        equ	7732	;# 
  1732     1E35                     CLC4GLS1        equ	7733	;# 
  1733     1E36                     CLC4GLS2        equ	7734	;# 
  1734     1E37                     CLC4GLS3        equ	7735	;# 
  1735     1E8F                     PPSLOCK         equ	7823	;# 
  1736     1E90                     INTPPS          equ	7824	;# 
  1737     1E91                     T0CKIPPS        equ	7825	;# 
  1738     1E92                     T1CKIPPS        equ	7826	;# 
  1739     1E93                     T1GPPS          equ	7827	;# 
  1740     1E94                     T3CKIPPS        equ	7828	;# 
  1741     1E95                     T3GPPS          equ	7829	;# 
  1742     1E96                     T5CKIPPS        equ	7830	;# 
  1743     1E97                     T5GPPS          equ	7831	;# 
  1744     1E9C                     T2INPPS         equ	7836	;# 
  1745     1E9D                     T4INPPS         equ	7837	;# 
  1746     1E9E                     T6INPPS         equ	7838	;# 
  1747     1EA1                     CCP1PPS         equ	7841	;# 
  1748     1EA2                     CCP2PPS         equ	7842	;# 
  1749     1EA3                     CCP3PPS         equ	7843	;# 
  1750     1EA4                     CCP4PPS         equ	7844	;# 
  1751     1EA5                     CCP5PPS         equ	7845	;# 
  1752     1EA9                     SMT1WINPPS      equ	7849	;# 
  1753     1EAA                     SMT1SIGPPS      equ	7850	;# 
  1754     1EAB                     SMT2WINPPS      equ	7851	;# 
  1755     1EAC                     SMT2SIGPPS      equ	7852	;# 
  1756     1EB1                     CWG1PPS         equ	7857	;# 
  1757     1EB2                     CWG2PPS         equ	7858	;# 
  1758     1EB3                     CWG3PPS         equ	7859	;# 
  1759     1EB8                     MDCARLPPS       equ	7864	;# 
  1760     1EB9                     MDCARHPPS       equ	7865	;# 
  1761     1EBA                     MDSRCPPS        equ	7866	;# 
  1762     1EBB                     CLCIN0PPS       equ	7867	;# 
  1763     1EBC                     CLCIN1PPS       equ	7868	;# 
  1764     1EBD                     CLCIN2PPS       equ	7869	;# 
  1765     1EBE                     CLCIN3PPS       equ	7870	;# 
  1766     1EC3                     ADACTPPS        equ	7875	;# 
  1767     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1768     1EC6                     SSP1DATPPS      equ	7878	;# 
  1769     1EC7                     SSP1SSPPS       equ	7879	;# 
  1770     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1771     1EC9                     SSP2DATPPS      equ	7881	;# 
  1772     1ECA                     SSP2SSPPS       equ	7882	;# 
  1773     1ECB                     RX1PPS          equ	7883	;# 
  1774     1ECC                     CK1PPS          equ	7884	;# 
  1775     1ECD                     RX2PPS          equ	7885	;# 
  1776     1ECE                     CK2PPS          equ	7886	;# 
  1777     1F10                     RA0PPS          equ	7952	;# 
  1778     1F11                     RA1PPS          equ	7953	;# 
  1779     1F12                     RA2PPS          equ	7954	;# 
  1780     1F13                     RA3PPS          equ	7955	;# 
  1781     1F14                     RA4PPS          equ	7956	;# 
  1782     1F15                     RA5PPS          equ	7957	;# 
  1783     1F16                     RA6PPS          equ	7958	;# 
  1784     1F17                     RA7PPS          equ	7959	;# 
  1785     1F18                     RB0PPS          equ	7960	;# 
  1786     1F19                     RB1PPS          equ	7961	;# 
  1787     1F1A                     RB2PPS          equ	7962	;# 
  1788     1F1B                     RB3PPS          equ	7963	;# 
  1789     1F1C                     RB4PPS          equ	7964	;# 
  1790     1F1D                     RB5PPS          equ	7965	;# 
  1791     1F1E                     RB6PPS          equ	7966	;# 
  1792     1F1F                     RB7PPS          equ	7967	;# 
  1793     1F20                     RC0PPS          equ	7968	;# 
  1794     1F21                     RC1PPS          equ	7969	;# 
  1795     1F22                     RC2PPS          equ	7970	;# 
  1796     1F23                     RC3PPS          equ	7971	;# 
  1797     1F24                     RC4PPS          equ	7972	;# 
  1798     1F25                     RC5PPS          equ	7973	;# 
  1799     1F26                     RC6PPS          equ	7974	;# 
  1800     1F27                     RC7PPS          equ	7975	;# 
  1801     1F38                     ANSELA          equ	7992	;# 
  1802     1F39                     WPUA            equ	7993	;# 
  1803     1F3A                     ODCONA          equ	7994	;# 
  1804     1F3B                     SLRCONA         equ	7995	;# 
  1805     1F3C                     INLVLA          equ	7996	;# 
  1806     1F3D                     IOCAP           equ	7997	;# 
  1807     1F3E                     IOCAN           equ	7998	;# 
  1808     1F3F                     IOCAF           equ	7999	;# 
  1809     1F43                     ANSELB          equ	8003	;# 
  1810     1F44                     WPUB            equ	8004	;# 
  1811     1F45                     ODCONB          equ	8005	;# 
  1812     1F46                     SLRCONB         equ	8006	;# 
  1813     1F47                     INLVLB          equ	8007	;# 
  1814     1F48                     IOCBP           equ	8008	;# 
  1815     1F49                     IOCBN           equ	8009	;# 
  1816     1F4A                     IOCBF           equ	8010	;# 
  1817     1F4E                     ANSELC          equ	8014	;# 
  1818     1F4F                     WPUC            equ	8015	;# 
  1819     1F50                     ODCONC          equ	8016	;# 
  1820     1F51                     SLRCONC         equ	8017	;# 
  1821     1F52                     INLVLC          equ	8018	;# 
  1822     1F53                     IOCCP           equ	8019	;# 
  1823     1F54                     IOCCN           equ	8020	;# 
  1824     1F55                     IOCCF           equ	8021	;# 
  1825     1F65                     WPUE            equ	8037	;# 
  1826     1F66                     ODCONE          equ	8038	;# 
  1827     1F67                     SLRCONE         equ	8039	;# 
  1828     1F68                     INLVLE          equ	8040	;# 
  1829     1F69                     IOCEP           equ	8041	;# 
  1830     1F6A                     IOCEN           equ	8042	;# 
  1831     1F6B                     IOCEF           equ	8043	;# 
  1832     1FE4                     STATUS_SHAD     equ	8164	;# 
  1833     1FE5                     WREG_SHAD       equ	8165	;# 
  1834     1FE6                     BSR_SHAD        equ	8166	;# 
  1835     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1836     1FE8                     FSR0_SHAD       equ	8168	;# 
  1837     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1838     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1839     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1840     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1841     1FED                     STKPTR          equ	8173	;# 
  1842     1FEE                     TOSL            equ	8174	;# 
  1843     1FEF                     TOSH            equ	8175	;# 
  1844     0000                     INDF0           equ	0	;# 
  1845     0001                     INDF1           equ	1	;# 
  1846     0002                     PCL             equ	2	;# 
  1847     0003                     STATUS          equ	3	;# 
  1848     0004                     FSR0L           equ	4	;# 
  1849     0005                     FSR0H           equ	5	;# 
  1850     0006                     FSR1L           equ	6	;# 
  1851     0007                     FSR1H           equ	7	;# 
  1852     0008                     BSR             equ	8	;# 
  1853     0009                     WREG            equ	9	;# 
  1854     000A                     PCLATH          equ	10	;# 
  1855     000B                     INTCON          equ	11	;# 
  1856     000C                     PORTA           equ	12	;# 
  1857     000D                     PORTB           equ	13	;# 
  1858     000E                     PORTC           equ	14	;# 
  1859     0010                     PORTE           equ	16	;# 
  1860     0012                     TRISA           equ	18	;# 
  1861     0013                     TRISB           equ	19	;# 
  1862     0014                     TRISC           equ	20	;# 
  1863     0016                     TRISE           equ	22	;# 
  1864     0018                     LATA            equ	24	;# 
  1865     0019                     LATB            equ	25	;# 
  1866     001A                     LATC            equ	26	;# 
  1867     008C                     ADLTH           equ	140	;# 
  1868     008C                     ADLTHL          equ	140	;# 
  1869     008D                     ADLTHH          equ	141	;# 
  1870     008E                     ADUTH           equ	142	;# 
  1871     008E                     ADUTHL          equ	142	;# 
  1872     008F                     ADUTHH          equ	143	;# 
  1873     0090                     ADERR           equ	144	;# 
  1874     0090                     ADERRL          equ	144	;# 
  1875     0091                     ADERRH          equ	145	;# 
  1876     0092                     ADSTPT          equ	146	;# 
  1877     0092                     ADSTPTL         equ	146	;# 
  1878     0093                     ADSTPTH         equ	147	;# 
  1879     0094                     ADFLTR          equ	148	;# 
  1880     0094                     ADFLTRL         equ	148	;# 
  1881     0095                     ADFLTRH         equ	149	;# 
  1882     0096                     ADACC           equ	150	;# 
  1883     0096                     ADACCL          equ	150	;# 
  1884     0097                     ADACCH          equ	151	;# 
  1885     0098                     ADACCU          equ	152	;# 
  1886     0099                     ADCNT           equ	153	;# 
  1887     009A                     ADRPT           equ	154	;# 
  1888     009B                     ADPREV          equ	155	;# 
  1889     009B                     ADPREVL         equ	155	;# 
  1890     009C                     ADPREVH         equ	156	;# 
  1891     009D                     ADRES           equ	157	;# 
  1892     009D                     ADRESL          equ	157	;# 
  1893     009E                     ADRESH          equ	158	;# 
  1894     009F                     ADPCH           equ	159	;# 
  1895     010C                     ADACQ           equ	268	;# 
  1896     010C                     ADACQL          equ	268	;# 
  1897     010D                     ADACQH          equ	269	;# 
  1898     010E                     ADCAP           equ	270	;# 
  1899     010F                     ADPRE           equ	271	;# 
  1900     010F                     ADPREL          equ	271	;# 
  1901     0110                     ADPREH          equ	272	;# 
  1902     0111                     ADCON0          equ	273	;# 
  1903     0112                     ADCON1          equ	274	;# 
  1904     0113                     ADCON2          equ	275	;# 
  1905     0114                     ADCON3          equ	276	;# 
  1906     0115                     ADSTAT          equ	277	;# 
  1907     0116                     ADREF           equ	278	;# 
  1908     0117                     ADACT           equ	279	;# 
  1909     0118                     ADCLK           equ	280	;# 
  1910     0119                     RC1REG          equ	281	;# 
  1911     0119                     RCREG           equ	281	;# 
  1912     0119                     RCREG1          equ	281	;# 
  1913     011A                     TX1REG          equ	282	;# 
  1914     011A                     TXREG1          equ	282	;# 
  1915     011A                     TXREG           equ	282	;# 
  1916     011B                     SP1BRG          equ	283	;# 
  1917     011B                     SPBRG           equ	283	;# 
  1918     011B                     SP1BRGL         equ	283	;# 
  1919     011B                     SPBRG1          equ	283	;# 
  1920     011B                     SPBRGL          equ	283	;# 
  1921     011C                     SP1BRGH         equ	284	;# 
  1922     011C                     SPBRGH          equ	284	;# 
  1923     011C                     SPBRGH1         equ	284	;# 
  1924     011D                     RC1STA          equ	285	;# 
  1925     011D                     RCSTA1          equ	285	;# 
  1926     011D                     RCSTA           equ	285	;# 
  1927     011E                     TX1STA          equ	286	;# 
  1928     011E                     TXSTA1          equ	286	;# 
  1929     011E                     TXSTA           equ	286	;# 
  1930     011F                     BAUD1CON        equ	287	;# 
  1931     011F                     BAUDCON1        equ	287	;# 
  1932     011F                     BAUDCTL1        equ	287	;# 
  1933     011F                     BAUDCON         equ	287	;# 
  1934     011F                     BAUDCTL         equ	287	;# 
  1935     018C                     SSP1BUF         equ	396	;# 
  1936     018D                     SSP1ADD         equ	397	;# 
  1937     018E                     SSP1MSK         equ	398	;# 
  1938     018F                     SSP1STAT        equ	399	;# 
  1939     0190                     SSP1CON1        equ	400	;# 
  1940     0191                     SSP1CON2        equ	401	;# 
  1941     0192                     SSP1CON3        equ	402	;# 
  1942     0196                     SSP2BUF         equ	406	;# 
  1943     0197                     SSP2ADD         equ	407	;# 
  1944     0198                     SSP2MSK         equ	408	;# 
  1945     0199                     SSP2STAT        equ	409	;# 
  1946     019A                     SSP2CON1        equ	410	;# 
  1947     019B                     SSP2CON2        equ	411	;# 
  1948     019C                     SSP2CON3        equ	412	;# 
  1949     020C                     TMR1            equ	524	;# 
  1950     020C                     TMR1L           equ	524	;# 
  1951     020D                     TMR1H           equ	525	;# 
  1952     020E                     T1CON           equ	526	;# 
  1953     020E                     TMR1CON         equ	526	;# 
  1954     020F                     T1GCON          equ	527	;# 
  1955     020F                     TMR1GCON        equ	527	;# 
  1956     0210                     T1GATE          equ	528	;# 
  1957     0210                     TMR1GATE        equ	528	;# 
  1958     0211                     T1CLK           equ	529	;# 
  1959     0211                     TMR1CLK         equ	529	;# 
  1960     0211                     PR1             equ	529	;# 
  1961     0212                     TMR3            equ	530	;# 
  1962     0212                     TMR3L           equ	530	;# 
  1963     0213                     TMR3H           equ	531	;# 
  1964     0214                     T3CON           equ	532	;# 
  1965     0214                     TMR3CON         equ	532	;# 
  1966     0215                     T3GCON          equ	533	;# 
  1967     0215                     TMR3GCON        equ	533	;# 
  1968     0216                     T3GATE          equ	534	;# 
  1969     0216                     TMR3GATE        equ	534	;# 
  1970     0217                     T3CLK           equ	535	;# 
  1971     0217                     TMR3CLK         equ	535	;# 
  1972     0217                     PR3             equ	535	;# 
  1973     0218                     TMR5            equ	536	;# 
  1974     0218                     TMR5L           equ	536	;# 
  1975     0219                     TMR5H           equ	537	;# 
  1976     021A                     T5CON           equ	538	;# 
  1977     021A                     TMR5CON         equ	538	;# 
  1978     021B                     T5GCON          equ	539	;# 
  1979     021B                     TMR5GCON        equ	539	;# 
  1980     021C                     T5GATE          equ	540	;# 
  1981     021C                     TMR5GATE        equ	540	;# 
  1982     021D                     T5CLK           equ	541	;# 
  1983     021D                     TMR5CLK         equ	541	;# 
  1984     021D                     PR5             equ	541	;# 
  1985     021E                     CCPTMRS0        equ	542	;# 
  1986     021F                     CCPTMRS1        equ	543	;# 
  1987     028C                     T2TMR           equ	652	;# 
  1988     028C                     TMR2            equ	652	;# 
  1989     028D                     T2PR            equ	653	;# 
  1990     028D                     PR2             equ	653	;# 
  1991     028E                     T2CON           equ	654	;# 
  1992     028F                     T2HLT           equ	655	;# 
  1993     0290                     T2CLKCON        equ	656	;# 
  1994     0291                     T2RST           equ	657	;# 
  1995     0292                     T4TMR           equ	658	;# 
  1996     0292                     TMR4            equ	658	;# 
  1997     0293                     T4PR            equ	659	;# 
  1998     0293                     PR4             equ	659	;# 
  1999     0294                     T4CON           equ	660	;# 
  2000     0295                     T4HLT           equ	661	;# 
  2001     0296                     T4CLKCON        equ	662	;# 
  2002     0297                     T4RST           equ	663	;# 
  2003     0298                     T6TMR           equ	664	;# 
  2004     0298                     TMR6            equ	664	;# 
  2005     0299                     T6PR            equ	665	;# 
  2006     0299                     PR6             equ	665	;# 
  2007     029A                     T6CON           equ	666	;# 
  2008     029B                     T6HLT           equ	667	;# 
  2009     029C                     T6CLKCON        equ	668	;# 
  2010     029D                     T6RST           equ	669	;# 
  2011     029F                     ADCPCON0        equ	671	;# 
  2012     030C                     CCPR1           equ	780	;# 
  2013     030C                     CCPR1L          equ	780	;# 
  2014     030D                     CCPR1H          equ	781	;# 
  2015     030E                     CCP1CON         equ	782	;# 
  2016     030F                     CCP1CAP         equ	783	;# 
  2017     0310                     CCPR2           equ	784	;# 
  2018     0310                     CCPR2L          equ	784	;# 
  2019     0311                     CCPR2H          equ	785	;# 
  2020     0312                     CCP2CON         equ	786	;# 
  2021     0313                     CCP2CAP         equ	787	;# 
  2022     0314                     CCPR3           equ	788	;# 
  2023     0314                     CCPR3L          equ	788	;# 
  2024     0315                     CCPR3H          equ	789	;# 
  2025     0316                     CCP3CON         equ	790	;# 
  2026     0317                     CCP3CAP         equ	791	;# 
  2027     0318                     CCPR4           equ	792	;# 
  2028     0318                     CCPR4L          equ	792	;# 
  2029     0319                     CCPR4H          equ	793	;# 
  2030     031A                     CCP4CON         equ	794	;# 
  2031     031B                     CCP4CAP         equ	795	;# 
  2032     031C                     CCPR5           equ	796	;# 
  2033     031C                     CCPR5L          equ	796	;# 
  2034     031D                     CCPR5H          equ	797	;# 
  2035     031E                     CCP5CON         equ	798	;# 
  2036     031F                     CCP5CAP         equ	799	;# 
  2037     038C                     PWM6DC          equ	908	;# 
  2038     038C                     PWM6DCL         equ	908	;# 
  2039     038D                     PWM6DCH         equ	909	;# 
  2040     038E                     PWM6CON         equ	910	;# 
  2041     0390                     PWM7DC          equ	912	;# 
  2042     0390                     PWM7DCL         equ	912	;# 
  2043     0391                     PWM7DCH         equ	913	;# 
  2044     0392                     PWM7CON         equ	914	;# 
  2045     048C                     SMT1TMR         equ	1164	;# 
  2046     048C                     SMT1TMRL        equ	1164	;# 
  2047     048D                     SMT1TMRH        equ	1165	;# 
  2048     048E                     SMT1TMRU        equ	1166	;# 
  2049     048F                     SMT1CPR         equ	1167	;# 
  2050     048F                     SMT1CPRL        equ	1167	;# 
  2051     0490                     SMT1CPRH        equ	1168	;# 
  2052     0491                     SMT1CPRU        equ	1169	;# 
  2053     0492                     SMT1CPW         equ	1170	;# 
  2054     0492                     SMT1CPWL        equ	1170	;# 
  2055     0493                     SMT1CPWH        equ	1171	;# 
  2056     0494                     SMT1CPWU        equ	1172	;# 
  2057     0495                     SMT1PR          equ	1173	;# 
  2058     0495                     SMT1PRL         equ	1173	;# 
  2059     0496                     SMT1PRH         equ	1174	;# 
  2060     0497                     SMT1PRU         equ	1175	;# 
  2061     0498                     SMT1CON0        equ	1176	;# 
  2062     0499                     SMT1CON1        equ	1177	;# 
  2063     049A                     SMT1STAT        equ	1178	;# 
  2064     049B                     SMT1CLK         equ	1179	;# 
  2065     049C                     SMT1SIG         equ	1180	;# 
  2066     049D                     SMT1WIN         equ	1181	;# 
  2067     050C                     SMT2TMR         equ	1292	;# 
  2068     050C                     SMT2TMRL        equ	1292	;# 
  2069     050D                     SMT2TMRH        equ	1293	;# 
  2070     050E                     SMT2TMRU        equ	1294	;# 
  2071     050F                     SMT2CPR         equ	1295	;# 
  2072     050F                     SMT2CPRL        equ	1295	;# 
  2073     0510                     SMT2CPRH        equ	1296	;# 
  2074     0511                     SMT2CPRU        equ	1297	;# 
  2075     0512                     SMT2CPW         equ	1298	;# 
  2076     0512                     SMT2CPWL        equ	1298	;# 
  2077     0513                     SMT2CPWH        equ	1299	;# 
  2078     0514                     SMT2CPWU        equ	1300	;# 
  2079     0515                     SMT2PR          equ	1301	;# 
  2080     0515                     SMT2PRL         equ	1301	;# 
  2081     0516                     SMT2PRH         equ	1302	;# 
  2082     0517                     SMT2PRU         equ	1303	;# 
  2083     0518                     SMT2CON0        equ	1304	;# 
  2084     0519                     SMT2CON1        equ	1305	;# 
  2085     051A                     SMT2STAT        equ	1306	;# 
  2086     051B                     SMT2CLK         equ	1307	;# 
  2087     051C                     SMT2SIG         equ	1308	;# 
  2088     051D                     SMT2WIN         equ	1309	;# 
  2089     058C                     NCO1ACC         equ	1420	;# 
  2090     058C                     NCO1ACCL        equ	1420	;# 
  2091     058D                     NCO1ACCH        equ	1421	;# 
  2092     058E                     NCO1ACCU        equ	1422	;# 
  2093     058F                     NCO1INC         equ	1423	;# 
  2094     058F                     NCO1INCL        equ	1423	;# 
  2095     0590                     NCO1INCH        equ	1424	;# 
  2096     0591                     NCO1INCU        equ	1425	;# 
  2097     0592                     NCO1CON         equ	1426	;# 
  2098     0593                     NCO1CLK         equ	1427	;# 
  2099     059C                     TMR0L           equ	1436	;# 
  2100     059C                     TMR0            equ	1436	;# 
  2101     059D                     TMR0H           equ	1437	;# 
  2102     059D                     PR0             equ	1437	;# 
  2103     059E                     T0CON0          equ	1438	;# 
  2104     059F                     T0CON1          equ	1439	;# 
  2105     060C                     CWG1CLK         equ	1548	;# 
  2106     060C                     CWG1CLKCON      equ	1548	;# 
  2107     060D                     CWG1ISM         equ	1549	;# 
  2108     060D                     CWG1DAT         equ	1549	;# 
  2109     060E                     CWG1DBR         equ	1550	;# 
  2110     060F                     CWG1DBF         equ	1551	;# 
  2111     0610                     CWG1CON0        equ	1552	;# 
  2112     0611                     CWG1CON1        equ	1553	;# 
  2113     0612                     CWG1AS0         equ	1554	;# 
  2114     0613                     CWG1AS1         equ	1555	;# 
  2115     0614                     CWG1STR         equ	1556	;# 
  2116     0616                     CWG2CLK         equ	1558	;# 
  2117     0616                     CWG2CLKCON      equ	1558	;# 
  2118     0617                     CWG2ISM         equ	1559	;# 
  2119     0617                     CWG2DAT         equ	1559	;# 
  2120     0618                     CWG2DBR         equ	1560	;# 
  2121     0619                     CWG2DBF         equ	1561	;# 
  2122     061A                     CWG2CON0        equ	1562	;# 
  2123     061B                     CWG2CON1        equ	1563	;# 
  2124     061C                     CWG2AS0         equ	1564	;# 
  2125     061D                     CWG2AS1         equ	1565	;# 
  2126     061E                     CWG2STR         equ	1566	;# 
  2127     068C                     CWG3CLK         equ	1676	;# 
  2128     068C                     CWG3CLKCON      equ	1676	;# 
  2129     068D                     CWG3ISM         equ	1677	;# 
  2130     068D                     CWG3DAT         equ	1677	;# 
  2131     068E                     CWG3DBR         equ	1678	;# 
  2132     068F                     CWG3DBF         equ	1679	;# 
  2133     0690                     CWG3CON0        equ	1680	;# 
  2134     0691                     CWG3CON1        equ	1681	;# 
  2135     0692                     CWG3AS0         equ	1682	;# 
  2136     0693                     CWG3AS1         equ	1683	;# 
  2137     0694                     CWG3STR         equ	1684	;# 
  2138     070C                     PIR0            equ	1804	;# 
  2139     070D                     PIR1            equ	1805	;# 
  2140     070E                     PIR2            equ	1806	;# 
  2141     070F                     PIR3            equ	1807	;# 
  2142     0710                     PIR4            equ	1808	;# 
  2143     0711                     PIR5            equ	1809	;# 
  2144     0712                     PIR6            equ	1810	;# 
  2145     0713                     PIR7            equ	1811	;# 
  2146     0714                     PIR8            equ	1812	;# 
  2147     0716                     PIE0            equ	1814	;# 
  2148     0717                     PIE1            equ	1815	;# 
  2149     0718                     PIE2            equ	1816	;# 
  2150     0719                     PIE3            equ	1817	;# 
  2151     071A                     PIE4            equ	1818	;# 
  2152     071B                     PIE5            equ	1819	;# 
  2153     071C                     PIE6            equ	1820	;# 
  2154     071D                     PIE7            equ	1821	;# 
  2155     071E                     PIE8            equ	1822	;# 
  2156     0796                     PMD0            equ	1942	;# 
  2157     0797                     PMD1            equ	1943	;# 
  2158     0798                     PMD2            equ	1944	;# 
  2159     0799                     PMD3            equ	1945	;# 
  2160     079A                     PMD4            equ	1946	;# 
  2161     079B                     PMD5            equ	1947	;# 
  2162     079C                     PMD6            equ	1948	;# 
  2163     079D                     PMD7            equ	1949	;# 
  2164     080C                     WDTCON0         equ	2060	;# 
  2165     080D                     WDTCON1         equ	2061	;# 
  2166     080E                     WDTPSL          equ	2062	;# 
  2167     080F                     WDTPSH          equ	2063	;# 
  2168     0810                     WDTTMR          equ	2064	;# 
  2169     0811                     BORCON          equ	2065	;# 
  2170     0813                     PCON0           equ	2067	;# 
  2171     0814                     PCON1           equ	2068	;# 
  2172     081A                     NVMADR          equ	2074	;# 
  2173     081A                     NVMADRL         equ	2074	;# 
  2174     081B                     NVMADRH         equ	2075	;# 
  2175     081C                     NVMDAT          equ	2076	;# 
  2176     081C                     NVMDATL         equ	2076	;# 
  2177     081D                     NVMDATH         equ	2077	;# 
  2178     081E                     NVMCON1         equ	2078	;# 
  2179     081F                     NVMCON2         equ	2079	;# 
  2180     088C                     CPUDOZE         equ	2188	;# 
  2181     088D                     OSCCON1         equ	2189	;# 
  2182     088E                     OSCCON2         equ	2190	;# 
  2183     088F                     OSCCON3         equ	2191	;# 
  2184     0890                     OSCSTAT         equ	2192	;# 
  2185     0891                     OSCEN           equ	2193	;# 
  2186     0892                     OSCTUNE         equ	2194	;# 
  2187     0893                     OSCFRQ          equ	2195	;# 
  2188     0895                     CLKRCON         equ	2197	;# 
  2189     0896                     CLKRCLK         equ	2198	;# 
  2190     0897                     MD1CON0         equ	2199	;# 
  2191     0898                     MD1CON1         equ	2200	;# 
  2192     0899                     MD1SRC          equ	2201	;# 
  2193     089A                     MD1CARL         equ	2202	;# 
  2194     089B                     MD1CARH         equ	2203	;# 
  2195     090C                     FVRCON          equ	2316	;# 
  2196     090E                     DAC1CON0        equ	2318	;# 
  2197     090F                     DAC1CON1        equ	2319	;# 
  2198     091F                     ZCDCON          equ	2335	;# 
  2199     098F                     CMOUT           equ	2447	;# 
  2200     098F                     CMSTAT          equ	2447	;# 
  2201     0990                     CM1CON0         equ	2448	;# 
  2202     0991                     CM1CON1         equ	2449	;# 
  2203     0992                     CM1NCH          equ	2450	;# 
  2204     0993                     CM1PCH          equ	2451	;# 
  2205     0994                     CM2CON0         equ	2452	;# 
  2206     0995                     CM2CON1         equ	2453	;# 
  2207     0996                     CM2NCH          equ	2454	;# 
  2208     0997                     CM2PCH          equ	2455	;# 
  2209     0A19                     RC2REG          equ	2585	;# 
  2210     0A19                     RCREG2          equ	2585	;# 
  2211     0A1A                     TX2REG          equ	2586	;# 
  2212     0A1A                     TXREG2          equ	2586	;# 
  2213     0A1B                     SP2BRG          equ	2587	;# 
  2214     0A1B                     SP2BRGL         equ	2587	;# 
  2215     0A1B                     SPBRG2          equ	2587	;# 
  2216     0A1C                     SP2BRGH         equ	2588	;# 
  2217     0A1C                     SPBRGH2         equ	2588	;# 
  2218     0A1D                     RC2STA          equ	2589	;# 
  2219     0A1D                     RCSTA2          equ	2589	;# 
  2220     0A1E                     TX2STA          equ	2590	;# 
  2221     0A1E                     TXSTA2          equ	2590	;# 
  2222     0A1F                     BAUD2CON        equ	2591	;# 
  2223     0A1F                     BAUDCON2        equ	2591	;# 
  2224     0A1F                     BAUDCTL2        equ	2591	;# 
  2225     1E0F                     CLCDATA         equ	7695	;# 
  2226     1E10                     CLC1CON         equ	7696	;# 
  2227     1E11                     CLC1POL         equ	7697	;# 
  2228     1E12                     CLC1SEL0        equ	7698	;# 
  2229     1E13                     CLC1SEL1        equ	7699	;# 
  2230     1E14                     CLC1SEL2        equ	7700	;# 
  2231     1E15                     CLC1SEL3        equ	7701	;# 
  2232     1E16                     CLC1GLS0        equ	7702	;# 
  2233     1E17                     CLC1GLS1        equ	7703	;# 
  2234     1E18                     CLC1GLS2        equ	7704	;# 
  2235     1E19                     CLC1GLS3        equ	7705	;# 
  2236     1E1A                     CLC2CON         equ	7706	;# 
  2237     1E1B                     CLC2POL         equ	7707	;# 
  2238     1E1C                     CLC2SEL0        equ	7708	;# 
  2239     1E1D                     CLC2SEL1        equ	7709	;# 
  2240     1E1E                     CLC2SEL2        equ	7710	;# 
  2241     1E1F                     CLC2SEL3        equ	7711	;# 
  2242     1E20                     CLC2GLS0        equ	7712	;# 
  2243     1E21                     CLC2GLS1        equ	7713	;# 
  2244     1E22                     CLC2GLS2        equ	7714	;# 
  2245     1E23                     CLC2GLS3        equ	7715	;# 
  2246     1E24                     CLC3CON         equ	7716	;# 
  2247     1E25                     CLC3POL         equ	7717	;# 
  2248     1E26                     CLC3SEL0        equ	7718	;# 
  2249     1E27                     CLC3SEL1        equ	7719	;# 
  2250     1E28                     CLC3SEL2        equ	7720	;# 
  2251     1E29                     CLC3SEL3        equ	7721	;# 
  2252     1E2A                     CLC3GLS0        equ	7722	;# 
  2253     1E2B                     CLC3GLS1        equ	7723	;# 
  2254     1E2C                     CLC3GLS2        equ	7724	;# 
  2255     1E2D                     CLC3GLS3        equ	7725	;# 
  2256     1E2E                     CLC4CON         equ	7726	;# 
  2257     1E2F                     CLC4POL         equ	7727	;# 
  2258     1E30                     CLC4SEL0        equ	7728	;# 
  2259     1E31                     CLC4SEL1        equ	7729	;# 
  2260     1E32                     CLC4SEL2        equ	7730	;# 
  2261     1E33                     CLC4SEL3        equ	7731	;# 
  2262     1E34                     CLC4GLS0        equ	7732	;# 
  2263     1E35                     CLC4GLS1        equ	7733	;# 
  2264     1E36                     CLC4GLS2        equ	7734	;# 
  2265     1E37                     CLC4GLS3        equ	7735	;# 
  2266     1E8F                     PPSLOCK         equ	7823	;# 
  2267     1E90                     INTPPS          equ	7824	;# 
  2268     1E91                     T0CKIPPS        equ	7825	;# 
  2269     1E92                     T1CKIPPS        equ	7826	;# 
  2270     1E93                     T1GPPS          equ	7827	;# 
  2271     1E94                     T3CKIPPS        equ	7828	;# 
  2272     1E95                     T3GPPS          equ	7829	;# 
  2273     1E96                     T5CKIPPS        equ	7830	;# 
  2274     1E97                     T5GPPS          equ	7831	;# 
  2275     1E9C                     T2INPPS         equ	7836	;# 
  2276     1E9D                     T4INPPS         equ	7837	;# 
  2277     1E9E                     T6INPPS         equ	7838	;# 
  2278     1EA1                     CCP1PPS         equ	7841	;# 
  2279     1EA2                     CCP2PPS         equ	7842	;# 
  2280     1EA3                     CCP3PPS         equ	7843	;# 
  2281     1EA4                     CCP4PPS         equ	7844	;# 
  2282     1EA5                     CCP5PPS         equ	7845	;# 
  2283     1EA9                     SMT1WINPPS      equ	7849	;# 
  2284     1EAA                     SMT1SIGPPS      equ	7850	;# 
  2285     1EAB                     SMT2WINPPS      equ	7851	;# 
  2286     1EAC                     SMT2SIGPPS      equ	7852	;# 
  2287     1EB1                     CWG1PPS         equ	7857	;# 
  2288     1EB2                     CWG2PPS         equ	7858	;# 
  2289     1EB3                     CWG3PPS         equ	7859	;# 
  2290     1EB8                     MDCARLPPS       equ	7864	;# 
  2291     1EB9                     MDCARHPPS       equ	7865	;# 
  2292     1EBA                     MDSRCPPS        equ	7866	;# 
  2293     1EBB                     CLCIN0PPS       equ	7867	;# 
  2294     1EBC                     CLCIN1PPS       equ	7868	;# 
  2295     1EBD                     CLCIN2PPS       equ	7869	;# 
  2296     1EBE                     CLCIN3PPS       equ	7870	;# 
  2297     1EC3                     ADACTPPS        equ	7875	;# 
  2298     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2299     1EC6                     SSP1DATPPS      equ	7878	;# 
  2300     1EC7                     SSP1SSPPS       equ	7879	;# 
  2301     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2302     1EC9                     SSP2DATPPS      equ	7881	;# 
  2303     1ECA                     SSP2SSPPS       equ	7882	;# 
  2304     1ECB                     RX1PPS          equ	7883	;# 
  2305     1ECC                     CK1PPS          equ	7884	;# 
  2306     1ECD                     RX2PPS          equ	7885	;# 
  2307     1ECE                     CK2PPS          equ	7886	;# 
  2308     1F10                     RA0PPS          equ	7952	;# 
  2309     1F11                     RA1PPS          equ	7953	;# 
  2310     1F12                     RA2PPS          equ	7954	;# 
  2311     1F13                     RA3PPS          equ	7955	;# 
  2312     1F14                     RA4PPS          equ	7956	;# 
  2313     1F15                     RA5PPS          equ	7957	;# 
  2314     1F16                     RA6PPS          equ	7958	;# 
  2315     1F17                     RA7PPS          equ	7959	;# 
  2316     1F18                     RB0PPS          equ	7960	;# 
  2317     1F19                     RB1PPS          equ	7961	;# 
  2318     1F1A                     RB2PPS          equ	7962	;# 
  2319     1F1B                     RB3PPS          equ	7963	;# 
  2320     1F1C                     RB4PPS          equ	7964	;# 
  2321     1F1D                     RB5PPS          equ	7965	;# 
  2322     1F1E                     RB6PPS          equ	7966	;# 
  2323     1F1F                     RB7PPS          equ	7967	;# 
  2324     1F20                     RC0PPS          equ	7968	;# 
  2325     1F21                     RC1PPS          equ	7969	;# 
  2326     1F22                     RC2PPS          equ	7970	;# 
  2327     1F23                     RC3PPS          equ	7971	;# 
  2328     1F24                     RC4PPS          equ	7972	;# 
  2329     1F25                     RC5PPS          equ	7973	;# 
  2330     1F26                     RC6PPS          equ	7974	;# 
  2331     1F27                     RC7PPS          equ	7975	;# 
  2332     1F38                     ANSELA          equ	7992	;# 
  2333     1F39                     WPUA            equ	7993	;# 
  2334     1F3A                     ODCONA          equ	7994	;# 
  2335     1F3B                     SLRCONA         equ	7995	;# 
  2336     1F3C                     INLVLA          equ	7996	;# 
  2337     1F3D                     IOCAP           equ	7997	;# 
  2338     1F3E                     IOCAN           equ	7998	;# 
  2339     1F3F                     IOCAF           equ	7999	;# 
  2340     1F43                     ANSELB          equ	8003	;# 
  2341     1F44                     WPUB            equ	8004	;# 
  2342     1F45                     ODCONB          equ	8005	;# 
  2343     1F46                     SLRCONB         equ	8006	;# 
  2344     1F47                     INLVLB          equ	8007	;# 
  2345     1F48                     IOCBP           equ	8008	;# 
  2346     1F49                     IOCBN           equ	8009	;# 
  2347     1F4A                     IOCBF           equ	8010	;# 
  2348     1F4E                     ANSELC          equ	8014	;# 
  2349     1F4F                     WPUC            equ	8015	;# 
  2350     1F50                     ODCONC          equ	8016	;# 
  2351     1F51                     SLRCONC         equ	8017	;# 
  2352     1F52                     INLVLC          equ	8018	;# 
  2353     1F53                     IOCCP           equ	8019	;# 
  2354     1F54                     IOCCN           equ	8020	;# 
  2355     1F55                     IOCCF           equ	8021	;# 
  2356     1F65                     WPUE            equ	8037	;# 
  2357     1F66                     ODCONE          equ	8038	;# 
  2358     1F67                     SLRCONE         equ	8039	;# 
  2359     1F68                     INLVLE          equ	8040	;# 
  2360     1F69                     IOCEP           equ	8041	;# 
  2361     1F6A                     IOCEN           equ	8042	;# 
  2362     1F6B                     IOCEF           equ	8043	;# 
  2363     1FE4                     STATUS_SHAD     equ	8164	;# 
  2364     1FE5                     WREG_SHAD       equ	8165	;# 
  2365     1FE6                     BSR_SHAD        equ	8166	;# 
  2366     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2367     1FE8                     FSR0_SHAD       equ	8168	;# 
  2368     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2369     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2370     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2371     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2372     1FED                     STKPTR          equ	8173	;# 
  2373     1FEE                     TOSL            equ	8174	;# 
  2374     1FEF                     TOSH            equ	8175	;# 
  2375     0000                     INDF0           equ	0	;# 
  2376     0001                     INDF1           equ	1	;# 
  2377     0002                     PCL             equ	2	;# 
  2378     0003                     STATUS          equ	3	;# 
  2379     0004                     FSR0L           equ	4	;# 
  2380     0005                     FSR0H           equ	5	;# 
  2381     0006                     FSR1L           equ	6	;# 
  2382     0007                     FSR1H           equ	7	;# 
  2383     0008                     BSR             equ	8	;# 
  2384     0009                     WREG            equ	9	;# 
  2385     000A                     PCLATH          equ	10	;# 
  2386     000B                     INTCON          equ	11	;# 
  2387     000C                     PORTA           equ	12	;# 
  2388     000D                     PORTB           equ	13	;# 
  2389     000E                     PORTC           equ	14	;# 
  2390     0010                     PORTE           equ	16	;# 
  2391     0012                     TRISA           equ	18	;# 
  2392     0013                     TRISB           equ	19	;# 
  2393     0014                     TRISC           equ	20	;# 
  2394     0016                     TRISE           equ	22	;# 
  2395     0018                     LATA            equ	24	;# 
  2396     0019                     LATB            equ	25	;# 
  2397     001A                     LATC            equ	26	;# 
  2398     008C                     ADLTH           equ	140	;# 
  2399     008C                     ADLTHL          equ	140	;# 
  2400     008D                     ADLTHH          equ	141	;# 
  2401     008E                     ADUTH           equ	142	;# 
  2402     008E                     ADUTHL          equ	142	;# 
  2403     008F                     ADUTHH          equ	143	;# 
  2404     0090                     ADERR           equ	144	;# 
  2405     0090                     ADERRL          equ	144	;# 
  2406     0091                     ADERRH          equ	145	;# 
  2407     0092                     ADSTPT          equ	146	;# 
  2408     0092                     ADSTPTL         equ	146	;# 
  2409     0093                     ADSTPTH         equ	147	;# 
  2410     0094                     ADFLTR          equ	148	;# 
  2411     0094                     ADFLTRL         equ	148	;# 
  2412     0095                     ADFLTRH         equ	149	;# 
  2413     0096                     ADACC           equ	150	;# 
  2414     0096                     ADACCL          equ	150	;# 
  2415     0097                     ADACCH          equ	151	;# 
  2416     0098                     ADACCU          equ	152	;# 
  2417     0099                     ADCNT           equ	153	;# 
  2418     009A                     ADRPT           equ	154	;# 
  2419     009B                     ADPREV          equ	155	;# 
  2420     009B                     ADPREVL         equ	155	;# 
  2421     009C                     ADPREVH         equ	156	;# 
  2422     009D                     ADRES           equ	157	;# 
  2423     009D                     ADRESL          equ	157	;# 
  2424     009E                     ADRESH          equ	158	;# 
  2425     009F                     ADPCH           equ	159	;# 
  2426     010C                     ADACQ           equ	268	;# 
  2427     010C                     ADACQL          equ	268	;# 
  2428     010D                     ADACQH          equ	269	;# 
  2429     010E                     ADCAP           equ	270	;# 
  2430     010F                     ADPRE           equ	271	;# 
  2431     010F                     ADPREL          equ	271	;# 
  2432     0110                     ADPREH          equ	272	;# 
  2433     0111                     ADCON0          equ	273	;# 
  2434     0112                     ADCON1          equ	274	;# 
  2435     0113                     ADCON2          equ	275	;# 
  2436     0114                     ADCON3          equ	276	;# 
  2437     0115                     ADSTAT          equ	277	;# 
  2438     0116                     ADREF           equ	278	;# 
  2439     0117                     ADACT           equ	279	;# 
  2440     0118                     ADCLK           equ	280	;# 
  2441     0119                     RC1REG          equ	281	;# 
  2442     0119                     RCREG           equ	281	;# 
  2443     0119                     RCREG1          equ	281	;# 
  2444     011A                     TX1REG          equ	282	;# 
  2445     011A                     TXREG1          equ	282	;# 
  2446     011A                     TXREG           equ	282	;# 
  2447     011B                     SP1BRG          equ	283	;# 
  2448     011B                     SPBRG           equ	283	;# 
  2449     011B                     SP1BRGL         equ	283	;# 
  2450     011B                     SPBRG1          equ	283	;# 
  2451     011B                     SPBRGL          equ	283	;# 
  2452     011C                     SP1BRGH         equ	284	;# 
  2453     011C                     SPBRGH          equ	284	;# 
  2454     011C                     SPBRGH1         equ	284	;# 
  2455     011D                     RC1STA          equ	285	;# 
  2456     011D                     RCSTA1          equ	285	;# 
  2457     011D                     RCSTA           equ	285	;# 
  2458     011E                     TX1STA          equ	286	;# 
  2459     011E                     TXSTA1          equ	286	;# 
  2460     011E                     TXSTA           equ	286	;# 
  2461     011F                     BAUD1CON        equ	287	;# 
  2462     011F                     BAUDCON1        equ	287	;# 
  2463     011F                     BAUDCTL1        equ	287	;# 
  2464     011F                     BAUDCON         equ	287	;# 
  2465     011F                     BAUDCTL         equ	287	;# 
  2466     018C                     SSP1BUF         equ	396	;# 
  2467     018D                     SSP1ADD         equ	397	;# 
  2468     018E                     SSP1MSK         equ	398	;# 
  2469     018F                     SSP1STAT        equ	399	;# 
  2470     0190                     SSP1CON1        equ	400	;# 
  2471     0191                     SSP1CON2        equ	401	;# 
  2472     0192                     SSP1CON3        equ	402	;# 
  2473     0196                     SSP2BUF         equ	406	;# 
  2474     0197                     SSP2ADD         equ	407	;# 
  2475     0198                     SSP2MSK         equ	408	;# 
  2476     0199                     SSP2STAT        equ	409	;# 
  2477     019A                     SSP2CON1        equ	410	;# 
  2478     019B                     SSP2CON2        equ	411	;# 
  2479     019C                     SSP2CON3        equ	412	;# 
  2480     020C                     TMR1            equ	524	;# 
  2481     020C                     TMR1L           equ	524	;# 
  2482     020D                     TMR1H           equ	525	;# 
  2483     020E                     T1CON           equ	526	;# 
  2484     020E                     TMR1CON         equ	526	;# 
  2485     020F                     T1GCON          equ	527	;# 
  2486     020F                     TMR1GCON        equ	527	;# 
  2487     0210                     T1GATE          equ	528	;# 
  2488     0210                     TMR1GATE        equ	528	;# 
  2489     0211                     T1CLK           equ	529	;# 
  2490     0211                     TMR1CLK         equ	529	;# 
  2491     0211                     PR1             equ	529	;# 
  2492     0212                     TMR3            equ	530	;# 
  2493     0212                     TMR3L           equ	530	;# 
  2494     0213                     TMR3H           equ	531	;# 
  2495     0214                     T3CON           equ	532	;# 
  2496     0214                     TMR3CON         equ	532	;# 
  2497     0215                     T3GCON          equ	533	;# 
  2498     0215                     TMR3GCON        equ	533	;# 
  2499     0216                     T3GATE          equ	534	;# 
  2500     0216                     TMR3GATE        equ	534	;# 
  2501     0217                     T3CLK           equ	535	;# 
  2502     0217                     TMR3CLK         equ	535	;# 
  2503     0217                     PR3             equ	535	;# 
  2504     0218                     TMR5            equ	536	;# 
  2505     0218                     TMR5L           equ	536	;# 
  2506     0219                     TMR5H           equ	537	;# 
  2507     021A                     T5CON           equ	538	;# 
  2508     021A                     TMR5CON         equ	538	;# 
  2509     021B                     T5GCON          equ	539	;# 
  2510     021B                     TMR5GCON        equ	539	;# 
  2511     021C                     T5GATE          equ	540	;# 
  2512     021C                     TMR5GATE        equ	540	;# 
  2513     021D                     T5CLK           equ	541	;# 
  2514     021D                     TMR5CLK         equ	541	;# 
  2515     021D                     PR5             equ	541	;# 
  2516     021E                     CCPTMRS0        equ	542	;# 
  2517     021F                     CCPTMRS1        equ	543	;# 
  2518     028C                     T2TMR           equ	652	;# 
  2519     028C                     TMR2            equ	652	;# 
  2520     028D                     T2PR            equ	653	;# 
  2521     028D                     PR2             equ	653	;# 
  2522     028E                     T2CON           equ	654	;# 
  2523     028F                     T2HLT           equ	655	;# 
  2524     0290                     T2CLKCON        equ	656	;# 
  2525     0291                     T2RST           equ	657	;# 
  2526     0292                     T4TMR           equ	658	;# 
  2527     0292                     TMR4            equ	658	;# 
  2528     0293                     T4PR            equ	659	;# 
  2529     0293                     PR4             equ	659	;# 
  2530     0294                     T4CON           equ	660	;# 
  2531     0295                     T4HLT           equ	661	;# 
  2532     0296                     T4CLKCON        equ	662	;# 
  2533     0297                     T4RST           equ	663	;# 
  2534     0298                     T6TMR           equ	664	;# 
  2535     0298                     TMR6            equ	664	;# 
  2536     0299                     T6PR            equ	665	;# 
  2537     0299                     PR6             equ	665	;# 
  2538     029A                     T6CON           equ	666	;# 
  2539     029B                     T6HLT           equ	667	;# 
  2540     029C                     T6CLKCON        equ	668	;# 
  2541     029D                     T6RST           equ	669	;# 
  2542     029F                     ADCPCON0        equ	671	;# 
  2543     030C                     CCPR1           equ	780	;# 
  2544     030C                     CCPR1L          equ	780	;# 
  2545     030D                     CCPR1H          equ	781	;# 
  2546     030E                     CCP1CON         equ	782	;# 
  2547     030F                     CCP1CAP         equ	783	;# 
  2548     0310                     CCPR2           equ	784	;# 
  2549     0310                     CCPR2L          equ	784	;# 
  2550     0311                     CCPR2H          equ	785	;# 
  2551     0312                     CCP2CON         equ	786	;# 
  2552     0313                     CCP2CAP         equ	787	;# 
  2553     0314                     CCPR3           equ	788	;# 
  2554     0314                     CCPR3L          equ	788	;# 
  2555     0315                     CCPR3H          equ	789	;# 
  2556     0316                     CCP3CON         equ	790	;# 
  2557     0317                     CCP3CAP         equ	791	;# 
  2558     0318                     CCPR4           equ	792	;# 
  2559     0318                     CCPR4L          equ	792	;# 
  2560     0319                     CCPR4H          equ	793	;# 
  2561     031A                     CCP4CON         equ	794	;# 
  2562     031B                     CCP4CAP         equ	795	;# 
  2563     031C                     CCPR5           equ	796	;# 
  2564     031C                     CCPR5L          equ	796	;# 
  2565     031D                     CCPR5H          equ	797	;# 
  2566     031E                     CCP5CON         equ	798	;# 
  2567     031F                     CCP5CAP         equ	799	;# 
  2568     038C                     PWM6DC          equ	908	;# 
  2569     038C                     PWM6DCL         equ	908	;# 
  2570     038D                     PWM6DCH         equ	909	;# 
  2571     038E                     PWM6CON         equ	910	;# 
  2572     0390                     PWM7DC          equ	912	;# 
  2573     0390                     PWM7DCL         equ	912	;# 
  2574     0391                     PWM7DCH         equ	913	;# 
  2575     0392                     PWM7CON         equ	914	;# 
  2576     048C                     SMT1TMR         equ	1164	;# 
  2577     048C                     SMT1TMRL        equ	1164	;# 
  2578     048D                     SMT1TMRH        equ	1165	;# 
  2579     048E                     SMT1TMRU        equ	1166	;# 
  2580     048F                     SMT1CPR         equ	1167	;# 
  2581     048F                     SMT1CPRL        equ	1167	;# 
  2582     0490                     SMT1CPRH        equ	1168	;# 
  2583     0491                     SMT1CPRU        equ	1169	;# 
  2584     0492                     SMT1CPW         equ	1170	;# 
  2585     0492                     SMT1CPWL        equ	1170	;# 
  2586     0493                     SMT1CPWH        equ	1171	;# 
  2587     0494                     SMT1CPWU        equ	1172	;# 
  2588     0495                     SMT1PR          equ	1173	;# 
  2589     0495                     SMT1PRL         equ	1173	;# 
  2590     0496                     SMT1PRH         equ	1174	;# 
  2591     0497                     SMT1PRU         equ	1175	;# 
  2592     0498                     SMT1CON0        equ	1176	;# 
  2593     0499                     SMT1CON1        equ	1177	;# 
  2594     049A                     SMT1STAT        equ	1178	;# 
  2595     049B                     SMT1CLK         equ	1179	;# 
  2596     049C                     SMT1SIG         equ	1180	;# 
  2597     049D                     SMT1WIN         equ	1181	;# 
  2598     050C                     SMT2TMR         equ	1292	;# 
  2599     050C                     SMT2TMRL        equ	1292	;# 
  2600     050D                     SMT2TMRH        equ	1293	;# 
  2601     050E                     SMT2TMRU        equ	1294	;# 
  2602     050F                     SMT2CPR         equ	1295	;# 
  2603     050F                     SMT2CPRL        equ	1295	;# 
  2604     0510                     SMT2CPRH        equ	1296	;# 
  2605     0511                     SMT2CPRU        equ	1297	;# 
  2606     0512                     SMT2CPW         equ	1298	;# 
  2607     0512                     SMT2CPWL        equ	1298	;# 
  2608     0513                     SMT2CPWH        equ	1299	;# 
  2609     0514                     SMT2CPWU        equ	1300	;# 
  2610     0515                     SMT2PR          equ	1301	;# 
  2611     0515                     SMT2PRL         equ	1301	;# 
  2612     0516                     SMT2PRH         equ	1302	;# 
  2613     0517                     SMT2PRU         equ	1303	;# 
  2614     0518                     SMT2CON0        equ	1304	;# 
  2615     0519                     SMT2CON1        equ	1305	;# 
  2616     051A                     SMT2STAT        equ	1306	;# 
  2617     051B                     SMT2CLK         equ	1307	;# 
  2618     051C                     SMT2SIG         equ	1308	;# 
  2619     051D                     SMT2WIN         equ	1309	;# 
  2620     058C                     NCO1ACC         equ	1420	;# 
  2621     058C                     NCO1ACCL        equ	1420	;# 
  2622     058D                     NCO1ACCH        equ	1421	;# 
  2623     058E                     NCO1ACCU        equ	1422	;# 
  2624     058F                     NCO1INC         equ	1423	;# 
  2625     058F                     NCO1INCL        equ	1423	;# 
  2626     0590                     NCO1INCH        equ	1424	;# 
  2627     0591                     NCO1INCU        equ	1425	;# 
  2628     0592                     NCO1CON         equ	1426	;# 
  2629     0593                     NCO1CLK         equ	1427	;# 
  2630     059C                     TMR0L           equ	1436	;# 
  2631     059C                     TMR0            equ	1436	;# 
  2632     059D                     TMR0H           equ	1437	;# 
  2633     059D                     PR0             equ	1437	;# 
  2634     059E                     T0CON0          equ	1438	;# 
  2635     059F                     T0CON1          equ	1439	;# 
  2636     060C                     CWG1CLK         equ	1548	;# 
  2637     060C                     CWG1CLKCON      equ	1548	;# 
  2638     060D                     CWG1ISM         equ	1549	;# 
  2639     060D                     CWG1DAT         equ	1549	;# 
  2640     060E                     CWG1DBR         equ	1550	;# 
  2641     060F                     CWG1DBF         equ	1551	;# 
  2642     0610                     CWG1CON0        equ	1552	;# 
  2643     0611                     CWG1CON1        equ	1553	;# 
  2644     0612                     CWG1AS0         equ	1554	;# 
  2645     0613                     CWG1AS1         equ	1555	;# 
  2646     0614                     CWG1STR         equ	1556	;# 
  2647     0616                     CWG2CLK         equ	1558	;# 
  2648     0616                     CWG2CLKCON      equ	1558	;# 
  2649     0617                     CWG2ISM         equ	1559	;# 
  2650     0617                     CWG2DAT         equ	1559	;# 
  2651     0618                     CWG2DBR         equ	1560	;# 
  2652     0619                     CWG2DBF         equ	1561	;# 
  2653     061A                     CWG2CON0        equ	1562	;# 
  2654     061B                     CWG2CON1        equ	1563	;# 
  2655     061C                     CWG2AS0         equ	1564	;# 
  2656     061D                     CWG2AS1         equ	1565	;# 
  2657     061E                     CWG2STR         equ	1566	;# 
  2658     068C                     CWG3CLK         equ	1676	;# 
  2659     068C                     CWG3CLKCON      equ	1676	;# 
  2660     068D                     CWG3ISM         equ	1677	;# 
  2661     068D                     CWG3DAT         equ	1677	;# 
  2662     068E                     CWG3DBR         equ	1678	;# 
  2663     068F                     CWG3DBF         equ	1679	;# 
  2664     0690                     CWG3CON0        equ	1680	;# 
  2665     0691                     CWG3CON1        equ	1681	;# 
  2666     0692                     CWG3AS0         equ	1682	;# 
  2667     0693                     CWG3AS1         equ	1683	;# 
  2668     0694                     CWG3STR         equ	1684	;# 
  2669     070C                     PIR0            equ	1804	;# 
  2670     070D                     PIR1            equ	1805	;# 
  2671     070E                     PIR2            equ	1806	;# 
  2672     070F                     PIR3            equ	1807	;# 
  2673     0710                     PIR4            equ	1808	;# 
  2674     0711                     PIR5            equ	1809	;# 
  2675     0712                     PIR6            equ	1810	;# 
  2676     0713                     PIR7            equ	1811	;# 
  2677     0714                     PIR8            equ	1812	;# 
  2678     0716                     PIE0            equ	1814	;# 
  2679     0717                     PIE1            equ	1815	;# 
  2680     0718                     PIE2            equ	1816	;# 
  2681     0719                     PIE3            equ	1817	;# 
  2682     071A                     PIE4            equ	1818	;# 
  2683     071B                     PIE5            equ	1819	;# 
  2684     071C                     PIE6            equ	1820	;# 
  2685     071D                     PIE7            equ	1821	;# 
  2686     071E                     PIE8            equ	1822	;# 
  2687     0796                     PMD0            equ	1942	;# 
  2688     0797                     PMD1            equ	1943	;# 
  2689     0798                     PMD2            equ	1944	;# 
  2690     0799                     PMD3            equ	1945	;# 
  2691     079A                     PMD4            equ	1946	;# 
  2692     079B                     PMD5            equ	1947	;# 
  2693     079C                     PMD6            equ	1948	;# 
  2694     079D                     PMD7            equ	1949	;# 
  2695     080C                     WDTCON0         equ	2060	;# 
  2696     080D                     WDTCON1         equ	2061	;# 
  2697     080E                     WDTPSL          equ	2062	;# 
  2698     080F                     WDTPSH          equ	2063	;# 
  2699     0810                     WDTTMR          equ	2064	;# 
  2700     0811                     BORCON          equ	2065	;# 
  2701     0813                     PCON0           equ	2067	;# 
  2702     0814                     PCON1           equ	2068	;# 
  2703     081A                     NVMADR          equ	2074	;# 
  2704     081A                     NVMADRL         equ	2074	;# 
  2705     081B                     NVMADRH         equ	2075	;# 
  2706     081C                     NVMDAT          equ	2076	;# 
  2707     081C                     NVMDATL         equ	2076	;# 
  2708     081D                     NVMDATH         equ	2077	;# 
  2709     081E                     NVMCON1         equ	2078	;# 
  2710     081F                     NVMCON2         equ	2079	;# 
  2711     088C                     CPUDOZE         equ	2188	;# 
  2712     088D                     OSCCON1         equ	2189	;# 
  2713     088E                     OSCCON2         equ	2190	;# 
  2714     088F                     OSCCON3         equ	2191	;# 
  2715     0890                     OSCSTAT         equ	2192	;# 
  2716     0891                     OSCEN           equ	2193	;# 
  2717     0892                     OSCTUNE         equ	2194	;# 
  2718     0893                     OSCFRQ          equ	2195	;# 
  2719     0895                     CLKRCON         equ	2197	;# 
  2720     0896                     CLKRCLK         equ	2198	;# 
  2721     0897                     MD1CON0         equ	2199	;# 
  2722     0898                     MD1CON1         equ	2200	;# 
  2723     0899                     MD1SRC          equ	2201	;# 
  2724     089A                     MD1CARL         equ	2202	;# 
  2725     089B                     MD1CARH         equ	2203	;# 
  2726     090C                     FVRCON          equ	2316	;# 
  2727     090E                     DAC1CON0        equ	2318	;# 
  2728     090F                     DAC1CON1        equ	2319	;# 
  2729     091F                     ZCDCON          equ	2335	;# 
  2730     098F                     CMOUT           equ	2447	;# 
  2731     098F                     CMSTAT          equ	2447	;# 
  2732     0990                     CM1CON0         equ	2448	;# 
  2733     0991                     CM1CON1         equ	2449	;# 
  2734     0992                     CM1NCH          equ	2450	;# 
  2735     0993                     CM1PCH          equ	2451	;# 
  2736     0994                     CM2CON0         equ	2452	;# 
  2737     0995                     CM2CON1         equ	2453	;# 
  2738     0996                     CM2NCH          equ	2454	;# 
  2739     0997                     CM2PCH          equ	2455	;# 
  2740     0A19                     RC2REG          equ	2585	;# 
  2741     0A19                     RCREG2          equ	2585	;# 
  2742     0A1A                     TX2REG          equ	2586	;# 
  2743     0A1A                     TXREG2          equ	2586	;# 
  2744     0A1B                     SP2BRG          equ	2587	;# 
  2745     0A1B                     SP2BRGL         equ	2587	;# 
  2746     0A1B                     SPBRG2          equ	2587	;# 
  2747     0A1C                     SP2BRGH         equ	2588	;# 
  2748     0A1C                     SPBRGH2         equ	2588	;# 
  2749     0A1D                     RC2STA          equ	2589	;# 
  2750     0A1D                     RCSTA2          equ	2589	;# 
  2751     0A1E                     TX2STA          equ	2590	;# 
  2752     0A1E                     TXSTA2          equ	2590	;# 
  2753     0A1F                     BAUD2CON        equ	2591	;# 
  2754     0A1F                     BAUDCON2        equ	2591	;# 
  2755     0A1F                     BAUDCTL2        equ	2591	;# 
  2756     1E0F                     CLCDATA         equ	7695	;# 
  2757     1E10                     CLC1CON         equ	7696	;# 
  2758     1E11                     CLC1POL         equ	7697	;# 
  2759     1E12                     CLC1SEL0        equ	7698	;# 
  2760     1E13                     CLC1SEL1        equ	7699	;# 
  2761     1E14                     CLC1SEL2        equ	7700	;# 
  2762     1E15                     CLC1SEL3        equ	7701	;# 
  2763     1E16                     CLC1GLS0        equ	7702	;# 
  2764     1E17                     CLC1GLS1        equ	7703	;# 
  2765     1E18                     CLC1GLS2        equ	7704	;# 
  2766     1E19                     CLC1GLS3        equ	7705	;# 
  2767     1E1A                     CLC2CON         equ	7706	;# 
  2768     1E1B                     CLC2POL         equ	7707	;# 
  2769     1E1C                     CLC2SEL0        equ	7708	;# 
  2770     1E1D                     CLC2SEL1        equ	7709	;# 
  2771     1E1E                     CLC2SEL2        equ	7710	;# 
  2772     1E1F                     CLC2SEL3        equ	7711	;# 
  2773     1E20                     CLC2GLS0        equ	7712	;# 
  2774     1E21                     CLC2GLS1        equ	7713	;# 
  2775     1E22                     CLC2GLS2        equ	7714	;# 
  2776     1E23                     CLC2GLS3        equ	7715	;# 
  2777     1E24                     CLC3CON         equ	7716	;# 
  2778     1E25                     CLC3POL         equ	7717	;# 
  2779     1E26                     CLC3SEL0        equ	7718	;# 
  2780     1E27                     CLC3SEL1        equ	7719	;# 
  2781     1E28                     CLC3SEL2        equ	7720	;# 
  2782     1E29                     CLC3SEL3        equ	7721	;# 
  2783     1E2A                     CLC3GLS0        equ	7722	;# 
  2784     1E2B                     CLC3GLS1        equ	7723	;# 
  2785     1E2C                     CLC3GLS2        equ	7724	;# 
  2786     1E2D                     CLC3GLS3        equ	7725	;# 
  2787     1E2E                     CLC4CON         equ	7726	;# 
  2788     1E2F                     CLC4POL         equ	7727	;# 
  2789     1E30                     CLC4SEL0        equ	7728	;# 
  2790     1E31                     CLC4SEL1        equ	7729	;# 
  2791     1E32                     CLC4SEL2        equ	7730	;# 
  2792     1E33                     CLC4SEL3        equ	7731	;# 
  2793     1E34                     CLC4GLS0        equ	7732	;# 
  2794     1E35                     CLC4GLS1        equ	7733	;# 
  2795     1E36                     CLC4GLS2        equ	7734	;# 
  2796     1E37                     CLC4GLS3        equ	7735	;# 
  2797     1E8F                     PPSLOCK         equ	7823	;# 
  2798     1E90                     INTPPS          equ	7824	;# 
  2799     1E91                     T0CKIPPS        equ	7825	;# 
  2800     1E92                     T1CKIPPS        equ	7826	;# 
  2801     1E93                     T1GPPS          equ	7827	;# 
  2802     1E94                     T3CKIPPS        equ	7828	;# 
  2803     1E95                     T3GPPS          equ	7829	;# 
  2804     1E96                     T5CKIPPS        equ	7830	;# 
  2805     1E97                     T5GPPS          equ	7831	;# 
  2806     1E9C                     T2INPPS         equ	7836	;# 
  2807     1E9D                     T4INPPS         equ	7837	;# 
  2808     1E9E                     T6INPPS         equ	7838	;# 
  2809     1EA1                     CCP1PPS         equ	7841	;# 
  2810     1EA2                     CCP2PPS         equ	7842	;# 
  2811     1EA3                     CCP3PPS         equ	7843	;# 
  2812     1EA4                     CCP4PPS         equ	7844	;# 
  2813     1EA5                     CCP5PPS         equ	7845	;# 
  2814     1EA9                     SMT1WINPPS      equ	7849	;# 
  2815     1EAA                     SMT1SIGPPS      equ	7850	;# 
  2816     1EAB                     SMT2WINPPS      equ	7851	;# 
  2817     1EAC                     SMT2SIGPPS      equ	7852	;# 
  2818     1EB1                     CWG1PPS         equ	7857	;# 
  2819     1EB2                     CWG2PPS         equ	7858	;# 
  2820     1EB3                     CWG3PPS         equ	7859	;# 
  2821     1EB8                     MDCARLPPS       equ	7864	;# 
  2822     1EB9                     MDCARHPPS       equ	7865	;# 
  2823     1EBA                     MDSRCPPS        equ	7866	;# 
  2824     1EBB                     CLCIN0PPS       equ	7867	;# 
  2825     1EBC                     CLCIN1PPS       equ	7868	;# 
  2826     1EBD                     CLCIN2PPS       equ	7869	;# 
  2827     1EBE                     CLCIN3PPS       equ	7870	;# 
  2828     1EC3                     ADACTPPS        equ	7875	;# 
  2829     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2830     1EC6                     SSP1DATPPS      equ	7878	;# 
  2831     1EC7                     SSP1SSPPS       equ	7879	;# 
  2832     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2833     1EC9                     SSP2DATPPS      equ	7881	;# 
  2834     1ECA                     SSP2SSPPS       equ	7882	;# 
  2835     1ECB                     RX1PPS          equ	7883	;# 
  2836     1ECC                     CK1PPS          equ	7884	;# 
  2837     1ECD                     RX2PPS          equ	7885	;# 
  2838     1ECE                     CK2PPS          equ	7886	;# 
  2839     1F10                     RA0PPS          equ	7952	;# 
  2840     1F11                     RA1PPS          equ	7953	;# 
  2841     1F12                     RA2PPS          equ	7954	;# 
  2842     1F13                     RA3PPS          equ	7955	;# 
  2843     1F14                     RA4PPS          equ	7956	;# 
  2844     1F15                     RA5PPS          equ	7957	;# 
  2845     1F16                     RA6PPS          equ	7958	;# 
  2846     1F17                     RA7PPS          equ	7959	;# 
  2847     1F18                     RB0PPS          equ	7960	;# 
  2848     1F19                     RB1PPS          equ	7961	;# 
  2849     1F1A                     RB2PPS          equ	7962	;# 
  2850     1F1B                     RB3PPS          equ	7963	;# 
  2851     1F1C                     RB4PPS          equ	7964	;# 
  2852     1F1D                     RB5PPS          equ	7965	;# 
  2853     1F1E                     RB6PPS          equ	7966	;# 
  2854     1F1F                     RB7PPS          equ	7967	;# 
  2855     1F20                     RC0PPS          equ	7968	;# 
  2856     1F21                     RC1PPS          equ	7969	;# 
  2857     1F22                     RC2PPS          equ	7970	;# 
  2858     1F23                     RC3PPS          equ	7971	;# 
  2859     1F24                     RC4PPS          equ	7972	;# 
  2860     1F25                     RC5PPS          equ	7973	;# 
  2861     1F26                     RC6PPS          equ	7974	;# 
  2862     1F27                     RC7PPS          equ	7975	;# 
  2863     1F38                     ANSELA          equ	7992	;# 
  2864     1F39                     WPUA            equ	7993	;# 
  2865     1F3A                     ODCONA          equ	7994	;# 
  2866     1F3B                     SLRCONA         equ	7995	;# 
  2867     1F3C                     INLVLA          equ	7996	;# 
  2868     1F3D                     IOCAP           equ	7997	;# 
  2869     1F3E                     IOCAN           equ	7998	;# 
  2870     1F3F                     IOCAF           equ	7999	;# 
  2871     1F43                     ANSELB          equ	8003	;# 
  2872     1F44                     WPUB            equ	8004	;# 
  2873     1F45                     ODCONB          equ	8005	;# 
  2874     1F46                     SLRCONB         equ	8006	;# 
  2875     1F47                     INLVLB          equ	8007	;# 
  2876     1F48                     IOCBP           equ	8008	;# 
  2877     1F49                     IOCBN           equ	8009	;# 
  2878     1F4A                     IOCBF           equ	8010	;# 
  2879     1F4E                     ANSELC          equ	8014	;# 
  2880     1F4F                     WPUC            equ	8015	;# 
  2881     1F50                     ODCONC          equ	8016	;# 
  2882     1F51                     SLRCONC         equ	8017	;# 
  2883     1F52                     INLVLC          equ	8018	;# 
  2884     1F53                     IOCCP           equ	8019	;# 
  2885     1F54                     IOCCN           equ	8020	;# 
  2886     1F55                     IOCCF           equ	8021	;# 
  2887     1F65                     WPUE            equ	8037	;# 
  2888     1F66                     ODCONE          equ	8038	;# 
  2889     1F67                     SLRCONE         equ	8039	;# 
  2890     1F68                     INLVLE          equ	8040	;# 
  2891     1F69                     IOCEP           equ	8041	;# 
  2892     1F6A                     IOCEN           equ	8042	;# 
  2893     1F6B                     IOCEF           equ	8043	;# 
  2894     1FE4                     STATUS_SHAD     equ	8164	;# 
  2895     1FE5                     WREG_SHAD       equ	8165	;# 
  2896     1FE6                     BSR_SHAD        equ	8166	;# 
  2897     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2898     1FE8                     FSR0_SHAD       equ	8168	;# 
  2899     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2900     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2901     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2902     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2903     1FED                     STKPTR          equ	8173	;# 
  2904     1FEE                     TOSL            equ	8174	;# 
  2905     1FEF                     TOSH            equ	8175	;# 
  2906     0000                     INDF0           equ	0	;# 
  2907     0001                     INDF1           equ	1	;# 
  2908     0002                     PCL             equ	2	;# 
  2909     0003                     STATUS          equ	3	;# 
  2910     0004                     FSR0L           equ	4	;# 
  2911     0005                     FSR0H           equ	5	;# 
  2912     0006                     FSR1L           equ	6	;# 
  2913     0007                     FSR1H           equ	7	;# 
  2914     0008                     BSR             equ	8	;# 
  2915     0009                     WREG            equ	9	;# 
  2916     000A                     PCLATH          equ	10	;# 
  2917     000B                     INTCON          equ	11	;# 
  2918     000C                     PORTA           equ	12	;# 
  2919     000D                     PORTB           equ	13	;# 
  2920     000E                     PORTC           equ	14	;# 
  2921     0010                     PORTE           equ	16	;# 
  2922     0012                     TRISA           equ	18	;# 
  2923     0013                     TRISB           equ	19	;# 
  2924     0014                     TRISC           equ	20	;# 
  2925     0016                     TRISE           equ	22	;# 
  2926     0018                     LATA            equ	24	;# 
  2927     0019                     LATB            equ	25	;# 
  2928     001A                     LATC            equ	26	;# 
  2929     008C                     ADLTH           equ	140	;# 
  2930     008C                     ADLTHL          equ	140	;# 
  2931     008D                     ADLTHH          equ	141	;# 
  2932     008E                     ADUTH           equ	142	;# 
  2933     008E                     ADUTHL          equ	142	;# 
  2934     008F                     ADUTHH          equ	143	;# 
  2935     0090                     ADERR           equ	144	;# 
  2936     0090                     ADERRL          equ	144	;# 
  2937     0091                     ADERRH          equ	145	;# 
  2938     0092                     ADSTPT          equ	146	;# 
  2939     0092                     ADSTPTL         equ	146	;# 
  2940     0093                     ADSTPTH         equ	147	;# 
  2941     0094                     ADFLTR          equ	148	;# 
  2942     0094                     ADFLTRL         equ	148	;# 
  2943     0095                     ADFLTRH         equ	149	;# 
  2944     0096                     ADACC           equ	150	;# 
  2945     0096                     ADACCL          equ	150	;# 
  2946     0097                     ADACCH          equ	151	;# 
  2947     0098                     ADACCU          equ	152	;# 
  2948     0099                     ADCNT           equ	153	;# 
  2949     009A                     ADRPT           equ	154	;# 
  2950     009B                     ADPREV          equ	155	;# 
  2951     009B                     ADPREVL         equ	155	;# 
  2952     009C                     ADPREVH         equ	156	;# 
  2953     009D                     ADRES           equ	157	;# 
  2954     009D                     ADRESL          equ	157	;# 
  2955     009E                     ADRESH          equ	158	;# 
  2956     009F                     ADPCH           equ	159	;# 
  2957     010C                     ADACQ           equ	268	;# 
  2958     010C                     ADACQL          equ	268	;# 
  2959     010D                     ADACQH          equ	269	;# 
  2960     010E                     ADCAP           equ	270	;# 
  2961     010F                     ADPRE           equ	271	;# 
  2962     010F                     ADPREL          equ	271	;# 
  2963     0110                     ADPREH          equ	272	;# 
  2964     0111                     ADCON0          equ	273	;# 
  2965     0112                     ADCON1          equ	274	;# 
  2966     0113                     ADCON2          equ	275	;# 
  2967     0114                     ADCON3          equ	276	;# 
  2968     0115                     ADSTAT          equ	277	;# 
  2969     0116                     ADREF           equ	278	;# 
  2970     0117                     ADACT           equ	279	;# 
  2971     0118                     ADCLK           equ	280	;# 
  2972     0119                     RC1REG          equ	281	;# 
  2973     0119                     RCREG           equ	281	;# 
  2974     0119                     RCREG1          equ	281	;# 
  2975     011A                     TX1REG          equ	282	;# 
  2976     011A                     TXREG1          equ	282	;# 
  2977     011A                     TXREG           equ	282	;# 
  2978     011B                     SP1BRG          equ	283	;# 
  2979     011B                     SPBRG           equ	283	;# 
  2980     011B                     SP1BRGL         equ	283	;# 
  2981     011B                     SPBRG1          equ	283	;# 
  2982     011B                     SPBRGL          equ	283	;# 
  2983     011C                     SP1BRGH         equ	284	;# 
  2984     011C                     SPBRGH          equ	284	;# 
  2985     011C                     SPBRGH1         equ	284	;# 
  2986     011D                     RC1STA          equ	285	;# 
  2987     011D                     RCSTA1          equ	285	;# 
  2988     011D                     RCSTA           equ	285	;# 
  2989     011E                     TX1STA          equ	286	;# 
  2990     011E                     TXSTA1          equ	286	;# 
  2991     011E                     TXSTA           equ	286	;# 
  2992     011F                     BAUD1CON        equ	287	;# 
  2993     011F                     BAUDCON1        equ	287	;# 
  2994     011F                     BAUDCTL1        equ	287	;# 
  2995     011F                     BAUDCON         equ	287	;# 
  2996     011F                     BAUDCTL         equ	287	;# 
  2997     018C                     SSP1BUF         equ	396	;# 
  2998     018D                     SSP1ADD         equ	397	;# 
  2999     018E                     SSP1MSK         equ	398	;# 
  3000     018F                     SSP1STAT        equ	399	;# 
  3001     0190                     SSP1CON1        equ	400	;# 
  3002     0191                     SSP1CON2        equ	401	;# 
  3003     0192                     SSP1CON3        equ	402	;# 
  3004     0196                     SSP2BUF         equ	406	;# 
  3005     0197                     SSP2ADD         equ	407	;# 
  3006     0198                     SSP2MSK         equ	408	;# 
  3007     0199                     SSP2STAT        equ	409	;# 
  3008     019A                     SSP2CON1        equ	410	;# 
  3009     019B                     SSP2CON2        equ	411	;# 
  3010     019C                     SSP2CON3        equ	412	;# 
  3011     020C                     TMR1            equ	524	;# 
  3012     020C                     TMR1L           equ	524	;# 
  3013     020D                     TMR1H           equ	525	;# 
  3014     020E                     T1CON           equ	526	;# 
  3015     020E                     TMR1CON         equ	526	;# 
  3016     020F                     T1GCON          equ	527	;# 
  3017     020F                     TMR1GCON        equ	527	;# 
  3018     0210                     T1GATE          equ	528	;# 
  3019     0210                     TMR1GATE        equ	528	;# 
  3020     0211                     T1CLK           equ	529	;# 
  3021     0211                     TMR1CLK         equ	529	;# 
  3022     0211                     PR1             equ	529	;# 
  3023     0212                     TMR3            equ	530	;# 
  3024     0212                     TMR3L           equ	530	;# 
  3025     0213                     TMR3H           equ	531	;# 
  3026     0214                     T3CON           equ	532	;# 
  3027     0214                     TMR3CON         equ	532	;# 
  3028     0215                     T3GCON          equ	533	;# 
  3029     0215                     TMR3GCON        equ	533	;# 
  3030     0216                     T3GATE          equ	534	;# 
  3031     0216                     TMR3GATE        equ	534	;# 
  3032     0217                     T3CLK           equ	535	;# 
  3033     0217                     TMR3CLK         equ	535	;# 
  3034     0217                     PR3             equ	535	;# 
  3035     0218                     TMR5            equ	536	;# 
  3036     0218                     TMR5L           equ	536	;# 
  3037     0219                     TMR5H           equ	537	;# 
  3038     021A                     T5CON           equ	538	;# 
  3039     021A                     TMR5CON         equ	538	;# 
  3040     021B                     T5GCON          equ	539	;# 
  3041     021B                     TMR5GCON        equ	539	;# 
  3042     021C                     T5GATE          equ	540	;# 
  3043     021C                     TMR5GATE        equ	540	;# 
  3044     021D                     T5CLK           equ	541	;# 
  3045     021D                     TMR5CLK         equ	541	;# 
  3046     021D                     PR5             equ	541	;# 
  3047     021E                     CCPTMRS0        equ	542	;# 
  3048     021F                     CCPTMRS1        equ	543	;# 
  3049     028C                     T2TMR           equ	652	;# 
  3050     028C                     TMR2            equ	652	;# 
  3051     028D                     T2PR            equ	653	;# 
  3052     028D                     PR2             equ	653	;# 
  3053     028E                     T2CON           equ	654	;# 
  3054     028F                     T2HLT           equ	655	;# 
  3055     0290                     T2CLKCON        equ	656	;# 
  3056     0291                     T2RST           equ	657	;# 
  3057     0292                     T4TMR           equ	658	;# 
  3058     0292                     TMR4            equ	658	;# 
  3059     0293                     T4PR            equ	659	;# 
  3060     0293                     PR4             equ	659	;# 
  3061     0294                     T4CON           equ	660	;# 
  3062     0295                     T4HLT           equ	661	;# 
  3063     0296                     T4CLKCON        equ	662	;# 
  3064     0297                     T4RST           equ	663	;# 
  3065     0298                     T6TMR           equ	664	;# 
  3066     0298                     TMR6            equ	664	;# 
  3067     0299                     T6PR            equ	665	;# 
  3068     0299                     PR6             equ	665	;# 
  3069     029A                     T6CON           equ	666	;# 
  3070     029B                     T6HLT           equ	667	;# 
  3071     029C                     T6CLKCON        equ	668	;# 
  3072     029D                     T6RST           equ	669	;# 
  3073     029F                     ADCPCON0        equ	671	;# 
  3074     030C                     CCPR1           equ	780	;# 
  3075     030C                     CCPR1L          equ	780	;# 
  3076     030D                     CCPR1H          equ	781	;# 
  3077     030E                     CCP1CON         equ	782	;# 
  3078     030F                     CCP1CAP         equ	783	;# 
  3079     0310                     CCPR2           equ	784	;# 
  3080     0310                     CCPR2L          equ	784	;# 
  3081     0311                     CCPR2H          equ	785	;# 
  3082     0312                     CCP2CON         equ	786	;# 
  3083     0313                     CCP2CAP         equ	787	;# 
  3084     0314                     CCPR3           equ	788	;# 
  3085     0314                     CCPR3L          equ	788	;# 
  3086     0315                     CCPR3H          equ	789	;# 
  3087     0316                     CCP3CON         equ	790	;# 
  3088     0317                     CCP3CAP         equ	791	;# 
  3089     0318                     CCPR4           equ	792	;# 
  3090     0318                     CCPR4L          equ	792	;# 
  3091     0319                     CCPR4H          equ	793	;# 
  3092     031A                     CCP4CON         equ	794	;# 
  3093     031B                     CCP4CAP         equ	795	;# 
  3094     031C                     CCPR5           equ	796	;# 
  3095     031C                     CCPR5L          equ	796	;# 
  3096     031D                     CCPR5H          equ	797	;# 
  3097     031E                     CCP5CON         equ	798	;# 
  3098     031F                     CCP5CAP         equ	799	;# 
  3099     038C                     PWM6DC          equ	908	;# 
  3100     038C                     PWM6DCL         equ	908	;# 
  3101     038D                     PWM6DCH         equ	909	;# 
  3102     038E                     PWM6CON         equ	910	;# 
  3103     0390                     PWM7DC          equ	912	;# 
  3104     0390                     PWM7DCL         equ	912	;# 
  3105     0391                     PWM7DCH         equ	913	;# 
  3106     0392                     PWM7CON         equ	914	;# 
  3107     048C                     SMT1TMR         equ	1164	;# 
  3108     048C                     SMT1TMRL        equ	1164	;# 
  3109     048D                     SMT1TMRH        equ	1165	;# 
  3110     048E                     SMT1TMRU        equ	1166	;# 
  3111     048F                     SMT1CPR         equ	1167	;# 
  3112     048F                     SMT1CPRL        equ	1167	;# 
  3113     0490                     SMT1CPRH        equ	1168	;# 
  3114     0491                     SMT1CPRU        equ	1169	;# 
  3115     0492                     SMT1CPW         equ	1170	;# 
  3116     0492                     SMT1CPWL        equ	1170	;# 
  3117     0493                     SMT1CPWH        equ	1171	;# 
  3118     0494                     SMT1CPWU        equ	1172	;# 
  3119     0495                     SMT1PR          equ	1173	;# 
  3120     0495                     SMT1PRL         equ	1173	;# 
  3121     0496                     SMT1PRH         equ	1174	;# 
  3122     0497                     SMT1PRU         equ	1175	;# 
  3123     0498                     SMT1CON0        equ	1176	;# 
  3124     0499                     SMT1CON1        equ	1177	;# 
  3125     049A                     SMT1STAT        equ	1178	;# 
  3126     049B                     SMT1CLK         equ	1179	;# 
  3127     049C                     SMT1SIG         equ	1180	;# 
  3128     049D                     SMT1WIN         equ	1181	;# 
  3129     050C                     SMT2TMR         equ	1292	;# 
  3130     050C                     SMT2TMRL        equ	1292	;# 
  3131     050D                     SMT2TMRH        equ	1293	;# 
  3132     050E                     SMT2TMRU        equ	1294	;# 
  3133     050F                     SMT2CPR         equ	1295	;# 
  3134     050F                     SMT2CPRL        equ	1295	;# 
  3135     0510                     SMT2CPRH        equ	1296	;# 
  3136     0511                     SMT2CPRU        equ	1297	;# 
  3137     0512                     SMT2CPW         equ	1298	;# 
  3138     0512                     SMT2CPWL        equ	1298	;# 
  3139     0513                     SMT2CPWH        equ	1299	;# 
  3140     0514                     SMT2CPWU        equ	1300	;# 
  3141     0515                     SMT2PR          equ	1301	;# 
  3142     0515                     SMT2PRL         equ	1301	;# 
  3143     0516                     SMT2PRH         equ	1302	;# 
  3144     0517                     SMT2PRU         equ	1303	;# 
  3145     0518                     SMT2CON0        equ	1304	;# 
  3146     0519                     SMT2CON1        equ	1305	;# 
  3147     051A                     SMT2STAT        equ	1306	;# 
  3148     051B                     SMT2CLK         equ	1307	;# 
  3149     051C                     SMT2SIG         equ	1308	;# 
  3150     051D                     SMT2WIN         equ	1309	;# 
  3151     058C                     NCO1ACC         equ	1420	;# 
  3152     058C                     NCO1ACCL        equ	1420	;# 
  3153     058D                     NCO1ACCH        equ	1421	;# 
  3154     058E                     NCO1ACCU        equ	1422	;# 
  3155     058F                     NCO1INC         equ	1423	;# 
  3156     058F                     NCO1INCL        equ	1423	;# 
  3157     0590                     NCO1INCH        equ	1424	;# 
  3158     0591                     NCO1INCU        equ	1425	;# 
  3159     0592                     NCO1CON         equ	1426	;# 
  3160     0593                     NCO1CLK         equ	1427	;# 
  3161     059C                     TMR0L           equ	1436	;# 
  3162     059C                     TMR0            equ	1436	;# 
  3163     059D                     TMR0H           equ	1437	;# 
  3164     059D                     PR0             equ	1437	;# 
  3165     059E                     T0CON0          equ	1438	;# 
  3166     059F                     T0CON1          equ	1439	;# 
  3167     060C                     CWG1CLK         equ	1548	;# 
  3168     060C                     CWG1CLKCON      equ	1548	;# 
  3169     060D                     CWG1ISM         equ	1549	;# 
  3170     060D                     CWG1DAT         equ	1549	;# 
  3171     060E                     CWG1DBR         equ	1550	;# 
  3172     060F                     CWG1DBF         equ	1551	;# 
  3173     0610                     CWG1CON0        equ	1552	;# 
  3174     0611                     CWG1CON1        equ	1553	;# 
  3175     0612                     CWG1AS0         equ	1554	;# 
  3176     0613                     CWG1AS1         equ	1555	;# 
  3177     0614                     CWG1STR         equ	1556	;# 
  3178     0616                     CWG2CLK         equ	1558	;# 
  3179     0616                     CWG2CLKCON      equ	1558	;# 
  3180     0617                     CWG2ISM         equ	1559	;# 
  3181     0617                     CWG2DAT         equ	1559	;# 
  3182     0618                     CWG2DBR         equ	1560	;# 
  3183     0619                     CWG2DBF         equ	1561	;# 
  3184     061A                     CWG2CON0        equ	1562	;# 
  3185     061B                     CWG2CON1        equ	1563	;# 
  3186     061C                     CWG2AS0         equ	1564	;# 
  3187     061D                     CWG2AS1         equ	1565	;# 
  3188     061E                     CWG2STR         equ	1566	;# 
  3189     068C                     CWG3CLK         equ	1676	;# 
  3190     068C                     CWG3CLKCON      equ	1676	;# 
  3191     068D                     CWG3ISM         equ	1677	;# 
  3192     068D                     CWG3DAT         equ	1677	;# 
  3193     068E                     CWG3DBR         equ	1678	;# 
  3194     068F                     CWG3DBF         equ	1679	;# 
  3195     0690                     CWG3CON0        equ	1680	;# 
  3196     0691                     CWG3CON1        equ	1681	;# 
  3197     0692                     CWG3AS0         equ	1682	;# 
  3198     0693                     CWG3AS1         equ	1683	;# 
  3199     0694                     CWG3STR         equ	1684	;# 
  3200     070C                     PIR0            equ	1804	;# 
  3201     070D                     PIR1            equ	1805	;# 
  3202     070E                     PIR2            equ	1806	;# 
  3203     070F                     PIR3            equ	1807	;# 
  3204     0710                     PIR4            equ	1808	;# 
  3205     0711                     PIR5            equ	1809	;# 
  3206     0712                     PIR6            equ	1810	;# 
  3207     0713                     PIR7            equ	1811	;# 
  3208     0714                     PIR8            equ	1812	;# 
  3209     0716                     PIE0            equ	1814	;# 
  3210     0717                     PIE1            equ	1815	;# 
  3211     0718                     PIE2            equ	1816	;# 
  3212     0719                     PIE3            equ	1817	;# 
  3213     071A                     PIE4            equ	1818	;# 
  3214     071B                     PIE5            equ	1819	;# 
  3215     071C                     PIE6            equ	1820	;# 
  3216     071D                     PIE7            equ	1821	;# 
  3217     071E                     PIE8            equ	1822	;# 
  3218     0796                     PMD0            equ	1942	;# 
  3219     0797                     PMD1            equ	1943	;# 
  3220     0798                     PMD2            equ	1944	;# 
  3221     0799                     PMD3            equ	1945	;# 
  3222     079A                     PMD4            equ	1946	;# 
  3223     079B                     PMD5            equ	1947	;# 
  3224     079C                     PMD6            equ	1948	;# 
  3225     079D                     PMD7            equ	1949	;# 
  3226     080C                     WDTCON0         equ	2060	;# 
  3227     080D                     WDTCON1         equ	2061	;# 
  3228     080E                     WDTPSL          equ	2062	;# 
  3229     080F                     WDTPSH          equ	2063	;# 
  3230     0810                     WDTTMR          equ	2064	;# 
  3231     0811                     BORCON          equ	2065	;# 
  3232     0813                     PCON0           equ	2067	;# 
  3233     0814                     PCON1           equ	2068	;# 
  3234     081A                     NVMADR          equ	2074	;# 
  3235     081A                     NVMADRL         equ	2074	;# 
  3236     081B                     NVMADRH         equ	2075	;# 
  3237     081C                     NVMDAT          equ	2076	;# 
  3238     081C                     NVMDATL         equ	2076	;# 
  3239     081D                     NVMDATH         equ	2077	;# 
  3240     081E                     NVMCON1         equ	2078	;# 
  3241     081F                     NVMCON2         equ	2079	;# 
  3242     088C                     CPUDOZE         equ	2188	;# 
  3243     088D                     OSCCON1         equ	2189	;# 
  3244     088E                     OSCCON2         equ	2190	;# 
  3245     088F                     OSCCON3         equ	2191	;# 
  3246     0890                     OSCSTAT         equ	2192	;# 
  3247     0891                     OSCEN           equ	2193	;# 
  3248     0892                     OSCTUNE         equ	2194	;# 
  3249     0893                     OSCFRQ          equ	2195	;# 
  3250     0895                     CLKRCON         equ	2197	;# 
  3251     0896                     CLKRCLK         equ	2198	;# 
  3252     0897                     MD1CON0         equ	2199	;# 
  3253     0898                     MD1CON1         equ	2200	;# 
  3254     0899                     MD1SRC          equ	2201	;# 
  3255     089A                     MD1CARL         equ	2202	;# 
  3256     089B                     MD1CARH         equ	2203	;# 
  3257     090C                     FVRCON          equ	2316	;# 
  3258     090E                     DAC1CON0        equ	2318	;# 
  3259     090F                     DAC1CON1        equ	2319	;# 
  3260     091F                     ZCDCON          equ	2335	;# 
  3261     098F                     CMOUT           equ	2447	;# 
  3262     098F                     CMSTAT          equ	2447	;# 
  3263     0990                     CM1CON0         equ	2448	;# 
  3264     0991                     CM1CON1         equ	2449	;# 
  3265     0992                     CM1NCH          equ	2450	;# 
  3266     0993                     CM1PCH          equ	2451	;# 
  3267     0994                     CM2CON0         equ	2452	;# 
  3268     0995                     CM2CON1         equ	2453	;# 
  3269     0996                     CM2NCH          equ	2454	;# 
  3270     0997                     CM2PCH          equ	2455	;# 
  3271     0A19                     RC2REG          equ	2585	;# 
  3272     0A19                     RCREG2          equ	2585	;# 
  3273     0A1A                     TX2REG          equ	2586	;# 
  3274     0A1A                     TXREG2          equ	2586	;# 
  3275     0A1B                     SP2BRG          equ	2587	;# 
  3276     0A1B                     SP2BRGL         equ	2587	;# 
  3277     0A1B                     SPBRG2          equ	2587	;# 
  3278     0A1C                     SP2BRGH         equ	2588	;# 
  3279     0A1C                     SPBRGH2         equ	2588	;# 
  3280     0A1D                     RC2STA          equ	2589	;# 
  3281     0A1D                     RCSTA2          equ	2589	;# 
  3282     0A1E                     TX2STA          equ	2590	;# 
  3283     0A1E                     TXSTA2          equ	2590	;# 
  3284     0A1F                     BAUD2CON        equ	2591	;# 
  3285     0A1F                     BAUDCON2        equ	2591	;# 
  3286     0A1F                     BAUDCTL2        equ	2591	;# 
  3287     1E0F                     CLCDATA         equ	7695	;# 
  3288     1E10                     CLC1CON         equ	7696	;# 
  3289     1E11                     CLC1POL         equ	7697	;# 
  3290     1E12                     CLC1SEL0        equ	7698	;# 
  3291     1E13                     CLC1SEL1        equ	7699	;# 
  3292     1E14                     CLC1SEL2        equ	7700	;# 
  3293     1E15                     CLC1SEL3        equ	7701	;# 
  3294     1E16                     CLC1GLS0        equ	7702	;# 
  3295     1E17                     CLC1GLS1        equ	7703	;# 
  3296     1E18                     CLC1GLS2        equ	7704	;# 
  3297     1E19                     CLC1GLS3        equ	7705	;# 
  3298     1E1A                     CLC2CON         equ	7706	;# 
  3299     1E1B                     CLC2POL         equ	7707	;# 
  3300     1E1C                     CLC2SEL0        equ	7708	;# 
  3301     1E1D                     CLC2SEL1        equ	7709	;# 
  3302     1E1E                     CLC2SEL2        equ	7710	;# 
  3303     1E1F                     CLC2SEL3        equ	7711	;# 
  3304     1E20                     CLC2GLS0        equ	7712	;# 
  3305     1E21                     CLC2GLS1        equ	7713	;# 
  3306     1E22                     CLC2GLS2        equ	7714	;# 
  3307     1E23                     CLC2GLS3        equ	7715	;# 
  3308     1E24                     CLC3CON         equ	7716	;# 
  3309     1E25                     CLC3POL         equ	7717	;# 
  3310     1E26                     CLC3SEL0        equ	7718	;# 
  3311     1E27                     CLC3SEL1        equ	7719	;# 
  3312     1E28                     CLC3SEL2        equ	7720	;# 
  3313     1E29                     CLC3SEL3        equ	7721	;# 
  3314     1E2A                     CLC3GLS0        equ	7722	;# 
  3315     1E2B                     CLC3GLS1        equ	7723	;# 
  3316     1E2C                     CLC3GLS2        equ	7724	;# 
  3317     1E2D                     CLC3GLS3        equ	7725	;# 
  3318     1E2E                     CLC4CON         equ	7726	;# 
  3319     1E2F                     CLC4POL         equ	7727	;# 
  3320     1E30                     CLC4SEL0        equ	7728	;# 
  3321     1E31                     CLC4SEL1        equ	7729	;# 
  3322     1E32                     CLC4SEL2        equ	7730	;# 
  3323     1E33                     CLC4SEL3        equ	7731	;# 
  3324     1E34                     CLC4GLS0        equ	7732	;# 
  3325     1E35                     CLC4GLS1        equ	7733	;# 
  3326     1E36                     CLC4GLS2        equ	7734	;# 
  3327     1E37                     CLC4GLS3        equ	7735	;# 
  3328     1E8F                     PPSLOCK         equ	7823	;# 
  3329     1E90                     INTPPS          equ	7824	;# 
  3330     1E91                     T0CKIPPS        equ	7825	;# 
  3331     1E92                     T1CKIPPS        equ	7826	;# 
  3332     1E93                     T1GPPS          equ	7827	;# 
  3333     1E94                     T3CKIPPS        equ	7828	;# 
  3334     1E95                     T3GPPS          equ	7829	;# 
  3335     1E96                     T5CKIPPS        equ	7830	;# 
  3336     1E97                     T5GPPS          equ	7831	;# 
  3337     1E9C                     T2INPPS         equ	7836	;# 
  3338     1E9D                     T4INPPS         equ	7837	;# 
  3339     1E9E                     T6INPPS         equ	7838	;# 
  3340     1EA1                     CCP1PPS         equ	7841	;# 
  3341     1EA2                     CCP2PPS         equ	7842	;# 
  3342     1EA3                     CCP3PPS         equ	7843	;# 
  3343     1EA4                     CCP4PPS         equ	7844	;# 
  3344     1EA5                     CCP5PPS         equ	7845	;# 
  3345     1EA9                     SMT1WINPPS      equ	7849	;# 
  3346     1EAA                     SMT1SIGPPS      equ	7850	;# 
  3347     1EAB                     SMT2WINPPS      equ	7851	;# 
  3348     1EAC                     SMT2SIGPPS      equ	7852	;# 
  3349     1EB1                     CWG1PPS         equ	7857	;# 
  3350     1EB2                     CWG2PPS         equ	7858	;# 
  3351     1EB3                     CWG3PPS         equ	7859	;# 
  3352     1EB8                     MDCARLPPS       equ	7864	;# 
  3353     1EB9                     MDCARHPPS       equ	7865	;# 
  3354     1EBA                     MDSRCPPS        equ	7866	;# 
  3355     1EBB                     CLCIN0PPS       equ	7867	;# 
  3356     1EBC                     CLCIN1PPS       equ	7868	;# 
  3357     1EBD                     CLCIN2PPS       equ	7869	;# 
  3358     1EBE                     CLCIN3PPS       equ	7870	;# 
  3359     1EC3                     ADACTPPS        equ	7875	;# 
  3360     1EC5                     SSP1CLKPPS      equ	7877	;# 
  3361     1EC6                     SSP1DATPPS      equ	7878	;# 
  3362     1EC7                     SSP1SSPPS       equ	7879	;# 
  3363     1EC8                     SSP2CLKPPS      equ	7880	;# 
  3364     1EC9                     SSP2DATPPS      equ	7881	;# 
  3365     1ECA                     SSP2SSPPS       equ	7882	;# 
  3366     1ECB                     RX1PPS          equ	7883	;# 
  3367     1ECC                     CK1PPS          equ	7884	;# 
  3368     1ECD                     RX2PPS          equ	7885	;# 
  3369     1ECE                     CK2PPS          equ	7886	;# 
  3370     1F10                     RA0PPS          equ	7952	;# 
  3371     1F11                     RA1PPS          equ	7953	;# 
  3372     1F12                     RA2PPS          equ	7954	;# 
  3373     1F13                     RA3PPS          equ	7955	;# 
  3374     1F14                     RA4PPS          equ	7956	;# 
  3375     1F15                     RA5PPS          equ	7957	;# 
  3376     1F16                     RA6PPS          equ	7958	;# 
  3377     1F17                     RA7PPS          equ	7959	;# 
  3378     1F18                     RB0PPS          equ	7960	;# 
  3379     1F19                     RB1PPS          equ	7961	;# 
  3380     1F1A                     RB2PPS          equ	7962	;# 
  3381     1F1B                     RB3PPS          equ	7963	;# 
  3382     1F1C                     RB4PPS          equ	7964	;# 
  3383     1F1D                     RB5PPS          equ	7965	;# 
  3384     1F1E                     RB6PPS          equ	7966	;# 
  3385     1F1F                     RB7PPS          equ	7967	;# 
  3386     1F20                     RC0PPS          equ	7968	;# 
  3387     1F21                     RC1PPS          equ	7969	;# 
  3388     1F22                     RC2PPS          equ	7970	;# 
  3389     1F23                     RC3PPS          equ	7971	;# 
  3390     1F24                     RC4PPS          equ	7972	;# 
  3391     1F25                     RC5PPS          equ	7973	;# 
  3392     1F26                     RC6PPS          equ	7974	;# 
  3393     1F27                     RC7PPS          equ	7975	;# 
  3394     1F38                     ANSELA          equ	7992	;# 
  3395     1F39                     WPUA            equ	7993	;# 
  3396     1F3A                     ODCONA          equ	7994	;# 
  3397     1F3B                     SLRCONA         equ	7995	;# 
  3398     1F3C                     INLVLA          equ	7996	;# 
  3399     1F3D                     IOCAP           equ	7997	;# 
  3400     1F3E                     IOCAN           equ	7998	;# 
  3401     1F3F                     IOCAF           equ	7999	;# 
  3402     1F43                     ANSELB          equ	8003	;# 
  3403     1F44                     WPUB            equ	8004	;# 
  3404     1F45                     ODCONB          equ	8005	;# 
  3405     1F46                     SLRCONB         equ	8006	;# 
  3406     1F47                     INLVLB          equ	8007	;# 
  3407     1F48                     IOCBP           equ	8008	;# 
  3408     1F49                     IOCBN           equ	8009	;# 
  3409     1F4A                     IOCBF           equ	8010	;# 
  3410     1F4E                     ANSELC          equ	8014	;# 
  3411     1F4F                     WPUC            equ	8015	;# 
  3412     1F50                     ODCONC          equ	8016	;# 
  3413     1F51                     SLRCONC         equ	8017	;# 
  3414     1F52                     INLVLC          equ	8018	;# 
  3415     1F53                     IOCCP           equ	8019	;# 
  3416     1F54                     IOCCN           equ	8020	;# 
  3417     1F55                     IOCCF           equ	8021	;# 
  3418     1F65                     WPUE            equ	8037	;# 
  3419     1F66                     ODCONE          equ	8038	;# 
  3420     1F67                     SLRCONE         equ	8039	;# 
  3421     1F68                     INLVLE          equ	8040	;# 
  3422     1F69                     IOCEP           equ	8041	;# 
  3423     1F6A                     IOCEN           equ	8042	;# 
  3424     1F6B                     IOCEF           equ	8043	;# 
  3425     1FE4                     STATUS_SHAD     equ	8164	;# 
  3426     1FE5                     WREG_SHAD       equ	8165	;# 
  3427     1FE6                     BSR_SHAD        equ	8166	;# 
  3428     1FE7                     PCLATH_SHAD     equ	8167	;# 
  3429     1FE8                     FSR0_SHAD       equ	8168	;# 
  3430     1FE8                     FSR0L_SHAD      equ	8168	;# 
  3431     1FE9                     FSR0H_SHAD      equ	8169	;# 
  3432     1FEA                     FSR1L_SHAD      equ	8170	;# 
  3433     1FEB                     FSR1H_SHAD      equ	8171	;# 
  3434     1FED                     STKPTR          equ	8173	;# 
  3435     1FEE                     TOSL            equ	8174	;# 
  3436     1FEF                     TOSH            equ	8175	;# 
  3437     0000                     INDF0           equ	0	;# 
  3438     0001                     INDF1           equ	1	;# 
  3439     0002                     PCL             equ	2	;# 
  3440     0003                     STATUS          equ	3	;# 
  3441     0004                     FSR0L           equ	4	;# 
  3442     0005                     FSR0H           equ	5	;# 
  3443     0006                     FSR1L           equ	6	;# 
  3444     0007                     FSR1H           equ	7	;# 
  3445     0008                     BSR             equ	8	;# 
  3446     0009                     WREG            equ	9	;# 
  3447     000A                     PCLATH          equ	10	;# 
  3448     000B                     INTCON          equ	11	;# 
  3449     000C                     PORTA           equ	12	;# 
  3450     000D                     PORTB           equ	13	;# 
  3451     000E                     PORTC           equ	14	;# 
  3452     0010                     PORTE           equ	16	;# 
  3453     0012                     TRISA           equ	18	;# 
  3454     0013                     TRISB           equ	19	;# 
  3455     0014                     TRISC           equ	20	;# 
  3456     0016                     TRISE           equ	22	;# 
  3457     0018                     LATA            equ	24	;# 
  3458     0019                     LATB            equ	25	;# 
  3459     001A                     LATC            equ	26	;# 
  3460     008C                     ADLTH           equ	140	;# 
  3461     008C                     ADLTHL          equ	140	;# 
  3462     008D                     ADLTHH          equ	141	;# 
  3463     008E                     ADUTH           equ	142	;# 
  3464     008E                     ADUTHL          equ	142	;# 
  3465     008F                     ADUTHH          equ	143	;# 
  3466     0090                     ADERR           equ	144	;# 
  3467     0090                     ADERRL          equ	144	;# 
  3468     0091                     ADERRH          equ	145	;# 
  3469     0092                     ADSTPT          equ	146	;# 
  3470     0092                     ADSTPTL         equ	146	;# 
  3471     0093                     ADSTPTH         equ	147	;# 
  3472     0094                     ADFLTR          equ	148	;# 
  3473     0094                     ADFLTRL         equ	148	;# 
  3474     0095                     ADFLTRH         equ	149	;# 
  3475     0096                     ADACC           equ	150	;# 
  3476     0096                     ADACCL          equ	150	;# 
  3477     0097                     ADACCH          equ	151	;# 
  3478     0098                     ADACCU          equ	152	;# 
  3479     0099                     ADCNT           equ	153	;# 
  3480     009A                     ADRPT           equ	154	;# 
  3481     009B                     ADPREV          equ	155	;# 
  3482     009B                     ADPREVL         equ	155	;# 
  3483     009C                     ADPREVH         equ	156	;# 
  3484     009D                     ADRES           equ	157	;# 
  3485     009D                     ADRESL          equ	157	;# 
  3486     009E                     ADRESH          equ	158	;# 
  3487     009F                     ADPCH           equ	159	;# 
  3488     010C                     ADACQ           equ	268	;# 
  3489     010C                     ADACQL          equ	268	;# 
  3490     010D                     ADACQH          equ	269	;# 
  3491     010E                     ADCAP           equ	270	;# 
  3492     010F                     ADPRE           equ	271	;# 
  3493     010F                     ADPREL          equ	271	;# 
  3494     0110                     ADPREH          equ	272	;# 
  3495     0111                     ADCON0          equ	273	;# 
  3496     0112                     ADCON1          equ	274	;# 
  3497     0113                     ADCON2          equ	275	;# 
  3498     0114                     ADCON3          equ	276	;# 
  3499     0115                     ADSTAT          equ	277	;# 
  3500     0116                     ADREF           equ	278	;# 
  3501     0117                     ADACT           equ	279	;# 
  3502     0118                     ADCLK           equ	280	;# 
  3503     0119                     RC1REG          equ	281	;# 
  3504     0119                     RCREG           equ	281	;# 
  3505     0119                     RCREG1          equ	281	;# 
  3506     011A                     TX1REG          equ	282	;# 
  3507     011A                     TXREG1          equ	282	;# 
  3508     011A                     TXREG           equ	282	;# 
  3509     011B                     SP1BRG          equ	283	;# 
  3510     011B                     SPBRG           equ	283	;# 
  3511     011B                     SP1BRGL         equ	283	;# 
  3512     011B                     SPBRG1          equ	283	;# 
  3513     011B                     SPBRGL          equ	283	;# 
  3514     011C                     SP1BRGH         equ	284	;# 
  3515     011C                     SPBRGH          equ	284	;# 
  3516     011C                     SPBRGH1         equ	284	;# 
  3517     011D                     RC1STA          equ	285	;# 
  3518     011D                     RCSTA1          equ	285	;# 
  3519     011D                     RCSTA           equ	285	;# 
  3520     011E                     TX1STA          equ	286	;# 
  3521     011E                     TXSTA1          equ	286	;# 
  3522     011E                     TXSTA           equ	286	;# 
  3523     011F                     BAUD1CON        equ	287	;# 
  3524     011F                     BAUDCON1        equ	287	;# 
  3525     011F                     BAUDCTL1        equ	287	;# 
  3526     011F                     BAUDCON         equ	287	;# 
  3527     011F                     BAUDCTL         equ	287	;# 
  3528     018C                     SSP1BUF         equ	396	;# 
  3529     018D                     SSP1ADD         equ	397	;# 
  3530     018E                     SSP1MSK         equ	398	;# 
  3531     018F                     SSP1STAT        equ	399	;# 
  3532     0190                     SSP1CON1        equ	400	;# 
  3533     0191                     SSP1CON2        equ	401	;# 
  3534     0192                     SSP1CON3        equ	402	;# 
  3535     0196                     SSP2BUF         equ	406	;# 
  3536     0197                     SSP2ADD         equ	407	;# 
  3537     0198                     SSP2MSK         equ	408	;# 
  3538     0199                     SSP2STAT        equ	409	;# 
  3539     019A                     SSP2CON1        equ	410	;# 
  3540     019B                     SSP2CON2        equ	411	;# 
  3541     019C                     SSP2CON3        equ	412	;# 
  3542     020C                     TMR1            equ	524	;# 
  3543     020C                     TMR1L           equ	524	;# 
  3544     020D                     TMR1H           equ	525	;# 
  3545     020E                     T1CON           equ	526	;# 
  3546     020E                     TMR1CON         equ	526	;# 
  3547     020F                     T1GCON          equ	527	;# 
  3548     020F                     TMR1GCON        equ	527	;# 
  3549     0210                     T1GATE          equ	528	;# 
  3550     0210                     TMR1GATE        equ	528	;# 
  3551     0211                     T1CLK           equ	529	;# 
  3552     0211                     TMR1CLK         equ	529	;# 
  3553     0211                     PR1             equ	529	;# 
  3554     0212                     TMR3            equ	530	;# 
  3555     0212                     TMR3L           equ	530	;# 
  3556     0213                     TMR3H           equ	531	;# 
  3557     0214                     T3CON           equ	532	;# 
  3558     0214                     TMR3CON         equ	532	;# 
  3559     0215                     T3GCON          equ	533	;# 
  3560     0215                     TMR3GCON        equ	533	;# 
  3561     0216                     T3GATE          equ	534	;# 
  3562     0216                     TMR3GATE        equ	534	;# 
  3563     0217                     T3CLK           equ	535	;# 
  3564     0217                     TMR3CLK         equ	535	;# 
  3565     0217                     PR3             equ	535	;# 
  3566     0218                     TMR5            equ	536	;# 
  3567     0218                     TMR5L           equ	536	;# 
  3568     0219                     TMR5H           equ	537	;# 
  3569     021A                     T5CON           equ	538	;# 
  3570     021A                     TMR5CON         equ	538	;# 
  3571     021B                     T5GCON          equ	539	;# 
  3572     021B                     TMR5GCON        equ	539	;# 
  3573     021C                     T5GATE          equ	540	;# 
  3574     021C                     TMR5GATE        equ	540	;# 
  3575     021D                     T5CLK           equ	541	;# 
  3576     021D                     TMR5CLK         equ	541	;# 
  3577     021D                     PR5             equ	541	;# 
  3578     021E                     CCPTMRS0        equ	542	;# 
  3579     021F                     CCPTMRS1        equ	543	;# 
  3580     028C                     T2TMR           equ	652	;# 
  3581     028C                     TMR2            equ	652	;# 
  3582     028D                     T2PR            equ	653	;# 
  3583     028D                     PR2             equ	653	;# 
  3584     028E                     T2CON           equ	654	;# 
  3585     028F                     T2HLT           equ	655	;# 
  3586     0290                     T2CLKCON        equ	656	;# 
  3587     0291                     T2RST           equ	657	;# 
  3588     0292                     T4TMR           equ	658	;# 
  3589     0292                     TMR4            equ	658	;# 
  3590     0293                     T4PR            equ	659	;# 
  3591     0293                     PR4             equ	659	;# 
  3592     0294                     T4CON           equ	660	;# 
  3593     0295                     T4HLT           equ	661	;# 
  3594     0296                     T4CLKCON        equ	662	;# 
  3595     0297                     T4RST           equ	663	;# 
  3596     0298                     T6TMR           equ	664	;# 
  3597     0298                     TMR6            equ	664	;# 
  3598     0299                     T6PR            equ	665	;# 
  3599     0299                     PR6             equ	665	;# 
  3600     029A                     T6CON           equ	666	;# 
  3601     029B                     T6HLT           equ	667	;# 
  3602     029C                     T6CLKCON        equ	668	;# 
  3603     029D                     T6RST           equ	669	;# 
  3604     029F                     ADCPCON0        equ	671	;# 
  3605     030C                     CCPR1           equ	780	;# 
  3606     030C                     CCPR1L          equ	780	;# 
  3607     030D                     CCPR1H          equ	781	;# 
  3608     030E                     CCP1CON         equ	782	;# 
  3609     030F                     CCP1CAP         equ	783	;# 
  3610     0310                     CCPR2           equ	784	;# 
  3611     0310                     CCPR2L          equ	784	;# 
  3612     0311                     CCPR2H          equ	785	;# 
  3613     0312                     CCP2CON         equ	786	;# 
  3614     0313                     CCP2CAP         equ	787	;# 
  3615     0314                     CCPR3           equ	788	;# 
  3616     0314                     CCPR3L          equ	788	;# 
  3617     0315                     CCPR3H          equ	789	;# 
  3618     0316                     CCP3CON         equ	790	;# 
  3619     0317                     CCP3CAP         equ	791	;# 
  3620     0318                     CCPR4           equ	792	;# 
  3621     0318                     CCPR4L          equ	792	;# 
  3622     0319                     CCPR4H          equ	793	;# 
  3623     031A                     CCP4CON         equ	794	;# 
  3624     031B                     CCP4CAP         equ	795	;# 
  3625     031C                     CCPR5           equ	796	;# 
  3626     031C                     CCPR5L          equ	796	;# 
  3627     031D                     CCPR5H          equ	797	;# 
  3628     031E                     CCP5CON         equ	798	;# 
  3629     031F                     CCP5CAP         equ	799	;# 
  3630     038C                     PWM6DC          equ	908	;# 
  3631     038C                     PWM6DCL         equ	908	;# 
  3632     038D                     PWM6DCH         equ	909	;# 
  3633     038E                     PWM6CON         equ	910	;# 
  3634     0390                     PWM7DC          equ	912	;# 
  3635     0390                     PWM7DCL         equ	912	;# 
  3636     0391                     PWM7DCH         equ	913	;# 
  3637     0392                     PWM7CON         equ	914	;# 
  3638     048C                     SMT1TMR         equ	1164	;# 
  3639     048C                     SMT1TMRL        equ	1164	;# 
  3640     048D                     SMT1TMRH        equ	1165	;# 
  3641     048E                     SMT1TMRU        equ	1166	;# 
  3642     048F                     SMT1CPR         equ	1167	;# 
  3643     048F                     SMT1CPRL        equ	1167	;# 
  3644     0490                     SMT1CPRH        equ	1168	;# 
  3645     0491                     SMT1CPRU        equ	1169	;# 
  3646     0492                     SMT1CPW         equ	1170	;# 
  3647     0492                     SMT1CPWL        equ	1170	;# 
  3648     0493                     SMT1CPWH        equ	1171	;# 
  3649     0494                     SMT1CPWU        equ	1172	;# 
  3650     0495                     SMT1PR          equ	1173	;# 
  3651     0495                     SMT1PRL         equ	1173	;# 
  3652     0496                     SMT1PRH         equ	1174	;# 
  3653     0497                     SMT1PRU         equ	1175	;# 
  3654     0498                     SMT1CON0        equ	1176	;# 
  3655     0499                     SMT1CON1        equ	1177	;# 
  3656     049A                     SMT1STAT        equ	1178	;# 
  3657     049B                     SMT1CLK         equ	1179	;# 
  3658     049C                     SMT1SIG         equ	1180	;# 
  3659     049D                     SMT1WIN         equ	1181	;# 
  3660     050C                     SMT2TMR         equ	1292	;# 
  3661     050C                     SMT2TMRL        equ	1292	;# 
  3662     050D                     SMT2TMRH        equ	1293	;# 
  3663     050E                     SMT2TMRU        equ	1294	;# 
  3664     050F                     SMT2CPR         equ	1295	;# 
  3665     050F                     SMT2CPRL        equ	1295	;# 
  3666     0510                     SMT2CPRH        equ	1296	;# 
  3667     0511                     SMT2CPRU        equ	1297	;# 
  3668     0512                     SMT2CPW         equ	1298	;# 
  3669     0512                     SMT2CPWL        equ	1298	;# 
  3670     0513                     SMT2CPWH        equ	1299	;# 
  3671     0514                     SMT2CPWU        equ	1300	;# 
  3672     0515                     SMT2PR          equ	1301	;# 
  3673     0515                     SMT2PRL         equ	1301	;# 
  3674     0516                     SMT2PRH         equ	1302	;# 
  3675     0517                     SMT2PRU         equ	1303	;# 
  3676     0518                     SMT2CON0        equ	1304	;# 
  3677     0519                     SMT2CON1        equ	1305	;# 
  3678     051A                     SMT2STAT        equ	1306	;# 
  3679     051B                     SMT2CLK         equ	1307	;# 
  3680     051C                     SMT2SIG         equ	1308	;# 
  3681     051D                     SMT2WIN         equ	1309	;# 
  3682     058C                     NCO1ACC         equ	1420	;# 
  3683     058C                     NCO1ACCL        equ	1420	;# 
  3684     058D                     NCO1ACCH        equ	1421	;# 
  3685     058E                     NCO1ACCU        equ	1422	;# 
  3686     058F                     NCO1INC         equ	1423	;# 
  3687     058F                     NCO1INCL        equ	1423	;# 
  3688     0590                     NCO1INCH        equ	1424	;# 
  3689     0591                     NCO1INCU        equ	1425	;# 
  3690     0592                     NCO1CON         equ	1426	;# 
  3691     0593                     NCO1CLK         equ	1427	;# 
  3692     059C                     TMR0L           equ	1436	;# 
  3693     059C                     TMR0            equ	1436	;# 
  3694     059D                     TMR0H           equ	1437	;# 
  3695     059D                     PR0             equ	1437	;# 
  3696     059E                     T0CON0          equ	1438	;# 
  3697     059F                     T0CON1          equ	1439	;# 
  3698     060C                     CWG1CLK         equ	1548	;# 
  3699     060C                     CWG1CLKCON      equ	1548	;# 
  3700     060D                     CWG1ISM         equ	1549	;# 
  3701     060D                     CWG1DAT         equ	1549	;# 
  3702     060E                     CWG1DBR         equ	1550	;# 
  3703     060F                     CWG1DBF         equ	1551	;# 
  3704     0610                     CWG1CON0        equ	1552	;# 
  3705     0611                     CWG1CON1        equ	1553	;# 
  3706     0612                     CWG1AS0         equ	1554	;# 
  3707     0613                     CWG1AS1         equ	1555	;# 
  3708     0614                     CWG1STR         equ	1556	;# 
  3709     0616                     CWG2CLK         equ	1558	;# 
  3710     0616                     CWG2CLKCON      equ	1558	;# 
  3711     0617                     CWG2ISM         equ	1559	;# 
  3712     0617                     CWG2DAT         equ	1559	;# 
  3713     0618                     CWG2DBR         equ	1560	;# 
  3714     0619                     CWG2DBF         equ	1561	;# 
  3715     061A                     CWG2CON0        equ	1562	;# 
  3716     061B                     CWG2CON1        equ	1563	;# 
  3717     061C                     CWG2AS0         equ	1564	;# 
  3718     061D                     CWG2AS1         equ	1565	;# 
  3719     061E                     CWG2STR         equ	1566	;# 
  3720     068C                     CWG3CLK         equ	1676	;# 
  3721     068C                     CWG3CLKCON      equ	1676	;# 
  3722     068D                     CWG3ISM         equ	1677	;# 
  3723     068D                     CWG3DAT         equ	1677	;# 
  3724     068E                     CWG3DBR         equ	1678	;# 
  3725     068F                     CWG3DBF         equ	1679	;# 
  3726     0690                     CWG3CON0        equ	1680	;# 
  3727     0691                     CWG3CON1        equ	1681	;# 
  3728     0692                     CWG3AS0         equ	1682	;# 
  3729     0693                     CWG3AS1         equ	1683	;# 
  3730     0694                     CWG3STR         equ	1684	;# 
  3731     070C                     PIR0            equ	1804	;# 
  3732     070D                     PIR1            equ	1805	;# 
  3733     070E                     PIR2            equ	1806	;# 
  3734     070F                     PIR3            equ	1807	;# 
  3735     0710                     PIR4            equ	1808	;# 
  3736     0711                     PIR5            equ	1809	;# 
  3737     0712                     PIR6            equ	1810	;# 
  3738     0713                     PIR7            equ	1811	;# 
  3739     0714                     PIR8            equ	1812	;# 
  3740     0716                     PIE0            equ	1814	;# 
  3741     0717                     PIE1            equ	1815	;# 
  3742     0718                     PIE2            equ	1816	;# 
  3743     0719                     PIE3            equ	1817	;# 
  3744     071A                     PIE4            equ	1818	;# 
  3745     071B                     PIE5            equ	1819	;# 
  3746     071C                     PIE6            equ	1820	;# 
  3747     071D                     PIE7            equ	1821	;# 
  3748     071E                     PIE8            equ	1822	;# 
  3749     0796                     PMD0            equ	1942	;# 
  3750     0797                     PMD1            equ	1943	;# 
  3751     0798                     PMD2            equ	1944	;# 
  3752     0799                     PMD3            equ	1945	;# 
  3753     079A                     PMD4            equ	1946	;# 
  3754     079B                     PMD5            equ	1947	;# 
  3755     079C                     PMD6            equ	1948	;# 
  3756     079D                     PMD7            equ	1949	;# 
  3757     080C                     WDTCON0         equ	2060	;# 
  3758     080D                     WDTCON1         equ	2061	;# 
  3759     080E                     WDTPSL          equ	2062	;# 
  3760     080F                     WDTPSH          equ	2063	;# 
  3761     0810                     WDTTMR          equ	2064	;# 
  3762     0811                     BORCON          equ	2065	;# 
  3763     0813                     PCON0           equ	2067	;# 
  3764     0814                     PCON1           equ	2068	;# 
  3765     081A                     NVMADR          equ	2074	;# 
  3766     081A                     NVMADRL         equ	2074	;# 
  3767     081B                     NVMADRH         equ	2075	;# 
  3768     081C                     NVMDAT          equ	2076	;# 
  3769     081C                     NVMDATL         equ	2076	;# 
  3770     081D                     NVMDATH         equ	2077	;# 
  3771     081E                     NVMCON1         equ	2078	;# 
  3772     081F                     NVMCON2         equ	2079	;# 
  3773     088C                     CPUDOZE         equ	2188	;# 
  3774     088D                     OSCCON1         equ	2189	;# 
  3775     088E                     OSCCON2         equ	2190	;# 
  3776     088F                     OSCCON3         equ	2191	;# 
  3777     0890                     OSCSTAT         equ	2192	;# 
  3778     0891                     OSCEN           equ	2193	;# 
  3779     0892                     OSCTUNE         equ	2194	;# 
  3780     0893                     OSCFRQ          equ	2195	;# 
  3781     0895                     CLKRCON         equ	2197	;# 
  3782     0896                     CLKRCLK         equ	2198	;# 
  3783     0897                     MD1CON0         equ	2199	;# 
  3784     0898                     MD1CON1         equ	2200	;# 
  3785     0899                     MD1SRC          equ	2201	;# 
  3786     089A                     MD1CARL         equ	2202	;# 
  3787     089B                     MD1CARH         equ	2203	;# 
  3788     090C                     FVRCON          equ	2316	;# 
  3789     090E                     DAC1CON0        equ	2318	;# 
  3790     090F                     DAC1CON1        equ	2319	;# 
  3791     091F                     ZCDCON          equ	2335	;# 
  3792     098F                     CMOUT           equ	2447	;# 
  3793     098F                     CMSTAT          equ	2447	;# 
  3794     0990                     CM1CON0         equ	2448	;# 
  3795     0991                     CM1CON1         equ	2449	;# 
  3796     0992                     CM1NCH          equ	2450	;# 
  3797     0993                     CM1PCH          equ	2451	;# 
  3798     0994                     CM2CON0         equ	2452	;# 
  3799     0995                     CM2CON1         equ	2453	;# 
  3800     0996                     CM2NCH          equ	2454	;# 
  3801     0997                     CM2PCH          equ	2455	;# 
  3802     0A19                     RC2REG          equ	2585	;# 
  3803     0A19                     RCREG2          equ	2585	;# 
  3804     0A1A                     TX2REG          equ	2586	;# 
  3805     0A1A                     TXREG2          equ	2586	;# 
  3806     0A1B                     SP2BRG          equ	2587	;# 
  3807     0A1B                     SP2BRGL         equ	2587	;# 
  3808     0A1B                     SPBRG2          equ	2587	;# 
  3809     0A1C                     SP2BRGH         equ	2588	;# 
  3810     0A1C                     SPBRGH2         equ	2588	;# 
  3811     0A1D                     RC2STA          equ	2589	;# 
  3812     0A1D                     RCSTA2          equ	2589	;# 
  3813     0A1E                     TX2STA          equ	2590	;# 
  3814     0A1E                     TXSTA2          equ	2590	;# 
  3815     0A1F                     BAUD2CON        equ	2591	;# 
  3816     0A1F                     BAUDCON2        equ	2591	;# 
  3817     0A1F                     BAUDCTL2        equ	2591	;# 
  3818     1E0F                     CLCDATA         equ	7695	;# 
  3819     1E10                     CLC1CON         equ	7696	;# 
  3820     1E11                     CLC1POL         equ	7697	;# 
  3821     1E12                     CLC1SEL0        equ	7698	;# 
  3822     1E13                     CLC1SEL1        equ	7699	;# 
  3823     1E14                     CLC1SEL2        equ	7700	;# 
  3824     1E15                     CLC1SEL3        equ	7701	;# 
  3825     1E16                     CLC1GLS0        equ	7702	;# 
  3826     1E17                     CLC1GLS1        equ	7703	;# 
  3827     1E18                     CLC1GLS2        equ	7704	;# 
  3828     1E19                     CLC1GLS3        equ	7705	;# 
  3829     1E1A                     CLC2CON         equ	7706	;# 
  3830     1E1B                     CLC2POL         equ	7707	;# 
  3831     1E1C                     CLC2SEL0        equ	7708	;# 
  3832     1E1D                     CLC2SEL1        equ	7709	;# 
  3833     1E1E                     CLC2SEL2        equ	7710	;# 
  3834     1E1F                     CLC2SEL3        equ	7711	;# 
  3835     1E20                     CLC2GLS0        equ	7712	;# 
  3836     1E21                     CLC2GLS1        equ	7713	;# 
  3837     1E22                     CLC2GLS2        equ	7714	;# 
  3838     1E23                     CLC2GLS3        equ	7715	;# 
  3839     1E24                     CLC3CON         equ	7716	;# 
  3840     1E25                     CLC3POL         equ	7717	;# 
  3841     1E26                     CLC3SEL0        equ	7718	;# 
  3842     1E27                     CLC3SEL1        equ	7719	;# 
  3843     1E28                     CLC3SEL2        equ	7720	;# 
  3844     1E29                     CLC3SEL3        equ	7721	;# 
  3845     1E2A                     CLC3GLS0        equ	7722	;# 
  3846     1E2B                     CLC3GLS1        equ	7723	;# 
  3847     1E2C                     CLC3GLS2        equ	7724	;# 
  3848     1E2D                     CLC3GLS3        equ	7725	;# 
  3849     1E2E                     CLC4CON         equ	7726	;# 
  3850     1E2F                     CLC4POL         equ	7727	;# 
  3851     1E30                     CLC4SEL0        equ	7728	;# 
  3852     1E31                     CLC4SEL1        equ	7729	;# 
  3853     1E32                     CLC4SEL2        equ	7730	;# 
  3854     1E33                     CLC4SEL3        equ	7731	;# 
  3855     1E34                     CLC4GLS0        equ	7732	;# 
  3856     1E35                     CLC4GLS1        equ	7733	;# 
  3857     1E36                     CLC4GLS2        equ	7734	;# 
  3858     1E37                     CLC4GLS3        equ	7735	;# 
  3859     1E8F                     PPSLOCK         equ	7823	;# 
  3860     1E90                     INTPPS          equ	7824	;# 
  3861     1E91                     T0CKIPPS        equ	7825	;# 
  3862     1E92                     T1CKIPPS        equ	7826	;# 
  3863     1E93                     T1GPPS          equ	7827	;# 
  3864     1E94                     T3CKIPPS        equ	7828	;# 
  3865     1E95                     T3GPPS          equ	7829	;# 
  3866     1E96                     T5CKIPPS        equ	7830	;# 
  3867     1E97                     T5GPPS          equ	7831	;# 
  3868     1E9C                     T2INPPS         equ	7836	;# 
  3869     1E9D                     T4INPPS         equ	7837	;# 
  3870     1E9E                     T6INPPS         equ	7838	;# 
  3871     1EA1                     CCP1PPS         equ	7841	;# 
  3872     1EA2                     CCP2PPS         equ	7842	;# 
  3873     1EA3                     CCP3PPS         equ	7843	;# 
  3874     1EA4                     CCP4PPS         equ	7844	;# 
  3875     1EA5                     CCP5PPS         equ	7845	;# 
  3876     1EA9                     SMT1WINPPS      equ	7849	;# 
  3877     1EAA                     SMT1SIGPPS      equ	7850	;# 
  3878     1EAB                     SMT2WINPPS      equ	7851	;# 
  3879     1EAC                     SMT2SIGPPS      equ	7852	;# 
  3880     1EB1                     CWG1PPS         equ	7857	;# 
  3881     1EB2                     CWG2PPS         equ	7858	;# 
  3882     1EB3                     CWG3PPS         equ	7859	;# 
  3883     1EB8                     MDCARLPPS       equ	7864	;# 
  3884     1EB9                     MDCARHPPS       equ	7865	;# 
  3885     1EBA                     MDSRCPPS        equ	7866	;# 
  3886     1EBB                     CLCIN0PPS       equ	7867	;# 
  3887     1EBC                     CLCIN1PPS       equ	7868	;# 
  3888     1EBD                     CLCIN2PPS       equ	7869	;# 
  3889     1EBE                     CLCIN3PPS       equ	7870	;# 
  3890     1EC3                     ADACTPPS        equ	7875	;# 
  3891     1EC5                     SSP1CLKPPS      equ	7877	;# 
  3892     1EC6                     SSP1DATPPS      equ	7878	;# 
  3893     1EC7                     SSP1SSPPS       equ	7879	;# 
  3894     1EC8                     SSP2CLKPPS      equ	7880	;# 
  3895     1EC9                     SSP2DATPPS      equ	7881	;# 
  3896     1ECA                     SSP2SSPPS       equ	7882	;# 
  3897     1ECB                     RX1PPS          equ	7883	;# 
  3898     1ECC                     CK1PPS          equ	7884	;# 
  3899     1ECD                     RX2PPS          equ	7885	;# 
  3900     1ECE                     CK2PPS          equ	7886	;# 
  3901     1F10                     RA0PPS          equ	7952	;# 
  3902     1F11                     RA1PPS          equ	7953	;# 
  3903     1F12                     RA2PPS          equ	7954	;# 
  3904     1F13                     RA3PPS          equ	7955	;# 
  3905     1F14                     RA4PPS          equ	7956	;# 
  3906     1F15                     RA5PPS          equ	7957	;# 
  3907     1F16                     RA6PPS          equ	7958	;# 
  3908     1F17                     RA7PPS          equ	7959	;# 
  3909     1F18                     RB0PPS          equ	7960	;# 
  3910     1F19                     RB1PPS          equ	7961	;# 
  3911     1F1A                     RB2PPS          equ	7962	;# 
  3912     1F1B                     RB3PPS          equ	7963	;# 
  3913     1F1C                     RB4PPS          equ	7964	;# 
  3914     1F1D                     RB5PPS          equ	7965	;# 
  3915     1F1E                     RB6PPS          equ	7966	;# 
  3916     1F1F                     RB7PPS          equ	7967	;# 
  3917     1F20                     RC0PPS          equ	7968	;# 
  3918     1F21                     RC1PPS          equ	7969	;# 
  3919     1F22                     RC2PPS          equ	7970	;# 
  3920     1F23                     RC3PPS          equ	7971	;# 
  3921     1F24                     RC4PPS          equ	7972	;# 
  3922     1F25                     RC5PPS          equ	7973	;# 
  3923     1F26                     RC6PPS          equ	7974	;# 
  3924     1F27                     RC7PPS          equ	7975	;# 
  3925     1F38                     ANSELA          equ	7992	;# 
  3926     1F39                     WPUA            equ	7993	;# 
  3927     1F3A                     ODCONA          equ	7994	;# 
  3928     1F3B                     SLRCONA         equ	7995	;# 
  3929     1F3C                     INLVLA          equ	7996	;# 
  3930     1F3D                     IOCAP           equ	7997	;# 
  3931     1F3E                     IOCAN           equ	7998	;# 
  3932     1F3F                     IOCAF           equ	7999	;# 
  3933     1F43                     ANSELB          equ	8003	;# 
  3934     1F44                     WPUB            equ	8004	;# 
  3935     1F45                     ODCONB          equ	8005	;# 
  3936     1F46                     SLRCONB         equ	8006	;# 
  3937     1F47                     INLVLB          equ	8007	;# 
  3938     1F48                     IOCBP           equ	8008	;# 
  3939     1F49                     IOCBN           equ	8009	;# 
  3940     1F4A                     IOCBF           equ	8010	;# 
  3941     1F4E                     ANSELC          equ	8014	;# 
  3942     1F4F                     WPUC            equ	8015	;# 
  3943     1F50                     ODCONC          equ	8016	;# 
  3944     1F51                     SLRCONC         equ	8017	;# 
  3945     1F52                     INLVLC          equ	8018	;# 
  3946     1F53                     IOCCP           equ	8019	;# 
  3947     1F54                     IOCCN           equ	8020	;# 
  3948     1F55                     IOCCF           equ	8021	;# 
  3949     1F65                     WPUE            equ	8037	;# 
  3950     1F66                     ODCONE          equ	8038	;# 
  3951     1F67                     SLRCONE         equ	8039	;# 
  3952     1F68                     INLVLE          equ	8040	;# 
  3953     1F69                     IOCEP           equ	8041	;# 
  3954     1F6A                     IOCEN           equ	8042	;# 
  3955     1F6B                     IOCEF           equ	8043	;# 
  3956     1FE4                     STATUS_SHAD     equ	8164	;# 
  3957     1FE5                     WREG_SHAD       equ	8165	;# 
  3958     1FE6                     BSR_SHAD        equ	8166	;# 
  3959     1FE7                     PCLATH_SHAD     equ	8167	;# 
  3960     1FE8                     FSR0_SHAD       equ	8168	;# 
  3961     1FE8                     FSR0L_SHAD      equ	8168	;# 
  3962     1FE9                     FSR0H_SHAD      equ	8169	;# 
  3963     1FEA                     FSR1L_SHAD      equ	8170	;# 
  3964     1FEB                     FSR1H_SHAD      equ	8171	;# 
  3965     1FED                     STKPTR          equ	8173	;# 
  3966     1FEE                     TOSL            equ	8174	;# 
  3967     1FEF                     TOSH            equ	8175	;# 
  3968     0000                     INDF0           equ	0	;# 
  3969     0001                     INDF1           equ	1	;# 
  3970     0002                     PCL             equ	2	;# 
  3971     0003                     STATUS          equ	3	;# 
  3972     0004                     FSR0L           equ	4	;# 
  3973     0005                     FSR0H           equ	5	;# 
  3974     0006                     FSR1L           equ	6	;# 
  3975     0007                     FSR1H           equ	7	;# 
  3976     0008                     BSR             equ	8	;# 
  3977     0009                     WREG            equ	9	;# 
  3978     000A                     PCLATH          equ	10	;# 
  3979     000B                     INTCON          equ	11	;# 
  3980     000C                     PORTA           equ	12	;# 
  3981     000D                     PORTB           equ	13	;# 
  3982     000E                     PORTC           equ	14	;# 
  3983     0010                     PORTE           equ	16	;# 
  3984     0012                     TRISA           equ	18	;# 
  3985     0013                     TRISB           equ	19	;# 
  3986     0014                     TRISC           equ	20	;# 
  3987     0016                     TRISE           equ	22	;# 
  3988     0018                     LATA            equ	24	;# 
  3989     0019                     LATB            equ	25	;# 
  3990     001A                     LATC            equ	26	;# 
  3991     008C                     ADLTH           equ	140	;# 
  3992     008C                     ADLTHL          equ	140	;# 
  3993     008D                     ADLTHH          equ	141	;# 
  3994     008E                     ADUTH           equ	142	;# 
  3995     008E                     ADUTHL          equ	142	;# 
  3996     008F                     ADUTHH          equ	143	;# 
  3997     0090                     ADERR           equ	144	;# 
  3998     0090                     ADERRL          equ	144	;# 
  3999     0091                     ADERRH          equ	145	;# 
  4000     0092                     ADSTPT          equ	146	;# 
  4001     0092                     ADSTPTL         equ	146	;# 
  4002     0093                     ADSTPTH         equ	147	;# 
  4003     0094                     ADFLTR          equ	148	;# 
  4004     0094                     ADFLTRL         equ	148	;# 
  4005     0095                     ADFLTRH         equ	149	;# 
  4006     0096                     ADACC           equ	150	;# 
  4007     0096                     ADACCL          equ	150	;# 
  4008     0097                     ADACCH          equ	151	;# 
  4009     0098                     ADACCU          equ	152	;# 
  4010     0099                     ADCNT           equ	153	;# 
  4011     009A                     ADRPT           equ	154	;# 
  4012     009B                     ADPREV          equ	155	;# 
  4013     009B                     ADPREVL         equ	155	;# 
  4014     009C                     ADPREVH         equ	156	;# 
  4015     009D                     ADRES           equ	157	;# 
  4016     009D                     ADRESL          equ	157	;# 
  4017     009E                     ADRESH          equ	158	;# 
  4018     009F                     ADPCH           equ	159	;# 
  4019     010C                     ADACQ           equ	268	;# 
  4020     010C                     ADACQL          equ	268	;# 
  4021     010D                     ADACQH          equ	269	;# 
  4022     010E                     ADCAP           equ	270	;# 
  4023     010F                     ADPRE           equ	271	;# 
  4024     010F                     ADPREL          equ	271	;# 
  4025     0110                     ADPREH          equ	272	;# 
  4026     0111                     ADCON0          equ	273	;# 
  4027     0112                     ADCON1          equ	274	;# 
  4028     0113                     ADCON2          equ	275	;# 
  4029     0114                     ADCON3          equ	276	;# 
  4030     0115                     ADSTAT          equ	277	;# 
  4031     0116                     ADREF           equ	278	;# 
  4032     0117                     ADACT           equ	279	;# 
  4033     0118                     ADCLK           equ	280	;# 
  4034     0119                     RC1REG          equ	281	;# 
  4035     0119                     RCREG           equ	281	;# 
  4036     0119                     RCREG1          equ	281	;# 
  4037     011A                     TX1REG          equ	282	;# 
  4038     011A                     TXREG1          equ	282	;# 
  4039     011A                     TXREG           equ	282	;# 
  4040     011B                     SP1BRG          equ	283	;# 
  4041     011B                     SPBRG           equ	283	;# 
  4042     011B                     SP1BRGL         equ	283	;# 
  4043     011B                     SPBRG1          equ	283	;# 
  4044     011B                     SPBRGL          equ	283	;# 
  4045     011C                     SP1BRGH         equ	284	;# 
  4046     011C                     SPBRGH          equ	284	;# 
  4047     011C                     SPBRGH1         equ	284	;# 
  4048     011D                     RC1STA          equ	285	;# 
  4049     011D                     RCSTA1          equ	285	;# 
  4050     011D                     RCSTA           equ	285	;# 
  4051     011E                     TX1STA          equ	286	;# 
  4052     011E                     TXSTA1          equ	286	;# 
  4053     011E                     TXSTA           equ	286	;# 
  4054     011F                     BAUD1CON        equ	287	;# 
  4055     011F                     BAUDCON1        equ	287	;# 
  4056     011F                     BAUDCTL1        equ	287	;# 
  4057     011F                     BAUDCON         equ	287	;# 
  4058     011F                     BAUDCTL         equ	287	;# 
  4059     018C                     SSP1BUF         equ	396	;# 
  4060     018D                     SSP1ADD         equ	397	;# 
  4061     018E                     SSP1MSK         equ	398	;# 
  4062     018F                     SSP1STAT        equ	399	;# 
  4063     0190                     SSP1CON1        equ	400	;# 
  4064     0191                     SSP1CON2        equ	401	;# 
  4065     0192                     SSP1CON3        equ	402	;# 
  4066     0196                     SSP2BUF         equ	406	;# 
  4067     0197                     SSP2ADD         equ	407	;# 
  4068     0198                     SSP2MSK         equ	408	;# 
  4069     0199                     SSP2STAT        equ	409	;# 
  4070     019A                     SSP2CON1        equ	410	;# 
  4071     019B                     SSP2CON2        equ	411	;# 
  4072     019C                     SSP2CON3        equ	412	;# 
  4073     020C                     TMR1            equ	524	;# 
  4074     020C                     TMR1L           equ	524	;# 
  4075     020D                     TMR1H           equ	525	;# 
  4076     020E                     T1CON           equ	526	;# 
  4077     020E                     TMR1CON         equ	526	;# 
  4078     020F                     T1GCON          equ	527	;# 
  4079     020F                     TMR1GCON        equ	527	;# 
  4080     0210                     T1GATE          equ	528	;# 
  4081     0210                     TMR1GATE        equ	528	;# 
  4082     0211                     T1CLK           equ	529	;# 
  4083     0211                     TMR1CLK         equ	529	;# 
  4084     0211                     PR1             equ	529	;# 
  4085     0212                     TMR3            equ	530	;# 
  4086     0212                     TMR3L           equ	530	;# 
  4087     0213                     TMR3H           equ	531	;# 
  4088     0214                     T3CON           equ	532	;# 
  4089     0214                     TMR3CON         equ	532	;# 
  4090     0215                     T3GCON          equ	533	;# 
  4091     0215                     TMR3GCON        equ	533	;# 
  4092     0216                     T3GATE          equ	534	;# 
  4093     0216                     TMR3GATE        equ	534	;# 
  4094     0217                     T3CLK           equ	535	;# 
  4095     0217                     TMR3CLK         equ	535	;# 
  4096     0217                     PR3             equ	535	;# 
  4097     0218                     TMR5            equ	536	;# 
  4098     0218                     TMR5L           equ	536	;# 
  4099     0219                     TMR5H           equ	537	;# 
  4100     021A                     T5CON           equ	538	;# 
  4101     021A                     TMR5CON         equ	538	;# 
  4102     021B                     T5GCON          equ	539	;# 
  4103     021B                     TMR5GCON        equ	539	;# 
  4104     021C                     T5GATE          equ	540	;# 
  4105     021C                     TMR5GATE        equ	540	;# 
  4106     021D                     T5CLK           equ	541	;# 
  4107     021D                     TMR5CLK         equ	541	;# 
  4108     021D                     PR5             equ	541	;# 
  4109     021E                     CCPTMRS0        equ	542	;# 
  4110     021F                     CCPTMRS1        equ	543	;# 
  4111     028C                     T2TMR           equ	652	;# 
  4112     028C                     TMR2            equ	652	;# 
  4113     028D                     T2PR            equ	653	;# 
  4114     028D                     PR2             equ	653	;# 
  4115     028E                     T2CON           equ	654	;# 
  4116     028F                     T2HLT           equ	655	;# 
  4117     0290                     T2CLKCON        equ	656	;# 
  4118     0291                     T2RST           equ	657	;# 
  4119     0292                     T4TMR           equ	658	;# 
  4120     0292                     TMR4            equ	658	;# 
  4121     0293                     T4PR            equ	659	;# 
  4122     0293                     PR4             equ	659	;# 
  4123     0294                     T4CON           equ	660	;# 
  4124     0295                     T4HLT           equ	661	;# 
  4125     0296                     T4CLKCON        equ	662	;# 
  4126     0297                     T4RST           equ	663	;# 
  4127     0298                     T6TMR           equ	664	;# 
  4128     0298                     TMR6            equ	664	;# 
  4129     0299                     T6PR            equ	665	;# 
  4130     0299                     PR6             equ	665	;# 
  4131     029A                     T6CON           equ	666	;# 
  4132     029B                     T6HLT           equ	667	;# 
  4133     029C                     T6CLKCON        equ	668	;# 
  4134     029D                     T6RST           equ	669	;# 
  4135     029F                     ADCPCON0        equ	671	;# 
  4136     030C                     CCPR1           equ	780	;# 
  4137     030C                     CCPR1L          equ	780	;# 
  4138     030D                     CCPR1H          equ	781	;# 
  4139     030E                     CCP1CON         equ	782	;# 
  4140     030F                     CCP1CAP         equ	783	;# 
  4141     0310                     CCPR2           equ	784	;# 
  4142     0310                     CCPR2L          equ	784	;# 
  4143     0311                     CCPR2H          equ	785	;# 
  4144     0312                     CCP2CON         equ	786	;# 
  4145     0313                     CCP2CAP         equ	787	;# 
  4146     0314                     CCPR3           equ	788	;# 
  4147     0314                     CCPR3L          equ	788	;# 
  4148     0315                     CCPR3H          equ	789	;# 
  4149     0316                     CCP3CON         equ	790	;# 
  4150     0317                     CCP3CAP         equ	791	;# 
  4151     0318                     CCPR4           equ	792	;# 
  4152     0318                     CCPR4L          equ	792	;# 
  4153     0319                     CCPR4H          equ	793	;# 
  4154     031A                     CCP4CON         equ	794	;# 
  4155     031B                     CCP4CAP         equ	795	;# 
  4156     031C                     CCPR5           equ	796	;# 
  4157     031C                     CCPR5L          equ	796	;# 
  4158     031D                     CCPR5H          equ	797	;# 
  4159     031E                     CCP5CON         equ	798	;# 
  4160     031F                     CCP5CAP         equ	799	;# 
  4161     038C                     PWM6DC          equ	908	;# 
  4162     038C                     PWM6DCL         equ	908	;# 
  4163     038D                     PWM6DCH         equ	909	;# 
  4164     038E                     PWM6CON         equ	910	;# 
  4165     0390                     PWM7DC          equ	912	;# 
  4166     0390                     PWM7DCL         equ	912	;# 
  4167     0391                     PWM7DCH         equ	913	;# 
  4168     0392                     PWM7CON         equ	914	;# 
  4169     048C                     SMT1TMR         equ	1164	;# 
  4170     048C                     SMT1TMRL        equ	1164	;# 
  4171     048D                     SMT1TMRH        equ	1165	;# 
  4172     048E                     SMT1TMRU        equ	1166	;# 
  4173     048F                     SMT1CPR         equ	1167	;# 
  4174     048F                     SMT1CPRL        equ	1167	;# 
  4175     0490                     SMT1CPRH        equ	1168	;# 
  4176     0491                     SMT1CPRU        equ	1169	;# 
  4177     0492                     SMT1CPW         equ	1170	;# 
  4178     0492                     SMT1CPWL        equ	1170	;# 
  4179     0493                     SMT1CPWH        equ	1171	;# 
  4180     0494                     SMT1CPWU        equ	1172	;# 
  4181     0495                     SMT1PR          equ	1173	;# 
  4182     0495                     SMT1PRL         equ	1173	;# 
  4183     0496                     SMT1PRH         equ	1174	;# 
  4184     0497                     SMT1PRU         equ	1175	;# 
  4185     0498                     SMT1CON0        equ	1176	;# 
  4186     0499                     SMT1CON1        equ	1177	;# 
  4187     049A                     SMT1STAT        equ	1178	;# 
  4188     049B                     SMT1CLK         equ	1179	;# 
  4189     049C                     SMT1SIG         equ	1180	;# 
  4190     049D                     SMT1WIN         equ	1181	;# 
  4191     050C                     SMT2TMR         equ	1292	;# 
  4192     050C                     SMT2TMRL        equ	1292	;# 
  4193     050D                     SMT2TMRH        equ	1293	;# 
  4194     050E                     SMT2TMRU        equ	1294	;# 
  4195     050F                     SMT2CPR         equ	1295	;# 
  4196     050F                     SMT2CPRL        equ	1295	;# 
  4197     0510                     SMT2CPRH        equ	1296	;# 
  4198     0511                     SMT2CPRU        equ	1297	;# 
  4199     0512                     SMT2CPW         equ	1298	;# 
  4200     0512                     SMT2CPWL        equ	1298	;# 
  4201     0513                     SMT2CPWH        equ	1299	;# 
  4202     0514                     SMT2CPWU        equ	1300	;# 
  4203     0515                     SMT2PR          equ	1301	;# 
  4204     0515                     SMT2PRL         equ	1301	;# 
  4205     0516                     SMT2PRH         equ	1302	;# 
  4206     0517                     SMT2PRU         equ	1303	;# 
  4207     0518                     SMT2CON0        equ	1304	;# 
  4208     0519                     SMT2CON1        equ	1305	;# 
  4209     051A                     SMT2STAT        equ	1306	;# 
  4210     051B                     SMT2CLK         equ	1307	;# 
  4211     051C                     SMT2SIG         equ	1308	;# 
  4212     051D                     SMT2WIN         equ	1309	;# 
  4213     058C                     NCO1ACC         equ	1420	;# 
  4214     058C                     NCO1ACCL        equ	1420	;# 
  4215     058D                     NCO1ACCH        equ	1421	;# 
  4216     058E                     NCO1ACCU        equ	1422	;# 
  4217     058F                     NCO1INC         equ	1423	;# 
  4218     058F                     NCO1INCL        equ	1423	;# 
  4219     0590                     NCO1INCH        equ	1424	;# 
  4220     0591                     NCO1INCU        equ	1425	;# 
  4221     0592                     NCO1CON         equ	1426	;# 
  4222     0593                     NCO1CLK         equ	1427	;# 
  4223     059C                     TMR0L           equ	1436	;# 
  4224     059C                     TMR0            equ	1436	;# 
  4225     059D                     TMR0H           equ	1437	;# 
  4226     059D                     PR0             equ	1437	;# 
  4227     059E                     T0CON0          equ	1438	;# 
  4228     059F                     T0CON1          equ	1439	;# 
  4229     060C                     CWG1CLK         equ	1548	;# 
  4230     060C                     CWG1CLKCON      equ	1548	;# 
  4231     060D                     CWG1ISM         equ	1549	;# 
  4232     060D                     CWG1DAT         equ	1549	;# 
  4233     060E                     CWG1DBR         equ	1550	;# 
  4234     060F                     CWG1DBF         equ	1551	;# 
  4235     0610                     CWG1CON0        equ	1552	;# 
  4236     0611                     CWG1CON1        equ	1553	;# 
  4237     0612                     CWG1AS0         equ	1554	;# 
  4238     0613                     CWG1AS1         equ	1555	;# 
  4239     0614                     CWG1STR         equ	1556	;# 
  4240     0616                     CWG2CLK         equ	1558	;# 
  4241     0616                     CWG2CLKCON      equ	1558	;# 
  4242     0617                     CWG2ISM         equ	1559	;# 
  4243     0617                     CWG2DAT         equ	1559	;# 
  4244     0618                     CWG2DBR         equ	1560	;# 
  4245     0619                     CWG2DBF         equ	1561	;# 
  4246     061A                     CWG2CON0        equ	1562	;# 
  4247     061B                     CWG2CON1        equ	1563	;# 
  4248     061C                     CWG2AS0         equ	1564	;# 
  4249     061D                     CWG2AS1         equ	1565	;# 
  4250     061E                     CWG2STR         equ	1566	;# 
  4251     068C                     CWG3CLK         equ	1676	;# 
  4252     068C                     CWG3CLKCON      equ	1676	;# 
  4253     068D                     CWG3ISM         equ	1677	;# 
  4254     068D                     CWG3DAT         equ	1677	;# 
  4255     068E                     CWG3DBR         equ	1678	;# 
  4256     068F                     CWG3DBF         equ	1679	;# 
  4257     0690                     CWG3CON0        equ	1680	;# 
  4258     0691                     CWG3CON1        equ	1681	;# 
  4259     0692                     CWG3AS0         equ	1682	;# 
  4260     0693                     CWG3AS1         equ	1683	;# 
  4261     0694                     CWG3STR         equ	1684	;# 
  4262     070C                     PIR0            equ	1804	;# 
  4263     070D                     PIR1            equ	1805	;# 
  4264     070E                     PIR2            equ	1806	;# 
  4265     070F                     PIR3            equ	1807	;# 
  4266     0710                     PIR4            equ	1808	;# 
  4267     0711                     PIR5            equ	1809	;# 
  4268     0712                     PIR6            equ	1810	;# 
  4269     0713                     PIR7            equ	1811	;# 
  4270     0714                     PIR8            equ	1812	;# 
  4271     0716                     PIE0            equ	1814	;# 
  4272     0717                     PIE1            equ	1815	;# 
  4273     0718                     PIE2            equ	1816	;# 
  4274     0719                     PIE3            equ	1817	;# 
  4275     071A                     PIE4            equ	1818	;# 
  4276     071B                     PIE5            equ	1819	;# 
  4277     071C                     PIE6            equ	1820	;# 
  4278     071D                     PIE7            equ	1821	;# 
  4279     071E                     PIE8            equ	1822	;# 
  4280     0796                     PMD0            equ	1942	;# 
  4281     0797                     PMD1            equ	1943	;# 
  4282     0798                     PMD2            equ	1944	;# 
  4283     0799                     PMD3            equ	1945	;# 
  4284     079A                     PMD4            equ	1946	;# 
  4285     079B                     PMD5            equ	1947	;# 
  4286     079C                     PMD6            equ	1948	;# 
  4287     079D                     PMD7            equ	1949	;# 
  4288     080C                     WDTCON0         equ	2060	;# 
  4289     080D                     WDTCON1         equ	2061	;# 
  4290     080E                     WDTPSL          equ	2062	;# 
  4291     080F                     WDTPSH          equ	2063	;# 
  4292     0810                     WDTTMR          equ	2064	;# 
  4293     0811                     BORCON          equ	2065	;# 
  4294     0813                     PCON0           equ	2067	;# 
  4295     0814                     PCON1           equ	2068	;# 
  4296     081A                     NVMADR          equ	2074	;# 
  4297     081A                     NVMADRL         equ	2074	;# 
  4298     081B                     NVMADRH         equ	2075	;# 
  4299     081C                     NVMDAT          equ	2076	;# 
  4300     081C                     NVMDATL         equ	2076	;# 
  4301     081D                     NVMDATH         equ	2077	;# 
  4302     081E                     NVMCON1         equ	2078	;# 
  4303     081F                     NVMCON2         equ	2079	;# 
  4304     088C                     CPUDOZE         equ	2188	;# 
  4305     088D                     OSCCON1         equ	2189	;# 
  4306     088E                     OSCCON2         equ	2190	;# 
  4307     088F                     OSCCON3         equ	2191	;# 
  4308     0890                     OSCSTAT         equ	2192	;# 
  4309     0891                     OSCEN           equ	2193	;# 
  4310     0892                     OSCTUNE         equ	2194	;# 
  4311     0893                     OSCFRQ          equ	2195	;# 
  4312     0895                     CLKRCON         equ	2197	;# 
  4313     0896                     CLKRCLK         equ	2198	;# 
  4314     0897                     MD1CON0         equ	2199	;# 
  4315     0898                     MD1CON1         equ	2200	;# 
  4316     0899                     MD1SRC          equ	2201	;# 
  4317     089A                     MD1CARL         equ	2202	;# 
  4318     089B                     MD1CARH         equ	2203	;# 
  4319     090C                     FVRCON          equ	2316	;# 
  4320     090E                     DAC1CON0        equ	2318	;# 
  4321     090F                     DAC1CON1        equ	2319	;# 
  4322     091F                     ZCDCON          equ	2335	;# 
  4323     098F                     CMOUT           equ	2447	;# 
  4324     098F                     CMSTAT          equ	2447	;# 
  4325     0990                     CM1CON0         equ	2448	;# 
  4326     0991                     CM1CON1         equ	2449	;# 
  4327     0992                     CM1NCH          equ	2450	;# 
  4328     0993                     CM1PCH          equ	2451	;# 
  4329     0994                     CM2CON0         equ	2452	;# 
  4330     0995                     CM2CON1         equ	2453	;# 
  4331     0996                     CM2NCH          equ	2454	;# 
  4332     0997                     CM2PCH          equ	2455	;# 
  4333     0A19                     RC2REG          equ	2585	;# 
  4334     0A19                     RCREG2          equ	2585	;# 
  4335     0A1A                     TX2REG          equ	2586	;# 
  4336     0A1A                     TXREG2          equ	2586	;# 
  4337     0A1B                     SP2BRG          equ	2587	;# 
  4338     0A1B                     SP2BRGL         equ	2587	;# 
  4339     0A1B                     SPBRG2          equ	2587	;# 
  4340     0A1C                     SP2BRGH         equ	2588	;# 
  4341     0A1C                     SPBRGH2         equ	2588	;# 
  4342     0A1D                     RC2STA          equ	2589	;# 
  4343     0A1D                     RCSTA2          equ	2589	;# 
  4344     0A1E                     TX2STA          equ	2590	;# 
  4345     0A1E                     TXSTA2          equ	2590	;# 
  4346     0A1F                     BAUD2CON        equ	2591	;# 
  4347     0A1F                     BAUDCON2        equ	2591	;# 
  4348     0A1F                     BAUDCTL2        equ	2591	;# 
  4349     1E0F                     CLCDATA         equ	7695	;# 
  4350     1E10                     CLC1CON         equ	7696	;# 
  4351     1E11                     CLC1POL         equ	7697	;# 
  4352     1E12                     CLC1SEL0        equ	7698	;# 
  4353     1E13                     CLC1SEL1        equ	7699	;# 
  4354     1E14                     CLC1SEL2        equ	7700	;# 
  4355     1E15                     CLC1SEL3        equ	7701	;# 
  4356     1E16                     CLC1GLS0        equ	7702	;# 
  4357     1E17                     CLC1GLS1        equ	7703	;# 
  4358     1E18                     CLC1GLS2        equ	7704	;# 
  4359     1E19                     CLC1GLS3        equ	7705	;# 
  4360     1E1A                     CLC2CON         equ	7706	;# 
  4361     1E1B                     CLC2POL         equ	7707	;# 
  4362     1E1C                     CLC2SEL0        equ	7708	;# 
  4363     1E1D                     CLC2SEL1        equ	7709	;# 
  4364     1E1E                     CLC2SEL2        equ	7710	;# 
  4365     1E1F                     CLC2SEL3        equ	7711	;# 
  4366     1E20                     CLC2GLS0        equ	7712	;# 
  4367     1E21                     CLC2GLS1        equ	7713	;# 
  4368     1E22                     CLC2GLS2        equ	7714	;# 
  4369     1E23                     CLC2GLS3        equ	7715	;# 
  4370     1E24                     CLC3CON         equ	7716	;# 
  4371     1E25                     CLC3POL         equ	7717	;# 
  4372     1E26                     CLC3SEL0        equ	7718	;# 
  4373     1E27                     CLC3SEL1        equ	7719	;# 
  4374     1E28                     CLC3SEL2        equ	7720	;# 
  4375     1E29                     CLC3SEL3        equ	7721	;# 
  4376     1E2A                     CLC3GLS0        equ	7722	;# 
  4377     1E2B                     CLC3GLS1        equ	7723	;# 
  4378     1E2C                     CLC3GLS2        equ	7724	;# 
  4379     1E2D                     CLC3GLS3        equ	7725	;# 
  4380     1E2E                     CLC4CON         equ	7726	;# 
  4381     1E2F                     CLC4POL         equ	7727	;# 
  4382     1E30                     CLC4SEL0        equ	7728	;# 
  4383     1E31                     CLC4SEL1        equ	7729	;# 
  4384     1E32                     CLC4SEL2        equ	7730	;# 
  4385     1E33                     CLC4SEL3        equ	7731	;# 
  4386     1E34                     CLC4GLS0        equ	7732	;# 
  4387     1E35                     CLC4GLS1        equ	7733	;# 
  4388     1E36                     CLC4GLS2        equ	7734	;# 
  4389     1E37                     CLC4GLS3        equ	7735	;# 
  4390     1E8F                     PPSLOCK         equ	7823	;# 
  4391     1E90                     INTPPS          equ	7824	;# 
  4392     1E91                     T0CKIPPS        equ	7825	;# 
  4393     1E92                     T1CKIPPS        equ	7826	;# 
  4394     1E93                     T1GPPS          equ	7827	;# 
  4395     1E94                     T3CKIPPS        equ	7828	;# 
  4396     1E95                     T3GPPS          equ	7829	;# 
  4397     1E96                     T5CKIPPS        equ	7830	;# 
  4398     1E97                     T5GPPS          equ	7831	;# 
  4399     1E9C                     T2INPPS         equ	7836	;# 
  4400     1E9D                     T4INPPS         equ	7837	;# 
  4401     1E9E                     T6INPPS         equ	7838	;# 
  4402     1EA1                     CCP1PPS         equ	7841	;# 
  4403     1EA2                     CCP2PPS         equ	7842	;# 
  4404     1EA3                     CCP3PPS         equ	7843	;# 
  4405     1EA4                     CCP4PPS         equ	7844	;# 
  4406     1EA5                     CCP5PPS         equ	7845	;# 
  4407     1EA9                     SMT1WINPPS      equ	7849	;# 
  4408     1EAA                     SMT1SIGPPS      equ	7850	;# 
  4409     1EAB                     SMT2WINPPS      equ	7851	;# 
  4410     1EAC                     SMT2SIGPPS      equ	7852	;# 
  4411     1EB1                     CWG1PPS         equ	7857	;# 
  4412     1EB2                     CWG2PPS         equ	7858	;# 
  4413     1EB3                     CWG3PPS         equ	7859	;# 
  4414     1EB8                     MDCARLPPS       equ	7864	;# 
  4415     1EB9                     MDCARHPPS       equ	7865	;# 
  4416     1EBA                     MDSRCPPS        equ	7866	;# 
  4417     1EBB                     CLCIN0PPS       equ	7867	;# 
  4418     1EBC                     CLCIN1PPS       equ	7868	;# 
  4419     1EBD                     CLCIN2PPS       equ	7869	;# 
  4420     1EBE                     CLCIN3PPS       equ	7870	;# 
  4421     1EC3                     ADACTPPS        equ	7875	;# 
  4422     1EC5                     SSP1CLKPPS      equ	7877	;# 
  4423     1EC6                     SSP1DATPPS      equ	7878	;# 
  4424     1EC7                     SSP1SSPPS       equ	7879	;# 
  4425     1EC8                     SSP2CLKPPS      equ	7880	;# 
  4426     1EC9                     SSP2DATPPS      equ	7881	;# 
  4427     1ECA                     SSP2SSPPS       equ	7882	;# 
  4428     1ECB                     RX1PPS          equ	7883	;# 
  4429     1ECC                     CK1PPS          equ	7884	;# 
  4430     1ECD                     RX2PPS          equ	7885	;# 
  4431     1ECE                     CK2PPS          equ	7886	;# 
  4432     1F10                     RA0PPS          equ	7952	;# 
  4433     1F11                     RA1PPS          equ	7953	;# 
  4434     1F12                     RA2PPS          equ	7954	;# 
  4435     1F13                     RA3PPS          equ	7955	;# 
  4436     1F14                     RA4PPS          equ	7956	;# 
  4437     1F15                     RA5PPS          equ	7957	;# 
  4438     1F16                     RA6PPS          equ	7958	;# 
  4439     1F17                     RA7PPS          equ	7959	;# 
  4440     1F18                     RB0PPS          equ	7960	;# 
  4441     1F19                     RB1PPS          equ	7961	;# 
  4442     1F1A                     RB2PPS          equ	7962	;# 
  4443     1F1B                     RB3PPS          equ	7963	;# 
  4444     1F1C                     RB4PPS          equ	7964	;# 
  4445     1F1D                     RB5PPS          equ	7965	;# 
  4446     1F1E                     RB6PPS          equ	7966	;# 
  4447     1F1F                     RB7PPS          equ	7967	;# 
  4448     1F20                     RC0PPS          equ	7968	;# 
  4449     1F21                     RC1PPS          equ	7969	;# 
  4450     1F22                     RC2PPS          equ	7970	;# 
  4451     1F23                     RC3PPS          equ	7971	;# 
  4452     1F24                     RC4PPS          equ	7972	;# 
  4453     1F25                     RC5PPS          equ	7973	;# 
  4454     1F26                     RC6PPS          equ	7974	;# 
  4455     1F27                     RC7PPS          equ	7975	;# 
  4456     1F38                     ANSELA          equ	7992	;# 
  4457     1F39                     WPUA            equ	7993	;# 
  4458     1F3A                     ODCONA          equ	7994	;# 
  4459     1F3B                     SLRCONA         equ	7995	;# 
  4460     1F3C                     INLVLA          equ	7996	;# 
  4461     1F3D                     IOCAP           equ	7997	;# 
  4462     1F3E                     IOCAN           equ	7998	;# 
  4463     1F3F                     IOCAF           equ	7999	;# 
  4464     1F43                     ANSELB          equ	8003	;# 
  4465     1F44                     WPUB            equ	8004	;# 
  4466     1F45                     ODCONB          equ	8005	;# 
  4467     1F46                     SLRCONB         equ	8006	;# 
  4468     1F47                     INLVLB          equ	8007	;# 
  4469     1F48                     IOCBP           equ	8008	;# 
  4470     1F49                     IOCBN           equ	8009	;# 
  4471     1F4A                     IOCBF           equ	8010	;# 
  4472     1F4E                     ANSELC          equ	8014	;# 
  4473     1F4F                     WPUC            equ	8015	;# 
  4474     1F50                     ODCONC          equ	8016	;# 
  4475     1F51                     SLRCONC         equ	8017	;# 
  4476     1F52                     INLVLC          equ	8018	;# 
  4477     1F53                     IOCCP           equ	8019	;# 
  4478     1F54                     IOCCN           equ	8020	;# 
  4479     1F55                     IOCCF           equ	8021	;# 
  4480     1F65                     WPUE            equ	8037	;# 
  4481     1F66                     ODCONE          equ	8038	;# 
  4482     1F67                     SLRCONE         equ	8039	;# 
  4483     1F68                     INLVLE          equ	8040	;# 
  4484     1F69                     IOCEP           equ	8041	;# 
  4485     1F6A                     IOCEN           equ	8042	;# 
  4486     1F6B                     IOCEF           equ	8043	;# 
  4487     1FE4                     STATUS_SHAD     equ	8164	;# 
  4488     1FE5                     WREG_SHAD       equ	8165	;# 
  4489     1FE6                     BSR_SHAD        equ	8166	;# 
  4490     1FE7                     PCLATH_SHAD     equ	8167	;# 
  4491     1FE8                     FSR0_SHAD       equ	8168	;# 
  4492     1FE8                     FSR0L_SHAD      equ	8168	;# 
  4493     1FE9                     FSR0H_SHAD      equ	8169	;# 
  4494     1FEA                     FSR1L_SHAD      equ	8170	;# 
  4495     1FEB                     FSR1H_SHAD      equ	8171	;# 
  4496     1FED                     STKPTR          equ	8173	;# 
  4497     1FEE                     TOSL            equ	8174	;# 
  4498     1FEF                     TOSH            equ	8175	;# 
  4499     0000                     INDF0           equ	0	;# 
  4500     0001                     INDF1           equ	1	;# 
  4501     0002                     PCL             equ	2	;# 
  4502     0003                     STATUS          equ	3	;# 
  4503     0004                     FSR0L           equ	4	;# 
  4504     0005                     FSR0H           equ	5	;# 
  4505     0006                     FSR1L           equ	6	;# 
  4506     0007                     FSR1H           equ	7	;# 
  4507     0008                     BSR             equ	8	;# 
  4508     0009                     WREG            equ	9	;# 
  4509     000A                     PCLATH          equ	10	;# 
  4510     000B                     INTCON          equ	11	;# 
  4511     000C                     PORTA           equ	12	;# 
  4512     000D                     PORTB           equ	13	;# 
  4513     000E                     PORTC           equ	14	;# 
  4514     0010                     PORTE           equ	16	;# 
  4515     0012                     TRISA           equ	18	;# 
  4516     0013                     TRISB           equ	19	;# 
  4517     0014                     TRISC           equ	20	;# 
  4518     0016                     TRISE           equ	22	;# 
  4519     0018                     LATA            equ	24	;# 
  4520     0019                     LATB            equ	25	;# 
  4521     001A                     LATC            equ	26	;# 
  4522     008C                     ADLTH           equ	140	;# 
  4523     008C                     ADLTHL          equ	140	;# 
  4524     008D                     ADLTHH          equ	141	;# 
  4525     008E                     ADUTH           equ	142	;# 
  4526     008E                     ADUTHL          equ	142	;# 
  4527     008F                     ADUTHH          equ	143	;# 
  4528     0090                     ADERR           equ	144	;# 
  4529     0090                     ADERRL          equ	144	;# 
  4530     0091                     ADERRH          equ	145	;# 
  4531     0092                     ADSTPT          equ	146	;# 
  4532     0092                     ADSTPTL         equ	146	;# 
  4533     0093                     ADSTPTH         equ	147	;# 
  4534     0094                     ADFLTR          equ	148	;# 
  4535     0094                     ADFLTRL         equ	148	;# 
  4536     0095                     ADFLTRH         equ	149	;# 
  4537     0096                     ADACC           equ	150	;# 
  4538     0096                     ADACCL          equ	150	;# 
  4539     0097                     ADACCH          equ	151	;# 
  4540     0098                     ADACCU          equ	152	;# 
  4541     0099                     ADCNT           equ	153	;# 
  4542     009A                     ADRPT           equ	154	;# 
  4543     009B                     ADPREV          equ	155	;# 
  4544     009B                     ADPREVL         equ	155	;# 
  4545     009C                     ADPREVH         equ	156	;# 
  4546     009D                     ADRES           equ	157	;# 
  4547     009D                     ADRESL          equ	157	;# 
  4548     009E                     ADRESH          equ	158	;# 
  4549     009F                     ADPCH           equ	159	;# 
  4550     010C                     ADACQ           equ	268	;# 
  4551     010C                     ADACQL          equ	268	;# 
  4552     010D                     ADACQH          equ	269	;# 
  4553     010E                     ADCAP           equ	270	;# 
  4554     010F                     ADPRE           equ	271	;# 
  4555     010F                     ADPREL          equ	271	;# 
  4556     0110                     ADPREH          equ	272	;# 
  4557     0111                     ADCON0          equ	273	;# 
  4558     0112                     ADCON1          equ	274	;# 
  4559     0113                     ADCON2          equ	275	;# 
  4560     0114                     ADCON3          equ	276	;# 
  4561     0115                     ADSTAT          equ	277	;# 
  4562     0116                     ADREF           equ	278	;# 
  4563     0117                     ADACT           equ	279	;# 
  4564     0118                     ADCLK           equ	280	;# 
  4565     0119                     RC1REG          equ	281	;# 
  4566     0119                     RCREG           equ	281	;# 
  4567     0119                     RCREG1          equ	281	;# 
  4568     011A                     TX1REG          equ	282	;# 
  4569     011A                     TXREG1          equ	282	;# 
  4570     011A                     TXREG           equ	282	;# 
  4571     011B                     SP1BRG          equ	283	;# 
  4572     011B                     SPBRG           equ	283	;# 
  4573     011B                     SP1BRGL         equ	283	;# 
  4574     011B                     SPBRG1          equ	283	;# 
  4575     011B                     SPBRGL          equ	283	;# 
  4576     011C                     SP1BRGH         equ	284	;# 
  4577     011C                     SPBRGH          equ	284	;# 
  4578     011C                     SPBRGH1         equ	284	;# 
  4579     011D                     RC1STA          equ	285	;# 
  4580     011D                     RCSTA1          equ	285	;# 
  4581     011D                     RCSTA           equ	285	;# 
  4582     011E                     TX1STA          equ	286	;# 
  4583     011E                     TXSTA1          equ	286	;# 
  4584     011E                     TXSTA           equ	286	;# 
  4585     011F                     BAUD1CON        equ	287	;# 
  4586     011F                     BAUDCON1        equ	287	;# 
  4587     011F                     BAUDCTL1        equ	287	;# 
  4588     011F                     BAUDCON         equ	287	;# 
  4589     011F                     BAUDCTL         equ	287	;# 
  4590     018C                     SSP1BUF         equ	396	;# 
  4591     018D                     SSP1ADD         equ	397	;# 
  4592     018E                     SSP1MSK         equ	398	;# 
  4593     018F                     SSP1STAT        equ	399	;# 
  4594     0190                     SSP1CON1        equ	400	;# 
  4595     0191                     SSP1CON2        equ	401	;# 
  4596     0192                     SSP1CON3        equ	402	;# 
  4597     0196                     SSP2BUF         equ	406	;# 
  4598     0197                     SSP2ADD         equ	407	;# 
  4599     0198                     SSP2MSK         equ	408	;# 
  4600     0199                     SSP2STAT        equ	409	;# 
  4601     019A                     SSP2CON1        equ	410	;# 
  4602     019B                     SSP2CON2        equ	411	;# 
  4603     019C                     SSP2CON3        equ	412	;# 
  4604     020C                     TMR1            equ	524	;# 
  4605     020C                     TMR1L           equ	524	;# 
  4606     020D                     TMR1H           equ	525	;# 
  4607     020E                     T1CON           equ	526	;# 
  4608     020E                     TMR1CON         equ	526	;# 
  4609     020F                     T1GCON          equ	527	;# 
  4610     020F                     TMR1GCON        equ	527	;# 
  4611     0210                     T1GATE          equ	528	;# 
  4612     0210                     TMR1GATE        equ	528	;# 
  4613     0211                     T1CLK           equ	529	;# 
  4614     0211                     TMR1CLK         equ	529	;# 
  4615     0211                     PR1             equ	529	;# 
  4616     0212                     TMR3            equ	530	;# 
  4617     0212                     TMR3L           equ	530	;# 
  4618     0213                     TMR3H           equ	531	;# 
  4619     0214                     T3CON           equ	532	;# 
  4620     0214                     TMR3CON         equ	532	;# 
  4621     0215                     T3GCON          equ	533	;# 
  4622     0215                     TMR3GCON        equ	533	;# 
  4623     0216                     T3GATE          equ	534	;# 
  4624     0216                     TMR3GATE        equ	534	;# 
  4625     0217                     T3CLK           equ	535	;# 
  4626     0217                     TMR3CLK         equ	535	;# 
  4627     0217                     PR3             equ	535	;# 
  4628     0218                     TMR5            equ	536	;# 
  4629     0218                     TMR5L           equ	536	;# 
  4630     0219                     TMR5H           equ	537	;# 
  4631     021A                     T5CON           equ	538	;# 
  4632     021A                     TMR5CON         equ	538	;# 
  4633     021B                     T5GCON          equ	539	;# 
  4634     021B                     TMR5GCON        equ	539	;# 
  4635     021C                     T5GATE          equ	540	;# 
  4636     021C                     TMR5GATE        equ	540	;# 
  4637     021D                     T5CLK           equ	541	;# 
  4638     021D                     TMR5CLK         equ	541	;# 
  4639     021D                     PR5             equ	541	;# 
  4640     021E                     CCPTMRS0        equ	542	;# 
  4641     021F                     CCPTMRS1        equ	543	;# 
  4642     028C                     T2TMR           equ	652	;# 
  4643     028C                     TMR2            equ	652	;# 
  4644     028D                     T2PR            equ	653	;# 
  4645     028D                     PR2             equ	653	;# 
  4646     028E                     T2CON           equ	654	;# 
  4647     028F                     T2HLT           equ	655	;# 
  4648     0290                     T2CLKCON        equ	656	;# 
  4649     0291                     T2RST           equ	657	;# 
  4650     0292                     T4TMR           equ	658	;# 
  4651     0292                     TMR4            equ	658	;# 
  4652     0293                     T4PR            equ	659	;# 
  4653     0293                     PR4             equ	659	;# 
  4654     0294                     T4CON           equ	660	;# 
  4655     0295                     T4HLT           equ	661	;# 
  4656     0296                     T4CLKCON        equ	662	;# 
  4657     0297                     T4RST           equ	663	;# 
  4658     0298                     T6TMR           equ	664	;# 
  4659     0298                     TMR6            equ	664	;# 
  4660     0299                     T6PR            equ	665	;# 
  4661     0299                     PR6             equ	665	;# 
  4662     029A                     T6CON           equ	666	;# 
  4663     029B                     T6HLT           equ	667	;# 
  4664     029C                     T6CLKCON        equ	668	;# 
  4665     029D                     T6RST           equ	669	;# 
  4666     029F                     ADCPCON0        equ	671	;# 
  4667     030C                     CCPR1           equ	780	;# 
  4668     030C                     CCPR1L          equ	780	;# 
  4669     030D                     CCPR1H          equ	781	;# 
  4670     030E                     CCP1CON         equ	782	;# 
  4671     030F                     CCP1CAP         equ	783	;# 
  4672     0310                     CCPR2           equ	784	;# 
  4673     0310                     CCPR2L          equ	784	;# 
  4674     0311                     CCPR2H          equ	785	;# 
  4675     0312                     CCP2CON         equ	786	;# 
  4676     0313                     CCP2CAP         equ	787	;# 
  4677     0314                     CCPR3           equ	788	;# 
  4678     0314                     CCPR3L          equ	788	;# 
  4679     0315                     CCPR3H          equ	789	;# 
  4680     0316                     CCP3CON         equ	790	;# 
  4681     0317                     CCP3CAP         equ	791	;# 
  4682     0318                     CCPR4           equ	792	;# 
  4683     0318                     CCPR4L          equ	792	;# 
  4684     0319                     CCPR4H          equ	793	;# 
  4685     031A                     CCP4CON         equ	794	;# 
  4686     031B                     CCP4CAP         equ	795	;# 
  4687     031C                     CCPR5           equ	796	;# 
  4688     031C                     CCPR5L          equ	796	;# 
  4689     031D                     CCPR5H          equ	797	;# 
  4690     031E                     CCP5CON         equ	798	;# 
  4691     031F                     CCP5CAP         equ	799	;# 
  4692     038C                     PWM6DC          equ	908	;# 
  4693     038C                     PWM6DCL         equ	908	;# 
  4694     038D                     PWM6DCH         equ	909	;# 
  4695     038E                     PWM6CON         equ	910	;# 
  4696     0390                     PWM7DC          equ	912	;# 
  4697     0390                     PWM7DCL         equ	912	;# 
  4698     0391                     PWM7DCH         equ	913	;# 
  4699     0392                     PWM7CON         equ	914	;# 
  4700     048C                     SMT1TMR         equ	1164	;# 
  4701     048C                     SMT1TMRL        equ	1164	;# 
  4702     048D                     SMT1TMRH        equ	1165	;# 
  4703     048E                     SMT1TMRU        equ	1166	;# 
  4704     048F                     SMT1CPR         equ	1167	;# 
  4705     048F                     SMT1CPRL        equ	1167	;# 
  4706     0490                     SMT1CPRH        equ	1168	;# 
  4707     0491                     SMT1CPRU        equ	1169	;# 
  4708     0492                     SMT1CPW         equ	1170	;# 
  4709     0492                     SMT1CPWL        equ	1170	;# 
  4710     0493                     SMT1CPWH        equ	1171	;# 
  4711     0494                     SMT1CPWU        equ	1172	;# 
  4712     0495                     SMT1PR          equ	1173	;# 
  4713     0495                     SMT1PRL         equ	1173	;# 
  4714     0496                     SMT1PRH         equ	1174	;# 
  4715     0497                     SMT1PRU         equ	1175	;# 
  4716     0498                     SMT1CON0        equ	1176	;# 
  4717     0499                     SMT1CON1        equ	1177	;# 
  4718     049A                     SMT1STAT        equ	1178	;# 
  4719     049B                     SMT1CLK         equ	1179	;# 
  4720     049C                     SMT1SIG         equ	1180	;# 
  4721     049D                     SMT1WIN         equ	1181	;# 
  4722     050C                     SMT2TMR         equ	1292	;# 
  4723     050C                     SMT2TMRL        equ	1292	;# 
  4724     050D                     SMT2TMRH        equ	1293	;# 
  4725     050E                     SMT2TMRU        equ	1294	;# 
  4726     050F                     SMT2CPR         equ	1295	;# 
  4727     050F                     SMT2CPRL        equ	1295	;# 
  4728     0510                     SMT2CPRH        equ	1296	;# 
  4729     0511                     SMT2CPRU        equ	1297	;# 
  4730     0512                     SMT2CPW         equ	1298	;# 
  4731     0512                     SMT2CPWL        equ	1298	;# 
  4732     0513                     SMT2CPWH        equ	1299	;# 
  4733     0514                     SMT2CPWU        equ	1300	;# 
  4734     0515                     SMT2PR          equ	1301	;# 
  4735     0515                     SMT2PRL         equ	1301	;# 
  4736     0516                     SMT2PRH         equ	1302	;# 
  4737     0517                     SMT2PRU         equ	1303	;# 
  4738     0518                     SMT2CON0        equ	1304	;# 
  4739     0519                     SMT2CON1        equ	1305	;# 
  4740     051A                     SMT2STAT        equ	1306	;# 
  4741     051B                     SMT2CLK         equ	1307	;# 
  4742     051C                     SMT2SIG         equ	1308	;# 
  4743     051D                     SMT2WIN         equ	1309	;# 
  4744     058C                     NCO1ACC         equ	1420	;# 
  4745     058C                     NCO1ACCL        equ	1420	;# 
  4746     058D                     NCO1ACCH        equ	1421	;# 
  4747     058E                     NCO1ACCU        equ	1422	;# 
  4748     058F                     NCO1INC         equ	1423	;# 
  4749     058F                     NCO1INCL        equ	1423	;# 
  4750     0590                     NCO1INCH        equ	1424	;# 
  4751     0591                     NCO1INCU        equ	1425	;# 
  4752     0592                     NCO1CON         equ	1426	;# 
  4753     0593                     NCO1CLK         equ	1427	;# 
  4754     059C                     TMR0L           equ	1436	;# 
  4755     059C                     TMR0            equ	1436	;# 
  4756     059D                     TMR0H           equ	1437	;# 
  4757     059D                     PR0             equ	1437	;# 
  4758     059E                     T0CON0          equ	1438	;# 
  4759     059F                     T0CON1          equ	1439	;# 
  4760     060C                     CWG1CLK         equ	1548	;# 
  4761     060C                     CWG1CLKCON      equ	1548	;# 
  4762     060D                     CWG1ISM         equ	1549	;# 
  4763     060D                     CWG1DAT         equ	1549	;# 
  4764     060E                     CWG1DBR         equ	1550	;# 
  4765     060F                     CWG1DBF         equ	1551	;# 
  4766     0610                     CWG1CON0        equ	1552	;# 
  4767     0611                     CWG1CON1        equ	1553	;# 
  4768     0612                     CWG1AS0         equ	1554	;# 
  4769     0613                     CWG1AS1         equ	1555	;# 
  4770     0614                     CWG1STR         equ	1556	;# 
  4771     0616                     CWG2CLK         equ	1558	;# 
  4772     0616                     CWG2CLKCON      equ	1558	;# 
  4773     0617                     CWG2ISM         equ	1559	;# 
  4774     0617                     CWG2DAT         equ	1559	;# 
  4775     0618                     CWG2DBR         equ	1560	;# 
  4776     0619                     CWG2DBF         equ	1561	;# 
  4777     061A                     CWG2CON0        equ	1562	;# 
  4778     061B                     CWG2CON1        equ	1563	;# 
  4779     061C                     CWG2AS0         equ	1564	;# 
  4780     061D                     CWG2AS1         equ	1565	;# 
  4781     061E                     CWG2STR         equ	1566	;# 
  4782     068C                     CWG3CLK         equ	1676	;# 
  4783     068C                     CWG3CLKCON      equ	1676	;# 
  4784     068D                     CWG3ISM         equ	1677	;# 
  4785     068D                     CWG3DAT         equ	1677	;# 
  4786     068E                     CWG3DBR         equ	1678	;# 
  4787     068F                     CWG3DBF         equ	1679	;# 
  4788     0690                     CWG3CON0        equ	1680	;# 
  4789     0691                     CWG3CON1        equ	1681	;# 
  4790     0692                     CWG3AS0         equ	1682	;# 
  4791     0693                     CWG3AS1         equ	1683	;# 
  4792     0694                     CWG3STR         equ	1684	;# 
  4793     070C                     PIR0            equ	1804	;# 
  4794     070D                     PIR1            equ	1805	;# 
  4795     070E                     PIR2            equ	1806	;# 
  4796     070F                     PIR3            equ	1807	;# 
  4797     0710                     PIR4            equ	1808	;# 
  4798     0711                     PIR5            equ	1809	;# 
  4799     0712                     PIR6            equ	1810	;# 
  4800     0713                     PIR7            equ	1811	;# 
  4801     0714                     PIR8            equ	1812	;# 
  4802     0716                     PIE0            equ	1814	;# 
  4803     0717                     PIE1            equ	1815	;# 
  4804     0718                     PIE2            equ	1816	;# 
  4805     0719                     PIE3            equ	1817	;# 
  4806     071A                     PIE4            equ	1818	;# 
  4807     071B                     PIE5            equ	1819	;# 
  4808     071C                     PIE6            equ	1820	;# 
  4809     071D                     PIE7            equ	1821	;# 
  4810     071E                     PIE8            equ	1822	;# 
  4811     0796                     PMD0            equ	1942	;# 
  4812     0797                     PMD1            equ	1943	;# 
  4813     0798                     PMD2            equ	1944	;# 
  4814     0799                     PMD3            equ	1945	;# 
  4815     079A                     PMD4            equ	1946	;# 
  4816     079B                     PMD5            equ	1947	;# 
  4817     079C                     PMD6            equ	1948	;# 
  4818     079D                     PMD7            equ	1949	;# 
  4819     080C                     WDTCON0         equ	2060	;# 
  4820     080D                     WDTCON1         equ	2061	;# 
  4821     080E                     WDTPSL          equ	2062	;# 
  4822     080F                     WDTPSH          equ	2063	;# 
  4823     0810                     WDTTMR          equ	2064	;# 
  4824     0811                     BORCON          equ	2065	;# 
  4825     0813                     PCON0           equ	2067	;# 
  4826     0814                     PCON1           equ	2068	;# 
  4827     081A                     NVMADR          equ	2074	;# 
  4828     081A                     NVMADRL         equ	2074	;# 
  4829     081B                     NVMADRH         equ	2075	;# 
  4830     081C                     NVMDAT          equ	2076	;# 
  4831     081C                     NVMDATL         equ	2076	;# 
  4832     081D                     NVMDATH         equ	2077	;# 
  4833     081E                     NVMCON1         equ	2078	;# 
  4834     081F                     NVMCON2         equ	2079	;# 
  4835     088C                     CPUDOZE         equ	2188	;# 
  4836     088D                     OSCCON1         equ	2189	;# 
  4837     088E                     OSCCON2         equ	2190	;# 
  4838     088F                     OSCCON3         equ	2191	;# 
  4839     0890                     OSCSTAT         equ	2192	;# 
  4840     0891                     OSCEN           equ	2193	;# 
  4841     0892                     OSCTUNE         equ	2194	;# 
  4842     0893                     OSCFRQ          equ	2195	;# 
  4843     0895                     CLKRCON         equ	2197	;# 
  4844     0896                     CLKRCLK         equ	2198	;# 
  4845     0897                     MD1CON0         equ	2199	;# 
  4846     0898                     MD1CON1         equ	2200	;# 
  4847     0899                     MD1SRC          equ	2201	;# 
  4848     089A                     MD1CARL         equ	2202	;# 
  4849     089B                     MD1CARH         equ	2203	;# 
  4850     090C                     FVRCON          equ	2316	;# 
  4851     090E                     DAC1CON0        equ	2318	;# 
  4852     090F                     DAC1CON1        equ	2319	;# 
  4853     091F                     ZCDCON          equ	2335	;# 
  4854     098F                     CMOUT           equ	2447	;# 
  4855     098F                     CMSTAT          equ	2447	;# 
  4856     0990                     CM1CON0         equ	2448	;# 
  4857     0991                     CM1CON1         equ	2449	;# 
  4858     0992                     CM1NCH          equ	2450	;# 
  4859     0993                     CM1PCH          equ	2451	;# 
  4860     0994                     CM2CON0         equ	2452	;# 
  4861     0995                     CM2CON1         equ	2453	;# 
  4862     0996                     CM2NCH          equ	2454	;# 
  4863     0997                     CM2PCH          equ	2455	;# 
  4864     0A19                     RC2REG          equ	2585	;# 
  4865     0A19                     RCREG2          equ	2585	;# 
  4866     0A1A                     TX2REG          equ	2586	;# 
  4867     0A1A                     TXREG2          equ	2586	;# 
  4868     0A1B                     SP2BRG          equ	2587	;# 
  4869     0A1B                     SP2BRGL         equ	2587	;# 
  4870     0A1B                     SPBRG2          equ	2587	;# 
  4871     0A1C                     SP2BRGH         equ	2588	;# 
  4872     0A1C                     SPBRGH2         equ	2588	;# 
  4873     0A1D                     RC2STA          equ	2589	;# 
  4874     0A1D                     RCSTA2          equ	2589	;# 
  4875     0A1E                     TX2STA          equ	2590	;# 
  4876     0A1E                     TXSTA2          equ	2590	;# 
  4877     0A1F                     BAUD2CON        equ	2591	;# 
  4878     0A1F                     BAUDCON2        equ	2591	;# 
  4879     0A1F                     BAUDCTL2        equ	2591	;# 
  4880     1E0F                     CLCDATA         equ	7695	;# 
  4881     1E10                     CLC1CON         equ	7696	;# 
  4882     1E11                     CLC1POL         equ	7697	;# 
  4883     1E12                     CLC1SEL0        equ	7698	;# 
  4884     1E13                     CLC1SEL1        equ	7699	;# 
  4885     1E14                     CLC1SEL2        equ	7700	;# 
  4886     1E15                     CLC1SEL3        equ	7701	;# 
  4887     1E16                     CLC1GLS0        equ	7702	;# 
  4888     1E17                     CLC1GLS1        equ	7703	;# 
  4889     1E18                     CLC1GLS2        equ	7704	;# 
  4890     1E19                     CLC1GLS3        equ	7705	;# 
  4891     1E1A                     CLC2CON         equ	7706	;# 
  4892     1E1B                     CLC2POL         equ	7707	;# 
  4893     1E1C                     CLC2SEL0        equ	7708	;# 
  4894     1E1D                     CLC2SEL1        equ	7709	;# 
  4895     1E1E                     CLC2SEL2        equ	7710	;# 
  4896     1E1F                     CLC2SEL3        equ	7711	;# 
  4897     1E20                     CLC2GLS0        equ	7712	;# 
  4898     1E21                     CLC2GLS1        equ	7713	;# 
  4899     1E22                     CLC2GLS2        equ	7714	;# 
  4900     1E23                     CLC2GLS3        equ	7715	;# 
  4901     1E24                     CLC3CON         equ	7716	;# 
  4902     1E25                     CLC3POL         equ	7717	;# 
  4903     1E26                     CLC3SEL0        equ	7718	;# 
  4904     1E27                     CLC3SEL1        equ	7719	;# 
  4905     1E28                     CLC3SEL2        equ	7720	;# 
  4906     1E29                     CLC3SEL3        equ	7721	;# 
  4907     1E2A                     CLC3GLS0        equ	7722	;# 
  4908     1E2B                     CLC3GLS1        equ	7723	;# 
  4909     1E2C                     CLC3GLS2        equ	7724	;# 
  4910     1E2D                     CLC3GLS3        equ	7725	;# 
  4911     1E2E                     CLC4CON         equ	7726	;# 
  4912     1E2F                     CLC4POL         equ	7727	;# 
  4913     1E30                     CLC4SEL0        equ	7728	;# 
  4914     1E31                     CLC4SEL1        equ	7729	;# 
  4915     1E32                     CLC4SEL2        equ	7730	;# 
  4916     1E33                     CLC4SEL3        equ	7731	;# 
  4917     1E34                     CLC4GLS0        equ	7732	;# 
  4918     1E35                     CLC4GLS1        equ	7733	;# 
  4919     1E36                     CLC4GLS2        equ	7734	;# 
  4920     1E37                     CLC4GLS3        equ	7735	;# 
  4921     1E8F                     PPSLOCK         equ	7823	;# 
  4922     1E90                     INTPPS          equ	7824	;# 
  4923     1E91                     T0CKIPPS        equ	7825	;# 
  4924     1E92                     T1CKIPPS        equ	7826	;# 
  4925     1E93                     T1GPPS          equ	7827	;# 
  4926     1E94                     T3CKIPPS        equ	7828	;# 
  4927     1E95                     T3GPPS          equ	7829	;# 
  4928     1E96                     T5CKIPPS        equ	7830	;# 
  4929     1E97                     T5GPPS          equ	7831	;# 
  4930     1E9C                     T2INPPS         equ	7836	;# 
  4931     1E9D                     T4INPPS         equ	7837	;# 
  4932     1E9E                     T6INPPS         equ	7838	;# 
  4933     1EA1                     CCP1PPS         equ	7841	;# 
  4934     1EA2                     CCP2PPS         equ	7842	;# 
  4935     1EA3                     CCP3PPS         equ	7843	;# 
  4936     1EA4                     CCP4PPS         equ	7844	;# 
  4937     1EA5                     CCP5PPS         equ	7845	;# 
  4938     1EA9                     SMT1WINPPS      equ	7849	;# 
  4939     1EAA                     SMT1SIGPPS      equ	7850	;# 
  4940     1EAB                     SMT2WINPPS      equ	7851	;# 
  4941     1EAC                     SMT2SIGPPS      equ	7852	;# 
  4942     1EB1                     CWG1PPS         equ	7857	;# 
  4943     1EB2                     CWG2PPS         equ	7858	;# 
  4944     1EB3                     CWG3PPS         equ	7859	;# 
  4945     1EB8                     MDCARLPPS       equ	7864	;# 
  4946     1EB9                     MDCARHPPS       equ	7865	;# 
  4947     1EBA                     MDSRCPPS        equ	7866	;# 
  4948     1EBB                     CLCIN0PPS       equ	7867	;# 
  4949     1EBC                     CLCIN1PPS       equ	7868	;# 
  4950     1EBD                     CLCIN2PPS       equ	7869	;# 
  4951     1EBE                     CLCIN3PPS       equ	7870	;# 
  4952     1EC3                     ADACTPPS        equ	7875	;# 
  4953     1EC5                     SSP1CLKPPS      equ	7877	;# 
  4954     1EC6                     SSP1DATPPS      equ	7878	;# 
  4955     1EC7                     SSP1SSPPS       equ	7879	;# 
  4956     1EC8                     SSP2CLKPPS      equ	7880	;# 
  4957     1EC9                     SSP2DATPPS      equ	7881	;# 
  4958     1ECA                     SSP2SSPPS       equ	7882	;# 
  4959     1ECB                     RX1PPS          equ	7883	;# 
  4960     1ECC                     CK1PPS          equ	7884	;# 
  4961     1ECD                     RX2PPS          equ	7885	;# 
  4962     1ECE                     CK2PPS          equ	7886	;# 
  4963     1F10                     RA0PPS          equ	7952	;# 
  4964     1F11                     RA1PPS          equ	7953	;# 
  4965     1F12                     RA2PPS          equ	7954	;# 
  4966     1F13                     RA3PPS          equ	7955	;# 
  4967     1F14                     RA4PPS          equ	7956	;# 
  4968     1F15                     RA5PPS          equ	7957	;# 
  4969     1F16                     RA6PPS          equ	7958	;# 
  4970     1F17                     RA7PPS          equ	7959	;# 
  4971     1F18                     RB0PPS          equ	7960	;# 
  4972     1F19                     RB1PPS          equ	7961	;# 
  4973     1F1A                     RB2PPS          equ	7962	;# 
  4974     1F1B                     RB3PPS          equ	7963	;# 
  4975     1F1C                     RB4PPS          equ	7964	;# 
  4976     1F1D                     RB5PPS          equ	7965	;# 
  4977     1F1E                     RB6PPS          equ	7966	;# 
  4978     1F1F                     RB7PPS          equ	7967	;# 
  4979     1F20                     RC0PPS          equ	7968	;# 
  4980     1F21                     RC1PPS          equ	7969	;# 
  4981     1F22                     RC2PPS          equ	7970	;# 
  4982     1F23                     RC3PPS          equ	7971	;# 
  4983     1F24                     RC4PPS          equ	7972	;# 
  4984     1F25                     RC5PPS          equ	7973	;# 
  4985     1F26                     RC6PPS          equ	7974	;# 
  4986     1F27                     RC7PPS          equ	7975	;# 
  4987     1F38                     ANSELA          equ	7992	;# 
  4988     1F39                     WPUA            equ	7993	;# 
  4989     1F3A                     ODCONA          equ	7994	;# 
  4990     1F3B                     SLRCONA         equ	7995	;# 
  4991     1F3C                     INLVLA          equ	7996	;# 
  4992     1F3D                     IOCAP           equ	7997	;# 
  4993     1F3E                     IOCAN           equ	7998	;# 
  4994     1F3F                     IOCAF           equ	7999	;# 
  4995     1F43                     ANSELB          equ	8003	;# 
  4996     1F44                     WPUB            equ	8004	;# 
  4997     1F45                     ODCONB          equ	8005	;# 
  4998     1F46                     SLRCONB         equ	8006	;# 
  4999     1F47                     INLVLB          equ	8007	;# 
  5000     1F48                     IOCBP           equ	8008	;# 
  5001     1F49                     IOCBN           equ	8009	;# 
  5002     1F4A                     IOCBF           equ	8010	;# 
  5003     1F4E                     ANSELC          equ	8014	;# 
  5004     1F4F                     WPUC            equ	8015	;# 
  5005     1F50                     ODCONC          equ	8016	;# 
  5006     1F51                     SLRCONC         equ	8017	;# 
  5007     1F52                     INLVLC          equ	8018	;# 
  5008     1F53                     IOCCP           equ	8019	;# 
  5009     1F54                     IOCCN           equ	8020	;# 
  5010     1F55                     IOCCF           equ	8021	;# 
  5011     1F65                     WPUE            equ	8037	;# 
  5012     1F66                     ODCONE          equ	8038	;# 
  5013     1F67                     SLRCONE         equ	8039	;# 
  5014     1F68                     INLVLE          equ	8040	;# 
  5015     1F69                     IOCEP           equ	8041	;# 
  5016     1F6A                     IOCEN           equ	8042	;# 
  5017     1F6B                     IOCEF           equ	8043	;# 
  5018     1FE4                     STATUS_SHAD     equ	8164	;# 
  5019     1FE5                     WREG_SHAD       equ	8165	;# 
  5020     1FE6                     BSR_SHAD        equ	8166	;# 
  5021     1FE7                     PCLATH_SHAD     equ	8167	;# 
  5022     1FE8                     FSR0_SHAD       equ	8168	;# 
  5023     1FE8                     FSR0L_SHAD      equ	8168	;# 
  5024     1FE9                     FSR0H_SHAD      equ	8169	;# 
  5025     1FEA                     FSR1L_SHAD      equ	8170	;# 
  5026     1FEB                     FSR1H_SHAD      equ	8171	;# 
  5027     1FED                     STKPTR          equ	8173	;# 
  5028     1FEE                     TOSL            equ	8174	;# 
  5029     1FEF                     TOSH            equ	8175	;# 
  5030     0000                     INDF0           equ	0	;# 
  5031     0001                     INDF1           equ	1	;# 
  5032     0002                     PCL             equ	2	;# 
  5033     0003                     STATUS          equ	3	;# 
  5034     0004                     FSR0L           equ	4	;# 
  5035     0005                     FSR0H           equ	5	;# 
  5036     0006                     FSR1L           equ	6	;# 
  5037     0007                     FSR1H           equ	7	;# 
  5038     0008                     BSR             equ	8	;# 
  5039     0009                     WREG            equ	9	;# 
  5040     000A                     PCLATH          equ	10	;# 
  5041     000B                     INTCON          equ	11	;# 
  5042     000C                     PORTA           equ	12	;# 
  5043     000D                     PORTB           equ	13	;# 
  5044     000E                     PORTC           equ	14	;# 
  5045     0010                     PORTE           equ	16	;# 
  5046     0012                     TRISA           equ	18	;# 
  5047     0013                     TRISB           equ	19	;# 
  5048     0014                     TRISC           equ	20	;# 
  5049     0016                     TRISE           equ	22	;# 
  5050     0018                     LATA            equ	24	;# 
  5051     0019                     LATB            equ	25	;# 
  5052     001A                     LATC            equ	26	;# 
  5053     008C                     ADLTH           equ	140	;# 
  5054     008C                     ADLTHL          equ	140	;# 
  5055     008D                     ADLTHH          equ	141	;# 
  5056     008E                     ADUTH           equ	142	;# 
  5057     008E                     ADUTHL          equ	142	;# 
  5058     008F                     ADUTHH          equ	143	;# 
  5059     0090                     ADERR           equ	144	;# 
  5060     0090                     ADERRL          equ	144	;# 
  5061     0091                     ADERRH          equ	145	;# 
  5062     0092                     ADSTPT          equ	146	;# 
  5063     0092                     ADSTPTL         equ	146	;# 
  5064     0093                     ADSTPTH         equ	147	;# 
  5065     0094                     ADFLTR          equ	148	;# 
  5066     0094                     ADFLTRL         equ	148	;# 
  5067     0095                     ADFLTRH         equ	149	;# 
  5068     0096                     ADACC           equ	150	;# 
  5069     0096                     ADACCL          equ	150	;# 
  5070     0097                     ADACCH          equ	151	;# 
  5071     0098                     ADACCU          equ	152	;# 
  5072     0099                     ADCNT           equ	153	;# 
  5073     009A                     ADRPT           equ	154	;# 
  5074     009B                     ADPREV          equ	155	;# 
  5075     009B                     ADPREVL         equ	155	;# 
  5076     009C                     ADPREVH         equ	156	;# 
  5077     009D                     ADRES           equ	157	;# 
  5078     009D                     ADRESL          equ	157	;# 
  5079     009E                     ADRESH          equ	158	;# 
  5080     009F                     ADPCH           equ	159	;# 
  5081     010C                     ADACQ           equ	268	;# 
  5082     010C                     ADACQL          equ	268	;# 
  5083     010D                     ADACQH          equ	269	;# 
  5084     010E                     ADCAP           equ	270	;# 
  5085     010F                     ADPRE           equ	271	;# 
  5086     010F                     ADPREL          equ	271	;# 
  5087     0110                     ADPREH          equ	272	;# 
  5088     0111                     ADCON0          equ	273	;# 
  5089     0112                     ADCON1          equ	274	;# 
  5090     0113                     ADCON2          equ	275	;# 
  5091     0114                     ADCON3          equ	276	;# 
  5092     0115                     ADSTAT          equ	277	;# 
  5093     0116                     ADREF           equ	278	;# 
  5094     0117                     ADACT           equ	279	;# 
  5095     0118                     ADCLK           equ	280	;# 
  5096     0119                     RC1REG          equ	281	;# 
  5097     0119                     RCREG           equ	281	;# 
  5098     0119                     RCREG1          equ	281	;# 
  5099     011A                     TX1REG          equ	282	;# 
  5100     011A                     TXREG1          equ	282	;# 
  5101     011A                     TXREG           equ	282	;# 
  5102     011B                     SP1BRG          equ	283	;# 
  5103     011B                     SPBRG           equ	283	;# 
  5104     011B                     SP1BRGL         equ	283	;# 
  5105     011B                     SPBRG1          equ	283	;# 
  5106     011B                     SPBRGL          equ	283	;# 
  5107     011C                     SP1BRGH         equ	284	;# 
  5108     011C                     SPBRGH          equ	284	;# 
  5109     011C                     SPBRGH1         equ	284	;# 
  5110     011D                     RC1STA          equ	285	;# 
  5111     011D                     RCSTA1          equ	285	;# 
  5112     011D                     RCSTA           equ	285	;# 
  5113     011E                     TX1STA          equ	286	;# 
  5114     011E                     TXSTA1          equ	286	;# 
  5115     011E                     TXSTA           equ	286	;# 
  5116     011F                     BAUD1CON        equ	287	;# 
  5117     011F                     BAUDCON1        equ	287	;# 
  5118     011F                     BAUDCTL1        equ	287	;# 
  5119     011F                     BAUDCON         equ	287	;# 
  5120     011F                     BAUDCTL         equ	287	;# 
  5121     018C                     SSP1BUF         equ	396	;# 
  5122     018D                     SSP1ADD         equ	397	;# 
  5123     018E                     SSP1MSK         equ	398	;# 
  5124     018F                     SSP1STAT        equ	399	;# 
  5125     0190                     SSP1CON1        equ	400	;# 
  5126     0191                     SSP1CON2        equ	401	;# 
  5127     0192                     SSP1CON3        equ	402	;# 
  5128     0196                     SSP2BUF         equ	406	;# 
  5129     0197                     SSP2ADD         equ	407	;# 
  5130     0198                     SSP2MSK         equ	408	;# 
  5131     0199                     SSP2STAT        equ	409	;# 
  5132     019A                     SSP2CON1        equ	410	;# 
  5133     019B                     SSP2CON2        equ	411	;# 
  5134     019C                     SSP2CON3        equ	412	;# 
  5135     020C                     TMR1            equ	524	;# 
  5136     020C                     TMR1L           equ	524	;# 
  5137     020D                     TMR1H           equ	525	;# 
  5138     020E                     T1CON           equ	526	;# 
  5139     020E                     TMR1CON         equ	526	;# 
  5140     020F                     T1GCON          equ	527	;# 
  5141     020F                     TMR1GCON        equ	527	;# 
  5142     0210                     T1GATE          equ	528	;# 
  5143     0210                     TMR1GATE        equ	528	;# 
  5144     0211                     T1CLK           equ	529	;# 
  5145     0211                     TMR1CLK         equ	529	;# 
  5146     0211                     PR1             equ	529	;# 
  5147     0212                     TMR3            equ	530	;# 
  5148     0212                     TMR3L           equ	530	;# 
  5149     0213                     TMR3H           equ	531	;# 
  5150     0214                     T3CON           equ	532	;# 
  5151     0214                     TMR3CON         equ	532	;# 
  5152     0215                     T3GCON          equ	533	;# 
  5153     0215                     TMR3GCON        equ	533	;# 
  5154     0216                     T3GATE          equ	534	;# 
  5155     0216                     TMR3GATE        equ	534	;# 
  5156     0217                     T3CLK           equ	535	;# 
  5157     0217                     TMR3CLK         equ	535	;# 
  5158     0217                     PR3             equ	535	;# 
  5159     0218                     TMR5            equ	536	;# 
  5160     0218                     TMR5L           equ	536	;# 
  5161     0219                     TMR5H           equ	537	;# 
  5162     021A                     T5CON           equ	538	;# 
  5163     021A                     TMR5CON         equ	538	;# 
  5164     021B                     T5GCON          equ	539	;# 
  5165     021B                     TMR5GCON        equ	539	;# 
  5166     021C                     T5GATE          equ	540	;# 
  5167     021C                     TMR5GATE        equ	540	;# 
  5168     021D                     T5CLK           equ	541	;# 
  5169     021D                     TMR5CLK         equ	541	;# 
  5170     021D                     PR5             equ	541	;# 
  5171     021E                     CCPTMRS0        equ	542	;# 
  5172     021F                     CCPTMRS1        equ	543	;# 
  5173     028C                     T2TMR           equ	652	;# 
  5174     028C                     TMR2            equ	652	;# 
  5175     028D                     T2PR            equ	653	;# 
  5176     028D                     PR2             equ	653	;# 
  5177     028E                     T2CON           equ	654	;# 
  5178     028F                     T2HLT           equ	655	;# 
  5179     0290                     T2CLKCON        equ	656	;# 
  5180     0291                     T2RST           equ	657	;# 
  5181     0292                     T4TMR           equ	658	;# 
  5182     0292                     TMR4            equ	658	;# 
  5183     0293                     T4PR            equ	659	;# 
  5184     0293                     PR4             equ	659	;# 
  5185     0294                     T4CON           equ	660	;# 
  5186     0295                     T4HLT           equ	661	;# 
  5187     0296                     T4CLKCON        equ	662	;# 
  5188     0297                     T4RST           equ	663	;# 
  5189     0298                     T6TMR           equ	664	;# 
  5190     0298                     TMR6            equ	664	;# 
  5191     0299                     T6PR            equ	665	;# 
  5192     0299                     PR6             equ	665	;# 
  5193     029A                     T6CON           equ	666	;# 
  5194     029B                     T6HLT           equ	667	;# 
  5195     029C                     T6CLKCON        equ	668	;# 
  5196     029D                     T6RST           equ	669	;# 
  5197     029F                     ADCPCON0        equ	671	;# 
  5198     030C                     CCPR1           equ	780	;# 
  5199     030C                     CCPR1L          equ	780	;# 
  5200     030D                     CCPR1H          equ	781	;# 
  5201     030E                     CCP1CON         equ	782	;# 
  5202     030F                     CCP1CAP         equ	783	;# 
  5203     0310                     CCPR2           equ	784	;# 
  5204     0310                     CCPR2L          equ	784	;# 
  5205     0311                     CCPR2H          equ	785	;# 
  5206     0312                     CCP2CON         equ	786	;# 
  5207     0313                     CCP2CAP         equ	787	;# 
  5208     0314                     CCPR3           equ	788	;# 
  5209     0314                     CCPR3L          equ	788	;# 
  5210     0315                     CCPR3H          equ	789	;# 
  5211     0316                     CCP3CON         equ	790	;# 
  5212     0317                     CCP3CAP         equ	791	;# 
  5213     0318                     CCPR4           equ	792	;# 
  5214     0318                     CCPR4L          equ	792	;# 
  5215     0319                     CCPR4H          equ	793	;# 
  5216     031A                     CCP4CON         equ	794	;# 
  5217     031B                     CCP4CAP         equ	795	;# 
  5218     031C                     CCPR5           equ	796	;# 
  5219     031C                     CCPR5L          equ	796	;# 
  5220     031D                     CCPR5H          equ	797	;# 
  5221     031E                     CCP5CON         equ	798	;# 
  5222     031F                     CCP5CAP         equ	799	;# 
  5223     038C                     PWM6DC          equ	908	;# 
  5224     038C                     PWM6DCL         equ	908	;# 
  5225     038D                     PWM6DCH         equ	909	;# 
  5226     038E                     PWM6CON         equ	910	;# 
  5227     0390                     PWM7DC          equ	912	;# 
  5228     0390                     PWM7DCL         equ	912	;# 
  5229     0391                     PWM7DCH         equ	913	;# 
  5230     0392                     PWM7CON         equ	914	;# 
  5231     048C                     SMT1TMR         equ	1164	;# 
  5232     048C                     SMT1TMRL        equ	1164	;# 
  5233     048D                     SMT1TMRH        equ	1165	;# 
  5234     048E                     SMT1TMRU        equ	1166	;# 
  5235     048F                     SMT1CPR         equ	1167	;# 
  5236     048F                     SMT1CPRL        equ	1167	;# 
  5237     0490                     SMT1CPRH        equ	1168	;# 
  5238     0491                     SMT1CPRU        equ	1169	;# 
  5239     0492                     SMT1CPW         equ	1170	;# 
  5240     0492                     SMT1CPWL        equ	1170	;# 
  5241     0493                     SMT1CPWH        equ	1171	;# 
  5242     0494                     SMT1CPWU        equ	1172	;# 
  5243     0495                     SMT1PR          equ	1173	;# 
  5244     0495                     SMT1PRL         equ	1173	;# 
  5245     0496                     SMT1PRH         equ	1174	;# 
  5246     0497                     SMT1PRU         equ	1175	;# 
  5247     0498                     SMT1CON0        equ	1176	;# 
  5248     0499                     SMT1CON1        equ	1177	;# 
  5249     049A                     SMT1STAT        equ	1178	;# 
  5250     049B                     SMT1CLK         equ	1179	;# 
  5251     049C                     SMT1SIG         equ	1180	;# 
  5252     049D                     SMT1WIN         equ	1181	;# 
  5253     050C                     SMT2TMR         equ	1292	;# 
  5254     050C                     SMT2TMRL        equ	1292	;# 
  5255     050D                     SMT2TMRH        equ	1293	;# 
  5256     050E                     SMT2TMRU        equ	1294	;# 
  5257     050F                     SMT2CPR         equ	1295	;# 
  5258     050F                     SMT2CPRL        equ	1295	;# 
  5259     0510                     SMT2CPRH        equ	1296	;# 
  5260     0511                     SMT2CPRU        equ	1297	;# 
  5261     0512                     SMT2CPW         equ	1298	;# 
  5262     0512                     SMT2CPWL        equ	1298	;# 
  5263     0513                     SMT2CPWH        equ	1299	;# 
  5264     0514                     SMT2CPWU        equ	1300	;# 
  5265     0515                     SMT2PR          equ	1301	;# 
  5266     0515                     SMT2PRL         equ	1301	;# 
  5267     0516                     SMT2PRH         equ	1302	;# 
  5268     0517                     SMT2PRU         equ	1303	;# 
  5269     0518                     SMT2CON0        equ	1304	;# 
  5270     0519                     SMT2CON1        equ	1305	;# 
  5271     051A                     SMT2STAT        equ	1306	;# 
  5272     051B                     SMT2CLK         equ	1307	;# 
  5273     051C                     SMT2SIG         equ	1308	;# 
  5274     051D                     SMT2WIN         equ	1309	;# 
  5275     058C                     NCO1ACC         equ	1420	;# 
  5276     058C                     NCO1ACCL        equ	1420	;# 
  5277     058D                     NCO1ACCH        equ	1421	;# 
  5278     058E                     NCO1ACCU        equ	1422	;# 
  5279     058F                     NCO1INC         equ	1423	;# 
  5280     058F                     NCO1INCL        equ	1423	;# 
  5281     0590                     NCO1INCH        equ	1424	;# 
  5282     0591                     NCO1INCU        equ	1425	;# 
  5283     0592                     NCO1CON         equ	1426	;# 
  5284     0593                     NCO1CLK         equ	1427	;# 
  5285     059C                     TMR0L           equ	1436	;# 
  5286     059C                     TMR0            equ	1436	;# 
  5287     059D                     TMR0H           equ	1437	;# 
  5288     059D                     PR0             equ	1437	;# 
  5289     059E                     T0CON0          equ	1438	;# 
  5290     059F                     T0CON1          equ	1439	;# 
  5291     060C                     CWG1CLK         equ	1548	;# 
  5292     060C                     CWG1CLKCON      equ	1548	;# 
  5293     060D                     CWG1ISM         equ	1549	;# 
  5294     060D                     CWG1DAT         equ	1549	;# 
  5295     060E                     CWG1DBR         equ	1550	;# 
  5296     060F                     CWG1DBF         equ	1551	;# 
  5297     0610                     CWG1CON0        equ	1552	;# 
  5298     0611                     CWG1CON1        equ	1553	;# 
  5299     0612                     CWG1AS0         equ	1554	;# 
  5300     0613                     CWG1AS1         equ	1555	;# 
  5301     0614                     CWG1STR         equ	1556	;# 
  5302     0616                     CWG2CLK         equ	1558	;# 
  5303     0616                     CWG2CLKCON      equ	1558	;# 
  5304     0617                     CWG2ISM         equ	1559	;# 
  5305     0617                     CWG2DAT         equ	1559	;# 
  5306     0618                     CWG2DBR         equ	1560	;# 
  5307     0619                     CWG2DBF         equ	1561	;# 
  5308     061A                     CWG2CON0        equ	1562	;# 
  5309     061B                     CWG2CON1        equ	1563	;# 
  5310     061C                     CWG2AS0         equ	1564	;# 
  5311     061D                     CWG2AS1         equ	1565	;# 
  5312     061E                     CWG2STR         equ	1566	;# 
  5313     068C                     CWG3CLK         equ	1676	;# 
  5314     068C                     CWG3CLKCON      equ	1676	;# 
  5315     068D                     CWG3ISM         equ	1677	;# 
  5316     068D                     CWG3DAT         equ	1677	;# 
  5317     068E                     CWG3DBR         equ	1678	;# 
  5318     068F                     CWG3DBF         equ	1679	;# 
  5319     0690                     CWG3CON0        equ	1680	;# 
  5320     0691                     CWG3CON1        equ	1681	;# 
  5321     0692                     CWG3AS0         equ	1682	;# 
  5322     0693                     CWG3AS1         equ	1683	;# 
  5323     0694                     CWG3STR         equ	1684	;# 
  5324     070C                     PIR0            equ	1804	;# 
  5325     070D                     PIR1            equ	1805	;# 
  5326     070E                     PIR2            equ	1806	;# 
  5327     070F                     PIR3            equ	1807	;# 
  5328     0710                     PIR4            equ	1808	;# 
  5329     0711                     PIR5            equ	1809	;# 
  5330     0712                     PIR6            equ	1810	;# 
  5331     0713                     PIR7            equ	1811	;# 
  5332     0714                     PIR8            equ	1812	;# 
  5333     0716                     PIE0            equ	1814	;# 
  5334     0717                     PIE1            equ	1815	;# 
  5335     0718                     PIE2            equ	1816	;# 
  5336     0719                     PIE3            equ	1817	;# 
  5337     071A                     PIE4            equ	1818	;# 
  5338     071B                     PIE5            equ	1819	;# 
  5339     071C                     PIE6            equ	1820	;# 
  5340     071D                     PIE7            equ	1821	;# 
  5341     071E                     PIE8            equ	1822	;# 
  5342     0796                     PMD0            equ	1942	;# 
  5343     0797                     PMD1            equ	1943	;# 
  5344     0798                     PMD2            equ	1944	;# 
  5345     0799                     PMD3            equ	1945	;# 
  5346     079A                     PMD4            equ	1946	;# 
  5347     079B                     PMD5            equ	1947	;# 
  5348     079C                     PMD6            equ	1948	;# 
  5349     079D                     PMD7            equ	1949	;# 
  5350     080C                     WDTCON0         equ	2060	;# 
  5351     080D                     WDTCON1         equ	2061	;# 
  5352     080E                     WDTPSL          equ	2062	;# 
  5353     080F                     WDTPSH          equ	2063	;# 
  5354     0810                     WDTTMR          equ	2064	;# 
  5355     0811                     BORCON          equ	2065	;# 
  5356     0813                     PCON0           equ	2067	;# 
  5357     0814                     PCON1           equ	2068	;# 
  5358     081A                     NVMADR          equ	2074	;# 
  5359     081A                     NVMADRL         equ	2074	;# 
  5360     081B                     NVMADRH         equ	2075	;# 
  5361     081C                     NVMDAT          equ	2076	;# 
  5362     081C                     NVMDATL         equ	2076	;# 
  5363     081D                     NVMDATH         equ	2077	;# 
  5364     081E                     NVMCON1         equ	2078	;# 
  5365     081F                     NVMCON2         equ	2079	;# 
  5366     088C                     CPUDOZE         equ	2188	;# 
  5367     088D                     OSCCON1         equ	2189	;# 
  5368     088E                     OSCCON2         equ	2190	;# 
  5369     088F                     OSCCON3         equ	2191	;# 
  5370     0890                     OSCSTAT         equ	2192	;# 
  5371     0891                     OSCEN           equ	2193	;# 
  5372     0892                     OSCTUNE         equ	2194	;# 
  5373     0893                     OSCFRQ          equ	2195	;# 
  5374     0895                     CLKRCON         equ	2197	;# 
  5375     0896                     CLKRCLK         equ	2198	;# 
  5376     0897                     MD1CON0         equ	2199	;# 
  5377     0898                     MD1CON1         equ	2200	;# 
  5378     0899                     MD1SRC          equ	2201	;# 
  5379     089A                     MD1CARL         equ	2202	;# 
  5380     089B                     MD1CARH         equ	2203	;# 
  5381     090C                     FVRCON          equ	2316	;# 
  5382     090E                     DAC1CON0        equ	2318	;# 
  5383     090F                     DAC1CON1        equ	2319	;# 
  5384     091F                     ZCDCON          equ	2335	;# 
  5385     098F                     CMOUT           equ	2447	;# 
  5386     098F                     CMSTAT          equ	2447	;# 
  5387     0990                     CM1CON0         equ	2448	;# 
  5388     0991                     CM1CON1         equ	2449	;# 
  5389     0992                     CM1NCH          equ	2450	;# 
  5390     0993                     CM1PCH          equ	2451	;# 
  5391     0994                     CM2CON0         equ	2452	;# 
  5392     0995                     CM2CON1         equ	2453	;# 
  5393     0996                     CM2NCH          equ	2454	;# 
  5394     0997                     CM2PCH          equ	2455	;# 
  5395     0A19                     RC2REG          equ	2585	;# 
  5396     0A19                     RCREG2          equ	2585	;# 
  5397     0A1A                     TX2REG          equ	2586	;# 
  5398     0A1A                     TXREG2          equ	2586	;# 
  5399     0A1B                     SP2BRG          equ	2587	;# 
  5400     0A1B                     SP2BRGL         equ	2587	;# 
  5401     0A1B                     SPBRG2          equ	2587	;# 
  5402     0A1C                     SP2BRGH         equ	2588	;# 
  5403     0A1C                     SPBRGH2         equ	2588	;# 
  5404     0A1D                     RC2STA          equ	2589	;# 
  5405     0A1D                     RCSTA2          equ	2589	;# 
  5406     0A1E                     TX2STA          equ	2590	;# 
  5407     0A1E                     TXSTA2          equ	2590	;# 
  5408     0A1F                     BAUD2CON        equ	2591	;# 
  5409     0A1F                     BAUDCON2        equ	2591	;# 
  5410     0A1F                     BAUDCTL2        equ	2591	;# 
  5411     1E0F                     CLCDATA         equ	7695	;# 
  5412     1E10                     CLC1CON         equ	7696	;# 
  5413     1E11                     CLC1POL         equ	7697	;# 
  5414     1E12                     CLC1SEL0        equ	7698	;# 
  5415     1E13                     CLC1SEL1        equ	7699	;# 
  5416     1E14                     CLC1SEL2        equ	7700	;# 
  5417     1E15                     CLC1SEL3        equ	7701	;# 
  5418     1E16                     CLC1GLS0        equ	7702	;# 
  5419     1E17                     CLC1GLS1        equ	7703	;# 
  5420     1E18                     CLC1GLS2        equ	7704	;# 
  5421     1E19                     CLC1GLS3        equ	7705	;# 
  5422     1E1A                     CLC2CON         equ	7706	;# 
  5423     1E1B                     CLC2POL         equ	7707	;# 
  5424     1E1C                     CLC2SEL0        equ	7708	;# 
  5425     1E1D                     CLC2SEL1        equ	7709	;# 
  5426     1E1E                     CLC2SEL2        equ	7710	;# 
  5427     1E1F                     CLC2SEL3        equ	7711	;# 
  5428     1E20                     CLC2GLS0        equ	7712	;# 
  5429     1E21                     CLC2GLS1        equ	7713	;# 
  5430     1E22                     CLC2GLS2        equ	7714	;# 
  5431     1E23                     CLC2GLS3        equ	7715	;# 
  5432     1E24                     CLC3CON         equ	7716	;# 
  5433     1E25                     CLC3POL         equ	7717	;# 
  5434     1E26                     CLC3SEL0        equ	7718	;# 
  5435     1E27                     CLC3SEL1        equ	7719	;# 
  5436     1E28                     CLC3SEL2        equ	7720	;# 
  5437     1E29                     CLC3SEL3        equ	7721	;# 
  5438     1E2A                     CLC3GLS0        equ	7722	;# 
  5439     1E2B                     CLC3GLS1        equ	7723	;# 
  5440     1E2C                     CLC3GLS2        equ	7724	;# 
  5441     1E2D                     CLC3GLS3        equ	7725	;# 
  5442     1E2E                     CLC4CON         equ	7726	;# 
  5443     1E2F                     CLC4POL         equ	7727	;# 
  5444     1E30                     CLC4SEL0        equ	7728	;# 
  5445     1E31                     CLC4SEL1        equ	7729	;# 
  5446     1E32                     CLC4SEL2        equ	7730	;# 
  5447     1E33                     CLC4SEL3        equ	7731	;# 
  5448     1E34                     CLC4GLS0        equ	7732	;# 
  5449     1E35                     CLC4GLS1        equ	7733	;# 
  5450     1E36                     CLC4GLS2        equ	7734	;# 
  5451     1E37                     CLC4GLS3        equ	7735	;# 
  5452     1E8F                     PPSLOCK         equ	7823	;# 
  5453     1E90                     INTPPS          equ	7824	;# 
  5454     1E91                     T0CKIPPS        equ	7825	;# 
  5455     1E92                     T1CKIPPS        equ	7826	;# 
  5456     1E93                     T1GPPS          equ	7827	;# 
  5457     1E94                     T3CKIPPS        equ	7828	;# 
  5458     1E95                     T3GPPS          equ	7829	;# 
  5459     1E96                     T5CKIPPS        equ	7830	;# 
  5460     1E97                     T5GPPS          equ	7831	;# 
  5461     1E9C                     T2INPPS         equ	7836	;# 
  5462     1E9D                     T4INPPS         equ	7837	;# 
  5463     1E9E                     T6INPPS         equ	7838	;# 
  5464     1EA1                     CCP1PPS         equ	7841	;# 
  5465     1EA2                     CCP2PPS         equ	7842	;# 
  5466     1EA3                     CCP3PPS         equ	7843	;# 
  5467     1EA4                     CCP4PPS         equ	7844	;# 
  5468     1EA5                     CCP5PPS         equ	7845	;# 
  5469     1EA9                     SMT1WINPPS      equ	7849	;# 
  5470     1EAA                     SMT1SIGPPS      equ	7850	;# 
  5471     1EAB                     SMT2WINPPS      equ	7851	;# 
  5472     1EAC                     SMT2SIGPPS      equ	7852	;# 
  5473     1EB1                     CWG1PPS         equ	7857	;# 
  5474     1EB2                     CWG2PPS         equ	7858	;# 
  5475     1EB3                     CWG3PPS         equ	7859	;# 
  5476     1EB8                     MDCARLPPS       equ	7864	;# 
  5477     1EB9                     MDCARHPPS       equ	7865	;# 
  5478     1EBA                     MDSRCPPS        equ	7866	;# 
  5479     1EBB                     CLCIN0PPS       equ	7867	;# 
  5480     1EBC                     CLCIN1PPS       equ	7868	;# 
  5481     1EBD                     CLCIN2PPS       equ	7869	;# 
  5482     1EBE                     CLCIN3PPS       equ	7870	;# 
  5483     1EC3                     ADACTPPS        equ	7875	;# 
  5484     1EC5                     SSP1CLKPPS      equ	7877	;# 
  5485     1EC6                     SSP1DATPPS      equ	7878	;# 
  5486     1EC7                     SSP1SSPPS       equ	7879	;# 
  5487     1EC8                     SSP2CLKPPS      equ	7880	;# 
  5488     1EC9                     SSP2DATPPS      equ	7881	;# 
  5489     1ECA                     SSP2SSPPS       equ	7882	;# 
  5490     1ECB                     RX1PPS          equ	7883	;# 
  5491     1ECC                     CK1PPS          equ	7884	;# 
  5492     1ECD                     RX2PPS          equ	7885	;# 
  5493     1ECE                     CK2PPS          equ	7886	;# 
  5494     1F10                     RA0PPS          equ	7952	;# 
  5495     1F11                     RA1PPS          equ	7953	;# 
  5496     1F12                     RA2PPS          equ	7954	;# 
  5497     1F13                     RA3PPS          equ	7955	;# 
  5498     1F14                     RA4PPS          equ	7956	;# 
  5499     1F15                     RA5PPS          equ	7957	;# 
  5500     1F16                     RA6PPS          equ	7958	;# 
  5501     1F17                     RA7PPS          equ	7959	;# 
  5502     1F18                     RB0PPS          equ	7960	;# 
  5503     1F19                     RB1PPS          equ	7961	;# 
  5504     1F1A                     RB2PPS          equ	7962	;# 
  5505     1F1B                     RB3PPS          equ	7963	;# 
  5506     1F1C                     RB4PPS          equ	7964	;# 
  5507     1F1D                     RB5PPS          equ	7965	;# 
  5508     1F1E                     RB6PPS          equ	7966	;# 
  5509     1F1F                     RB7PPS          equ	7967	;# 
  5510     1F20                     RC0PPS          equ	7968	;# 
  5511     1F21                     RC1PPS          equ	7969	;# 
  5512     1F22                     RC2PPS          equ	7970	;# 
  5513     1F23                     RC3PPS          equ	7971	;# 
  5514     1F24                     RC4PPS          equ	7972	;# 
  5515     1F25                     RC5PPS          equ	7973	;# 
  5516     1F26                     RC6PPS          equ	7974	;# 
  5517     1F27                     RC7PPS          equ	7975	;# 
  5518     1F38                     ANSELA          equ	7992	;# 
  5519     1F39                     WPUA            equ	7993	;# 
  5520     1F3A                     ODCONA          equ	7994	;# 
  5521     1F3B                     SLRCONA         equ	7995	;# 
  5522     1F3C                     INLVLA          equ	7996	;# 
  5523     1F3D                     IOCAP           equ	7997	;# 
  5524     1F3E                     IOCAN           equ	7998	;# 
  5525     1F3F                     IOCAF           equ	7999	;# 
  5526     1F43                     ANSELB          equ	8003	;# 
  5527     1F44                     WPUB            equ	8004	;# 
  5528     1F45                     ODCONB          equ	8005	;# 
  5529     1F46                     SLRCONB         equ	8006	;# 
  5530     1F47                     INLVLB          equ	8007	;# 
  5531     1F48                     IOCBP           equ	8008	;# 
  5532     1F49                     IOCBN           equ	8009	;# 
  5533     1F4A                     IOCBF           equ	8010	;# 
  5534     1F4E                     ANSELC          equ	8014	;# 
  5535     1F4F                     WPUC            equ	8015	;# 
  5536     1F50                     ODCONC          equ	8016	;# 
  5537     1F51                     SLRCONC         equ	8017	;# 
  5538     1F52                     INLVLC          equ	8018	;# 
  5539     1F53                     IOCCP           equ	8019	;# 
  5540     1F54                     IOCCN           equ	8020	;# 
  5541     1F55                     IOCCF           equ	8021	;# 
  5542     1F65                     WPUE            equ	8037	;# 
  5543     1F66                     ODCONE          equ	8038	;# 
  5544     1F67                     SLRCONE         equ	8039	;# 
  5545     1F68                     INLVLE          equ	8040	;# 
  5546     1F69                     IOCEP           equ	8041	;# 
  5547     1F6A                     IOCEN           equ	8042	;# 
  5548     1F6B                     IOCEF           equ	8043	;# 
  5549     1FE4                     STATUS_SHAD     equ	8164	;# 
  5550     1FE5                     WREG_SHAD       equ	8165	;# 
  5551     1FE6                     BSR_SHAD        equ	8166	;# 
  5552     1FE7                     PCLATH_SHAD     equ	8167	;# 
  5553     1FE8                     FSR0_SHAD       equ	8168	;# 
  5554     1FE8                     FSR0L_SHAD      equ	8168	;# 
  5555     1FE9                     FSR0H_SHAD      equ	8169	;# 
  5556     1FEA                     FSR1L_SHAD      equ	8170	;# 
  5557     1FEB                     FSR1H_SHAD      equ	8171	;# 
  5558     1FED                     STKPTR          equ	8173	;# 
  5559     1FEE                     TOSL            equ	8174	;# 
  5560     1FEF                     TOSH            equ	8175	;# 
  5561     0000                     INDF0           equ	0	;# 
  5562     0001                     INDF1           equ	1	;# 
  5563     0002                     PCL             equ	2	;# 
  5564     0003                     STATUS          equ	3	;# 
  5565     0004                     FSR0L           equ	4	;# 
  5566     0005                     FSR0H           equ	5	;# 
  5567     0006                     FSR1L           equ	6	;# 
  5568     0007                     FSR1H           equ	7	;# 
  5569     0008                     BSR             equ	8	;# 
  5570     0009                     WREG            equ	9	;# 
  5571     000A                     PCLATH          equ	10	;# 
  5572     000B                     INTCON          equ	11	;# 
  5573     000C                     PORTA           equ	12	;# 
  5574     000D                     PORTB           equ	13	;# 
  5575     000E                     PORTC           equ	14	;# 
  5576     0010                     PORTE           equ	16	;# 
  5577     0012                     TRISA           equ	18	;# 
  5578     0013                     TRISB           equ	19	;# 
  5579     0014                     TRISC           equ	20	;# 
  5580     0016                     TRISE           equ	22	;# 
  5581     0018                     LATA            equ	24	;# 
  5582     0019                     LATB            equ	25	;# 
  5583     001A                     LATC            equ	26	;# 
  5584     008C                     ADLTH           equ	140	;# 
  5585     008C                     ADLTHL          equ	140	;# 
  5586     008D                     ADLTHH          equ	141	;# 
  5587     008E                     ADUTH           equ	142	;# 
  5588     008E                     ADUTHL          equ	142	;# 
  5589     008F                     ADUTHH          equ	143	;# 
  5590     0090                     ADERR           equ	144	;# 
  5591     0090                     ADERRL          equ	144	;# 
  5592     0091                     ADERRH          equ	145	;# 
  5593     0092                     ADSTPT          equ	146	;# 
  5594     0092                     ADSTPTL         equ	146	;# 
  5595     0093                     ADSTPTH         equ	147	;# 
  5596     0094                     ADFLTR          equ	148	;# 
  5597     0094                     ADFLTRL         equ	148	;# 
  5598     0095                     ADFLTRH         equ	149	;# 
  5599     0096                     ADACC           equ	150	;# 
  5600     0096                     ADACCL          equ	150	;# 
  5601     0097                     ADACCH          equ	151	;# 
  5602     0098                     ADACCU          equ	152	;# 
  5603     0099                     ADCNT           equ	153	;# 
  5604     009A                     ADRPT           equ	154	;# 
  5605     009B                     ADPREV          equ	155	;# 
  5606     009B                     ADPREVL         equ	155	;# 
  5607     009C                     ADPREVH         equ	156	;# 
  5608     009D                     ADRES           equ	157	;# 
  5609     009D                     ADRESL          equ	157	;# 
  5610     009E                     ADRESH          equ	158	;# 
  5611     009F                     ADPCH           equ	159	;# 
  5612     010C                     ADACQ           equ	268	;# 
  5613     010C                     ADACQL          equ	268	;# 
  5614     010D                     ADACQH          equ	269	;# 
  5615     010E                     ADCAP           equ	270	;# 
  5616     010F                     ADPRE           equ	271	;# 
  5617     010F                     ADPREL          equ	271	;# 
  5618     0110                     ADPREH          equ	272	;# 
  5619     0111                     ADCON0          equ	273	;# 
  5620     0112                     ADCON1          equ	274	;# 
  5621     0113                     ADCON2          equ	275	;# 
  5622     0114                     ADCON3          equ	276	;# 
  5623     0115                     ADSTAT          equ	277	;# 
  5624     0116                     ADREF           equ	278	;# 
  5625     0117                     ADACT           equ	279	;# 
  5626     0118                     ADCLK           equ	280	;# 
  5627     0119                     RC1REG          equ	281	;# 
  5628     0119                     RCREG           equ	281	;# 
  5629     0119                     RCREG1          equ	281	;# 
  5630     011A                     TX1REG          equ	282	;# 
  5631     011A                     TXREG1          equ	282	;# 
  5632     011A                     TXREG           equ	282	;# 
  5633     011B                     SP1BRG          equ	283	;# 
  5634     011B                     SPBRG           equ	283	;# 
  5635     011B                     SP1BRGL         equ	283	;# 
  5636     011B                     SPBRG1          equ	283	;# 
  5637     011B                     SPBRGL          equ	283	;# 
  5638     011C                     SP1BRGH         equ	284	;# 
  5639     011C                     SPBRGH          equ	284	;# 
  5640     011C                     SPBRGH1         equ	284	;# 
  5641     011D                     RC1STA          equ	285	;# 
  5642     011D                     RCSTA1          equ	285	;# 
  5643     011D                     RCSTA           equ	285	;# 
  5644     011E                     TX1STA          equ	286	;# 
  5645     011E                     TXSTA1          equ	286	;# 
  5646     011E                     TXSTA           equ	286	;# 
  5647     011F                     BAUD1CON        equ	287	;# 
  5648     011F                     BAUDCON1        equ	287	;# 
  5649     011F                     BAUDCTL1        equ	287	;# 
  5650     011F                     BAUDCON         equ	287	;# 
  5651     011F                     BAUDCTL         equ	287	;# 
  5652     018C                     SSP1BUF         equ	396	;# 
  5653     018D                     SSP1ADD         equ	397	;# 
  5654     018E                     SSP1MSK         equ	398	;# 
  5655     018F                     SSP1STAT        equ	399	;# 
  5656     0190                     SSP1CON1        equ	400	;# 
  5657     0191                     SSP1CON2        equ	401	;# 
  5658     0192                     SSP1CON3        equ	402	;# 
  5659     0196                     SSP2BUF         equ	406	;# 
  5660     0197                     SSP2ADD         equ	407	;# 
  5661     0198                     SSP2MSK         equ	408	;# 
  5662     0199                     SSP2STAT        equ	409	;# 
  5663     019A                     SSP2CON1        equ	410	;# 
  5664     019B                     SSP2CON2        equ	411	;# 
  5665     019C                     SSP2CON3        equ	412	;# 
  5666     020C                     TMR1            equ	524	;# 
  5667     020C                     TMR1L           equ	524	;# 
  5668     020D                     TMR1H           equ	525	;# 
  5669     020E                     T1CON           equ	526	;# 
  5670     020E                     TMR1CON         equ	526	;# 
  5671     020F                     T1GCON          equ	527	;# 
  5672     020F                     TMR1GCON        equ	527	;# 
  5673     0210                     T1GATE          equ	528	;# 
  5674     0210                     TMR1GATE        equ	528	;# 
  5675     0211                     T1CLK           equ	529	;# 
  5676     0211                     TMR1CLK         equ	529	;# 
  5677     0211                     PR1             equ	529	;# 
  5678     0212                     TMR3            equ	530	;# 
  5679     0212                     TMR3L           equ	530	;# 
  5680     0213                     TMR3H           equ	531	;# 
  5681     0214                     T3CON           equ	532	;# 
  5682     0214                     TMR3CON         equ	532	;# 
  5683     0215                     T3GCON          equ	533	;# 
  5684     0215                     TMR3GCON        equ	533	;# 
  5685     0216                     T3GATE          equ	534	;# 
  5686     0216                     TMR3GATE        equ	534	;# 
  5687     0217                     T3CLK           equ	535	;# 
  5688     0217                     TMR3CLK         equ	535	;# 
  5689     0217                     PR3             equ	535	;# 
  5690     0218                     TMR5            equ	536	;# 
  5691     0218                     TMR5L           equ	536	;# 
  5692     0219                     TMR5H           equ	537	;# 
  5693     021A                     T5CON           equ	538	;# 
  5694     021A                     TMR5CON         equ	538	;# 
  5695     021B                     T5GCON          equ	539	;# 
  5696     021B                     TMR5GCON        equ	539	;# 
  5697     021C                     T5GATE          equ	540	;# 
  5698     021C                     TMR5GATE        equ	540	;# 
  5699     021D                     T5CLK           equ	541	;# 
  5700     021D                     TMR5CLK         equ	541	;# 
  5701     021D                     PR5             equ	541	;# 
  5702     021E                     CCPTMRS0        equ	542	;# 
  5703     021F                     CCPTMRS1        equ	543	;# 
  5704     028C                     T2TMR           equ	652	;# 
  5705     028C                     TMR2            equ	652	;# 
  5706     028D                     T2PR            equ	653	;# 
  5707     028D                     PR2             equ	653	;# 
  5708     028E                     T2CON           equ	654	;# 
  5709     028F                     T2HLT           equ	655	;# 
  5710     0290                     T2CLKCON        equ	656	;# 
  5711     0291                     T2RST           equ	657	;# 
  5712     0292                     T4TMR           equ	658	;# 
  5713     0292                     TMR4            equ	658	;# 
  5714     0293                     T4PR            equ	659	;# 
  5715     0293                     PR4             equ	659	;# 
  5716     0294                     T4CON           equ	660	;# 
  5717     0295                     T4HLT           equ	661	;# 
  5718     0296                     T4CLKCON        equ	662	;# 
  5719     0297                     T4RST           equ	663	;# 
  5720     0298                     T6TMR           equ	664	;# 
  5721     0298                     TMR6            equ	664	;# 
  5722     0299                     T6PR            equ	665	;# 
  5723     0299                     PR6             equ	665	;# 
  5724     029A                     T6CON           equ	666	;# 
  5725     029B                     T6HLT           equ	667	;# 
  5726     029C                     T6CLKCON        equ	668	;# 
  5727     029D                     T6RST           equ	669	;# 
  5728     029F                     ADCPCON0        equ	671	;# 
  5729     030C                     CCPR1           equ	780	;# 
  5730     030C                     CCPR1L          equ	780	;# 
  5731     030D                     CCPR1H          equ	781	;# 
  5732     030E                     CCP1CON         equ	782	;# 
  5733     030F                     CCP1CAP         equ	783	;# 
  5734     0310                     CCPR2           equ	784	;# 
  5735     0310                     CCPR2L          equ	784	;# 
  5736     0311                     CCPR2H          equ	785	;# 
  5737     0312                     CCP2CON         equ	786	;# 
  5738     0313                     CCP2CAP         equ	787	;# 
  5739     0314                     CCPR3           equ	788	;# 
  5740     0314                     CCPR3L          equ	788	;# 
  5741     0315                     CCPR3H          equ	789	;# 
  5742     0316                     CCP3CON         equ	790	;# 
  5743     0317                     CCP3CAP         equ	791	;# 
  5744     0318                     CCPR4           equ	792	;# 
  5745     0318                     CCPR4L          equ	792	;# 
  5746     0319                     CCPR4H          equ	793	;# 
  5747     031A                     CCP4CON         equ	794	;# 
  5748     031B                     CCP4CAP         equ	795	;# 
  5749     031C                     CCPR5           equ	796	;# 
  5750     031C                     CCPR5L          equ	796	;# 
  5751     031D                     CCPR5H          equ	797	;# 
  5752     031E                     CCP5CON         equ	798	;# 
  5753     031F                     CCP5CAP         equ	799	;# 
  5754     038C                     PWM6DC          equ	908	;# 
  5755     038C                     PWM6DCL         equ	908	;# 
  5756     038D                     PWM6DCH         equ	909	;# 
  5757     038E                     PWM6CON         equ	910	;# 
  5758     0390                     PWM7DC          equ	912	;# 
  5759     0390                     PWM7DCL         equ	912	;# 
  5760     0391                     PWM7DCH         equ	913	;# 
  5761     0392                     PWM7CON         equ	914	;# 
  5762     048C                     SMT1TMR         equ	1164	;# 
  5763     048C                     SMT1TMRL        equ	1164	;# 
  5764     048D                     SMT1TMRH        equ	1165	;# 
  5765     048E                     SMT1TMRU        equ	1166	;# 
  5766     048F                     SMT1CPR         equ	1167	;# 
  5767     048F                     SMT1CPRL        equ	1167	;# 
  5768     0490                     SMT1CPRH        equ	1168	;# 
  5769     0491                     SMT1CPRU        equ	1169	;# 
  5770     0492                     SMT1CPW         equ	1170	;# 
  5771     0492                     SMT1CPWL        equ	1170	;# 
  5772     0493                     SMT1CPWH        equ	1171	;# 
  5773     0494                     SMT1CPWU        equ	1172	;# 
  5774     0495                     SMT1PR          equ	1173	;# 
  5775     0495                     SMT1PRL         equ	1173	;# 
  5776     0496                     SMT1PRH         equ	1174	;# 
  5777     0497                     SMT1PRU         equ	1175	;# 
  5778     0498                     SMT1CON0        equ	1176	;# 
  5779     0499                     SMT1CON1        equ	1177	;# 
  5780     049A                     SMT1STAT        equ	1178	;# 
  5781     049B                     SMT1CLK         equ	1179	;# 
  5782     049C                     SMT1SIG         equ	1180	;# 
  5783     049D                     SMT1WIN         equ	1181	;# 
  5784     050C                     SMT2TMR         equ	1292	;# 
  5785     050C                     SMT2TMRL        equ	1292	;# 
  5786     050D                     SMT2TMRH        equ	1293	;# 
  5787     050E                     SMT2TMRU        equ	1294	;# 
  5788     050F                     SMT2CPR         equ	1295	;# 
  5789     050F                     SMT2CPRL        equ	1295	;# 
  5790     0510                     SMT2CPRH        equ	1296	;# 
  5791     0511                     SMT2CPRU        equ	1297	;# 
  5792     0512                     SMT2CPW         equ	1298	;# 
  5793     0512                     SMT2CPWL        equ	1298	;# 
  5794     0513                     SMT2CPWH        equ	1299	;# 
  5795     0514                     SMT2CPWU        equ	1300	;# 
  5796     0515                     SMT2PR          equ	1301	;# 
  5797     0515                     SMT2PRL         equ	1301	;# 
  5798     0516                     SMT2PRH         equ	1302	;# 
  5799     0517                     SMT2PRU         equ	1303	;# 
  5800     0518                     SMT2CON0        equ	1304	;# 
  5801     0519                     SMT2CON1        equ	1305	;# 
  5802     051A                     SMT2STAT        equ	1306	;# 
  5803     051B                     SMT2CLK         equ	1307	;# 
  5804     051C                     SMT2SIG         equ	1308	;# 
  5805     051D                     SMT2WIN         equ	1309	;# 
  5806     058C                     NCO1ACC         equ	1420	;# 
  5807     058C                     NCO1ACCL        equ	1420	;# 
  5808     058D                     NCO1ACCH        equ	1421	;# 
  5809     058E                     NCO1ACCU        equ	1422	;# 
  5810     058F                     NCO1INC         equ	1423	;# 
  5811     058F                     NCO1INCL        equ	1423	;# 
  5812     0590                     NCO1INCH        equ	1424	;# 
  5813     0591                     NCO1INCU        equ	1425	;# 
  5814     0592                     NCO1CON         equ	1426	;# 
  5815     0593                     NCO1CLK         equ	1427	;# 
  5816     059C                     TMR0L           equ	1436	;# 
  5817     059C                     TMR0            equ	1436	;# 
  5818     059D                     TMR0H           equ	1437	;# 
  5819     059D                     PR0             equ	1437	;# 
  5820     059E                     T0CON0          equ	1438	;# 
  5821     059F                     T0CON1          equ	1439	;# 
  5822     060C                     CWG1CLK         equ	1548	;# 
  5823     060C                     CWG1CLKCON      equ	1548	;# 
  5824     060D                     CWG1ISM         equ	1549	;# 
  5825     060D                     CWG1DAT         equ	1549	;# 
  5826     060E                     CWG1DBR         equ	1550	;# 
  5827     060F                     CWG1DBF         equ	1551	;# 
  5828     0610                     CWG1CON0        equ	1552	;# 
  5829     0611                     CWG1CON1        equ	1553	;# 
  5830     0612                     CWG1AS0         equ	1554	;# 
  5831     0613                     CWG1AS1         equ	1555	;# 
  5832     0614                     CWG1STR         equ	1556	;# 
  5833     0616                     CWG2CLK         equ	1558	;# 
  5834     0616                     CWG2CLKCON      equ	1558	;# 
  5835     0617                     CWG2ISM         equ	1559	;# 
  5836     0617                     CWG2DAT         equ	1559	;# 
  5837     0618                     CWG2DBR         equ	1560	;# 
  5838     0619                     CWG2DBF         equ	1561	;# 
  5839     061A                     CWG2CON0        equ	1562	;# 
  5840     061B                     CWG2CON1        equ	1563	;# 
  5841     061C                     CWG2AS0         equ	1564	;# 
  5842     061D                     CWG2AS1         equ	1565	;# 
  5843     061E                     CWG2STR         equ	1566	;# 
  5844     068C                     CWG3CLK         equ	1676	;# 
  5845     068C                     CWG3CLKCON      equ	1676	;# 
  5846     068D                     CWG3ISM         equ	1677	;# 
  5847     068D                     CWG3DAT         equ	1677	;# 
  5848     068E                     CWG3DBR         equ	1678	;# 
  5849     068F                     CWG3DBF         equ	1679	;# 
  5850     0690                     CWG3CON0        equ	1680	;# 
  5851     0691                     CWG3CON1        equ	1681	;# 
  5852     0692                     CWG3AS0         equ	1682	;# 
  5853     0693                     CWG3AS1         equ	1683	;# 
  5854     0694                     CWG3STR         equ	1684	;# 
  5855     070C                     PIR0            equ	1804	;# 
  5856     070D                     PIR1            equ	1805	;# 
  5857     070E                     PIR2            equ	1806	;# 
  5858     070F                     PIR3            equ	1807	;# 
  5859     0710                     PIR4            equ	1808	;# 
  5860     0711                     PIR5            equ	1809	;# 
  5861     0712                     PIR6            equ	1810	;# 
  5862     0713                     PIR7            equ	1811	;# 
  5863     0714                     PIR8            equ	1812	;# 
  5864     0716                     PIE0            equ	1814	;# 
  5865     0717                     PIE1            equ	1815	;# 
  5866     0718                     PIE2            equ	1816	;# 
  5867     0719                     PIE3            equ	1817	;# 
  5868     071A                     PIE4            equ	1818	;# 
  5869     071B                     PIE5            equ	1819	;# 
  5870     071C                     PIE6            equ	1820	;# 
  5871     071D                     PIE7            equ	1821	;# 
  5872     071E                     PIE8            equ	1822	;# 
  5873     0796                     PMD0            equ	1942	;# 
  5874     0797                     PMD1            equ	1943	;# 
  5875     0798                     PMD2            equ	1944	;# 
  5876     0799                     PMD3            equ	1945	;# 
  5877     079A                     PMD4            equ	1946	;# 
  5878     079B                     PMD5            equ	1947	;# 
  5879     079C                     PMD6            equ	1948	;# 
  5880     079D                     PMD7            equ	1949	;# 
  5881     080C                     WDTCON0         equ	2060	;# 
  5882     080D                     WDTCON1         equ	2061	;# 
  5883     080E                     WDTPSL          equ	2062	;# 
  5884     080F                     WDTPSH          equ	2063	;# 
  5885     0810                     WDTTMR          equ	2064	;# 
  5886     0811                     BORCON          equ	2065	;# 
  5887     0813                     PCON0           equ	2067	;# 
  5888     0814                     PCON1           equ	2068	;# 
  5889     081A                     NVMADR          equ	2074	;# 
  5890     081A                     NVMADRL         equ	2074	;# 
  5891     081B                     NVMADRH         equ	2075	;# 
  5892     081C                     NVMDAT          equ	2076	;# 
  5893     081C                     NVMDATL         equ	2076	;# 
  5894     081D                     NVMDATH         equ	2077	;# 
  5895     081E                     NVMCON1         equ	2078	;# 
  5896     081F                     NVMCON2         equ	2079	;# 
  5897     088C                     CPUDOZE         equ	2188	;# 
  5898     088D                     OSCCON1         equ	2189	;# 
  5899     088E                     OSCCON2         equ	2190	;# 
  5900     088F                     OSCCON3         equ	2191	;# 
  5901     0890                     OSCSTAT         equ	2192	;# 
  5902     0891                     OSCEN           equ	2193	;# 
  5903     0892                     OSCTUNE         equ	2194	;# 
  5904     0893                     OSCFRQ          equ	2195	;# 
  5905     0895                     CLKRCON         equ	2197	;# 
  5906     0896                     CLKRCLK         equ	2198	;# 
  5907     0897                     MD1CON0         equ	2199	;# 
  5908     0898                     MD1CON1         equ	2200	;# 
  5909     0899                     MD1SRC          equ	2201	;# 
  5910     089A                     MD1CARL         equ	2202	;# 
  5911     089B                     MD1CARH         equ	2203	;# 
  5912     090C                     FVRCON          equ	2316	;# 
  5913     090E                     DAC1CON0        equ	2318	;# 
  5914     090F                     DAC1CON1        equ	2319	;# 
  5915     091F                     ZCDCON          equ	2335	;# 
  5916     098F                     CMOUT           equ	2447	;# 
  5917     098F                     CMSTAT          equ	2447	;# 
  5918     0990                     CM1CON0         equ	2448	;# 
  5919     0991                     CM1CON1         equ	2449	;# 
  5920     0992                     CM1NCH          equ	2450	;# 
  5921     0993                     CM1PCH          equ	2451	;# 
  5922     0994                     CM2CON0         equ	2452	;# 
  5923     0995                     CM2CON1         equ	2453	;# 
  5924     0996                     CM2NCH          equ	2454	;# 
  5925     0997                     CM2PCH          equ	2455	;# 
  5926     0A19                     RC2REG          equ	2585	;# 
  5927     0A19                     RCREG2          equ	2585	;# 
  5928     0A1A                     TX2REG          equ	2586	;# 
  5929     0A1A                     TXREG2          equ	2586	;# 
  5930     0A1B                     SP2BRG          equ	2587	;# 
  5931     0A1B                     SP2BRGL         equ	2587	;# 
  5932     0A1B                     SPBRG2          equ	2587	;# 
  5933     0A1C                     SP2BRGH         equ	2588	;# 
  5934     0A1C                     SPBRGH2         equ	2588	;# 
  5935     0A1D                     RC2STA          equ	2589	;# 
  5936     0A1D                     RCSTA2          equ	2589	;# 
  5937     0A1E                     TX2STA          equ	2590	;# 
  5938     0A1E                     TXSTA2          equ	2590	;# 
  5939     0A1F                     BAUD2CON        equ	2591	;# 
  5940     0A1F                     BAUDCON2        equ	2591	;# 
  5941     0A1F                     BAUDCTL2        equ	2591	;# 
  5942     1E0F                     CLCDATA         equ	7695	;# 
  5943     1E10                     CLC1CON         equ	7696	;# 
  5944     1E11                     CLC1POL         equ	7697	;# 
  5945     1E12                     CLC1SEL0        equ	7698	;# 
  5946     1E13                     CLC1SEL1        equ	7699	;# 
  5947     1E14                     CLC1SEL2        equ	7700	;# 
  5948     1E15                     CLC1SEL3        equ	7701	;# 
  5949     1E16                     CLC1GLS0        equ	7702	;# 
  5950     1E17                     CLC1GLS1        equ	7703	;# 
  5951     1E18                     CLC1GLS2        equ	7704	;# 
  5952     1E19                     CLC1GLS3        equ	7705	;# 
  5953     1E1A                     CLC2CON         equ	7706	;# 
  5954     1E1B                     CLC2POL         equ	7707	;# 
  5955     1E1C                     CLC2SEL0        equ	7708	;# 
  5956     1E1D                     CLC2SEL1        equ	7709	;# 
  5957     1E1E                     CLC2SEL2        equ	7710	;# 
  5958     1E1F                     CLC2SEL3        equ	7711	;# 
  5959     1E20                     CLC2GLS0        equ	7712	;# 
  5960     1E21                     CLC2GLS1        equ	7713	;# 
  5961     1E22                     CLC2GLS2        equ	7714	;# 
  5962     1E23                     CLC2GLS3        equ	7715	;# 
  5963     1E24                     CLC3CON         equ	7716	;# 
  5964     1E25                     CLC3POL         equ	7717	;# 
  5965     1E26                     CLC3SEL0        equ	7718	;# 
  5966     1E27                     CLC3SEL1        equ	7719	;# 
  5967     1E28                     CLC3SEL2        equ	7720	;# 
  5968     1E29                     CLC3SEL3        equ	7721	;# 
  5969     1E2A                     CLC3GLS0        equ	7722	;# 
  5970     1E2B                     CLC3GLS1        equ	7723	;# 
  5971     1E2C                     CLC3GLS2        equ	7724	;# 
  5972     1E2D                     CLC3GLS3        equ	7725	;# 
  5973     1E2E                     CLC4CON         equ	7726	;# 
  5974     1E2F                     CLC4POL         equ	7727	;# 
  5975     1E30                     CLC4SEL0        equ	7728	;# 
  5976     1E31                     CLC4SEL1        equ	7729	;# 
  5977     1E32                     CLC4SEL2        equ	7730	;# 
  5978     1E33                     CLC4SEL3        equ	7731	;# 
  5979     1E34                     CLC4GLS0        equ	7732	;# 
  5980     1E35                     CLC4GLS1        equ	7733	;# 
  5981     1E36                     CLC4GLS2        equ	7734	;# 
  5982     1E37                     CLC4GLS3        equ	7735	;# 
  5983     1E8F                     PPSLOCK         equ	7823	;# 
  5984     1E90                     INTPPS          equ	7824	;# 
  5985     1E91                     T0CKIPPS        equ	7825	;# 
  5986     1E92                     T1CKIPPS        equ	7826	;# 
  5987     1E93                     T1GPPS          equ	7827	;# 
  5988     1E94                     T3CKIPPS        equ	7828	;# 
  5989     1E95                     T3GPPS          equ	7829	;# 
  5990     1E96                     T5CKIPPS        equ	7830	;# 
  5991     1E97                     T5GPPS          equ	7831	;# 
  5992     1E9C                     T2INPPS         equ	7836	;# 
  5993     1E9D                     T4INPPS         equ	7837	;# 
  5994     1E9E                     T6INPPS         equ	7838	;# 
  5995     1EA1                     CCP1PPS         equ	7841	;# 
  5996     1EA2                     CCP2PPS         equ	7842	;# 
  5997     1EA3                     CCP3PPS         equ	7843	;# 
  5998     1EA4                     CCP4PPS         equ	7844	;# 
  5999     1EA5                     CCP5PPS         equ	7845	;# 
  6000     1EA9                     SMT1WINPPS      equ	7849	;# 
  6001     1EAA                     SMT1SIGPPS      equ	7850	;# 
  6002     1EAB                     SMT2WINPPS      equ	7851	;# 
  6003     1EAC                     SMT2SIGPPS      equ	7852	;# 
  6004     1EB1                     CWG1PPS         equ	7857	;# 
  6005     1EB2                     CWG2PPS         equ	7858	;# 
  6006     1EB3                     CWG3PPS         equ	7859	;# 
  6007     1EB8                     MDCARLPPS       equ	7864	;# 
  6008     1EB9                     MDCARHPPS       equ	7865	;# 
  6009     1EBA                     MDSRCPPS        equ	7866	;# 
  6010     1EBB                     CLCIN0PPS       equ	7867	;# 
  6011     1EBC                     CLCIN1PPS       equ	7868	;# 
  6012     1EBD                     CLCIN2PPS       equ	7869	;# 
  6013     1EBE                     CLCIN3PPS       equ	7870	;# 
  6014     1EC3                     ADACTPPS        equ	7875	;# 
  6015     1EC5                     SSP1CLKPPS      equ	7877	;# 
  6016     1EC6                     SSP1DATPPS      equ	7878	;# 
  6017     1EC7                     SSP1SSPPS       equ	7879	;# 
  6018     1EC8                     SSP2CLKPPS      equ	7880	;# 
  6019     1EC9                     SSP2DATPPS      equ	7881	;# 
  6020     1ECA                     SSP2SSPPS       equ	7882	;# 
  6021     1ECB                     RX1PPS          equ	7883	;# 
  6022     1ECC                     CK1PPS          equ	7884	;# 
  6023     1ECD                     RX2PPS          equ	7885	;# 
  6024     1ECE                     CK2PPS          equ	7886	;# 
  6025     1F10                     RA0PPS          equ	7952	;# 
  6026     1F11                     RA1PPS          equ	7953	;# 
  6027     1F12                     RA2PPS          equ	7954	;# 
  6028     1F13                     RA3PPS          equ	7955	;# 
  6029     1F14                     RA4PPS          equ	7956	;# 
  6030     1F15                     RA5PPS          equ	7957	;# 
  6031     1F16                     RA6PPS          equ	7958	;# 
  6032     1F17                     RA7PPS          equ	7959	;# 
  6033     1F18                     RB0PPS          equ	7960	;# 
  6034     1F19                     RB1PPS          equ	7961	;# 
  6035     1F1A                     RB2PPS          equ	7962	;# 
  6036     1F1B                     RB3PPS          equ	7963	;# 
  6037     1F1C                     RB4PPS          equ	7964	;# 
  6038     1F1D                     RB5PPS          equ	7965	;# 
  6039     1F1E                     RB6PPS          equ	7966	;# 
  6040     1F1F                     RB7PPS          equ	7967	;# 
  6041     1F20                     RC0PPS          equ	7968	;# 
  6042     1F21                     RC1PPS          equ	7969	;# 
  6043     1F22                     RC2PPS          equ	7970	;# 
  6044     1F23                     RC3PPS          equ	7971	;# 
  6045     1F24                     RC4PPS          equ	7972	;# 
  6046     1F25                     RC5PPS          equ	7973	;# 
  6047     1F26                     RC6PPS          equ	7974	;# 
  6048     1F27                     RC7PPS          equ	7975	;# 
  6049     1F38                     ANSELA          equ	7992	;# 
  6050     1F39                     WPUA            equ	7993	;# 
  6051     1F3A                     ODCONA          equ	7994	;# 
  6052     1F3B                     SLRCONA         equ	7995	;# 
  6053     1F3C                     INLVLA          equ	7996	;# 
  6054     1F3D                     IOCAP           equ	7997	;# 
  6055     1F3E                     IOCAN           equ	7998	;# 
  6056     1F3F                     IOCAF           equ	7999	;# 
  6057     1F43                     ANSELB          equ	8003	;# 
  6058     1F44                     WPUB            equ	8004	;# 
  6059     1F45                     ODCONB          equ	8005	;# 
  6060     1F46                     SLRCONB         equ	8006	;# 
  6061     1F47                     INLVLB          equ	8007	;# 
  6062     1F48                     IOCBP           equ	8008	;# 
  6063     1F49                     IOCBN           equ	8009	;# 
  6064     1F4A                     IOCBF           equ	8010	;# 
  6065     1F4E                     ANSELC          equ	8014	;# 
  6066     1F4F                     WPUC            equ	8015	;# 
  6067     1F50                     ODCONC          equ	8016	;# 
  6068     1F51                     SLRCONC         equ	8017	;# 
  6069     1F52                     INLVLC          equ	8018	;# 
  6070     1F53                     IOCCP           equ	8019	;# 
  6071     1F54                     IOCCN           equ	8020	;# 
  6072     1F55                     IOCCF           equ	8021	;# 
  6073     1F65                     WPUE            equ	8037	;# 
  6074     1F66                     ODCONE          equ	8038	;# 
  6075     1F67                     SLRCONE         equ	8039	;# 
  6076     1F68                     INLVLE          equ	8040	;# 
  6077     1F69                     IOCEP           equ	8041	;# 
  6078     1F6A                     IOCEN           equ	8042	;# 
  6079     1F6B                     IOCEF           equ	8043	;# 
  6080     1FE4                     STATUS_SHAD     equ	8164	;# 
  6081     1FE5                     WREG_SHAD       equ	8165	;# 
  6082     1FE6                     BSR_SHAD        equ	8166	;# 
  6083     1FE7                     PCLATH_SHAD     equ	8167	;# 
  6084     1FE8                     FSR0_SHAD       equ	8168	;# 
  6085     1FE8                     FSR0L_SHAD      equ	8168	;# 
  6086     1FE9                     FSR0H_SHAD      equ	8169	;# 
  6087     1FEA                     FSR1L_SHAD      equ	8170	;# 
  6088     1FEB                     FSR1H_SHAD      equ	8171	;# 
  6089     1FED                     STKPTR          equ	8173	;# 
  6090     1FEE                     TOSL            equ	8174	;# 
  6091     1FEF                     TOSH            equ	8175	;# 
  6092     0000                     INDF0           equ	0	;# 
  6093     0001                     INDF1           equ	1	;# 
  6094     0002                     PCL             equ	2	;# 
  6095     0003                     STATUS          equ	3	;# 
  6096     0004                     FSR0L           equ	4	;# 
  6097     0005                     FSR0H           equ	5	;# 
  6098     0006                     FSR1L           equ	6	;# 
  6099     0007                     FSR1H           equ	7	;# 
  6100     0008                     BSR             equ	8	;# 
  6101     0009                     WREG            equ	9	;# 
  6102     000A                     PCLATH          equ	10	;# 
  6103     000B                     INTCON          equ	11	;# 
  6104     000C                     PORTA           equ	12	;# 
  6105     000D                     PORTB           equ	13	;# 
  6106     000E                     PORTC           equ	14	;# 
  6107     0010                     PORTE           equ	16	;# 
  6108     0012                     TRISA           equ	18	;# 
  6109     0013                     TRISB           equ	19	;# 
  6110     0014                     TRISC           equ	20	;# 
  6111     0016                     TRISE           equ	22	;# 
  6112     0018                     LATA            equ	24	;# 
  6113     0019                     LATB            equ	25	;# 
  6114     001A                     LATC            equ	26	;# 
  6115     008C                     ADLTH           equ	140	;# 
  6116     008C                     ADLTHL          equ	140	;# 
  6117     008D                     ADLTHH          equ	141	;# 
  6118     008E                     ADUTH           equ	142	;# 
  6119     008E                     ADUTHL          equ	142	;# 
  6120     008F                     ADUTHH          equ	143	;# 
  6121     0090                     ADERR           equ	144	;# 
  6122     0090                     ADERRL          equ	144	;# 
  6123     0091                     ADERRH          equ	145	;# 
  6124     0092                     ADSTPT          equ	146	;# 
  6125     0092                     ADSTPTL         equ	146	;# 
  6126     0093                     ADSTPTH         equ	147	;# 
  6127     0094                     ADFLTR          equ	148	;# 
  6128     0094                     ADFLTRL         equ	148	;# 
  6129     0095                     ADFLTRH         equ	149	;# 
  6130     0096                     ADACC           equ	150	;# 
  6131     0096                     ADACCL          equ	150	;# 
  6132     0097                     ADACCH          equ	151	;# 
  6133     0098                     ADACCU          equ	152	;# 
  6134     0099                     ADCNT           equ	153	;# 
  6135     009A                     ADRPT           equ	154	;# 
  6136     009B                     ADPREV          equ	155	;# 
  6137     009B                     ADPREVL         equ	155	;# 
  6138     009C                     ADPREVH         equ	156	;# 
  6139     009D                     ADRES           equ	157	;# 
  6140     009D                     ADRESL          equ	157	;# 
  6141     009E                     ADRESH          equ	158	;# 
  6142     009F                     ADPCH           equ	159	;# 
  6143     010C                     ADACQ           equ	268	;# 
  6144     010C                     ADACQL          equ	268	;# 
  6145     010D                     ADACQH          equ	269	;# 
  6146     010E                     ADCAP           equ	270	;# 
  6147     010F                     ADPRE           equ	271	;# 
  6148     010F                     ADPREL          equ	271	;# 
  6149     0110                     ADPREH          equ	272	;# 
  6150     0111                     ADCON0          equ	273	;# 
  6151     0112                     ADCON1          equ	274	;# 
  6152     0113                     ADCON2          equ	275	;# 
  6153     0114                     ADCON3          equ	276	;# 
  6154     0115                     ADSTAT          equ	277	;# 
  6155     0116                     ADREF           equ	278	;# 
  6156     0117                     ADACT           equ	279	;# 
  6157     0118                     ADCLK           equ	280	;# 
  6158     0119                     RC1REG          equ	281	;# 
  6159     0119                     RCREG           equ	281	;# 
  6160     0119                     RCREG1          equ	281	;# 
  6161     011A                     TX1REG          equ	282	;# 
  6162     011A                     TXREG1          equ	282	;# 
  6163     011A                     TXREG           equ	282	;# 
  6164     011B                     SP1BRG          equ	283	;# 
  6165     011B                     SPBRG           equ	283	;# 
  6166     011B                     SP1BRGL         equ	283	;# 
  6167     011B                     SPBRG1          equ	283	;# 
  6168     011B                     SPBRGL          equ	283	;# 
  6169     011C                     SP1BRGH         equ	284	;# 
  6170     011C                     SPBRGH          equ	284	;# 
  6171     011C                     SPBRGH1         equ	284	;# 
  6172     011D                     RC1STA          equ	285	;# 
  6173     011D                     RCSTA1          equ	285	;# 
  6174     011D                     RCSTA           equ	285	;# 
  6175     011E                     TX1STA          equ	286	;# 
  6176     011E                     TXSTA1          equ	286	;# 
  6177     011E                     TXSTA           equ	286	;# 
  6178     011F                     BAUD1CON        equ	287	;# 
  6179     011F                     BAUDCON1        equ	287	;# 
  6180     011F                     BAUDCTL1        equ	287	;# 
  6181     011F                     BAUDCON         equ	287	;# 
  6182     011F                     BAUDCTL         equ	287	;# 
  6183     018C                     SSP1BUF         equ	396	;# 
  6184     018D                     SSP1ADD         equ	397	;# 
  6185     018E                     SSP1MSK         equ	398	;# 
  6186     018F                     SSP1STAT        equ	399	;# 
  6187     0190                     SSP1CON1        equ	400	;# 
  6188     0191                     SSP1CON2        equ	401	;# 
  6189     0192                     SSP1CON3        equ	402	;# 
  6190     0196                     SSP2BUF         equ	406	;# 
  6191     0197                     SSP2ADD         equ	407	;# 
  6192     0198                     SSP2MSK         equ	408	;# 
  6193     0199                     SSP2STAT        equ	409	;# 
  6194     019A                     SSP2CON1        equ	410	;# 
  6195     019B                     SSP2CON2        equ	411	;# 
  6196     019C                     SSP2CON3        equ	412	;# 
  6197     020C                     TMR1            equ	524	;# 
  6198     020C                     TMR1L           equ	524	;# 
  6199     020D                     TMR1H           equ	525	;# 
  6200     020E                     T1CON           equ	526	;# 
  6201     020E                     TMR1CON         equ	526	;# 
  6202     020F                     T1GCON          equ	527	;# 
  6203     020F                     TMR1GCON        equ	527	;# 
  6204     0210                     T1GATE          equ	528	;# 
  6205     0210                     TMR1GATE        equ	528	;# 
  6206     0211                     T1CLK           equ	529	;# 
  6207     0211                     TMR1CLK         equ	529	;# 
  6208     0211                     PR1             equ	529	;# 
  6209     0212                     TMR3            equ	530	;# 
  6210     0212                     TMR3L           equ	530	;# 
  6211     0213                     TMR3H           equ	531	;# 
  6212     0214                     T3CON           equ	532	;# 
  6213     0214                     TMR3CON         equ	532	;# 
  6214     0215                     T3GCON          equ	533	;# 
  6215     0215                     TMR3GCON        equ	533	;# 
  6216     0216                     T3GATE          equ	534	;# 
  6217     0216                     TMR3GATE        equ	534	;# 
  6218     0217                     T3CLK           equ	535	;# 
  6219     0217                     TMR3CLK         equ	535	;# 
  6220     0217                     PR3             equ	535	;# 
  6221     0218                     TMR5            equ	536	;# 
  6222     0218                     TMR5L           equ	536	;# 
  6223     0219                     TMR5H           equ	537	;# 
  6224     021A                     T5CON           equ	538	;# 
  6225     021A                     TMR5CON         equ	538	;# 
  6226     021B                     T5GCON          equ	539	;# 
  6227     021B                     TMR5GCON        equ	539	;# 
  6228     021C                     T5GATE          equ	540	;# 
  6229     021C                     TMR5GATE        equ	540	;# 
  6230     021D                     T5CLK           equ	541	;# 
  6231     021D                     TMR5CLK         equ	541	;# 
  6232     021D                     PR5             equ	541	;# 
  6233     021E                     CCPTMRS0        equ	542	;# 
  6234     021F                     CCPTMRS1        equ	543	;# 
  6235     028C                     T2TMR           equ	652	;# 
  6236     028C                     TMR2            equ	652	;# 
  6237     028D                     T2PR            equ	653	;# 
  6238     028D                     PR2             equ	653	;# 
  6239     028E                     T2CON           equ	654	;# 
  6240     028F                     T2HLT           equ	655	;# 
  6241     0290                     T2CLKCON        equ	656	;# 
  6242     0291                     T2RST           equ	657	;# 
  6243     0292                     T4TMR           equ	658	;# 
  6244     0292                     TMR4            equ	658	;# 
  6245     0293                     T4PR            equ	659	;# 
  6246     0293                     PR4             equ	659	;# 
  6247     0294                     T4CON           equ	660	;# 
  6248     0295                     T4HLT           equ	661	;# 
  6249     0296                     T4CLKCON        equ	662	;# 
  6250     0297                     T4RST           equ	663	;# 
  6251     0298                     T6TMR           equ	664	;# 
  6252     0298                     TMR6            equ	664	;# 
  6253     0299                     T6PR            equ	665	;# 
  6254     0299                     PR6             equ	665	;# 
  6255     029A                     T6CON           equ	666	;# 
  6256     029B                     T6HLT           equ	667	;# 
  6257     029C                     T6CLKCON        equ	668	;# 
  6258     029D                     T6RST           equ	669	;# 
  6259     029F                     ADCPCON0        equ	671	;# 
  6260     030C                     CCPR1           equ	780	;# 
  6261     030C                     CCPR1L          equ	780	;# 
  6262     030D                     CCPR1H          equ	781	;# 
  6263     030E                     CCP1CON         equ	782	;# 
  6264     030F                     CCP1CAP         equ	783	;# 
  6265     0310                     CCPR2           equ	784	;# 
  6266     0310                     CCPR2L          equ	784	;# 
  6267     0311                     CCPR2H          equ	785	;# 
  6268     0312                     CCP2CON         equ	786	;# 
  6269     0313                     CCP2CAP         equ	787	;# 
  6270     0314                     CCPR3           equ	788	;# 
  6271     0314                     CCPR3L          equ	788	;# 
  6272     0315                     CCPR3H          equ	789	;# 
  6273     0316                     CCP3CON         equ	790	;# 
  6274     0317                     CCP3CAP         equ	791	;# 
  6275     0318                     CCPR4           equ	792	;# 
  6276     0318                     CCPR4L          equ	792	;# 
  6277     0319                     CCPR4H          equ	793	;# 
  6278     031A                     CCP4CON         equ	794	;# 
  6279     031B                     CCP4CAP         equ	795	;# 
  6280     031C                     CCPR5           equ	796	;# 
  6281     031C                     CCPR5L          equ	796	;# 
  6282     031D                     CCPR5H          equ	797	;# 
  6283     031E                     CCP5CON         equ	798	;# 
  6284     031F                     CCP5CAP         equ	799	;# 
  6285     038C                     PWM6DC          equ	908	;# 
  6286     038C                     PWM6DCL         equ	908	;# 
  6287     038D                     PWM6DCH         equ	909	;# 
  6288     038E                     PWM6CON         equ	910	;# 
  6289     0390                     PWM7DC          equ	912	;# 
  6290     0390                     PWM7DCL         equ	912	;# 
  6291     0391                     PWM7DCH         equ	913	;# 
  6292     0392                     PWM7CON         equ	914	;# 
  6293     048C                     SMT1TMR         equ	1164	;# 
  6294     048C                     SMT1TMRL        equ	1164	;# 
  6295     048D                     SMT1TMRH        equ	1165	;# 
  6296     048E                     SMT1TMRU        equ	1166	;# 
  6297     048F                     SMT1CPR         equ	1167	;# 
  6298     048F                     SMT1CPRL        equ	1167	;# 
  6299     0490                     SMT1CPRH        equ	1168	;# 
  6300     0491                     SMT1CPRU        equ	1169	;# 
  6301     0492                     SMT1CPW         equ	1170	;# 
  6302     0492                     SMT1CPWL        equ	1170	;# 
  6303     0493                     SMT1CPWH        equ	1171	;# 
  6304     0494                     SMT1CPWU        equ	1172	;# 
  6305     0495                     SMT1PR          equ	1173	;# 
  6306     0495                     SMT1PRL         equ	1173	;# 
  6307     0496                     SMT1PRH         equ	1174	;# 
  6308     0497                     SMT1PRU         equ	1175	;# 
  6309     0498                     SMT1CON0        equ	1176	;# 
  6310     0499                     SMT1CON1        equ	1177	;# 
  6311     049A                     SMT1STAT        equ	1178	;# 
  6312     049B                     SMT1CLK         equ	1179	;# 
  6313     049C                     SMT1SIG         equ	1180	;# 
  6314     049D                     SMT1WIN         equ	1181	;# 
  6315     050C                     SMT2TMR         equ	1292	;# 
  6316     050C                     SMT2TMRL        equ	1292	;# 
  6317     050D                     SMT2TMRH        equ	1293	;# 
  6318     050E                     SMT2TMRU        equ	1294	;# 
  6319     050F                     SMT2CPR         equ	1295	;# 
  6320     050F                     SMT2CPRL        equ	1295	;# 
  6321     0510                     SMT2CPRH        equ	1296	;# 
  6322     0511                     SMT2CPRU        equ	1297	;# 
  6323     0512                     SMT2CPW         equ	1298	;# 
  6324     0512                     SMT2CPWL        equ	1298	;# 
  6325     0513                     SMT2CPWH        equ	1299	;# 
  6326     0514                     SMT2CPWU        equ	1300	;# 
  6327     0515                     SMT2PR          equ	1301	;# 
  6328     0515                     SMT2PRL         equ	1301	;# 
  6329     0516                     SMT2PRH         equ	1302	;# 
  6330     0517                     SMT2PRU         equ	1303	;# 
  6331     0518                     SMT2CON0        equ	1304	;# 
  6332     0519                     SMT2CON1        equ	1305	;# 
  6333     051A                     SMT2STAT        equ	1306	;# 
  6334     051B                     SMT2CLK         equ	1307	;# 
  6335     051C                     SMT2SIG         equ	1308	;# 
  6336     051D                     SMT2WIN         equ	1309	;# 
  6337     058C                     NCO1ACC         equ	1420	;# 
  6338     058C                     NCO1ACCL        equ	1420	;# 
  6339     058D                     NCO1ACCH        equ	1421	;# 
  6340     058E                     NCO1ACCU        equ	1422	;# 
  6341     058F                     NCO1INC         equ	1423	;# 
  6342     058F                     NCO1INCL        equ	1423	;# 
  6343     0590                     NCO1INCH        equ	1424	;# 
  6344     0591                     NCO1INCU        equ	1425	;# 
  6345     0592                     NCO1CON         equ	1426	;# 
  6346     0593                     NCO1CLK         equ	1427	;# 
  6347     059C                     TMR0L           equ	1436	;# 
  6348     059C                     TMR0            equ	1436	;# 
  6349     059D                     TMR0H           equ	1437	;# 
  6350     059D                     PR0             equ	1437	;# 
  6351     059E                     T0CON0          equ	1438	;# 
  6352     059F                     T0CON1          equ	1439	;# 
  6353     060C                     CWG1CLK         equ	1548	;# 
  6354     060C                     CWG1CLKCON      equ	1548	;# 
  6355     060D                     CWG1ISM         equ	1549	;# 
  6356     060D                     CWG1DAT         equ	1549	;# 
  6357     060E                     CWG1DBR         equ	1550	;# 
  6358     060F                     CWG1DBF         equ	1551	;# 
  6359     0610                     CWG1CON0        equ	1552	;# 
  6360     0611                     CWG1CON1        equ	1553	;# 
  6361     0612                     CWG1AS0         equ	1554	;# 
  6362     0613                     CWG1AS1         equ	1555	;# 
  6363     0614                     CWG1STR         equ	1556	;# 
  6364     0616                     CWG2CLK         equ	1558	;# 
  6365     0616                     CWG2CLKCON      equ	1558	;# 
  6366     0617                     CWG2ISM         equ	1559	;# 
  6367     0617                     CWG2DAT         equ	1559	;# 
  6368     0618                     CWG2DBR         equ	1560	;# 
  6369     0619                     CWG2DBF         equ	1561	;# 
  6370     061A                     CWG2CON0        equ	1562	;# 
  6371     061B                     CWG2CON1        equ	1563	;# 
  6372     061C                     CWG2AS0         equ	1564	;# 
  6373     061D                     CWG2AS1         equ	1565	;# 
  6374     061E                     CWG2STR         equ	1566	;# 
  6375     068C                     CWG3CLK         equ	1676	;# 
  6376     068C                     CWG3CLKCON      equ	1676	;# 
  6377     068D                     CWG3ISM         equ	1677	;# 
  6378     068D                     CWG3DAT         equ	1677	;# 
  6379     068E                     CWG3DBR         equ	1678	;# 
  6380     068F                     CWG3DBF         equ	1679	;# 
  6381     0690                     CWG3CON0        equ	1680	;# 
  6382     0691                     CWG3CON1        equ	1681	;# 
  6383     0692                     CWG3AS0         equ	1682	;# 
  6384     0693                     CWG3AS1         equ	1683	;# 
  6385     0694                     CWG3STR         equ	1684	;# 
  6386     070C                     PIR0            equ	1804	;# 
  6387     070D                     PIR1            equ	1805	;# 
  6388     070E                     PIR2            equ	1806	;# 
  6389     070F                     PIR3            equ	1807	;# 
  6390     0710                     PIR4            equ	1808	;# 
  6391     0711                     PIR5            equ	1809	;# 
  6392     0712                     PIR6            equ	1810	;# 
  6393     0713                     PIR7            equ	1811	;# 
  6394     0714                     PIR8            equ	1812	;# 
  6395     0716                     PIE0            equ	1814	;# 
  6396     0717                     PIE1            equ	1815	;# 
  6397     0718                     PIE2            equ	1816	;# 
  6398     0719                     PIE3            equ	1817	;# 
  6399     071A                     PIE4            equ	1818	;# 
  6400     071B                     PIE5            equ	1819	;# 
  6401     071C                     PIE6            equ	1820	;# 
  6402     071D                     PIE7            equ	1821	;# 
  6403     071E                     PIE8            equ	1822	;# 
  6404     0796                     PMD0            equ	1942	;# 
  6405     0797                     PMD1            equ	1943	;# 
  6406     0798                     PMD2            equ	1944	;# 
  6407     0799                     PMD3            equ	1945	;# 
  6408     079A                     PMD4            equ	1946	;# 
  6409     079B                     PMD5            equ	1947	;# 
  6410     079C                     PMD6            equ	1948	;# 
  6411     079D                     PMD7            equ	1949	;# 
  6412     080C                     WDTCON0         equ	2060	;# 
  6413     080D                     WDTCON1         equ	2061	;# 
  6414     080E                     WDTPSL          equ	2062	;# 
  6415     080F                     WDTPSH          equ	2063	;# 
  6416     0810                     WDTTMR          equ	2064	;# 
  6417     0811                     BORCON          equ	2065	;# 
  6418     0813                     PCON0           equ	2067	;# 
  6419     0814                     PCON1           equ	2068	;# 
  6420     081A                     NVMADR          equ	2074	;# 
  6421     081A                     NVMADRL         equ	2074	;# 
  6422     081B                     NVMADRH         equ	2075	;# 
  6423     081C                     NVMDAT          equ	2076	;# 
  6424     081C                     NVMDATL         equ	2076	;# 
  6425     081D                     NVMDATH         equ	2077	;# 
  6426     081E                     NVMCON1         equ	2078	;# 
  6427     081F                     NVMCON2         equ	2079	;# 
  6428     088C                     CPUDOZE         equ	2188	;# 
  6429     088D                     OSCCON1         equ	2189	;# 
  6430     088E                     OSCCON2         equ	2190	;# 
  6431     088F                     OSCCON3         equ	2191	;# 
  6432     0890                     OSCSTAT         equ	2192	;# 
  6433     0891                     OSCEN           equ	2193	;# 
  6434     0892                     OSCTUNE         equ	2194	;# 
  6435     0893                     OSCFRQ          equ	2195	;# 
  6436     0895                     CLKRCON         equ	2197	;# 
  6437     0896                     CLKRCLK         equ	2198	;# 
  6438     0897                     MD1CON0         equ	2199	;# 
  6439     0898                     MD1CON1         equ	2200	;# 
  6440     0899                     MD1SRC          equ	2201	;# 
  6441     089A                     MD1CARL         equ	2202	;# 
  6442     089B                     MD1CARH         equ	2203	;# 
  6443     090C                     FVRCON          equ	2316	;# 
  6444     090E                     DAC1CON0        equ	2318	;# 
  6445     090F                     DAC1CON1        equ	2319	;# 
  6446     091F                     ZCDCON          equ	2335	;# 
  6447     098F                     CMOUT           equ	2447	;# 
  6448     098F                     CMSTAT          equ	2447	;# 
  6449     0990                     CM1CON0         equ	2448	;# 
  6450     0991                     CM1CON1         equ	2449	;# 
  6451     0992                     CM1NCH          equ	2450	;# 
  6452     0993                     CM1PCH          equ	2451	;# 
  6453     0994                     CM2CON0         equ	2452	;# 
  6454     0995                     CM2CON1         equ	2453	;# 
  6455     0996                     CM2NCH          equ	2454	;# 
  6456     0997                     CM2PCH          equ	2455	;# 
  6457     0A19                     RC2REG          equ	2585	;# 
  6458     0A19                     RCREG2          equ	2585	;# 
  6459     0A1A                     TX2REG          equ	2586	;# 
  6460     0A1A                     TXREG2          equ	2586	;# 
  6461     0A1B                     SP2BRG          equ	2587	;# 
  6462     0A1B                     SP2BRGL         equ	2587	;# 
  6463     0A1B                     SPBRG2          equ	2587	;# 
  6464     0A1C                     SP2BRGH         equ	2588	;# 
  6465     0A1C                     SPBRGH2         equ	2588	;# 
  6466     0A1D                     RC2STA          equ	2589	;# 
  6467     0A1D                     RCSTA2          equ	2589	;# 
  6468     0A1E                     TX2STA          equ	2590	;# 
  6469     0A1E                     TXSTA2          equ	2590	;# 
  6470     0A1F                     BAUD2CON        equ	2591	;# 
  6471     0A1F                     BAUDCON2        equ	2591	;# 
  6472     0A1F                     BAUDCTL2        equ	2591	;# 
  6473     1E0F                     CLCDATA         equ	7695	;# 
  6474     1E10                     CLC1CON         equ	7696	;# 
  6475     1E11                     CLC1POL         equ	7697	;# 
  6476     1E12                     CLC1SEL0        equ	7698	;# 
  6477     1E13                     CLC1SEL1        equ	7699	;# 
  6478     1E14                     CLC1SEL2        equ	7700	;# 
  6479     1E15                     CLC1SEL3        equ	7701	;# 
  6480     1E16                     CLC1GLS0        equ	7702	;# 
  6481     1E17                     CLC1GLS1        equ	7703	;# 
  6482     1E18                     CLC1GLS2        equ	7704	;# 
  6483     1E19                     CLC1GLS3        equ	7705	;# 
  6484     1E1A                     CLC2CON         equ	7706	;# 
  6485     1E1B                     CLC2POL         equ	7707	;# 
  6486     1E1C                     CLC2SEL0        equ	7708	;# 
  6487     1E1D                     CLC2SEL1        equ	7709	;# 
  6488     1E1E                     CLC2SEL2        equ	7710	;# 
  6489     1E1F                     CLC2SEL3        equ	7711	;# 
  6490     1E20                     CLC2GLS0        equ	7712	;# 
  6491     1E21                     CLC2GLS1        equ	7713	;# 
  6492     1E22                     CLC2GLS2        equ	7714	;# 
  6493     1E23                     CLC2GLS3        equ	7715	;# 
  6494     1E24                     CLC3CON         equ	7716	;# 
  6495     1E25                     CLC3POL         equ	7717	;# 
  6496     1E26                     CLC3SEL0        equ	7718	;# 
  6497     1E27                     CLC3SEL1        equ	7719	;# 
  6498     1E28                     CLC3SEL2        equ	7720	;# 
  6499     1E29                     CLC3SEL3        equ	7721	;# 
  6500     1E2A                     CLC3GLS0        equ	7722	;# 
  6501     1E2B                     CLC3GLS1        equ	7723	;# 
  6502     1E2C                     CLC3GLS2        equ	7724	;# 
  6503     1E2D                     CLC3GLS3        equ	7725	;# 
  6504     1E2E                     CLC4CON         equ	7726	;# 
  6505     1E2F                     CLC4POL         equ	7727	;# 
  6506     1E30                     CLC4SEL0        equ	7728	;# 
  6507     1E31                     CLC4SEL1        equ	7729	;# 
  6508     1E32                     CLC4SEL2        equ	7730	;# 
  6509     1E33                     CLC4SEL3        equ	7731	;# 
  6510     1E34                     CLC4GLS0        equ	7732	;# 
  6511     1E35                     CLC4GLS1        equ	7733	;# 
  6512     1E36                     CLC4GLS2        equ	7734	;# 
  6513     1E37                     CLC4GLS3        equ	7735	;# 
  6514     1E8F                     PPSLOCK         equ	7823	;# 
  6515     1E90                     INTPPS          equ	7824	;# 
  6516     1E91                     T0CKIPPS        equ	7825	;# 
  6517     1E92                     T1CKIPPS        equ	7826	;# 
  6518     1E93                     T1GPPS          equ	7827	;# 
  6519     1E94                     T3CKIPPS        equ	7828	;# 
  6520     1E95                     T3GPPS          equ	7829	;# 
  6521     1E96                     T5CKIPPS        equ	7830	;# 
  6522     1E97                     T5GPPS          equ	7831	;# 
  6523     1E9C                     T2INPPS         equ	7836	;# 
  6524     1E9D                     T4INPPS         equ	7837	;# 
  6525     1E9E                     T6INPPS         equ	7838	;# 
  6526     1EA1                     CCP1PPS         equ	7841	;# 
  6527     1EA2                     CCP2PPS         equ	7842	;# 
  6528     1EA3                     CCP3PPS         equ	7843	;# 
  6529     1EA4                     CCP4PPS         equ	7844	;# 
  6530     1EA5                     CCP5PPS         equ	7845	;# 
  6531     1EA9                     SMT1WINPPS      equ	7849	;# 
  6532     1EAA                     SMT1SIGPPS      equ	7850	;# 
  6533     1EAB                     SMT2WINPPS      equ	7851	;# 
  6534     1EAC                     SMT2SIGPPS      equ	7852	;# 
  6535     1EB1                     CWG1PPS         equ	7857	;# 
  6536     1EB2                     CWG2PPS         equ	7858	;# 
  6537     1EB3                     CWG3PPS         equ	7859	;# 
  6538     1EB8                     MDCARLPPS       equ	7864	;# 
  6539     1EB9                     MDCARHPPS       equ	7865	;# 
  6540     1EBA                     MDSRCPPS        equ	7866	;# 
  6541     1EBB                     CLCIN0PPS       equ	7867	;# 
  6542     1EBC                     CLCIN1PPS       equ	7868	;# 
  6543     1EBD                     CLCIN2PPS       equ	7869	;# 
  6544     1EBE                     CLCIN3PPS       equ	7870	;# 
  6545     1EC3                     ADACTPPS        equ	7875	;# 
  6546     1EC5                     SSP1CLKPPS      equ	7877	;# 
  6547     1EC6                     SSP1DATPPS      equ	7878	;# 
  6548     1EC7                     SSP1SSPPS       equ	7879	;# 
  6549     1EC8                     SSP2CLKPPS      equ	7880	;# 
  6550     1EC9                     SSP2DATPPS      equ	7881	;# 
  6551     1ECA                     SSP2SSPPS       equ	7882	;# 
  6552     1ECB                     RX1PPS          equ	7883	;# 
  6553     1ECC                     CK1PPS          equ	7884	;# 
  6554     1ECD                     RX2PPS          equ	7885	;# 
  6555     1ECE                     CK2PPS          equ	7886	;# 
  6556     1F10                     RA0PPS          equ	7952	;# 
  6557     1F11                     RA1PPS          equ	7953	;# 
  6558     1F12                     RA2PPS          equ	7954	;# 
  6559     1F13                     RA3PPS          equ	7955	;# 
  6560     1F14                     RA4PPS          equ	7956	;# 
  6561     1F15                     RA5PPS          equ	7957	;# 
  6562     1F16                     RA6PPS          equ	7958	;# 
  6563     1F17                     RA7PPS          equ	7959	;# 
  6564     1F18                     RB0PPS          equ	7960	;# 
  6565     1F19                     RB1PPS          equ	7961	;# 
  6566     1F1A                     RB2PPS          equ	7962	;# 
  6567     1F1B                     RB3PPS          equ	7963	;# 
  6568     1F1C                     RB4PPS          equ	7964	;# 
  6569     1F1D                     RB5PPS          equ	7965	;# 
  6570     1F1E                     RB6PPS          equ	7966	;# 
  6571     1F1F                     RB7PPS          equ	7967	;# 
  6572     1F20                     RC0PPS          equ	7968	;# 
  6573     1F21                     RC1PPS          equ	7969	;# 
  6574     1F22                     RC2PPS          equ	7970	;# 
  6575     1F23                     RC3PPS          equ	7971	;# 
  6576     1F24                     RC4PPS          equ	7972	;# 
  6577     1F25                     RC5PPS          equ	7973	;# 
  6578     1F26                     RC6PPS          equ	7974	;# 
  6579     1F27                     RC7PPS          equ	7975	;# 
  6580     1F38                     ANSELA          equ	7992	;# 
  6581     1F39                     WPUA            equ	7993	;# 
  6582     1F3A                     ODCONA          equ	7994	;# 
  6583     1F3B                     SLRCONA         equ	7995	;# 
  6584     1F3C                     INLVLA          equ	7996	;# 
  6585     1F3D                     IOCAP           equ	7997	;# 
  6586     1F3E                     IOCAN           equ	7998	;# 
  6587     1F3F                     IOCAF           equ	7999	;# 
  6588     1F43                     ANSELB          equ	8003	;# 
  6589     1F44                     WPUB            equ	8004	;# 
  6590     1F45                     ODCONB          equ	8005	;# 
  6591     1F46                     SLRCONB         equ	8006	;# 
  6592     1F47                     INLVLB          equ	8007	;# 
  6593     1F48                     IOCBP           equ	8008	;# 
  6594     1F49                     IOCBN           equ	8009	;# 
  6595     1F4A                     IOCBF           equ	8010	;# 
  6596     1F4E                     ANSELC          equ	8014	;# 
  6597     1F4F                     WPUC            equ	8015	;# 
  6598     1F50                     ODCONC          equ	8016	;# 
  6599     1F51                     SLRCONC         equ	8017	;# 
  6600     1F52                     INLVLC          equ	8018	;# 
  6601     1F53                     IOCCP           equ	8019	;# 
  6602     1F54                     IOCCN           equ	8020	;# 
  6603     1F55                     IOCCF           equ	8021	;# 
  6604     1F65                     WPUE            equ	8037	;# 
  6605     1F66                     ODCONE          equ	8038	;# 
  6606     1F67                     SLRCONE         equ	8039	;# 
  6607     1F68                     INLVLE          equ	8040	;# 
  6608     1F69                     IOCEP           equ	8041	;# 
  6609     1F6A                     IOCEN           equ	8042	;# 
  6610     1F6B                     IOCEF           equ	8043	;# 
  6611     1FE4                     STATUS_SHAD     equ	8164	;# 
  6612     1FE5                     WREG_SHAD       equ	8165	;# 
  6613     1FE6                     BSR_SHAD        equ	8166	;# 
  6614     1FE7                     PCLATH_SHAD     equ	8167	;# 
  6615     1FE8                     FSR0_SHAD       equ	8168	;# 
  6616     1FE8                     FSR0L_SHAD      equ	8168	;# 
  6617     1FE9                     FSR0H_SHAD      equ	8169	;# 
  6618     1FEA                     FSR1L_SHAD      equ	8170	;# 
  6619     1FEB                     FSR1H_SHAD      equ	8171	;# 
  6620     1FED                     STKPTR          equ	8173	;# 
  6621     1FEE                     TOSL            equ	8174	;# 
  6622     1FEF                     TOSH            equ	8175	;# 
  6623     0000                     INDF0           equ	0	;# 
  6624     0001                     INDF1           equ	1	;# 
  6625     0002                     PCL             equ	2	;# 
  6626     0003                     STATUS          equ	3	;# 
  6627     0004                     FSR0L           equ	4	;# 
  6628     0005                     FSR0H           equ	5	;# 
  6629     0006                     FSR1L           equ	6	;# 
  6630     0007                     FSR1H           equ	7	;# 
  6631     0008                     BSR             equ	8	;# 
  6632     0009                     WREG            equ	9	;# 
  6633     000A                     PCLATH          equ	10	;# 
  6634     000B                     INTCON          equ	11	;# 
  6635     000C                     PORTA           equ	12	;# 
  6636     000D                     PORTB           equ	13	;# 
  6637     000E                     PORTC           equ	14	;# 
  6638     0010                     PORTE           equ	16	;# 
  6639     0012                     TRISA           equ	18	;# 
  6640     0013                     TRISB           equ	19	;# 
  6641     0014                     TRISC           equ	20	;# 
  6642     0016                     TRISE           equ	22	;# 
  6643     0018                     LATA            equ	24	;# 
  6644     0019                     LATB            equ	25	;# 
  6645     001A                     LATC            equ	26	;# 
  6646     008C                     ADLTH           equ	140	;# 
  6647     008C                     ADLTHL          equ	140	;# 
  6648     008D                     ADLTHH          equ	141	;# 
  6649     008E                     ADUTH           equ	142	;# 
  6650     008E                     ADUTHL          equ	142	;# 
  6651     008F                     ADUTHH          equ	143	;# 
  6652     0090                     ADERR           equ	144	;# 
  6653     0090                     ADERRL          equ	144	;# 
  6654     0091                     ADERRH          equ	145	;# 
  6655     0092                     ADSTPT          equ	146	;# 
  6656     0092                     ADSTPTL         equ	146	;# 
  6657     0093                     ADSTPTH         equ	147	;# 
  6658     0094                     ADFLTR          equ	148	;# 
  6659     0094                     ADFLTRL         equ	148	;# 
  6660     0095                     ADFLTRH         equ	149	;# 
  6661     0096                     ADACC           equ	150	;# 
  6662     0096                     ADACCL          equ	150	;# 
  6663     0097                     ADACCH          equ	151	;# 
  6664     0098                     ADACCU          equ	152	;# 
  6665     0099                     ADCNT           equ	153	;# 
  6666     009A                     ADRPT           equ	154	;# 
  6667     009B                     ADPREV          equ	155	;# 
  6668     009B                     ADPREVL         equ	155	;# 
  6669     009C                     ADPREVH         equ	156	;# 
  6670     009D                     ADRES           equ	157	;# 
  6671     009D                     ADRESL          equ	157	;# 
  6672     009E                     ADRESH          equ	158	;# 
  6673     009F                     ADPCH           equ	159	;# 
  6674     010C                     ADACQ           equ	268	;# 
  6675     010C                     ADACQL          equ	268	;# 
  6676     010D                     ADACQH          equ	269	;# 
  6677     010E                     ADCAP           equ	270	;# 
  6678     010F                     ADPRE           equ	271	;# 
  6679     010F                     ADPREL          equ	271	;# 
  6680     0110                     ADPREH          equ	272	;# 
  6681     0111                     ADCON0          equ	273	;# 
  6682     0112                     ADCON1          equ	274	;# 
  6683     0113                     ADCON2          equ	275	;# 
  6684     0114                     ADCON3          equ	276	;# 
  6685     0115                     ADSTAT          equ	277	;# 
  6686     0116                     ADREF           equ	278	;# 
  6687     0117                     ADACT           equ	279	;# 
  6688     0118                     ADCLK           equ	280	;# 
  6689     0119                     RC1REG          equ	281	;# 
  6690     0119                     RCREG           equ	281	;# 
  6691     0119                     RCREG1          equ	281	;# 
  6692     011A                     TX1REG          equ	282	;# 
  6693     011A                     TXREG1          equ	282	;# 
  6694     011A                     TXREG           equ	282	;# 
  6695     011B                     SP1BRG          equ	283	;# 
  6696     011B                     SPBRG           equ	283	;# 
  6697     011B                     SP1BRGL         equ	283	;# 
  6698     011B                     SPBRG1          equ	283	;# 
  6699     011B                     SPBRGL          equ	283	;# 
  6700     011C                     SP1BRGH         equ	284	;# 
  6701     011C                     SPBRGH          equ	284	;# 
  6702     011C                     SPBRGH1         equ	284	;# 
  6703     011D                     RC1STA          equ	285	;# 
  6704     011D                     RCSTA1          equ	285	;# 
  6705     011D                     RCSTA           equ	285	;# 
  6706     011E                     TX1STA          equ	286	;# 
  6707     011E                     TXSTA1          equ	286	;# 
  6708     011E                     TXSTA           equ	286	;# 
  6709     011F                     BAUD1CON        equ	287	;# 
  6710     011F                     BAUDCON1        equ	287	;# 
  6711     011F                     BAUDCTL1        equ	287	;# 
  6712     011F                     BAUDCON         equ	287	;# 
  6713     011F                     BAUDCTL         equ	287	;# 
  6714     018C                     SSP1BUF         equ	396	;# 
  6715     018D                     SSP1ADD         equ	397	;# 
  6716     018E                     SSP1MSK         equ	398	;# 
  6717     018F                     SSP1STAT        equ	399	;# 
  6718     0190                     SSP1CON1        equ	400	;# 
  6719     0191                     SSP1CON2        equ	401	;# 
  6720     0192                     SSP1CON3        equ	402	;# 
  6721     0196                     SSP2BUF         equ	406	;# 
  6722     0197                     SSP2ADD         equ	407	;# 
  6723     0198                     SSP2MSK         equ	408	;# 
  6724     0199                     SSP2STAT        equ	409	;# 
  6725     019A                     SSP2CON1        equ	410	;# 
  6726     019B                     SSP2CON2        equ	411	;# 
  6727     019C                     SSP2CON3        equ	412	;# 
  6728     020C                     TMR1            equ	524	;# 
  6729     020C                     TMR1L           equ	524	;# 
  6730     020D                     TMR1H           equ	525	;# 
  6731     020E                     T1CON           equ	526	;# 
  6732     020E                     TMR1CON         equ	526	;# 
  6733     020F                     T1GCON          equ	527	;# 
  6734     020F                     TMR1GCON        equ	527	;# 
  6735     0210                     T1GATE          equ	528	;# 
  6736     0210                     TMR1GATE        equ	528	;# 
  6737     0211                     T1CLK           equ	529	;# 
  6738     0211                     TMR1CLK         equ	529	;# 
  6739     0211                     PR1             equ	529	;# 
  6740     0212                     TMR3            equ	530	;# 
  6741     0212                     TMR3L           equ	530	;# 
  6742     0213                     TMR3H           equ	531	;# 
  6743     0214                     T3CON           equ	532	;# 
  6744     0214                     TMR3CON         equ	532	;# 
  6745     0215                     T3GCON          equ	533	;# 
  6746     0215                     TMR3GCON        equ	533	;# 
  6747     0216                     T3GATE          equ	534	;# 
  6748     0216                     TMR3GATE        equ	534	;# 
  6749     0217                     T3CLK           equ	535	;# 
  6750     0217                     TMR3CLK         equ	535	;# 
  6751     0217                     PR3             equ	535	;# 
  6752     0218                     TMR5            equ	536	;# 
  6753     0218                     TMR5L           equ	536	;# 
  6754     0219                     TMR5H           equ	537	;# 
  6755     021A                     T5CON           equ	538	;# 
  6756     021A                     TMR5CON         equ	538	;# 
  6757     021B                     T5GCON          equ	539	;# 
  6758     021B                     TMR5GCON        equ	539	;# 
  6759     021C                     T5GATE          equ	540	;# 
  6760     021C                     TMR5GATE        equ	540	;# 
  6761     021D                     T5CLK           equ	541	;# 
  6762     021D                     TMR5CLK         equ	541	;# 
  6763     021D                     PR5             equ	541	;# 
  6764     021E                     CCPTMRS0        equ	542	;# 
  6765     021F                     CCPTMRS1        equ	543	;# 
  6766     028C                     T2TMR           equ	652	;# 
  6767     028C                     TMR2            equ	652	;# 
  6768     028D                     T2PR            equ	653	;# 
  6769     028D                     PR2             equ	653	;# 
  6770     028E                     T2CON           equ	654	;# 
  6771     028F                     T2HLT           equ	655	;# 
  6772     0290                     T2CLKCON        equ	656	;# 
  6773     0291                     T2RST           equ	657	;# 
  6774     0292                     T4TMR           equ	658	;# 
  6775     0292                     TMR4            equ	658	;# 
  6776     0293                     T4PR            equ	659	;# 
  6777     0293                     PR4             equ	659	;# 
  6778     0294                     T4CON           equ	660	;# 
  6779     0295                     T4HLT           equ	661	;# 
  6780     0296                     T4CLKCON        equ	662	;# 
  6781     0297                     T4RST           equ	663	;# 
  6782     0298                     T6TMR           equ	664	;# 
  6783     0298                     TMR6            equ	664	;# 
  6784     0299                     T6PR            equ	665	;# 
  6785     0299                     PR6             equ	665	;# 
  6786     029A                     T6CON           equ	666	;# 
  6787     029B                     T6HLT           equ	667	;# 
  6788     029C                     T6CLKCON        equ	668	;# 
  6789     029D                     T6RST           equ	669	;# 
  6790     029F                     ADCPCON0        equ	671	;# 
  6791     030C                     CCPR1           equ	780	;# 
  6792     030C                     CCPR1L          equ	780	;# 
  6793     030D                     CCPR1H          equ	781	;# 
  6794     030E                     CCP1CON         equ	782	;# 
  6795     030F                     CCP1CAP         equ	783	;# 
  6796     0310                     CCPR2           equ	784	;# 
  6797     0310                     CCPR2L          equ	784	;# 
  6798     0311                     CCPR2H          equ	785	;# 
  6799     0312                     CCP2CON         equ	786	;# 
  6800     0313                     CCP2CAP         equ	787	;# 
  6801     0314                     CCPR3           equ	788	;# 
  6802     0314                     CCPR3L          equ	788	;# 
  6803     0315                     CCPR3H          equ	789	;# 
  6804     0316                     CCP3CON         equ	790	;# 
  6805     0317                     CCP3CAP         equ	791	;# 
  6806     0318                     CCPR4           equ	792	;# 
  6807     0318                     CCPR4L          equ	792	;# 
  6808     0319                     CCPR4H          equ	793	;# 
  6809     031A                     CCP4CON         equ	794	;# 
  6810     031B                     CCP4CAP         equ	795	;# 
  6811     031C                     CCPR5           equ	796	;# 
  6812     031C                     CCPR5L          equ	796	;# 
  6813     031D                     CCPR5H          equ	797	;# 
  6814     031E                     CCP5CON         equ	798	;# 
  6815     031F                     CCP5CAP         equ	799	;# 
  6816     038C                     PWM6DC          equ	908	;# 
  6817     038C                     PWM6DCL         equ	908	;# 
  6818     038D                     PWM6DCH         equ	909	;# 
  6819     038E                     PWM6CON         equ	910	;# 
  6820     0390                     PWM7DC          equ	912	;# 
  6821     0390                     PWM7DCL         equ	912	;# 
  6822     0391                     PWM7DCH         equ	913	;# 
  6823     0392                     PWM7CON         equ	914	;# 
  6824     048C                     SMT1TMR         equ	1164	;# 
  6825     048C                     SMT1TMRL        equ	1164	;# 
  6826     048D                     SMT1TMRH        equ	1165	;# 
  6827     048E                     SMT1TMRU        equ	1166	;# 
  6828     048F                     SMT1CPR         equ	1167	;# 
  6829     048F                     SMT1CPRL        equ	1167	;# 
  6830     0490                     SMT1CPRH        equ	1168	;# 
  6831     0491                     SMT1CPRU        equ	1169	;# 
  6832     0492                     SMT1CPW         equ	1170	;# 
  6833     0492                     SMT1CPWL        equ	1170	;# 
  6834     0493                     SMT1CPWH        equ	1171	;# 
  6835     0494                     SMT1CPWU        equ	1172	;# 
  6836     0495                     SMT1PR          equ	1173	;# 
  6837     0495                     SMT1PRL         equ	1173	;# 
  6838     0496                     SMT1PRH         equ	1174	;# 
  6839     0497                     SMT1PRU         equ	1175	;# 
  6840     0498                     SMT1CON0        equ	1176	;# 
  6841     0499                     SMT1CON1        equ	1177	;# 
  6842     049A                     SMT1STAT        equ	1178	;# 
  6843     049B                     SMT1CLK         equ	1179	;# 
  6844     049C                     SMT1SIG         equ	1180	;# 
  6845     049D                     SMT1WIN         equ	1181	;# 
  6846     050C                     SMT2TMR         equ	1292	;# 
  6847     050C                     SMT2TMRL        equ	1292	;# 
  6848     050D                     SMT2TMRH        equ	1293	;# 
  6849     050E                     SMT2TMRU        equ	1294	;# 
  6850     050F                     SMT2CPR         equ	1295	;# 
  6851     050F                     SMT2CPRL        equ	1295	;# 
  6852     0510                     SMT2CPRH        equ	1296	;# 
  6853     0511                     SMT2CPRU        equ	1297	;# 
  6854     0512                     SMT2CPW         equ	1298	;# 
  6855     0512                     SMT2CPWL        equ	1298	;# 
  6856     0513                     SMT2CPWH        equ	1299	;# 
  6857     0514                     SMT2CPWU        equ	1300	;# 
  6858     0515                     SMT2PR          equ	1301	;# 
  6859     0515                     SMT2PRL         equ	1301	;# 
  6860     0516                     SMT2PRH         equ	1302	;# 
  6861     0517                     SMT2PRU         equ	1303	;# 
  6862     0518                     SMT2CON0        equ	1304	;# 
  6863     0519                     SMT2CON1        equ	1305	;# 
  6864     051A                     SMT2STAT        equ	1306	;# 
  6865     051B                     SMT2CLK         equ	1307	;# 
  6866     051C                     SMT2SIG         equ	1308	;# 
  6867     051D                     SMT2WIN         equ	1309	;# 
  6868     058C                     NCO1ACC         equ	1420	;# 
  6869     058C                     NCO1ACCL        equ	1420	;# 
  6870     058D                     NCO1ACCH        equ	1421	;# 
  6871     058E                     NCO1ACCU        equ	1422	;# 
  6872     058F                     NCO1INC         equ	1423	;# 
  6873     058F                     NCO1INCL        equ	1423	;# 
  6874     0590                     NCO1INCH        equ	1424	;# 
  6875     0591                     NCO1INCU        equ	1425	;# 
  6876     0592                     NCO1CON         equ	1426	;# 
  6877     0593                     NCO1CLK         equ	1427	;# 
  6878     059C                     TMR0L           equ	1436	;# 
  6879     059C                     TMR0            equ	1436	;# 
  6880     059D                     TMR0H           equ	1437	;# 
  6881     059D                     PR0             equ	1437	;# 
  6882     059E                     T0CON0          equ	1438	;# 
  6883     059F                     T0CON1          equ	1439	;# 
  6884     060C                     CWG1CLK         equ	1548	;# 
  6885     060C                     CWG1CLKCON      equ	1548	;# 
  6886     060D                     CWG1ISM         equ	1549	;# 
  6887     060D                     CWG1DAT         equ	1549	;# 
  6888     060E                     CWG1DBR         equ	1550	;# 
  6889     060F                     CWG1DBF         equ	1551	;# 
  6890     0610                     CWG1CON0        equ	1552	;# 
  6891     0611                     CWG1CON1        equ	1553	;# 
  6892     0612                     CWG1AS0         equ	1554	;# 
  6893     0613                     CWG1AS1         equ	1555	;# 
  6894     0614                     CWG1STR         equ	1556	;# 
  6895     0616                     CWG2CLK         equ	1558	;# 
  6896     0616                     CWG2CLKCON      equ	1558	;# 
  6897     0617                     CWG2ISM         equ	1559	;# 
  6898     0617                     CWG2DAT         equ	1559	;# 
  6899     0618                     CWG2DBR         equ	1560	;# 
  6900     0619                     CWG2DBF         equ	1561	;# 
  6901     061A                     CWG2CON0        equ	1562	;# 
  6902     061B                     CWG2CON1        equ	1563	;# 
  6903     061C                     CWG2AS0         equ	1564	;# 
  6904     061D                     CWG2AS1         equ	1565	;# 
  6905     061E                     CWG2STR         equ	1566	;# 
  6906     068C                     CWG3CLK         equ	1676	;# 
  6907     068C                     CWG3CLKCON      equ	1676	;# 
  6908     068D                     CWG3ISM         equ	1677	;# 
  6909     068D                     CWG3DAT         equ	1677	;# 
  6910     068E                     CWG3DBR         equ	1678	;# 
  6911     068F                     CWG3DBF         equ	1679	;# 
  6912     0690                     CWG3CON0        equ	1680	;# 
  6913     0691                     CWG3CON1        equ	1681	;# 
  6914     0692                     CWG3AS0         equ	1682	;# 
  6915     0693                     CWG3AS1         equ	1683	;# 
  6916     0694                     CWG3STR         equ	1684	;# 
  6917     070C                     PIR0            equ	1804	;# 
  6918     070D                     PIR1            equ	1805	;# 
  6919     070E                     PIR2            equ	1806	;# 
  6920     070F                     PIR3            equ	1807	;# 
  6921     0710                     PIR4            equ	1808	;# 
  6922     0711                     PIR5            equ	1809	;# 
  6923     0712                     PIR6            equ	1810	;# 
  6924     0713                     PIR7            equ	1811	;# 
  6925     0714                     PIR8            equ	1812	;# 
  6926     0716                     PIE0            equ	1814	;# 
  6927     0717                     PIE1            equ	1815	;# 
  6928     0718                     PIE2            equ	1816	;# 
  6929     0719                     PIE3            equ	1817	;# 
  6930     071A                     PIE4            equ	1818	;# 
  6931     071B                     PIE5            equ	1819	;# 
  6932     071C                     PIE6            equ	1820	;# 
  6933     071D                     PIE7            equ	1821	;# 
  6934     071E                     PIE8            equ	1822	;# 
  6935     0796                     PMD0            equ	1942	;# 
  6936     0797                     PMD1            equ	1943	;# 
  6937     0798                     PMD2            equ	1944	;# 
  6938     0799                     PMD3            equ	1945	;# 
  6939     079A                     PMD4            equ	1946	;# 
  6940     079B                     PMD5            equ	1947	;# 
  6941     079C                     PMD6            equ	1948	;# 
  6942     079D                     PMD7            equ	1949	;# 
  6943     080C                     WDTCON0         equ	2060	;# 
  6944     080D                     WDTCON1         equ	2061	;# 
  6945     080E                     WDTPSL          equ	2062	;# 
  6946     080F                     WDTPSH          equ	2063	;# 
  6947     0810                     WDTTMR          equ	2064	;# 
  6948     0811                     BORCON          equ	2065	;# 
  6949     0813                     PCON0           equ	2067	;# 
  6950     0814                     PCON1           equ	2068	;# 
  6951     081A                     NVMADR          equ	2074	;# 
  6952     081A                     NVMADRL         equ	2074	;# 
  6953     081B                     NVMADRH         equ	2075	;# 
  6954     081C                     NVMDAT          equ	2076	;# 
  6955     081C                     NVMDATL         equ	2076	;# 
  6956     081D                     NVMDATH         equ	2077	;# 
  6957     081E                     NVMCON1         equ	2078	;# 
  6958     081F                     NVMCON2         equ	2079	;# 
  6959     088C                     CPUDOZE         equ	2188	;# 
  6960     088D                     OSCCON1         equ	2189	;# 
  6961     088E                     OSCCON2         equ	2190	;# 
  6962     088F                     OSCCON3         equ	2191	;# 
  6963     0890                     OSCSTAT         equ	2192	;# 
  6964     0891                     OSCEN           equ	2193	;# 
  6965     0892                     OSCTUNE         equ	2194	;# 
  6966     0893                     OSCFRQ          equ	2195	;# 
  6967     0895                     CLKRCON         equ	2197	;# 
  6968     0896                     CLKRCLK         equ	2198	;# 
  6969     0897                     MD1CON0         equ	2199	;# 
  6970     0898                     MD1CON1         equ	2200	;# 
  6971     0899                     MD1SRC          equ	2201	;# 
  6972     089A                     MD1CARL         equ	2202	;# 
  6973     089B                     MD1CARH         equ	2203	;# 
  6974     090C                     FVRCON          equ	2316	;# 
  6975     090E                     DAC1CON0        equ	2318	;# 
  6976     090F                     DAC1CON1        equ	2319	;# 
  6977     091F                     ZCDCON          equ	2335	;# 
  6978     098F                     CMOUT           equ	2447	;# 
  6979     098F                     CMSTAT          equ	2447	;# 
  6980     0990                     CM1CON0         equ	2448	;# 
  6981     0991                     CM1CON1         equ	2449	;# 
  6982     0992                     CM1NCH          equ	2450	;# 
  6983     0993                     CM1PCH          equ	2451	;# 
  6984     0994                     CM2CON0         equ	2452	;# 
  6985     0995                     CM2CON1         equ	2453	;# 
  6986     0996                     CM2NCH          equ	2454	;# 
  6987     0997                     CM2PCH          equ	2455	;# 
  6988     0A19                     RC2REG          equ	2585	;# 
  6989     0A19                     RCREG2          equ	2585	;# 
  6990     0A1A                     TX2REG          equ	2586	;# 
  6991     0A1A                     TXREG2          equ	2586	;# 
  6992     0A1B                     SP2BRG          equ	2587	;# 
  6993     0A1B                     SP2BRGL         equ	2587	;# 
  6994     0A1B                     SPBRG2          equ	2587	;# 
  6995     0A1C                     SP2BRGH         equ	2588	;# 
  6996     0A1C                     SPBRGH2         equ	2588	;# 
  6997     0A1D                     RC2STA          equ	2589	;# 
  6998     0A1D                     RCSTA2          equ	2589	;# 
  6999     0A1E                     TX2STA          equ	2590	;# 
  7000     0A1E                     TXSTA2          equ	2590	;# 
  7001     0A1F                     BAUD2CON        equ	2591	;# 
  7002     0A1F                     BAUDCON2        equ	2591	;# 
  7003     0A1F                     BAUDCTL2        equ	2591	;# 
  7004     1E0F                     CLCDATA         equ	7695	;# 
  7005     1E10                     CLC1CON         equ	7696	;# 
  7006     1E11                     CLC1POL         equ	7697	;# 
  7007     1E12                     CLC1SEL0        equ	7698	;# 
  7008     1E13                     CLC1SEL1        equ	7699	;# 
  7009     1E14                     CLC1SEL2        equ	7700	;# 
  7010     1E15                     CLC1SEL3        equ	7701	;# 
  7011     1E16                     CLC1GLS0        equ	7702	;# 
  7012     1E17                     CLC1GLS1        equ	7703	;# 
  7013     1E18                     CLC1GLS2        equ	7704	;# 
  7014     1E19                     CLC1GLS3        equ	7705	;# 
  7015     1E1A                     CLC2CON         equ	7706	;# 
  7016     1E1B                     CLC2POL         equ	7707	;# 
  7017     1E1C                     CLC2SEL0        equ	7708	;# 
  7018     1E1D                     CLC2SEL1        equ	7709	;# 
  7019     1E1E                     CLC2SEL2        equ	7710	;# 
  7020     1E1F                     CLC2SEL3        equ	7711	;# 
  7021     1E20                     CLC2GLS0        equ	7712	;# 
  7022     1E21                     CLC2GLS1        equ	7713	;# 
  7023     1E22                     CLC2GLS2        equ	7714	;# 
  7024     1E23                     CLC2GLS3        equ	7715	;# 
  7025     1E24                     CLC3CON         equ	7716	;# 
  7026     1E25                     CLC3POL         equ	7717	;# 
  7027     1E26                     CLC3SEL0        equ	7718	;# 
  7028     1E27                     CLC3SEL1        equ	7719	;# 
  7029     1E28                     CLC3SEL2        equ	7720	;# 
  7030     1E29                     CLC3SEL3        equ	7721	;# 
  7031     1E2A                     CLC3GLS0        equ	7722	;# 
  7032     1E2B                     CLC3GLS1        equ	7723	;# 
  7033     1E2C                     CLC3GLS2        equ	7724	;# 
  7034     1E2D                     CLC3GLS3        equ	7725	;# 
  7035     1E2E                     CLC4CON         equ	7726	;# 
  7036     1E2F                     CLC4POL         equ	7727	;# 
  7037     1E30                     CLC4SEL0        equ	7728	;# 
  7038     1E31                     CLC4SEL1        equ	7729	;# 
  7039     1E32                     CLC4SEL2        equ	7730	;# 
  7040     1E33                     CLC4SEL3        equ	7731	;# 
  7041     1E34                     CLC4GLS0        equ	7732	;# 
  7042     1E35                     CLC4GLS1        equ	7733	;# 
  7043     1E36                     CLC4GLS2        equ	7734	;# 
  7044     1E37                     CLC4GLS3        equ	7735	;# 
  7045     1E8F                     PPSLOCK         equ	7823	;# 
  7046     1E90                     INTPPS          equ	7824	;# 
  7047     1E91                     T0CKIPPS        equ	7825	;# 
  7048     1E92                     T1CKIPPS        equ	7826	;# 
  7049     1E93                     T1GPPS          equ	7827	;# 
  7050     1E94                     T3CKIPPS        equ	7828	;# 
  7051     1E95                     T3GPPS          equ	7829	;# 
  7052     1E96                     T5CKIPPS        equ	7830	;# 
  7053     1E97                     T5GPPS          equ	7831	;# 
  7054     1E9C                     T2INPPS         equ	7836	;# 
  7055     1E9D                     T4INPPS         equ	7837	;# 
  7056     1E9E                     T6INPPS         equ	7838	;# 
  7057     1EA1                     CCP1PPS         equ	7841	;# 
  7058     1EA2                     CCP2PPS         equ	7842	;# 
  7059     1EA3                     CCP3PPS         equ	7843	;# 
  7060     1EA4                     CCP4PPS         equ	7844	;# 
  7061     1EA5                     CCP5PPS         equ	7845	;# 
  7062     1EA9                     SMT1WINPPS      equ	7849	;# 
  7063     1EAA                     SMT1SIGPPS      equ	7850	;# 
  7064     1EAB                     SMT2WINPPS      equ	7851	;# 
  7065     1EAC                     SMT2SIGPPS      equ	7852	;# 
  7066     1EB1                     CWG1PPS         equ	7857	;# 
  7067     1EB2                     CWG2PPS         equ	7858	;# 
  7068     1EB3                     CWG3PPS         equ	7859	;# 
  7069     1EB8                     MDCARLPPS       equ	7864	;# 
  7070     1EB9                     MDCARHPPS       equ	7865	;# 
  7071     1EBA                     MDSRCPPS        equ	7866	;# 
  7072     1EBB                     CLCIN0PPS       equ	7867	;# 
  7073     1EBC                     CLCIN1PPS       equ	7868	;# 
  7074     1EBD                     CLCIN2PPS       equ	7869	;# 
  7075     1EBE                     CLCIN3PPS       equ	7870	;# 
  7076     1EC3                     ADACTPPS        equ	7875	;# 
  7077     1EC5                     SSP1CLKPPS      equ	7877	;# 
  7078     1EC6                     SSP1DATPPS      equ	7878	;# 
  7079     1EC7                     SSP1SSPPS       equ	7879	;# 
  7080     1EC8                     SSP2CLKPPS      equ	7880	;# 
  7081     1EC9                     SSP2DATPPS      equ	7881	;# 
  7082     1ECA                     SSP2SSPPS       equ	7882	;# 
  7083     1ECB                     RX1PPS          equ	7883	;# 
  7084     1ECC                     CK1PPS          equ	7884	;# 
  7085     1ECD                     RX2PPS          equ	7885	;# 
  7086     1ECE                     CK2PPS          equ	7886	;# 
  7087     1F10                     RA0PPS          equ	7952	;# 
  7088     1F11                     RA1PPS          equ	7953	;# 
  7089     1F12                     RA2PPS          equ	7954	;# 
  7090     1F13                     RA3PPS          equ	7955	;# 
  7091     1F14                     RA4PPS          equ	7956	;# 
  7092     1F15                     RA5PPS          equ	7957	;# 
  7093     1F16                     RA6PPS          equ	7958	;# 
  7094     1F17                     RA7PPS          equ	7959	;# 
  7095     1F18                     RB0PPS          equ	7960	;# 
  7096     1F19                     RB1PPS          equ	7961	;# 
  7097     1F1A                     RB2PPS          equ	7962	;# 
  7098     1F1B                     RB3PPS          equ	7963	;# 
  7099     1F1C                     RB4PPS          equ	7964	;# 
  7100     1F1D                     RB5PPS          equ	7965	;# 
  7101     1F1E                     RB6PPS          equ	7966	;# 
  7102     1F1F                     RB7PPS          equ	7967	;# 
  7103     1F20                     RC0PPS          equ	7968	;# 
  7104     1F21                     RC1PPS          equ	7969	;# 
  7105     1F22                     RC2PPS          equ	7970	;# 
  7106     1F23                     RC3PPS          equ	7971	;# 
  7107     1F24                     RC4PPS          equ	7972	;# 
  7108     1F25                     RC5PPS          equ	7973	;# 
  7109     1F26                     RC6PPS          equ	7974	;# 
  7110     1F27                     RC7PPS          equ	7975	;# 
  7111     1F38                     ANSELA          equ	7992	;# 
  7112     1F39                     WPUA            equ	7993	;# 
  7113     1F3A                     ODCONA          equ	7994	;# 
  7114     1F3B                     SLRCONA         equ	7995	;# 
  7115     1F3C                     INLVLA          equ	7996	;# 
  7116     1F3D                     IOCAP           equ	7997	;# 
  7117     1F3E                     IOCAN           equ	7998	;# 
  7118     1F3F                     IOCAF           equ	7999	;# 
  7119     1F43                     ANSELB          equ	8003	;# 
  7120     1F44                     WPUB            equ	8004	;# 
  7121     1F45                     ODCONB          equ	8005	;# 
  7122     1F46                     SLRCONB         equ	8006	;# 
  7123     1F47                     INLVLB          equ	8007	;# 
  7124     1F48                     IOCBP           equ	8008	;# 
  7125     1F49                     IOCBN           equ	8009	;# 
  7126     1F4A                     IOCBF           equ	8010	;# 
  7127     1F4E                     ANSELC          equ	8014	;# 
  7128     1F4F                     WPUC            equ	8015	;# 
  7129     1F50                     ODCONC          equ	8016	;# 
  7130     1F51                     SLRCONC         equ	8017	;# 
  7131     1F52                     INLVLC          equ	8018	;# 
  7132     1F53                     IOCCP           equ	8019	;# 
  7133     1F54                     IOCCN           equ	8020	;# 
  7134     1F55                     IOCCF           equ	8021	;# 
  7135     1F65                     WPUE            equ	8037	;# 
  7136     1F66                     ODCONE          equ	8038	;# 
  7137     1F67                     SLRCONE         equ	8039	;# 
  7138     1F68                     INLVLE          equ	8040	;# 
  7139     1F69                     IOCEP           equ	8041	;# 
  7140     1F6A                     IOCEN           equ	8042	;# 
  7141     1F6B                     IOCEF           equ	8043	;# 
  7142     1FE4                     STATUS_SHAD     equ	8164	;# 
  7143     1FE5                     WREG_SHAD       equ	8165	;# 
  7144     1FE6                     BSR_SHAD        equ	8166	;# 
  7145     1FE7                     PCLATH_SHAD     equ	8167	;# 
  7146     1FE8                     FSR0_SHAD       equ	8168	;# 
  7147     1FE8                     FSR0L_SHAD      equ	8168	;# 
  7148     1FE9                     FSR0H_SHAD      equ	8169	;# 
  7149     1FEA                     FSR1L_SHAD      equ	8170	;# 
  7150     1FEB                     FSR1H_SHAD      equ	8171	;# 
  7151     1FED                     STKPTR          equ	8173	;# 
  7152     1FEE                     TOSL            equ	8174	;# 
  7153     1FEF                     TOSH            equ	8175	;# 
  7154     0000                     INDF0           equ	0	;# 
  7155     0001                     INDF1           equ	1	;# 
  7156     0002                     PCL             equ	2	;# 
  7157     0003                     STATUS          equ	3	;# 
  7158     0004                     FSR0L           equ	4	;# 
  7159     0005                     FSR0H           equ	5	;# 
  7160     0006                     FSR1L           equ	6	;# 
  7161     0007                     FSR1H           equ	7	;# 
  7162     0008                     BSR             equ	8	;# 
  7163     0009                     WREG            equ	9	;# 
  7164     000A                     PCLATH          equ	10	;# 
  7165     000B                     INTCON          equ	11	;# 
  7166     000C                     PORTA           equ	12	;# 
  7167     000D                     PORTB           equ	13	;# 
  7168     000E                     PORTC           equ	14	;# 
  7169     0010                     PORTE           equ	16	;# 
  7170     0012                     TRISA           equ	18	;# 
  7171     0013                     TRISB           equ	19	;# 
  7172     0014                     TRISC           equ	20	;# 
  7173     0016                     TRISE           equ	22	;# 
  7174     0018                     LATA            equ	24	;# 
  7175     0019                     LATB            equ	25	;# 
  7176     001A                     LATC            equ	26	;# 
  7177     008C                     ADLTH           equ	140	;# 
  7178     008C                     ADLTHL          equ	140	;# 
  7179     008D                     ADLTHH          equ	141	;# 
  7180     008E                     ADUTH           equ	142	;# 
  7181     008E                     ADUTHL          equ	142	;# 
  7182     008F                     ADUTHH          equ	143	;# 
  7183     0090                     ADERR           equ	144	;# 
  7184     0090                     ADERRL          equ	144	;# 
  7185     0091                     ADERRH          equ	145	;# 
  7186     0092                     ADSTPT          equ	146	;# 
  7187     0092                     ADSTPTL         equ	146	;# 
  7188     0093                     ADSTPTH         equ	147	;# 
  7189     0094                     ADFLTR          equ	148	;# 
  7190     0094                     ADFLTRL         equ	148	;# 
  7191     0095                     ADFLTRH         equ	149	;# 
  7192     0096                     ADACC           equ	150	;# 
  7193     0096                     ADACCL          equ	150	;# 
  7194     0097                     ADACCH          equ	151	;# 
  7195     0098                     ADACCU          equ	152	;# 
  7196     0099                     ADCNT           equ	153	;# 
  7197     009A                     ADRPT           equ	154	;# 
  7198     009B                     ADPREV          equ	155	;# 
  7199     009B                     ADPREVL         equ	155	;# 
  7200     009C                     ADPREVH         equ	156	;# 
  7201     009D                     ADRES           equ	157	;# 
  7202     009D                     ADRESL          equ	157	;# 
  7203     009E                     ADRESH          equ	158	;# 
  7204     009F                     ADPCH           equ	159	;# 
  7205     010C                     ADACQ           equ	268	;# 
  7206     010C                     ADACQL          equ	268	;# 
  7207     010D                     ADACQH          equ	269	;# 
  7208     010E                     ADCAP           equ	270	;# 
  7209     010F                     ADPRE           equ	271	;# 
  7210     010F                     ADPREL          equ	271	;# 
  7211     0110                     ADPREH          equ	272	;# 
  7212     0111                     ADCON0          equ	273	;# 
  7213     0112                     ADCON1          equ	274	;# 
  7214     0113                     ADCON2          equ	275	;# 
  7215     0114                     ADCON3          equ	276	;# 
  7216     0115                     ADSTAT          equ	277	;# 
  7217     0116                     ADREF           equ	278	;# 
  7218     0117                     ADACT           equ	279	;# 
  7219     0118                     ADCLK           equ	280	;# 
  7220     0119                     RC1REG          equ	281	;# 
  7221     0119                     RCREG           equ	281	;# 
  7222     0119                     RCREG1          equ	281	;# 
  7223     011A                     TX1REG          equ	282	;# 
  7224     011A                     TXREG1          equ	282	;# 
  7225     011A                     TXREG           equ	282	;# 
  7226     011B                     SP1BRG          equ	283	;# 
  7227     011B                     SPBRG           equ	283	;# 
  7228     011B                     SP1BRGL         equ	283	;# 
  7229     011B                     SPBRG1          equ	283	;# 
  7230     011B                     SPBRGL          equ	283	;# 
  7231     011C                     SP1BRGH         equ	284	;# 
  7232     011C                     SPBRGH          equ	284	;# 
  7233     011C                     SPBRGH1         equ	284	;# 
  7234     011D                     RC1STA          equ	285	;# 
  7235     011D                     RCSTA1          equ	285	;# 
  7236     011D                     RCSTA           equ	285	;# 
  7237     011E                     TX1STA          equ	286	;# 
  7238     011E                     TXSTA1          equ	286	;# 
  7239     011E                     TXSTA           equ	286	;# 
  7240     011F                     BAUD1CON        equ	287	;# 
  7241     011F                     BAUDCON1        equ	287	;# 
  7242     011F                     BAUDCTL1        equ	287	;# 
  7243     011F                     BAUDCON         equ	287	;# 
  7244     011F                     BAUDCTL         equ	287	;# 
  7245     018C                     SSP1BUF         equ	396	;# 
  7246     018D                     SSP1ADD         equ	397	;# 
  7247     018E                     SSP1MSK         equ	398	;# 
  7248     018F                     SSP1STAT        equ	399	;# 
  7249     0190                     SSP1CON1        equ	400	;# 
  7250     0191                     SSP1CON2        equ	401	;# 
  7251     0192                     SSP1CON3        equ	402	;# 
  7252     0196                     SSP2BUF         equ	406	;# 
  7253     0197                     SSP2ADD         equ	407	;# 
  7254     0198                     SSP2MSK         equ	408	;# 
  7255     0199                     SSP2STAT        equ	409	;# 
  7256     019A                     SSP2CON1        equ	410	;# 
  7257     019B                     SSP2CON2        equ	411	;# 
  7258     019C                     SSP2CON3        equ	412	;# 
  7259     020C                     TMR1            equ	524	;# 
  7260     020C                     TMR1L           equ	524	;# 
  7261     020D                     TMR1H           equ	525	;# 
  7262     020E                     T1CON           equ	526	;# 
  7263     020E                     TMR1CON         equ	526	;# 
  7264     020F                     T1GCON          equ	527	;# 
  7265     020F                     TMR1GCON        equ	527	;# 
  7266     0210                     T1GATE          equ	528	;# 
  7267     0210                     TMR1GATE        equ	528	;# 
  7268     0211                     T1CLK           equ	529	;# 
  7269     0211                     TMR1CLK         equ	529	;# 
  7270     0211                     PR1             equ	529	;# 
  7271     0212                     TMR3            equ	530	;# 
  7272     0212                     TMR3L           equ	530	;# 
  7273     0213                     TMR3H           equ	531	;# 
  7274     0214                     T3CON           equ	532	;# 
  7275     0214                     TMR3CON         equ	532	;# 
  7276     0215                     T3GCON          equ	533	;# 
  7277     0215                     TMR3GCON        equ	533	;# 
  7278     0216                     T3GATE          equ	534	;# 
  7279     0216                     TMR3GATE        equ	534	;# 
  7280     0217                     T3CLK           equ	535	;# 
  7281     0217                     TMR3CLK         equ	535	;# 
  7282     0217                     PR3             equ	535	;# 
  7283     0218                     TMR5            equ	536	;# 
  7284     0218                     TMR5L           equ	536	;# 
  7285     0219                     TMR5H           equ	537	;# 
  7286     021A                     T5CON           equ	538	;# 
  7287     021A                     TMR5CON         equ	538	;# 
  7288     021B                     T5GCON          equ	539	;# 
  7289     021B                     TMR5GCON        equ	539	;# 
  7290     021C                     T5GATE          equ	540	;# 
  7291     021C                     TMR5GATE        equ	540	;# 
  7292     021D                     T5CLK           equ	541	;# 
  7293     021D                     TMR5CLK         equ	541	;# 
  7294     021D                     PR5             equ	541	;# 
  7295     021E                     CCPTMRS0        equ	542	;# 
  7296     021F                     CCPTMRS1        equ	543	;# 
  7297     028C                     T2TMR           equ	652	;# 
  7298     028C                     TMR2            equ	652	;# 
  7299     028D                     T2PR            equ	653	;# 
  7300     028D                     PR2             equ	653	;# 
  7301     028E                     T2CON           equ	654	;# 
  7302     028F                     T2HLT           equ	655	;# 
  7303     0290                     T2CLKCON        equ	656	;# 
  7304     0291                     T2RST           equ	657	;# 
  7305     0292                     T4TMR           equ	658	;# 
  7306     0292                     TMR4            equ	658	;# 
  7307     0293                     T4PR            equ	659	;# 
  7308     0293                     PR4             equ	659	;# 
  7309     0294                     T4CON           equ	660	;# 
  7310     0295                     T4HLT           equ	661	;# 
  7311     0296                     T4CLKCON        equ	662	;# 
  7312     0297                     T4RST           equ	663	;# 
  7313     0298                     T6TMR           equ	664	;# 
  7314     0298                     TMR6            equ	664	;# 
  7315     0299                     T6PR            equ	665	;# 
  7316     0299                     PR6             equ	665	;# 
  7317     029A                     T6CON           equ	666	;# 
  7318     029B                     T6HLT           equ	667	;# 
  7319     029C                     T6CLKCON        equ	668	;# 
  7320     029D                     T6RST           equ	669	;# 
  7321     029F                     ADCPCON0        equ	671	;# 
  7322     030C                     CCPR1           equ	780	;# 
  7323     030C                     CCPR1L          equ	780	;# 
  7324     030D                     CCPR1H          equ	781	;# 
  7325     030E                     CCP1CON         equ	782	;# 
  7326     030F                     CCP1CAP         equ	783	;# 
  7327     0310                     CCPR2           equ	784	;# 
  7328     0310                     CCPR2L          equ	784	;# 
  7329     0311                     CCPR2H          equ	785	;# 
  7330     0312                     CCP2CON         equ	786	;# 
  7331     0313                     CCP2CAP         equ	787	;# 
  7332     0314                     CCPR3           equ	788	;# 
  7333     0314                     CCPR3L          equ	788	;# 
  7334     0315                     CCPR3H          equ	789	;# 
  7335     0316                     CCP3CON         equ	790	;# 
  7336     0317                     CCP3CAP         equ	791	;# 
  7337     0318                     CCPR4           equ	792	;# 
  7338     0318                     CCPR4L          equ	792	;# 
  7339     0319                     CCPR4H          equ	793	;# 
  7340     031A                     CCP4CON         equ	794	;# 
  7341     031B                     CCP4CAP         equ	795	;# 
  7342     031C                     CCPR5           equ	796	;# 
  7343     031C                     CCPR5L          equ	796	;# 
  7344     031D                     CCPR5H          equ	797	;# 
  7345     031E                     CCP5CON         equ	798	;# 
  7346     031F                     CCP5CAP         equ	799	;# 
  7347     038C                     PWM6DC          equ	908	;# 
  7348     038C                     PWM6DCL         equ	908	;# 
  7349     038D                     PWM6DCH         equ	909	;# 
  7350     038E                     PWM6CON         equ	910	;# 
  7351     0390                     PWM7DC          equ	912	;# 
  7352     0390                     PWM7DCL         equ	912	;# 
  7353     0391                     PWM7DCH         equ	913	;# 
  7354     0392                     PWM7CON         equ	914	;# 
  7355     048C                     SMT1TMR         equ	1164	;# 
  7356     048C                     SMT1TMRL        equ	1164	;# 
  7357     048D                     SMT1TMRH        equ	1165	;# 
  7358     048E                     SMT1TMRU        equ	1166	;# 
  7359     048F                     SMT1CPR         equ	1167	;# 
  7360     048F                     SMT1CPRL        equ	1167	;# 
  7361     0490                     SMT1CPRH        equ	1168	;# 
  7362     0491                     SMT1CPRU        equ	1169	;# 
  7363     0492                     SMT1CPW         equ	1170	;# 
  7364     0492                     SMT1CPWL        equ	1170	;# 
  7365     0493                     SMT1CPWH        equ	1171	;# 
  7366     0494                     SMT1CPWU        equ	1172	;# 
  7367     0495                     SMT1PR          equ	1173	;# 
  7368     0495                     SMT1PRL         equ	1173	;# 
  7369     0496                     SMT1PRH         equ	1174	;# 
  7370     0497                     SMT1PRU         equ	1175	;# 
  7371     0498                     SMT1CON0        equ	1176	;# 
  7372     0499                     SMT1CON1        equ	1177	;# 
  7373     049A                     SMT1STAT        equ	1178	;# 
  7374     049B                     SMT1CLK         equ	1179	;# 
  7375     049C                     SMT1SIG         equ	1180	;# 
  7376     049D                     SMT1WIN         equ	1181	;# 
  7377     050C                     SMT2TMR         equ	1292	;# 
  7378     050C                     SMT2TMRL        equ	1292	;# 
  7379     050D                     SMT2TMRH        equ	1293	;# 
  7380     050E                     SMT2TMRU        equ	1294	;# 
  7381     050F                     SMT2CPR         equ	1295	;# 
  7382     050F                     SMT2CPRL        equ	1295	;# 
  7383     0510                     SMT2CPRH        equ	1296	;# 
  7384     0511                     SMT2CPRU        equ	1297	;# 
  7385     0512                     SMT2CPW         equ	1298	;# 
  7386     0512                     SMT2CPWL        equ	1298	;# 
  7387     0513                     SMT2CPWH        equ	1299	;# 
  7388     0514                     SMT2CPWU        equ	1300	;# 
  7389     0515                     SMT2PR          equ	1301	;# 
  7390     0515                     SMT2PRL         equ	1301	;# 
  7391     0516                     SMT2PRH         equ	1302	;# 
  7392     0517                     SMT2PRU         equ	1303	;# 
  7393     0518                     SMT2CON0        equ	1304	;# 
  7394     0519                     SMT2CON1        equ	1305	;# 
  7395     051A                     SMT2STAT        equ	1306	;# 
  7396     051B                     SMT2CLK         equ	1307	;# 
  7397     051C                     SMT2SIG         equ	1308	;# 
  7398     051D                     SMT2WIN         equ	1309	;# 
  7399     058C                     NCO1ACC         equ	1420	;# 
  7400     058C                     NCO1ACCL        equ	1420	;# 
  7401     058D                     NCO1ACCH        equ	1421	;# 
  7402     058E                     NCO1ACCU        equ	1422	;# 
  7403     058F                     NCO1INC         equ	1423	;# 
  7404     058F                     NCO1INCL        equ	1423	;# 
  7405     0590                     NCO1INCH        equ	1424	;# 
  7406     0591                     NCO1INCU        equ	1425	;# 
  7407     0592                     NCO1CON         equ	1426	;# 
  7408     0593                     NCO1CLK         equ	1427	;# 
  7409     059C                     TMR0L           equ	1436	;# 
  7410     059C                     TMR0            equ	1436	;# 
  7411     059D                     TMR0H           equ	1437	;# 
  7412     059D                     PR0             equ	1437	;# 
  7413     059E                     T0CON0          equ	1438	;# 
  7414     059F                     T0CON1          equ	1439	;# 
  7415     060C                     CWG1CLK         equ	1548	;# 
  7416     060C                     CWG1CLKCON      equ	1548	;# 
  7417     060D                     CWG1ISM         equ	1549	;# 
  7418     060D                     CWG1DAT         equ	1549	;# 
  7419     060E                     CWG1DBR         equ	1550	;# 
  7420     060F                     CWG1DBF         equ	1551	;# 
  7421     0610                     CWG1CON0        equ	1552	;# 
  7422     0611                     CWG1CON1        equ	1553	;# 
  7423     0612                     CWG1AS0         equ	1554	;# 
  7424     0613                     CWG1AS1         equ	1555	;# 
  7425     0614                     CWG1STR         equ	1556	;# 
  7426     0616                     CWG2CLK         equ	1558	;# 
  7427     0616                     CWG2CLKCON      equ	1558	;# 
  7428     0617                     CWG2ISM         equ	1559	;# 
  7429     0617                     CWG2DAT         equ	1559	;# 
  7430     0618                     CWG2DBR         equ	1560	;# 
  7431     0619                     CWG2DBF         equ	1561	;# 
  7432     061A                     CWG2CON0        equ	1562	;# 
  7433     061B                     CWG2CON1        equ	1563	;# 
  7434     061C                     CWG2AS0         equ	1564	;# 
  7435     061D                     CWG2AS1         equ	1565	;# 
  7436     061E                     CWG2STR         equ	1566	;# 
  7437     068C                     CWG3CLK         equ	1676	;# 
  7438     068C                     CWG3CLKCON      equ	1676	;# 
  7439     068D                     CWG3ISM         equ	1677	;# 
  7440     068D                     CWG3DAT         equ	1677	;# 
  7441     068E                     CWG3DBR         equ	1678	;# 
  7442     068F                     CWG3DBF         equ	1679	;# 
  7443     0690                     CWG3CON0        equ	1680	;# 
  7444     0691                     CWG3CON1        equ	1681	;# 
  7445     0692                     CWG3AS0         equ	1682	;# 
  7446     0693                     CWG3AS1         equ	1683	;# 
  7447     0694                     CWG3STR         equ	1684	;# 
  7448     070C                     PIR0            equ	1804	;# 
  7449     070D                     PIR1            equ	1805	;# 
  7450     070E                     PIR2            equ	1806	;# 
  7451     070F                     PIR3            equ	1807	;# 
  7452     0710                     PIR4            equ	1808	;# 
  7453     0711                     PIR5            equ	1809	;# 
  7454     0712                     PIR6            equ	1810	;# 
  7455     0713                     PIR7            equ	1811	;# 
  7456     0714                     PIR8            equ	1812	;# 
  7457     0716                     PIE0            equ	1814	;# 
  7458     0717                     PIE1            equ	1815	;# 
  7459     0718                     PIE2            equ	1816	;# 
  7460     0719                     PIE3            equ	1817	;# 
  7461     071A                     PIE4            equ	1818	;# 
  7462     071B                     PIE5            equ	1819	;# 
  7463     071C                     PIE6            equ	1820	;# 
  7464     071D                     PIE7            equ	1821	;# 
  7465     071E                     PIE8            equ	1822	;# 
  7466     0796                     PMD0            equ	1942	;# 
  7467     0797                     PMD1            equ	1943	;# 
  7468     0798                     PMD2            equ	1944	;# 
  7469     0799                     PMD3            equ	1945	;# 
  7470     079A                     PMD4            equ	1946	;# 
  7471     079B                     PMD5            equ	1947	;# 
  7472     079C                     PMD6            equ	1948	;# 
  7473     079D                     PMD7            equ	1949	;# 
  7474     080C                     WDTCON0         equ	2060	;# 
  7475     080D                     WDTCON1         equ	2061	;# 
  7476     080E                     WDTPSL          equ	2062	;# 
  7477     080F                     WDTPSH          equ	2063	;# 
  7478     0810                     WDTTMR          equ	2064	;# 
  7479     0811                     BORCON          equ	2065	;# 
  7480     0813                     PCON0           equ	2067	;# 
  7481     0814                     PCON1           equ	2068	;# 
  7482     081A                     NVMADR          equ	2074	;# 
  7483     081A                     NVMADRL         equ	2074	;# 
  7484     081B                     NVMADRH         equ	2075	;# 
  7485     081C                     NVMDAT          equ	2076	;# 
  7486     081C                     NVMDATL         equ	2076	;# 
  7487     081D                     NVMDATH         equ	2077	;# 
  7488     081E                     NVMCON1         equ	2078	;# 
  7489     081F                     NVMCON2         equ	2079	;# 
  7490     088C                     CPUDOZE         equ	2188	;# 
  7491     088D                     OSCCON1         equ	2189	;# 
  7492     088E                     OSCCON2         equ	2190	;# 
  7493     088F                     OSCCON3         equ	2191	;# 
  7494     0890                     OSCSTAT         equ	2192	;# 
  7495     0891                     OSCEN           equ	2193	;# 
  7496     0892                     OSCTUNE         equ	2194	;# 
  7497     0893                     OSCFRQ          equ	2195	;# 
  7498     0895                     CLKRCON         equ	2197	;# 
  7499     0896                     CLKRCLK         equ	2198	;# 
  7500     0897                     MD1CON0         equ	2199	;# 
  7501     0898                     MD1CON1         equ	2200	;# 
  7502     0899                     MD1SRC          equ	2201	;# 
  7503     089A                     MD1CARL         equ	2202	;# 
  7504     089B                     MD1CARH         equ	2203	;# 
  7505     090C                     FVRCON          equ	2316	;# 
  7506     090E                     DAC1CON0        equ	2318	;# 
  7507     090F                     DAC1CON1        equ	2319	;# 
  7508     091F                     ZCDCON          equ	2335	;# 
  7509     098F                     CMOUT           equ	2447	;# 
  7510     098F                     CMSTAT          equ	2447	;# 
  7511     0990                     CM1CON0         equ	2448	;# 
  7512     0991                     CM1CON1         equ	2449	;# 
  7513     0992                     CM1NCH          equ	2450	;# 
  7514     0993                     CM1PCH          equ	2451	;# 
  7515     0994                     CM2CON0         equ	2452	;# 
  7516     0995                     CM2CON1         equ	2453	;# 
  7517     0996                     CM2NCH          equ	2454	;# 
  7518     0997                     CM2PCH          equ	2455	;# 
  7519     0A19                     RC2REG          equ	2585	;# 
  7520     0A19                     RCREG2          equ	2585	;# 
  7521     0A1A                     TX2REG          equ	2586	;# 
  7522     0A1A                     TXREG2          equ	2586	;# 
  7523     0A1B                     SP2BRG          equ	2587	;# 
  7524     0A1B                     SP2BRGL         equ	2587	;# 
  7525     0A1B                     SPBRG2          equ	2587	;# 
  7526     0A1C                     SP2BRGH         equ	2588	;# 
  7527     0A1C                     SPBRGH2         equ	2588	;# 
  7528     0A1D                     RC2STA          equ	2589	;# 
  7529     0A1D                     RCSTA2          equ	2589	;# 
  7530     0A1E                     TX2STA          equ	2590	;# 
  7531     0A1E                     TXSTA2          equ	2590	;# 
  7532     0A1F                     BAUD2CON        equ	2591	;# 
  7533     0A1F                     BAUDCON2        equ	2591	;# 
  7534     0A1F                     BAUDCTL2        equ	2591	;# 
  7535     1E0F                     CLCDATA         equ	7695	;# 
  7536     1E10                     CLC1CON         equ	7696	;# 
  7537     1E11                     CLC1POL         equ	7697	;# 
  7538     1E12                     CLC1SEL0        equ	7698	;# 
  7539     1E13                     CLC1SEL1        equ	7699	;# 
  7540     1E14                     CLC1SEL2        equ	7700	;# 
  7541     1E15                     CLC1SEL3        equ	7701	;# 
  7542     1E16                     CLC1GLS0        equ	7702	;# 
  7543     1E17                     CLC1GLS1        equ	7703	;# 
  7544     1E18                     CLC1GLS2        equ	7704	;# 
  7545     1E19                     CLC1GLS3        equ	7705	;# 
  7546     1E1A                     CLC2CON         equ	7706	;# 
  7547     1E1B                     CLC2POL         equ	7707	;# 
  7548     1E1C                     CLC2SEL0        equ	7708	;# 
  7549     1E1D                     CLC2SEL1        equ	7709	;# 
  7550     1E1E                     CLC2SEL2        equ	7710	;# 
  7551     1E1F                     CLC2SEL3        equ	7711	;# 
  7552     1E20                     CLC2GLS0        equ	7712	;# 
  7553     1E21                     CLC2GLS1        equ	7713	;# 
  7554     1E22                     CLC2GLS2        equ	7714	;# 
  7555     1E23                     CLC2GLS3        equ	7715	;# 
  7556     1E24                     CLC3CON         equ	7716	;# 
  7557     1E25                     CLC3POL         equ	7717	;# 
  7558     1E26                     CLC3SEL0        equ	7718	;# 
  7559     1E27                     CLC3SEL1        equ	7719	;# 
  7560     1E28                     CLC3SEL2        equ	7720	;# 
  7561     1E29                     CLC3SEL3        equ	7721	;# 
  7562     1E2A                     CLC3GLS0        equ	7722	;# 
  7563     1E2B                     CLC3GLS1        equ	7723	;# 
  7564     1E2C                     CLC3GLS2        equ	7724	;# 
  7565     1E2D                     CLC3GLS3        equ	7725	;# 
  7566     1E2E                     CLC4CON         equ	7726	;# 
  7567     1E2F                     CLC4POL         equ	7727	;# 
  7568     1E30                     CLC4SEL0        equ	7728	;# 
  7569     1E31                     CLC4SEL1        equ	7729	;# 
  7570     1E32                     CLC4SEL2        equ	7730	;# 
  7571     1E33                     CLC4SEL3        equ	7731	;# 
  7572     1E34                     CLC4GLS0        equ	7732	;# 
  7573     1E35                     CLC4GLS1        equ	7733	;# 
  7574     1E36                     CLC4GLS2        equ	7734	;# 
  7575     1E37                     CLC4GLS3        equ	7735	;# 
  7576     1E8F                     PPSLOCK         equ	7823	;# 
  7577     1E90                     INTPPS          equ	7824	;# 
  7578     1E91                     T0CKIPPS        equ	7825	;# 
  7579     1E92                     T1CKIPPS        equ	7826	;# 
  7580     1E93                     T1GPPS          equ	7827	;# 
  7581     1E94                     T3CKIPPS        equ	7828	;# 
  7582     1E95                     T3GPPS          equ	7829	;# 
  7583     1E96                     T5CKIPPS        equ	7830	;# 
  7584     1E97                     T5GPPS          equ	7831	;# 
  7585     1E9C                     T2INPPS         equ	7836	;# 
  7586     1E9D                     T4INPPS         equ	7837	;# 
  7587     1E9E                     T6INPPS         equ	7838	;# 
  7588     1EA1                     CCP1PPS         equ	7841	;# 
  7589     1EA2                     CCP2PPS         equ	7842	;# 
  7590     1EA3                     CCP3PPS         equ	7843	;# 
  7591     1EA4                     CCP4PPS         equ	7844	;# 
  7592     1EA5                     CCP5PPS         equ	7845	;# 
  7593     1EA9                     SMT1WINPPS      equ	7849	;# 
  7594     1EAA                     SMT1SIGPPS      equ	7850	;# 
  7595     1EAB                     SMT2WINPPS      equ	7851	;# 
  7596     1EAC                     SMT2SIGPPS      equ	7852	;# 
  7597     1EB1                     CWG1PPS         equ	7857	;# 
  7598     1EB2                     CWG2PPS         equ	7858	;# 
  7599     1EB3                     CWG3PPS         equ	7859	;# 
  7600     1EB8                     MDCARLPPS       equ	7864	;# 
  7601     1EB9                     MDCARHPPS       equ	7865	;# 
  7602     1EBA                     MDSRCPPS        equ	7866	;# 
  7603     1EBB                     CLCIN0PPS       equ	7867	;# 
  7604     1EBC                     CLCIN1PPS       equ	7868	;# 
  7605     1EBD                     CLCIN2PPS       equ	7869	;# 
  7606     1EBE                     CLCIN3PPS       equ	7870	;# 
  7607     1EC3                     ADACTPPS        equ	7875	;# 
  7608     1EC5                     SSP1CLKPPS      equ	7877	;# 
  7609     1EC6                     SSP1DATPPS      equ	7878	;# 
  7610     1EC7                     SSP1SSPPS       equ	7879	;# 
  7611     1EC8                     SSP2CLKPPS      equ	7880	;# 
  7612     1EC9                     SSP2DATPPS      equ	7881	;# 
  7613     1ECA                     SSP2SSPPS       equ	7882	;# 
  7614     1ECB                     RX1PPS          equ	7883	;# 
  7615     1ECC                     CK1PPS          equ	7884	;# 
  7616     1ECD                     RX2PPS          equ	7885	;# 
  7617     1ECE                     CK2PPS          equ	7886	;# 
  7618     1F10                     RA0PPS          equ	7952	;# 
  7619     1F11                     RA1PPS          equ	7953	;# 
  7620     1F12                     RA2PPS          equ	7954	;# 
  7621     1F13                     RA3PPS          equ	7955	;# 
  7622     1F14                     RA4PPS          equ	7956	;# 
  7623     1F15                     RA5PPS          equ	7957	;# 
  7624     1F16                     RA6PPS          equ	7958	;# 
  7625     1F17                     RA7PPS          equ	7959	;# 
  7626     1F18                     RB0PPS          equ	7960	;# 
  7627     1F19                     RB1PPS          equ	7961	;# 
  7628     1F1A                     RB2PPS          equ	7962	;# 
  7629     1F1B                     RB3PPS          equ	7963	;# 
  7630     1F1C                     RB4PPS          equ	7964	;# 
  7631     1F1D                     RB5PPS          equ	7965	;# 
  7632     1F1E                     RB6PPS          equ	7966	;# 
  7633     1F1F                     RB7PPS          equ	7967	;# 
  7634     1F20                     RC0PPS          equ	7968	;# 
  7635     1F21                     RC1PPS          equ	7969	;# 
  7636     1F22                     RC2PPS          equ	7970	;# 
  7637     1F23                     RC3PPS          equ	7971	;# 
  7638     1F24                     RC4PPS          equ	7972	;# 
  7639     1F25                     RC5PPS          equ	7973	;# 
  7640     1F26                     RC6PPS          equ	7974	;# 
  7641     1F27                     RC7PPS          equ	7975	;# 
  7642     1F38                     ANSELA          equ	7992	;# 
  7643     1F39                     WPUA            equ	7993	;# 
  7644     1F3A                     ODCONA          equ	7994	;# 
  7645     1F3B                     SLRCONA         equ	7995	;# 
  7646     1F3C                     INLVLA          equ	7996	;# 
  7647     1F3D                     IOCAP           equ	7997	;# 
  7648     1F3E                     IOCAN           equ	7998	;# 
  7649     1F3F                     IOCAF           equ	7999	;# 
  7650     1F43                     ANSELB          equ	8003	;# 
  7651     1F44                     WPUB            equ	8004	;# 
  7652     1F45                     ODCONB          equ	8005	;# 
  7653     1F46                     SLRCONB         equ	8006	;# 
  7654     1F47                     INLVLB          equ	8007	;# 
  7655     1F48                     IOCBP           equ	8008	;# 
  7656     1F49                     IOCBN           equ	8009	;# 
  7657     1F4A                     IOCBF           equ	8010	;# 
  7658     1F4E                     ANSELC          equ	8014	;# 
  7659     1F4F                     WPUC            equ	8015	;# 
  7660     1F50                     ODCONC          equ	8016	;# 
  7661     1F51                     SLRCONC         equ	8017	;# 
  7662     1F52                     INLVLC          equ	8018	;# 
  7663     1F53                     IOCCP           equ	8019	;# 
  7664     1F54                     IOCCN           equ	8020	;# 
  7665     1F55                     IOCCF           equ	8021	;# 
  7666     1F65                     WPUE            equ	8037	;# 
  7667     1F66                     ODCONE          equ	8038	;# 
  7668     1F67                     SLRCONE         equ	8039	;# 
  7669     1F68                     INLVLE          equ	8040	;# 
  7670     1F69                     IOCEP           equ	8041	;# 
  7671     1F6A                     IOCEN           equ	8042	;# 
  7672     1F6B                     IOCEF           equ	8043	;# 
  7673     1FE4                     STATUS_SHAD     equ	8164	;# 
  7674     1FE5                     WREG_SHAD       equ	8165	;# 
  7675     1FE6                     BSR_SHAD        equ	8166	;# 
  7676     1FE7                     PCLATH_SHAD     equ	8167	;# 
  7677     1FE8                     FSR0_SHAD       equ	8168	;# 
  7678     1FE8                     FSR0L_SHAD      equ	8168	;# 
  7679     1FE9                     FSR0H_SHAD      equ	8169	;# 
  7680     1FEA                     FSR1L_SHAD      equ	8170	;# 
  7681     1FEB                     FSR1H_SHAD      equ	8171	;# 
  7682     1FED                     STKPTR          equ	8173	;# 
  7683     1FEE                     TOSL            equ	8174	;# 
  7684     1FEF                     TOSH            equ	8175	;# 
  7685     0000                     INDF0           equ	0	;# 
  7686     0001                     INDF1           equ	1	;# 
  7687     0002                     PCL             equ	2	;# 
  7688     0003                     STATUS          equ	3	;# 
  7689     0004                     FSR0L           equ	4	;# 
  7690     0005                     FSR0H           equ	5	;# 
  7691     0006                     FSR1L           equ	6	;# 
  7692     0007                     FSR1H           equ	7	;# 
  7693     0008                     BSR             equ	8	;# 
  7694     0009                     WREG            equ	9	;# 
  7695     000A                     PCLATH          equ	10	;# 
  7696     000B                     INTCON          equ	11	;# 
  7697     000C                     PORTA           equ	12	;# 
  7698     000D                     PORTB           equ	13	;# 
  7699     000E                     PORTC           equ	14	;# 
  7700     0010                     PORTE           equ	16	;# 
  7701     0012                     TRISA           equ	18	;# 
  7702     0013                     TRISB           equ	19	;# 
  7703     0014                     TRISC           equ	20	;# 
  7704     0016                     TRISE           equ	22	;# 
  7705     0018                     LATA            equ	24	;# 
  7706     0019                     LATB            equ	25	;# 
  7707     001A                     LATC            equ	26	;# 
  7708     008C                     ADLTH           equ	140	;# 
  7709     008C                     ADLTHL          equ	140	;# 
  7710     008D                     ADLTHH          equ	141	;# 
  7711     008E                     ADUTH           equ	142	;# 
  7712     008E                     ADUTHL          equ	142	;# 
  7713     008F                     ADUTHH          equ	143	;# 
  7714     0090                     ADERR           equ	144	;# 
  7715     0090                     ADERRL          equ	144	;# 
  7716     0091                     ADERRH          equ	145	;# 
  7717     0092                     ADSTPT          equ	146	;# 
  7718     0092                     ADSTPTL         equ	146	;# 
  7719     0093                     ADSTPTH         equ	147	;# 
  7720     0094                     ADFLTR          equ	148	;# 
  7721     0094                     ADFLTRL         equ	148	;# 
  7722     0095                     ADFLTRH         equ	149	;# 
  7723     0096                     ADACC           equ	150	;# 
  7724     0096                     ADACCL          equ	150	;# 
  7725     0097                     ADACCH          equ	151	;# 
  7726     0098                     ADACCU          equ	152	;# 
  7727     0099                     ADCNT           equ	153	;# 
  7728     009A                     ADRPT           equ	154	;# 
  7729     009B                     ADPREV          equ	155	;# 
  7730     009B                     ADPREVL         equ	155	;# 
  7731     009C                     ADPREVH         equ	156	;# 
  7732     009D                     ADRES           equ	157	;# 
  7733     009D                     ADRESL          equ	157	;# 
  7734     009E                     ADRESH          equ	158	;# 
  7735     009F                     ADPCH           equ	159	;# 
  7736     010C                     ADACQ           equ	268	;# 
  7737     010C                     ADACQL          equ	268	;# 
  7738     010D                     ADACQH          equ	269	;# 
  7739     010E                     ADCAP           equ	270	;# 
  7740     010F                     ADPRE           equ	271	;# 
  7741     010F                     ADPREL          equ	271	;# 
  7742     0110                     ADPREH          equ	272	;# 
  7743     0111                     ADCON0          equ	273	;# 
  7744     0112                     ADCON1          equ	274	;# 
  7745     0113                     ADCON2          equ	275	;# 
  7746     0114                     ADCON3          equ	276	;# 
  7747     0115                     ADSTAT          equ	277	;# 
  7748     0116                     ADREF           equ	278	;# 
  7749     0117                     ADACT           equ	279	;# 
  7750     0118                     ADCLK           equ	280	;# 
  7751     0119                     RC1REG          equ	281	;# 
  7752     0119                     RCREG           equ	281	;# 
  7753     0119                     RCREG1          equ	281	;# 
  7754     011A                     TX1REG          equ	282	;# 
  7755     011A                     TXREG1          equ	282	;# 
  7756     011A                     TXREG           equ	282	;# 
  7757     011B                     SP1BRG          equ	283	;# 
  7758     011B                     SPBRG           equ	283	;# 
  7759     011B                     SP1BRGL         equ	283	;# 
  7760     011B                     SPBRG1          equ	283	;# 
  7761     011B                     SPBRGL          equ	283	;# 
  7762     011C                     SP1BRGH         equ	284	;# 
  7763     011C                     SPBRGH          equ	284	;# 
  7764     011C                     SPBRGH1         equ	284	;# 
  7765     011D                     RC1STA          equ	285	;# 
  7766     011D                     RCSTA1          equ	285	;# 
  7767     011D                     RCSTA           equ	285	;# 
  7768     011E                     TX1STA          equ	286	;# 
  7769     011E                     TXSTA1          equ	286	;# 
  7770     011E                     TXSTA           equ	286	;# 
  7771     011F                     BAUD1CON        equ	287	;# 
  7772     011F                     BAUDCON1        equ	287	;# 
  7773     011F                     BAUDCTL1        equ	287	;# 
  7774     011F                     BAUDCON         equ	287	;# 
  7775     011F                     BAUDCTL         equ	287	;# 
  7776     018C                     SSP1BUF         equ	396	;# 
  7777     018D                     SSP1ADD         equ	397	;# 
  7778     018E                     SSP1MSK         equ	398	;# 
  7779     018F                     SSP1STAT        equ	399	;# 
  7780     0190                     SSP1CON1        equ	400	;# 
  7781     0191                     SSP1CON2        equ	401	;# 
  7782     0192                     SSP1CON3        equ	402	;# 
  7783     0196                     SSP2BUF         equ	406	;# 
  7784     0197                     SSP2ADD         equ	407	;# 
  7785     0198                     SSP2MSK         equ	408	;# 
  7786     0199                     SSP2STAT        equ	409	;# 
  7787     019A                     SSP2CON1        equ	410	;# 
  7788     019B                     SSP2CON2        equ	411	;# 
  7789     019C                     SSP2CON3        equ	412	;# 
  7790     020C                     TMR1            equ	524	;# 
  7791     020C                     TMR1L           equ	524	;# 
  7792     020D                     TMR1H           equ	525	;# 
  7793     020E                     T1CON           equ	526	;# 
  7794     020E                     TMR1CON         equ	526	;# 
  7795     020F                     T1GCON          equ	527	;# 
  7796     020F                     TMR1GCON        equ	527	;# 
  7797     0210                     T1GATE          equ	528	;# 
  7798     0210                     TMR1GATE        equ	528	;# 
  7799     0211                     T1CLK           equ	529	;# 
  7800     0211                     TMR1CLK         equ	529	;# 
  7801     0211                     PR1             equ	529	;# 
  7802     0212                     TMR3            equ	530	;# 
  7803     0212                     TMR3L           equ	530	;# 
  7804     0213                     TMR3H           equ	531	;# 
  7805     0214                     T3CON           equ	532	;# 
  7806     0214                     TMR3CON         equ	532	;# 
  7807     0215                     T3GCON          equ	533	;# 
  7808     0215                     TMR3GCON        equ	533	;# 
  7809     0216                     T3GATE          equ	534	;# 
  7810     0216                     TMR3GATE        equ	534	;# 
  7811     0217                     T3CLK           equ	535	;# 
  7812     0217                     TMR3CLK         equ	535	;# 
  7813     0217                     PR3             equ	535	;# 
  7814     0218                     TMR5            equ	536	;# 
  7815     0218                     TMR5L           equ	536	;# 
  7816     0219                     TMR5H           equ	537	;# 
  7817     021A                     T5CON           equ	538	;# 
  7818     021A                     TMR5CON         equ	538	;# 
  7819     021B                     T5GCON          equ	539	;# 
  7820     021B                     TMR5GCON        equ	539	;# 
  7821     021C                     T5GATE          equ	540	;# 
  7822     021C                     TMR5GATE        equ	540	;# 
  7823     021D                     T5CLK           equ	541	;# 
  7824     021D                     TMR5CLK         equ	541	;# 
  7825     021D                     PR5             equ	541	;# 
  7826     021E                     CCPTMRS0        equ	542	;# 
  7827     021F                     CCPTMRS1        equ	543	;# 
  7828     028C                     T2TMR           equ	652	;# 
  7829     028C                     TMR2            equ	652	;# 
  7830     028D                     T2PR            equ	653	;# 
  7831     028D                     PR2             equ	653	;# 
  7832     028E                     T2CON           equ	654	;# 
  7833     028F                     T2HLT           equ	655	;# 
  7834     0290                     T2CLKCON        equ	656	;# 
  7835     0291                     T2RST           equ	657	;# 
  7836     0292                     T4TMR           equ	658	;# 
  7837     0292                     TMR4            equ	658	;# 
  7838     0293                     T4PR            equ	659	;# 
  7839     0293                     PR4             equ	659	;# 
  7840     0294                     T4CON           equ	660	;# 
  7841     0295                     T4HLT           equ	661	;# 
  7842     0296                     T4CLKCON        equ	662	;# 
  7843     0297                     T4RST           equ	663	;# 
  7844     0298                     T6TMR           equ	664	;# 
  7845     0298                     TMR6            equ	664	;# 
  7846     0299                     T6PR            equ	665	;# 
  7847     0299                     PR6             equ	665	;# 
  7848     029A                     T6CON           equ	666	;# 
  7849     029B                     T6HLT           equ	667	;# 
  7850     029C                     T6CLKCON        equ	668	;# 
  7851     029D                     T6RST           equ	669	;# 
  7852     029F                     ADCPCON0        equ	671	;# 
  7853     030C                     CCPR1           equ	780	;# 
  7854     030C                     CCPR1L          equ	780	;# 
  7855     030D                     CCPR1H          equ	781	;# 
  7856     030E                     CCP1CON         equ	782	;# 
  7857     030F                     CCP1CAP         equ	783	;# 
  7858     0310                     CCPR2           equ	784	;# 
  7859     0310                     CCPR2L          equ	784	;# 
  7860     0311                     CCPR2H          equ	785	;# 
  7861     0312                     CCP2CON         equ	786	;# 
  7862     0313                     CCP2CAP         equ	787	;# 
  7863     0314                     CCPR3           equ	788	;# 
  7864     0314                     CCPR3L          equ	788	;# 
  7865     0315                     CCPR3H          equ	789	;# 
  7866     0316                     CCP3CON         equ	790	;# 
  7867     0317                     CCP3CAP         equ	791	;# 
  7868     0318                     CCPR4           equ	792	;# 
  7869     0318                     CCPR4L          equ	792	;# 
  7870     0319                     CCPR4H          equ	793	;# 
  7871     031A                     CCP4CON         equ	794	;# 
  7872     031B                     CCP4CAP         equ	795	;# 
  7873     031C                     CCPR5           equ	796	;# 
  7874     031C                     CCPR5L          equ	796	;# 
  7875     031D                     CCPR5H          equ	797	;# 
  7876     031E                     CCP5CON         equ	798	;# 
  7877     031F                     CCP5CAP         equ	799	;# 
  7878     038C                     PWM6DC          equ	908	;# 
  7879     038C                     PWM6DCL         equ	908	;# 
  7880     038D                     PWM6DCH         equ	909	;# 
  7881     038E                     PWM6CON         equ	910	;# 
  7882     0390                     PWM7DC          equ	912	;# 
  7883     0390                     PWM7DCL         equ	912	;# 
  7884     0391                     PWM7DCH         equ	913	;# 
  7885     0392                     PWM7CON         equ	914	;# 
  7886     048C                     SMT1TMR         equ	1164	;# 
  7887     048C                     SMT1TMRL        equ	1164	;# 
  7888     048D                     SMT1TMRH        equ	1165	;# 
  7889     048E                     SMT1TMRU        equ	1166	;# 
  7890     048F                     SMT1CPR         equ	1167	;# 
  7891     048F                     SMT1CPRL        equ	1167	;# 
  7892     0490                     SMT1CPRH        equ	1168	;# 
  7893     0491                     SMT1CPRU        equ	1169	;# 
  7894     0492                     SMT1CPW         equ	1170	;# 
  7895     0492                     SMT1CPWL        equ	1170	;# 
  7896     0493                     SMT1CPWH        equ	1171	;# 
  7897     0494                     SMT1CPWU        equ	1172	;# 
  7898     0495                     SMT1PR          equ	1173	;# 
  7899     0495                     SMT1PRL         equ	1173	;# 
  7900     0496                     SMT1PRH         equ	1174	;# 
  7901     0497                     SMT1PRU         equ	1175	;# 
  7902     0498                     SMT1CON0        equ	1176	;# 
  7903     0499                     SMT1CON1        equ	1177	;# 
  7904     049A                     SMT1STAT        equ	1178	;# 
  7905     049B                     SMT1CLK         equ	1179	;# 
  7906     049C                     SMT1SIG         equ	1180	;# 
  7907     049D                     SMT1WIN         equ	1181	;# 
  7908     050C                     SMT2TMR         equ	1292	;# 
  7909     050C                     SMT2TMRL        equ	1292	;# 
  7910     050D                     SMT2TMRH        equ	1293	;# 
  7911     050E                     SMT2TMRU        equ	1294	;# 
  7912     050F                     SMT2CPR         equ	1295	;# 
  7913     050F                     SMT2CPRL        equ	1295	;# 
  7914     0510                     SMT2CPRH        equ	1296	;# 
  7915     0511                     SMT2CPRU        equ	1297	;# 
  7916     0512                     SMT2CPW         equ	1298	;# 
  7917     0512                     SMT2CPWL        equ	1298	;# 
  7918     0513                     SMT2CPWH        equ	1299	;# 
  7919     0514                     SMT2CPWU        equ	1300	;# 
  7920     0515                     SMT2PR          equ	1301	;# 
  7921     0515                     SMT2PRL         equ	1301	;# 
  7922     0516                     SMT2PRH         equ	1302	;# 
  7923     0517                     SMT2PRU         equ	1303	;# 
  7924     0518                     SMT2CON0        equ	1304	;# 
  7925     0519                     SMT2CON1        equ	1305	;# 
  7926     051A                     SMT2STAT        equ	1306	;# 
  7927     051B                     SMT2CLK         equ	1307	;# 
  7928     051C                     SMT2SIG         equ	1308	;# 
  7929     051D                     SMT2WIN         equ	1309	;# 
  7930     058C                     NCO1ACC         equ	1420	;# 
  7931     058C                     NCO1ACCL        equ	1420	;# 
  7932     058D                     NCO1ACCH        equ	1421	;# 
  7933     058E                     NCO1ACCU        equ	1422	;# 
  7934     058F                     NCO1INC         equ	1423	;# 
  7935     058F                     NCO1INCL        equ	1423	;# 
  7936     0590                     NCO1INCH        equ	1424	;# 
  7937     0591                     NCO1INCU        equ	1425	;# 
  7938     0592                     NCO1CON         equ	1426	;# 
  7939     0593                     NCO1CLK         equ	1427	;# 
  7940     059C                     TMR0L           equ	1436	;# 
  7941     059C                     TMR0            equ	1436	;# 
  7942     059D                     TMR0H           equ	1437	;# 
  7943     059D                     PR0             equ	1437	;# 
  7944     059E                     T0CON0          equ	1438	;# 
  7945     059F                     T0CON1          equ	1439	;# 
  7946     060C                     CWG1CLK         equ	1548	;# 
  7947     060C                     CWG1CLKCON      equ	1548	;# 
  7948     060D                     CWG1ISM         equ	1549	;# 
  7949     060D                     CWG1DAT         equ	1549	;# 
  7950     060E                     CWG1DBR         equ	1550	;# 
  7951     060F                     CWG1DBF         equ	1551	;# 
  7952     0610                     CWG1CON0        equ	1552	;# 
  7953     0611                     CWG1CON1        equ	1553	;# 
  7954     0612                     CWG1AS0         equ	1554	;# 
  7955     0613                     CWG1AS1         equ	1555	;# 
  7956     0614                     CWG1STR         equ	1556	;# 
  7957     0616                     CWG2CLK         equ	1558	;# 
  7958     0616                     CWG2CLKCON      equ	1558	;# 
  7959     0617                     CWG2ISM         equ	1559	;# 
  7960     0617                     CWG2DAT         equ	1559	;# 
  7961     0618                     CWG2DBR         equ	1560	;# 
  7962     0619                     CWG2DBF         equ	1561	;# 
  7963     061A                     CWG2CON0        equ	1562	;# 
  7964     061B                     CWG2CON1        equ	1563	;# 
  7965     061C                     CWG2AS0         equ	1564	;# 
  7966     061D                     CWG2AS1         equ	1565	;# 
  7967     061E                     CWG2STR         equ	1566	;# 
  7968     068C                     CWG3CLK         equ	1676	;# 
  7969     068C                     CWG3CLKCON      equ	1676	;# 
  7970     068D                     CWG3ISM         equ	1677	;# 
  7971     068D                     CWG3DAT         equ	1677	;# 
  7972     068E                     CWG3DBR         equ	1678	;# 
  7973     068F                     CWG3DBF         equ	1679	;# 
  7974     0690                     CWG3CON0        equ	1680	;# 
  7975     0691                     CWG3CON1        equ	1681	;# 
  7976     0692                     CWG3AS0         equ	1682	;# 
  7977     0693                     CWG3AS1         equ	1683	;# 
  7978     0694                     CWG3STR         equ	1684	;# 
  7979     070C                     PIR0            equ	1804	;# 
  7980     070D                     PIR1            equ	1805	;# 
  7981     070E                     PIR2            equ	1806	;# 
  7982     070F                     PIR3            equ	1807	;# 
  7983     0710                     PIR4            equ	1808	;# 
  7984     0711                     PIR5            equ	1809	;# 
  7985     0712                     PIR6            equ	1810	;# 
  7986     0713                     PIR7            equ	1811	;# 
  7987     0714                     PIR8            equ	1812	;# 
  7988     0716                     PIE0            equ	1814	;# 
  7989     0717                     PIE1            equ	1815	;# 
  7990     0718                     PIE2            equ	1816	;# 
  7991     0719                     PIE3            equ	1817	;# 
  7992     071A                     PIE4            equ	1818	;# 
  7993     071B                     PIE5            equ	1819	;# 
  7994     071C                     PIE6            equ	1820	;# 
  7995     071D                     PIE7            equ	1821	;# 
  7996     071E                     PIE8            equ	1822	;# 
  7997     0796                     PMD0            equ	1942	;# 
  7998     0797                     PMD1            equ	1943	;# 
  7999     0798                     PMD2            equ	1944	;# 
  8000     0799                     PMD3            equ	1945	;# 
  8001     079A                     PMD4            equ	1946	;# 
  8002     079B                     PMD5            equ	1947	;# 
  8003     079C                     PMD6            equ	1948	;# 
  8004     079D                     PMD7            equ	1949	;# 
  8005     080C                     WDTCON0         equ	2060	;# 
  8006     080D                     WDTCON1         equ	2061	;# 
  8007     080E                     WDTPSL          equ	2062	;# 
  8008     080F                     WDTPSH          equ	2063	;# 
  8009     0810                     WDTTMR          equ	2064	;# 
  8010     0811                     BORCON          equ	2065	;# 
  8011     0813                     PCON0           equ	2067	;# 
  8012     0814                     PCON1           equ	2068	;# 
  8013     081A                     NVMADR          equ	2074	;# 
  8014     081A                     NVMADRL         equ	2074	;# 
  8015     081B                     NVMADRH         equ	2075	;# 
  8016     081C                     NVMDAT          equ	2076	;# 
  8017     081C                     NVMDATL         equ	2076	;# 
  8018     081D                     NVMDATH         equ	2077	;# 
  8019     081E                     NVMCON1         equ	2078	;# 
  8020     081F                     NVMCON2         equ	2079	;# 
  8021     088C                     CPUDOZE         equ	2188	;# 
  8022     088D                     OSCCON1         equ	2189	;# 
  8023     088E                     OSCCON2         equ	2190	;# 
  8024     088F                     OSCCON3         equ	2191	;# 
  8025     0890                     OSCSTAT         equ	2192	;# 
  8026     0891                     OSCEN           equ	2193	;# 
  8027     0892                     OSCTUNE         equ	2194	;# 
  8028     0893                     OSCFRQ          equ	2195	;# 
  8029     0895                     CLKRCON         equ	2197	;# 
  8030     0896                     CLKRCLK         equ	2198	;# 
  8031     0897                     MD1CON0         equ	2199	;# 
  8032     0898                     MD1CON1         equ	2200	;# 
  8033     0899                     MD1SRC          equ	2201	;# 
  8034     089A                     MD1CARL         equ	2202	;# 
  8035     089B                     MD1CARH         equ	2203	;# 
  8036     090C                     FVRCON          equ	2316	;# 
  8037     090E                     DAC1CON0        equ	2318	;# 
  8038     090F                     DAC1CON1        equ	2319	;# 
  8039     091F                     ZCDCON          equ	2335	;# 
  8040     098F                     CMOUT           equ	2447	;# 
  8041     098F                     CMSTAT          equ	2447	;# 
  8042     0990                     CM1CON0         equ	2448	;# 
  8043     0991                     CM1CON1         equ	2449	;# 
  8044     0992                     CM1NCH          equ	2450	;# 
  8045     0993                     CM1PCH          equ	2451	;# 
  8046     0994                     CM2CON0         equ	2452	;# 
  8047     0995                     CM2CON1         equ	2453	;# 
  8048     0996                     CM2NCH          equ	2454	;# 
  8049     0997                     CM2PCH          equ	2455	;# 
  8050     0A19                     RC2REG          equ	2585	;# 
  8051     0A19                     RCREG2          equ	2585	;# 
  8052     0A1A                     TX2REG          equ	2586	;# 
  8053     0A1A                     TXREG2          equ	2586	;# 
  8054     0A1B                     SP2BRG          equ	2587	;# 
  8055     0A1B                     SP2BRGL         equ	2587	;# 
  8056     0A1B                     SPBRG2          equ	2587	;# 
  8057     0A1C                     SP2BRGH         equ	2588	;# 
  8058     0A1C                     SPBRGH2         equ	2588	;# 
  8059     0A1D                     RC2STA          equ	2589	;# 
  8060     0A1D                     RCSTA2          equ	2589	;# 
  8061     0A1E                     TX2STA          equ	2590	;# 
  8062     0A1E                     TXSTA2          equ	2590	;# 
  8063     0A1F                     BAUD2CON        equ	2591	;# 
  8064     0A1F                     BAUDCON2        equ	2591	;# 
  8065     0A1F                     BAUDCTL2        equ	2591	;# 
  8066     1E0F                     CLCDATA         equ	7695	;# 
  8067     1E10                     CLC1CON         equ	7696	;# 
  8068     1E11                     CLC1POL         equ	7697	;# 
  8069     1E12                     CLC1SEL0        equ	7698	;# 
  8070     1E13                     CLC1SEL1        equ	7699	;# 
  8071     1E14                     CLC1SEL2        equ	7700	;# 
  8072     1E15                     CLC1SEL3        equ	7701	;# 
  8073     1E16                     CLC1GLS0        equ	7702	;# 
  8074     1E17                     CLC1GLS1        equ	7703	;# 
  8075     1E18                     CLC1GLS2        equ	7704	;# 
  8076     1E19                     CLC1GLS3        equ	7705	;# 
  8077     1E1A                     CLC2CON         equ	7706	;# 
  8078     1E1B                     CLC2POL         equ	7707	;# 
  8079     1E1C                     CLC2SEL0        equ	7708	;# 
  8080     1E1D                     CLC2SEL1        equ	7709	;# 
  8081     1E1E                     CLC2SEL2        equ	7710	;# 
  8082     1E1F                     CLC2SEL3        equ	7711	;# 
  8083     1E20                     CLC2GLS0        equ	7712	;# 
  8084     1E21                     CLC2GLS1        equ	7713	;# 
  8085     1E22                     CLC2GLS2        equ	7714	;# 
  8086     1E23                     CLC2GLS3        equ	7715	;# 
  8087     1E24                     CLC3CON         equ	7716	;# 
  8088     1E25                     CLC3POL         equ	7717	;# 
  8089     1E26                     CLC3SEL0        equ	7718	;# 
  8090     1E27                     CLC3SEL1        equ	7719	;# 
  8091     1E28                     CLC3SEL2        equ	7720	;# 
  8092     1E29                     CLC3SEL3        equ	7721	;# 
  8093     1E2A                     CLC3GLS0        equ	7722	;# 
  8094     1E2B                     CLC3GLS1        equ	7723	;# 
  8095     1E2C                     CLC3GLS2        equ	7724	;# 
  8096     1E2D                     CLC3GLS3        equ	7725	;# 
  8097     1E2E                     CLC4CON         equ	7726	;# 
  8098     1E2F                     CLC4POL         equ	7727	;# 
  8099     1E30                     CLC4SEL0        equ	7728	;# 
  8100     1E31                     CLC4SEL1        equ	7729	;# 
  8101     1E32                     CLC4SEL2        equ	7730	;# 
  8102     1E33                     CLC4SEL3        equ	7731	;# 
  8103     1E34                     CLC4GLS0        equ	7732	;# 
  8104     1E35                     CLC4GLS1        equ	7733	;# 
  8105     1E36                     CLC4GLS2        equ	7734	;# 
  8106     1E37                     CLC4GLS3        equ	7735	;# 
  8107     1E8F                     PPSLOCK         equ	7823	;# 
  8108     1E90                     INTPPS          equ	7824	;# 
  8109     1E91                     T0CKIPPS        equ	7825	;# 
  8110     1E92                     T1CKIPPS        equ	7826	;# 
  8111     1E93                     T1GPPS          equ	7827	;# 
  8112     1E94                     T3CKIPPS        equ	7828	;# 
  8113     1E95                     T3GPPS          equ	7829	;# 
  8114     1E96                     T5CKIPPS        equ	7830	;# 
  8115     1E97                     T5GPPS          equ	7831	;# 
  8116     1E9C                     T2INPPS         equ	7836	;# 
  8117     1E9D                     T4INPPS         equ	7837	;# 
  8118     1E9E                     T6INPPS         equ	7838	;# 
  8119     1EA1                     CCP1PPS         equ	7841	;# 
  8120     1EA2                     CCP2PPS         equ	7842	;# 
  8121     1EA3                     CCP3PPS         equ	7843	;# 
  8122     1EA4                     CCP4PPS         equ	7844	;# 
  8123     1EA5                     CCP5PPS         equ	7845	;# 
  8124     1EA9                     SMT1WINPPS      equ	7849	;# 
  8125     1EAA                     SMT1SIGPPS      equ	7850	;# 
  8126     1EAB                     SMT2WINPPS      equ	7851	;# 
  8127     1EAC                     SMT2SIGPPS      equ	7852	;# 
  8128     1EB1                     CWG1PPS         equ	7857	;# 
  8129     1EB2                     CWG2PPS         equ	7858	;# 
  8130     1EB3                     CWG3PPS         equ	7859	;# 
  8131     1EB8                     MDCARLPPS       equ	7864	;# 
  8132     1EB9                     MDCARHPPS       equ	7865	;# 
  8133     1EBA                     MDSRCPPS        equ	7866	;# 
  8134     1EBB                     CLCIN0PPS       equ	7867	;# 
  8135     1EBC                     CLCIN1PPS       equ	7868	;# 
  8136     1EBD                     CLCIN2PPS       equ	7869	;# 
  8137     1EBE                     CLCIN3PPS       equ	7870	;# 
  8138     1EC3                     ADACTPPS        equ	7875	;# 
  8139     1EC5                     SSP1CLKPPS      equ	7877	;# 
  8140     1EC6                     SSP1DATPPS      equ	7878	;# 
  8141     1EC7                     SSP1SSPPS       equ	7879	;# 
  8142     1EC8                     SSP2CLKPPS      equ	7880	;# 
  8143     1EC9                     SSP2DATPPS      equ	7881	;# 
  8144     1ECA                     SSP2SSPPS       equ	7882	;# 
  8145     1ECB                     RX1PPS          equ	7883	;# 
  8146     1ECC                     CK1PPS          equ	7884	;# 
  8147     1ECD                     RX2PPS          equ	7885	;# 
  8148     1ECE                     CK2PPS          equ	7886	;# 
  8149     1F10                     RA0PPS          equ	7952	;# 
  8150     1F11                     RA1PPS          equ	7953	;# 
  8151     1F12                     RA2PPS          equ	7954	;# 
  8152     1F13                     RA3PPS          equ	7955	;# 
  8153     1F14                     RA4PPS          equ	7956	;# 
  8154     1F15                     RA5PPS          equ	7957	;# 
  8155     1F16                     RA6PPS          equ	7958	;# 
  8156     1F17                     RA7PPS          equ	7959	;# 
  8157     1F18                     RB0PPS          equ	7960	;# 
  8158     1F19                     RB1PPS          equ	7961	;# 
  8159     1F1A                     RB2PPS          equ	7962	;# 
  8160     1F1B                     RB3PPS          equ	7963	;# 
  8161     1F1C                     RB4PPS          equ	7964	;# 
  8162     1F1D                     RB5PPS          equ	7965	;# 
  8163     1F1E                     RB6PPS          equ	7966	;# 
  8164     1F1F                     RB7PPS          equ	7967	;# 
  8165     1F20                     RC0PPS          equ	7968	;# 
  8166     1F21                     RC1PPS          equ	7969	;# 
  8167     1F22                     RC2PPS          equ	7970	;# 
  8168     1F23                     RC3PPS          equ	7971	;# 
  8169     1F24                     RC4PPS          equ	7972	;# 
  8170     1F25                     RC5PPS          equ	7973	;# 
  8171     1F26                     RC6PPS          equ	7974	;# 
  8172     1F27                     RC7PPS          equ	7975	;# 
  8173     1F38                     ANSELA          equ	7992	;# 
  8174     1F39                     WPUA            equ	7993	;# 
  8175     1F3A                     ODCONA          equ	7994	;# 
  8176     1F3B                     SLRCONA         equ	7995	;# 
  8177     1F3C                     INLVLA          equ	7996	;# 
  8178     1F3D                     IOCAP           equ	7997	;# 
  8179     1F3E                     IOCAN           equ	7998	;# 
  8180     1F3F                     IOCAF           equ	7999	;# 
  8181     1F43                     ANSELB          equ	8003	;# 
  8182     1F44                     WPUB            equ	8004	;# 
  8183     1F45                     ODCONB          equ	8005	;# 
  8184     1F46                     SLRCONB         equ	8006	;# 
  8185     1F47                     INLVLB          equ	8007	;# 
  8186     1F48                     IOCBP           equ	8008	;# 
  8187     1F49                     IOCBN           equ	8009	;# 
  8188     1F4A                     IOCBF           equ	8010	;# 
  8189     1F4E                     ANSELC          equ	8014	;# 
  8190     1F4F                     WPUC            equ	8015	;# 
  8191     1F50                     ODCONC          equ	8016	;# 
  8192     1F51                     SLRCONC         equ	8017	;# 
  8193     1F52                     INLVLC          equ	8018	;# 
  8194     1F53                     IOCCP           equ	8019	;# 
  8195     1F54                     IOCCN           equ	8020	;# 
  8196     1F55                     IOCCF           equ	8021	;# 
  8197     1F65                     WPUE            equ	8037	;# 
  8198     1F66                     ODCONE          equ	8038	;# 
  8199     1F67                     SLRCONE         equ	8039	;# 
  8200     1F68                     INLVLE          equ	8040	;# 
  8201     1F69                     IOCEP           equ	8041	;# 
  8202     1F6A                     IOCEN           equ	8042	;# 
  8203     1F6B                     IOCEF           equ	8043	;# 
  8204     1FE4                     STATUS_SHAD     equ	8164	;# 
  8205     1FE5                     WREG_SHAD       equ	8165	;# 
  8206     1FE6                     BSR_SHAD        equ	8166	;# 
  8207     1FE7                     PCLATH_SHAD     equ	8167	;# 
  8208     1FE8                     FSR0_SHAD       equ	8168	;# 
  8209     1FE8                     FSR0L_SHAD      equ	8168	;# 
  8210     1FE9                     FSR0H_SHAD      equ	8169	;# 
  8211     1FEA                     FSR1L_SHAD      equ	8170	;# 
  8212     1FEB                     FSR1H_SHAD      equ	8171	;# 
  8213     1FED                     STKPTR          equ	8173	;# 
  8214     1FEE                     TOSL            equ	8174	;# 
  8215     1FEF                     TOSH            equ	8175	;# 
  8216     0000                     INDF0           equ	0	;# 
  8217     0001                     INDF1           equ	1	;# 
  8218     0002                     PCL             equ	2	;# 
  8219     0003                     STATUS          equ	3	;# 
  8220     0004                     FSR0L           equ	4	;# 
  8221     0005                     FSR0H           equ	5	;# 
  8222     0006                     FSR1L           equ	6	;# 
  8223     0007                     FSR1H           equ	7	;# 
  8224     0008                     BSR             equ	8	;# 
  8225     0009                     WREG            equ	9	;# 
  8226     000A                     PCLATH          equ	10	;# 
  8227     000B                     INTCON          equ	11	;# 
  8228     000C                     PORTA           equ	12	;# 
  8229     000D                     PORTB           equ	13	;# 
  8230     000E                     PORTC           equ	14	;# 
  8231     0010                     PORTE           equ	16	;# 
  8232     0012                     TRISA           equ	18	;# 
  8233     0013                     TRISB           equ	19	;# 
  8234     0014                     TRISC           equ	20	;# 
  8235     0016                     TRISE           equ	22	;# 
  8236     0018                     LATA            equ	24	;# 
  8237     0019                     LATB            equ	25	;# 
  8238     001A                     LATC            equ	26	;# 
  8239     008C                     ADLTH           equ	140	;# 
  8240     008C                     ADLTHL          equ	140	;# 
  8241     008D                     ADLTHH          equ	141	;# 
  8242     008E                     ADUTH           equ	142	;# 
  8243     008E                     ADUTHL          equ	142	;# 
  8244     008F                     ADUTHH          equ	143	;# 
  8245     0090                     ADERR           equ	144	;# 
  8246     0090                     ADERRL          equ	144	;# 
  8247     0091                     ADERRH          equ	145	;# 
  8248     0092                     ADSTPT          equ	146	;# 
  8249     0092                     ADSTPTL         equ	146	;# 
  8250     0093                     ADSTPTH         equ	147	;# 
  8251     0094                     ADFLTR          equ	148	;# 
  8252     0094                     ADFLTRL         equ	148	;# 
  8253     0095                     ADFLTRH         equ	149	;# 
  8254     0096                     ADACC           equ	150	;# 
  8255     0096                     ADACCL          equ	150	;# 
  8256     0097                     ADACCH          equ	151	;# 
  8257     0098                     ADACCU          equ	152	;# 
  8258     0099                     ADCNT           equ	153	;# 
  8259     009A                     ADRPT           equ	154	;# 
  8260     009B                     ADPREV          equ	155	;# 
  8261     009B                     ADPREVL         equ	155	;# 
  8262     009C                     ADPREVH         equ	156	;# 
  8263     009D                     ADRES           equ	157	;# 
  8264     009D                     ADRESL          equ	157	;# 
  8265     009E                     ADRESH          equ	158	;# 
  8266     009F                     ADPCH           equ	159	;# 
  8267     010C                     ADACQ           equ	268	;# 
  8268     010C                     ADACQL          equ	268	;# 
  8269     010D                     ADACQH          equ	269	;# 
  8270     010E                     ADCAP           equ	270	;# 
  8271     010F                     ADPRE           equ	271	;# 
  8272     010F                     ADPREL          equ	271	;# 
  8273     0110                     ADPREH          equ	272	;# 
  8274     0111                     ADCON0          equ	273	;# 
  8275     0112                     ADCON1          equ	274	;# 
  8276     0113                     ADCON2          equ	275	;# 
  8277     0114                     ADCON3          equ	276	;# 
  8278     0115                     ADSTAT          equ	277	;# 
  8279     0116                     ADREF           equ	278	;# 
  8280     0117                     ADACT           equ	279	;# 
  8281     0118                     ADCLK           equ	280	;# 
  8282     0119                     RC1REG          equ	281	;# 
  8283     0119                     RCREG           equ	281	;# 
  8284     0119                     RCREG1          equ	281	;# 
  8285     011A                     TX1REG          equ	282	;# 
  8286     011A                     TXREG1          equ	282	;# 
  8287     011A                     TXREG           equ	282	;# 
  8288     011B                     SP1BRG          equ	283	;# 
  8289     011B                     SPBRG           equ	283	;# 
  8290     011B                     SP1BRGL         equ	283	;# 
  8291     011B                     SPBRG1          equ	283	;# 
  8292     011B                     SPBRGL          equ	283	;# 
  8293     011C                     SP1BRGH         equ	284	;# 
  8294     011C                     SPBRGH          equ	284	;# 
  8295     011C                     SPBRGH1         equ	284	;# 
  8296     011D                     RC1STA          equ	285	;# 
  8297     011D                     RCSTA1          equ	285	;# 
  8298     011D                     RCSTA           equ	285	;# 
  8299     011E                     TX1STA          equ	286	;# 
  8300     011E                     TXSTA1          equ	286	;# 
  8301     011E                     TXSTA           equ	286	;# 
  8302     011F                     BAUD1CON        equ	287	;# 
  8303     011F                     BAUDCON1        equ	287	;# 
  8304     011F                     BAUDCTL1        equ	287	;# 
  8305     011F                     BAUDCON         equ	287	;# 
  8306     011F                     BAUDCTL         equ	287	;# 
  8307     018C                     SSP1BUF         equ	396	;# 
  8308     018D                     SSP1ADD         equ	397	;# 
  8309     018E                     SSP1MSK         equ	398	;# 
  8310     018F                     SSP1STAT        equ	399	;# 
  8311     0190                     SSP1CON1        equ	400	;# 
  8312     0191                     SSP1CON2        equ	401	;# 
  8313     0192                     SSP1CON3        equ	402	;# 
  8314     0196                     SSP2BUF         equ	406	;# 
  8315     0197                     SSP2ADD         equ	407	;# 
  8316     0198                     SSP2MSK         equ	408	;# 
  8317     0199                     SSP2STAT        equ	409	;# 
  8318     019A                     SSP2CON1        equ	410	;# 
  8319     019B                     SSP2CON2        equ	411	;# 
  8320     019C                     SSP2CON3        equ	412	;# 
  8321     020C                     TMR1            equ	524	;# 
  8322     020C                     TMR1L           equ	524	;# 
  8323     020D                     TMR1H           equ	525	;# 
  8324     020E                     T1CON           equ	526	;# 
  8325     020E                     TMR1CON         equ	526	;# 
  8326     020F                     T1GCON          equ	527	;# 
  8327     020F                     TMR1GCON        equ	527	;# 
  8328     0210                     T1GATE          equ	528	;# 
  8329     0210                     TMR1GATE        equ	528	;# 
  8330     0211                     T1CLK           equ	529	;# 
  8331     0211                     TMR1CLK         equ	529	;# 
  8332     0211                     PR1             equ	529	;# 
  8333     0212                     TMR3            equ	530	;# 
  8334     0212                     TMR3L           equ	530	;# 
  8335     0213                     TMR3H           equ	531	;# 
  8336     0214                     T3CON           equ	532	;# 
  8337     0214                     TMR3CON         equ	532	;# 
  8338     0215                     T3GCON          equ	533	;# 
  8339     0215                     TMR3GCON        equ	533	;# 
  8340     0216                     T3GATE          equ	534	;# 
  8341     0216                     TMR3GATE        equ	534	;# 
  8342     0217                     T3CLK           equ	535	;# 
  8343     0217                     TMR3CLK         equ	535	;# 
  8344     0217                     PR3             equ	535	;# 
  8345     0218                     TMR5            equ	536	;# 
  8346     0218                     TMR5L           equ	536	;# 
  8347     0219                     TMR5H           equ	537	;# 
  8348     021A                     T5CON           equ	538	;# 
  8349     021A                     TMR5CON         equ	538	;# 
  8350     021B                     T5GCON          equ	539	;# 
  8351     021B                     TMR5GCON        equ	539	;# 
  8352     021C                     T5GATE          equ	540	;# 
  8353     021C                     TMR5GATE        equ	540	;# 
  8354     021D                     T5CLK           equ	541	;# 
  8355     021D                     TMR5CLK         equ	541	;# 
  8356     021D                     PR5             equ	541	;# 
  8357     021E                     CCPTMRS0        equ	542	;# 
  8358     021F                     CCPTMRS1        equ	543	;# 
  8359     028C                     T2TMR           equ	652	;# 
  8360     028C                     TMR2            equ	652	;# 
  8361     028D                     T2PR            equ	653	;# 
  8362     028D                     PR2             equ	653	;# 
  8363     028E                     T2CON           equ	654	;# 
  8364     028F                     T2HLT           equ	655	;# 
  8365     0290                     T2CLKCON        equ	656	;# 
  8366     0291                     T2RST           equ	657	;# 
  8367     0292                     T4TMR           equ	658	;# 
  8368     0292                     TMR4            equ	658	;# 
  8369     0293                     T4PR            equ	659	;# 
  8370     0293                     PR4             equ	659	;# 
  8371     0294                     T4CON           equ	660	;# 
  8372     0295                     T4HLT           equ	661	;# 
  8373     0296                     T4CLKCON        equ	662	;# 
  8374     0297                     T4RST           equ	663	;# 
  8375     0298                     T6TMR           equ	664	;# 
  8376     0298                     TMR6            equ	664	;# 
  8377     0299                     T6PR            equ	665	;# 
  8378     0299                     PR6             equ	665	;# 
  8379     029A                     T6CON           equ	666	;# 
  8380     029B                     T6HLT           equ	667	;# 
  8381     029C                     T6CLKCON        equ	668	;# 
  8382     029D                     T6RST           equ	669	;# 
  8383     029F                     ADCPCON0        equ	671	;# 
  8384     030C                     CCPR1           equ	780	;# 
  8385     030C                     CCPR1L          equ	780	;# 
  8386     030D                     CCPR1H          equ	781	;# 
  8387     030E                     CCP1CON         equ	782	;# 
  8388     030F                     CCP1CAP         equ	783	;# 
  8389     0310                     CCPR2           equ	784	;# 
  8390     0310                     CCPR2L          equ	784	;# 
  8391     0311                     CCPR2H          equ	785	;# 
  8392     0312                     CCP2CON         equ	786	;# 
  8393     0313                     CCP2CAP         equ	787	;# 
  8394     0314                     CCPR3           equ	788	;# 
  8395     0314                     CCPR3L          equ	788	;# 
  8396     0315                     CCPR3H          equ	789	;# 
  8397     0316                     CCP3CON         equ	790	;# 
  8398     0317                     CCP3CAP         equ	791	;# 
  8399     0318                     CCPR4           equ	792	;# 
  8400     0318                     CCPR4L          equ	792	;# 
  8401     0319                     CCPR4H          equ	793	;# 
  8402     031A                     CCP4CON         equ	794	;# 
  8403     031B                     CCP4CAP         equ	795	;# 
  8404     031C                     CCPR5           equ	796	;# 
  8405     031C                     CCPR5L          equ	796	;# 
  8406     031D                     CCPR5H          equ	797	;# 
  8407     031E                     CCP5CON         equ	798	;# 
  8408     031F                     CCP5CAP         equ	799	;# 
  8409     038C                     PWM6DC          equ	908	;# 
  8410     038C                     PWM6DCL         equ	908	;# 
  8411     038D                     PWM6DCH         equ	909	;# 
  8412     038E                     PWM6CON         equ	910	;# 
  8413     0390                     PWM7DC          equ	912	;# 
  8414     0390                     PWM7DCL         equ	912	;# 
  8415     0391                     PWM7DCH         equ	913	;# 
  8416     0392                     PWM7CON         equ	914	;# 
  8417     048C                     SMT1TMR         equ	1164	;# 
  8418     048C                     SMT1TMRL        equ	1164	;# 
  8419     048D                     SMT1TMRH        equ	1165	;# 
  8420     048E                     SMT1TMRU        equ	1166	;# 
  8421     048F                     SMT1CPR         equ	1167	;# 
  8422     048F                     SMT1CPRL        equ	1167	;# 
  8423     0490                     SMT1CPRH        equ	1168	;# 
  8424     0491                     SMT1CPRU        equ	1169	;# 
  8425     0492                     SMT1CPW         equ	1170	;# 
  8426     0492                     SMT1CPWL        equ	1170	;# 
  8427     0493                     SMT1CPWH        equ	1171	;# 
  8428     0494                     SMT1CPWU        equ	1172	;# 
  8429     0495                     SMT1PR          equ	1173	;# 
  8430     0495                     SMT1PRL         equ	1173	;# 
  8431     0496                     SMT1PRH         equ	1174	;# 
  8432     0497                     SMT1PRU         equ	1175	;# 
  8433     0498                     SMT1CON0        equ	1176	;# 
  8434     0499                     SMT1CON1        equ	1177	;# 
  8435     049A                     SMT1STAT        equ	1178	;# 
  8436     049B                     SMT1CLK         equ	1179	;# 
  8437     049C                     SMT1SIG         equ	1180	;# 
  8438     049D                     SMT1WIN         equ	1181	;# 
  8439     050C                     SMT2TMR         equ	1292	;# 
  8440     050C                     SMT2TMRL        equ	1292	;# 
  8441     050D                     SMT2TMRH        equ	1293	;# 
  8442     050E                     SMT2TMRU        equ	1294	;# 
  8443     050F                     SMT2CPR         equ	1295	;# 
  8444     050F                     SMT2CPRL        equ	1295	;# 
  8445     0510                     SMT2CPRH        equ	1296	;# 
  8446     0511                     SMT2CPRU        equ	1297	;# 
  8447     0512                     SMT2CPW         equ	1298	;# 
  8448     0512                     SMT2CPWL        equ	1298	;# 
  8449     0513                     SMT2CPWH        equ	1299	;# 
  8450     0514                     SMT2CPWU        equ	1300	;# 
  8451     0515                     SMT2PR          equ	1301	;# 
  8452     0515                     SMT2PRL         equ	1301	;# 
  8453     0516                     SMT2PRH         equ	1302	;# 
  8454     0517                     SMT2PRU         equ	1303	;# 
  8455     0518                     SMT2CON0        equ	1304	;# 
  8456     0519                     SMT2CON1        equ	1305	;# 
  8457     051A                     SMT2STAT        equ	1306	;# 
  8458     051B                     SMT2CLK         equ	1307	;# 
  8459     051C                     SMT2SIG         equ	1308	;# 
  8460     051D                     SMT2WIN         equ	1309	;# 
  8461     058C                     NCO1ACC         equ	1420	;# 
  8462     058C                     NCO1ACCL        equ	1420	;# 
  8463     058D                     NCO1ACCH        equ	1421	;# 
  8464     058E                     NCO1ACCU        equ	1422	;# 
  8465     058F                     NCO1INC         equ	1423	;# 
  8466     058F                     NCO1INCL        equ	1423	;# 
  8467     0590                     NCO1INCH        equ	1424	;# 
  8468     0591                     NCO1INCU        equ	1425	;# 
  8469     0592                     NCO1CON         equ	1426	;# 
  8470     0593                     NCO1CLK         equ	1427	;# 
  8471     059C                     TMR0L           equ	1436	;# 
  8472     059C                     TMR0            equ	1436	;# 
  8473     059D                     TMR0H           equ	1437	;# 
  8474     059D                     PR0             equ	1437	;# 
  8475     059E                     T0CON0          equ	1438	;# 
  8476     059F                     T0CON1          equ	1439	;# 
  8477     060C                     CWG1CLK         equ	1548	;# 
  8478     060C                     CWG1CLKCON      equ	1548	;# 
  8479     060D                     CWG1ISM         equ	1549	;# 
  8480     060D                     CWG1DAT         equ	1549	;# 
  8481     060E                     CWG1DBR         equ	1550	;# 
  8482     060F                     CWG1DBF         equ	1551	;# 
  8483     0610                     CWG1CON0        equ	1552	;# 
  8484     0611                     CWG1CON1        equ	1553	;# 
  8485     0612                     CWG1AS0         equ	1554	;# 
  8486     0613                     CWG1AS1         equ	1555	;# 
  8487     0614                     CWG1STR         equ	1556	;# 
  8488     0616                     CWG2CLK         equ	1558	;# 
  8489     0616                     CWG2CLKCON      equ	1558	;# 
  8490     0617                     CWG2ISM         equ	1559	;# 
  8491     0617                     CWG2DAT         equ	1559	;# 
  8492     0618                     CWG2DBR         equ	1560	;# 
  8493     0619                     CWG2DBF         equ	1561	;# 
  8494     061A                     CWG2CON0        equ	1562	;# 
  8495     061B                     CWG2CON1        equ	1563	;# 
  8496     061C                     CWG2AS0         equ	1564	;# 
  8497     061D                     CWG2AS1         equ	1565	;# 
  8498     061E                     CWG2STR         equ	1566	;# 
  8499     068C                     CWG3CLK         equ	1676	;# 
  8500     068C                     CWG3CLKCON      equ	1676	;# 
  8501     068D                     CWG3ISM         equ	1677	;# 
  8502     068D                     CWG3DAT         equ	1677	;# 
  8503     068E                     CWG3DBR         equ	1678	;# 
  8504     068F                     CWG3DBF         equ	1679	;# 
  8505     0690                     CWG3CON0        equ	1680	;# 
  8506     0691                     CWG3CON1        equ	1681	;# 
  8507     0692                     CWG3AS0         equ	1682	;# 
  8508     0693                     CWG3AS1         equ	1683	;# 
  8509     0694                     CWG3STR         equ	1684	;# 
  8510     070C                     PIR0            equ	1804	;# 
  8511     070D                     PIR1            equ	1805	;# 
  8512     070E                     PIR2            equ	1806	;# 
  8513     070F                     PIR3            equ	1807	;# 
  8514     0710                     PIR4            equ	1808	;# 
  8515     0711                     PIR5            equ	1809	;# 
  8516     0712                     PIR6            equ	1810	;# 
  8517     0713                     PIR7            equ	1811	;# 
  8518     0714                     PIR8            equ	1812	;# 
  8519     0716                     PIE0            equ	1814	;# 
  8520     0717                     PIE1            equ	1815	;# 
  8521     0718                     PIE2            equ	1816	;# 
  8522     0719                     PIE3            equ	1817	;# 
  8523     071A                     PIE4            equ	1818	;# 
  8524     071B                     PIE5            equ	1819	;# 
  8525     071C                     PIE6            equ	1820	;# 
  8526     071D                     PIE7            equ	1821	;# 
  8527     071E                     PIE8            equ	1822	;# 
  8528     0796                     PMD0            equ	1942	;# 
  8529     0797                     PMD1            equ	1943	;# 
  8530     0798                     PMD2            equ	1944	;# 
  8531     0799                     PMD3            equ	1945	;# 
  8532     079A                     PMD4            equ	1946	;# 
  8533     079B                     PMD5            equ	1947	;# 
  8534     079C                     PMD6            equ	1948	;# 
  8535     079D                     PMD7            equ	1949	;# 
  8536     080C                     WDTCON0         equ	2060	;# 
  8537     080D                     WDTCON1         equ	2061	;# 
  8538     080E                     WDTPSL          equ	2062	;# 
  8539     080F                     WDTPSH          equ	2063	;# 
  8540     0810                     WDTTMR          equ	2064	;# 
  8541     0811                     BORCON          equ	2065	;# 
  8542     0813                     PCON0           equ	2067	;# 
  8543     0814                     PCON1           equ	2068	;# 
  8544     081A                     NVMADR          equ	2074	;# 
  8545     081A                     NVMADRL         equ	2074	;# 
  8546     081B                     NVMADRH         equ	2075	;# 
  8547     081C                     NVMDAT          equ	2076	;# 
  8548     081C                     NVMDATL         equ	2076	;# 
  8549     081D                     NVMDATH         equ	2077	;# 
  8550     081E                     NVMCON1         equ	2078	;# 
  8551     081F                     NVMCON2         equ	2079	;# 
  8552     088C                     CPUDOZE         equ	2188	;# 
  8553     088D                     OSCCON1         equ	2189	;# 
  8554     088E                     OSCCON2         equ	2190	;# 
  8555     088F                     OSCCON3         equ	2191	;# 
  8556     0890                     OSCSTAT         equ	2192	;# 
  8557     0891                     OSCEN           equ	2193	;# 
  8558     0892                     OSCTUNE         equ	2194	;# 
  8559     0893                     OSCFRQ          equ	2195	;# 
  8560     0895                     CLKRCON         equ	2197	;# 
  8561     0896                     CLKRCLK         equ	2198	;# 
  8562     0897                     MD1CON0         equ	2199	;# 
  8563     0898                     MD1CON1         equ	2200	;# 
  8564     0899                     MD1SRC          equ	2201	;# 
  8565     089A                     MD1CARL         equ	2202	;# 
  8566     089B                     MD1CARH         equ	2203	;# 
  8567     090C                     FVRCON          equ	2316	;# 
  8568     090E                     DAC1CON0        equ	2318	;# 
  8569     090F                     DAC1CON1        equ	2319	;# 
  8570     091F                     ZCDCON          equ	2335	;# 
  8571     098F                     CMOUT           equ	2447	;# 
  8572     098F                     CMSTAT          equ	2447	;# 
  8573     0990                     CM1CON0         equ	2448	;# 
  8574     0991                     CM1CON1         equ	2449	;# 
  8575     0992                     CM1NCH          equ	2450	;# 
  8576     0993                     CM1PCH          equ	2451	;# 
  8577     0994                     CM2CON0         equ	2452	;# 
  8578     0995                     CM2CON1         equ	2453	;# 
  8579     0996                     CM2NCH          equ	2454	;# 
  8580     0997                     CM2PCH          equ	2455	;# 
  8581     0A19                     RC2REG          equ	2585	;# 
  8582     0A19                     RCREG2          equ	2585	;# 
  8583     0A1A                     TX2REG          equ	2586	;# 
  8584     0A1A                     TXREG2          equ	2586	;# 
  8585     0A1B                     SP2BRG          equ	2587	;# 
  8586     0A1B                     SP2BRGL         equ	2587	;# 
  8587     0A1B                     SPBRG2          equ	2587	;# 
  8588     0A1C                     SP2BRGH         equ	2588	;# 
  8589     0A1C                     SPBRGH2         equ	2588	;# 
  8590     0A1D                     RC2STA          equ	2589	;# 
  8591     0A1D                     RCSTA2          equ	2589	;# 
  8592     0A1E                     TX2STA          equ	2590	;# 
  8593     0A1E                     TXSTA2          equ	2590	;# 
  8594     0A1F                     BAUD2CON        equ	2591	;# 
  8595     0A1F                     BAUDCON2        equ	2591	;# 
  8596     0A1F                     BAUDCTL2        equ	2591	;# 
  8597     1E0F                     CLCDATA         equ	7695	;# 
  8598     1E10                     CLC1CON         equ	7696	;# 
  8599     1E11                     CLC1POL         equ	7697	;# 
  8600     1E12                     CLC1SEL0        equ	7698	;# 
  8601     1E13                     CLC1SEL1        equ	7699	;# 
  8602     1E14                     CLC1SEL2        equ	7700	;# 
  8603     1E15                     CLC1SEL3        equ	7701	;# 
  8604     1E16                     CLC1GLS0        equ	7702	;# 
  8605     1E17                     CLC1GLS1        equ	7703	;# 
  8606     1E18                     CLC1GLS2        equ	7704	;# 
  8607     1E19                     CLC1GLS3        equ	7705	;# 
  8608     1E1A                     CLC2CON         equ	7706	;# 
  8609     1E1B                     CLC2POL         equ	7707	;# 
  8610     1E1C                     CLC2SEL0        equ	7708	;# 
  8611     1E1D                     CLC2SEL1        equ	7709	;# 
  8612     1E1E                     CLC2SEL2        equ	7710	;# 
  8613     1E1F                     CLC2SEL3        equ	7711	;# 
  8614     1E20                     CLC2GLS0        equ	7712	;# 
  8615     1E21                     CLC2GLS1        equ	7713	;# 
  8616     1E22                     CLC2GLS2        equ	7714	;# 
  8617     1E23                     CLC2GLS3        equ	7715	;# 
  8618     1E24                     CLC3CON         equ	7716	;# 
  8619     1E25                     CLC3POL         equ	7717	;# 
  8620     1E26                     CLC3SEL0        equ	7718	;# 
  8621     1E27                     CLC3SEL1        equ	7719	;# 
  8622     1E28                     CLC3SEL2        equ	7720	;# 
  8623     1E29                     CLC3SEL3        equ	7721	;# 
  8624     1E2A                     CLC3GLS0        equ	7722	;# 
  8625     1E2B                     CLC3GLS1        equ	7723	;# 
  8626     1E2C                     CLC3GLS2        equ	7724	;# 
  8627     1E2D                     CLC3GLS3        equ	7725	;# 
  8628     1E2E                     CLC4CON         equ	7726	;# 
  8629     1E2F                     CLC4POL         equ	7727	;# 
  8630     1E30                     CLC4SEL0        equ	7728	;# 
  8631     1E31                     CLC4SEL1        equ	7729	;# 
  8632     1E32                     CLC4SEL2        equ	7730	;# 
  8633     1E33                     CLC4SEL3        equ	7731	;# 
  8634     1E34                     CLC4GLS0        equ	7732	;# 
  8635     1E35                     CLC4GLS1        equ	7733	;# 
  8636     1E36                     CLC4GLS2        equ	7734	;# 
  8637     1E37                     CLC4GLS3        equ	7735	;# 
  8638     1E8F                     PPSLOCK         equ	7823	;# 
  8639     1E90                     INTPPS          equ	7824	;# 
  8640     1E91                     T0CKIPPS        equ	7825	;# 
  8641     1E92                     T1CKIPPS        equ	7826	;# 
  8642     1E93                     T1GPPS          equ	7827	;# 
  8643     1E94                     T3CKIPPS        equ	7828	;# 
  8644     1E95                     T3GPPS          equ	7829	;# 
  8645     1E96                     T5CKIPPS        equ	7830	;# 
  8646     1E97                     T5GPPS          equ	7831	;# 
  8647     1E9C                     T2INPPS         equ	7836	;# 
  8648     1E9D                     T4INPPS         equ	7837	;# 
  8649     1E9E                     T6INPPS         equ	7838	;# 
  8650     1EA1                     CCP1PPS         equ	7841	;# 
  8651     1EA2                     CCP2PPS         equ	7842	;# 
  8652     1EA3                     CCP3PPS         equ	7843	;# 
  8653     1EA4                     CCP4PPS         equ	7844	;# 
  8654     1EA5                     CCP5PPS         equ	7845	;# 
  8655     1EA9                     SMT1WINPPS      equ	7849	;# 
  8656     1EAA                     SMT1SIGPPS      equ	7850	;# 
  8657     1EAB                     SMT2WINPPS      equ	7851	;# 
  8658     1EAC                     SMT2SIGPPS      equ	7852	;# 
  8659     1EB1                     CWG1PPS         equ	7857	;# 
  8660     1EB2                     CWG2PPS         equ	7858	;# 
  8661     1EB3                     CWG3PPS         equ	7859	;# 
  8662     1EB8                     MDCARLPPS       equ	7864	;# 
  8663     1EB9                     MDCARHPPS       equ	7865	;# 
  8664     1EBA                     MDSRCPPS        equ	7866	;# 
  8665     1EBB                     CLCIN0PPS       equ	7867	;# 
  8666     1EBC                     CLCIN1PPS       equ	7868	;# 
  8667     1EBD                     CLCIN2PPS       equ	7869	;# 
  8668     1EBE                     CLCIN3PPS       equ	7870	;# 
  8669     1EC3                     ADACTPPS        equ	7875	;# 
  8670     1EC5                     SSP1CLKPPS      equ	7877	;# 
  8671     1EC6                     SSP1DATPPS      equ	7878	;# 
  8672     1EC7                     SSP1SSPPS       equ	7879	;# 
  8673     1EC8                     SSP2CLKPPS      equ	7880	;# 
  8674     1EC9                     SSP2DATPPS      equ	7881	;# 
  8675     1ECA                     SSP2SSPPS       equ	7882	;# 
  8676     1ECB                     RX1PPS          equ	7883	;# 
  8677     1ECC                     CK1PPS          equ	7884	;# 
  8678     1ECD                     RX2PPS          equ	7885	;# 
  8679     1ECE                     CK2PPS          equ	7886	;# 
  8680     1F10                     RA0PPS          equ	7952	;# 
  8681     1F11                     RA1PPS          equ	7953	;# 
  8682     1F12                     RA2PPS          equ	7954	;# 
  8683     1F13                     RA3PPS          equ	7955	;# 
  8684     1F14                     RA4PPS          equ	7956	;# 
  8685     1F15                     RA5PPS          equ	7957	;# 
  8686     1F16                     RA6PPS          equ	7958	;# 
  8687     1F17                     RA7PPS          equ	7959	;# 
  8688     1F18                     RB0PPS          equ	7960	;# 
  8689     1F19                     RB1PPS          equ	7961	;# 
  8690     1F1A                     RB2PPS          equ	7962	;# 
  8691     1F1B                     RB3PPS          equ	7963	;# 
  8692     1F1C                     RB4PPS          equ	7964	;# 
  8693     1F1D                     RB5PPS          equ	7965	;# 
  8694     1F1E                     RB6PPS          equ	7966	;# 
  8695     1F1F                     RB7PPS          equ	7967	;# 
  8696     1F20                     RC0PPS          equ	7968	;# 
  8697     1F21                     RC1PPS          equ	7969	;# 
  8698     1F22                     RC2PPS          equ	7970	;# 
  8699     1F23                     RC3PPS          equ	7971	;# 
  8700     1F24                     RC4PPS          equ	7972	;# 
  8701     1F25                     RC5PPS          equ	7973	;# 
  8702     1F26                     RC6PPS          equ	7974	;# 
  8703     1F27                     RC7PPS          equ	7975	;# 
  8704     1F38                     ANSELA          equ	7992	;# 
  8705     1F39                     WPUA            equ	7993	;# 
  8706     1F3A                     ODCONA          equ	7994	;# 
  8707     1F3B                     SLRCONA         equ	7995	;# 
  8708     1F3C                     INLVLA          equ	7996	;# 
  8709     1F3D                     IOCAP           equ	7997	;# 
  8710     1F3E                     IOCAN           equ	7998	;# 
  8711     1F3F                     IOCAF           equ	7999	;# 
  8712     1F43                     ANSELB          equ	8003	;# 
  8713     1F44                     WPUB            equ	8004	;# 
  8714     1F45                     ODCONB          equ	8005	;# 
  8715     1F46                     SLRCONB         equ	8006	;# 
  8716     1F47                     INLVLB          equ	8007	;# 
  8717     1F48                     IOCBP           equ	8008	;# 
  8718     1F49                     IOCBN           equ	8009	;# 
  8719     1F4A                     IOCBF           equ	8010	;# 
  8720     1F4E                     ANSELC          equ	8014	;# 
  8721     1F4F                     WPUC            equ	8015	;# 
  8722     1F50                     ODCONC          equ	8016	;# 
  8723     1F51                     SLRCONC         equ	8017	;# 
  8724     1F52                     INLVLC          equ	8018	;# 
  8725     1F53                     IOCCP           equ	8019	;# 
  8726     1F54                     IOCCN           equ	8020	;# 
  8727     1F55                     IOCCF           equ	8021	;# 
  8728     1F65                     WPUE            equ	8037	;# 
  8729     1F66                     ODCONE          equ	8038	;# 
  8730     1F67                     SLRCONE         equ	8039	;# 
  8731     1F68                     INLVLE          equ	8040	;# 
  8732     1F69                     IOCEP           equ	8041	;# 
  8733     1F6A                     IOCEN           equ	8042	;# 
  8734     1F6B                     IOCEF           equ	8043	;# 
  8735     1FE4                     STATUS_SHAD     equ	8164	;# 
  8736     1FE5                     WREG_SHAD       equ	8165	;# 
  8737     1FE6                     BSR_SHAD        equ	8166	;# 
  8738     1FE7                     PCLATH_SHAD     equ	8167	;# 
  8739     1FE8                     FSR0_SHAD       equ	8168	;# 
  8740     1FE8                     FSR0L_SHAD      equ	8168	;# 
  8741     1FE9                     FSR0H_SHAD      equ	8169	;# 
  8742     1FEA                     FSR1L_SHAD      equ	8170	;# 
  8743     1FEB                     FSR1H_SHAD      equ	8171	;# 
  8744     1FED                     STKPTR          equ	8173	;# 
  8745     1FEE                     TOSL            equ	8174	;# 
  8746     1FEF                     TOSH            equ	8175	;# 
  8747     0000                     INDF0           equ	0	;# 
  8748     0001                     INDF1           equ	1	;# 
  8749     0002                     PCL             equ	2	;# 
  8750     0003                     STATUS          equ	3	;# 
  8751     0004                     FSR0L           equ	4	;# 
  8752     0005                     FSR0H           equ	5	;# 
  8753     0006                     FSR1L           equ	6	;# 
  8754     0007                     FSR1H           equ	7	;# 
  8755     0008                     BSR             equ	8	;# 
  8756     0009                     WREG            equ	9	;# 
  8757     000A                     PCLATH          equ	10	;# 
  8758     000B                     INTCON          equ	11	;# 
  8759     000C                     PORTA           equ	12	;# 
  8760     000D                     PORTB           equ	13	;# 
  8761     000E                     PORTC           equ	14	;# 
  8762     0010                     PORTE           equ	16	;# 
  8763     0012                     TRISA           equ	18	;# 
  8764     0013                     TRISB           equ	19	;# 
  8765     0014                     TRISC           equ	20	;# 
  8766     0016                     TRISE           equ	22	;# 
  8767     0018                     LATA            equ	24	;# 
  8768     0019                     LATB            equ	25	;# 
  8769     001A                     LATC            equ	26	;# 
  8770     008C                     ADLTH           equ	140	;# 
  8771     008C                     ADLTHL          equ	140	;# 
  8772     008D                     ADLTHH          equ	141	;# 
  8773     008E                     ADUTH           equ	142	;# 
  8774     008E                     ADUTHL          equ	142	;# 
  8775     008F                     ADUTHH          equ	143	;# 
  8776     0090                     ADERR           equ	144	;# 
  8777     0090                     ADERRL          equ	144	;# 
  8778     0091                     ADERRH          equ	145	;# 
  8779     0092                     ADSTPT          equ	146	;# 
  8780     0092                     ADSTPTL         equ	146	;# 
  8781     0093                     ADSTPTH         equ	147	;# 
  8782     0094                     ADFLTR          equ	148	;# 
  8783     0094                     ADFLTRL         equ	148	;# 
  8784     0095                     ADFLTRH         equ	149	;# 
  8785     0096                     ADACC           equ	150	;# 
  8786     0096                     ADACCL          equ	150	;# 
  8787     0097                     ADACCH          equ	151	;# 
  8788     0098                     ADACCU          equ	152	;# 
  8789     0099                     ADCNT           equ	153	;# 
  8790     009A                     ADRPT           equ	154	;# 
  8791     009B                     ADPREV          equ	155	;# 
  8792     009B                     ADPREVL         equ	155	;# 
  8793     009C                     ADPREVH         equ	156	;# 
  8794     009D                     ADRES           equ	157	;# 
  8795     009D                     ADRESL          equ	157	;# 
  8796     009E                     ADRESH          equ	158	;# 
  8797     009F                     ADPCH           equ	159	;# 
  8798     010C                     ADACQ           equ	268	;# 
  8799     010C                     ADACQL          equ	268	;# 
  8800     010D                     ADACQH          equ	269	;# 
  8801     010E                     ADCAP           equ	270	;# 
  8802     010F                     ADPRE           equ	271	;# 
  8803     010F                     ADPREL          equ	271	;# 
  8804     0110                     ADPREH          equ	272	;# 
  8805     0111                     ADCON0          equ	273	;# 
  8806     0112                     ADCON1          equ	274	;# 
  8807     0113                     ADCON2          equ	275	;# 
  8808     0114                     ADCON3          equ	276	;# 
  8809     0115                     ADSTAT          equ	277	;# 
  8810     0116                     ADREF           equ	278	;# 
  8811     0117                     ADACT           equ	279	;# 
  8812     0118                     ADCLK           equ	280	;# 
  8813     0119                     RC1REG          equ	281	;# 
  8814     0119                     RCREG           equ	281	;# 
  8815     0119                     RCREG1          equ	281	;# 
  8816     011A                     TX1REG          equ	282	;# 
  8817     011A                     TXREG1          equ	282	;# 
  8818     011A                     TXREG           equ	282	;# 
  8819     011B                     SP1BRG          equ	283	;# 
  8820     011B                     SPBRG           equ	283	;# 
  8821     011B                     SP1BRGL         equ	283	;# 
  8822     011B                     SPBRG1          equ	283	;# 
  8823     011B                     SPBRGL          equ	283	;# 
  8824     011C                     SP1BRGH         equ	284	;# 
  8825     011C                     SPBRGH          equ	284	;# 
  8826     011C                     SPBRGH1         equ	284	;# 
  8827     011D                     RC1STA          equ	285	;# 
  8828     011D                     RCSTA1          equ	285	;# 
  8829     011D                     RCSTA           equ	285	;# 
  8830     011E                     TX1STA          equ	286	;# 
  8831     011E                     TXSTA1          equ	286	;# 
  8832     011E                     TXSTA           equ	286	;# 
  8833     011F                     BAUD1CON        equ	287	;# 
  8834     011F                     BAUDCON1        equ	287	;# 
  8835     011F                     BAUDCTL1        equ	287	;# 
  8836     011F                     BAUDCON         equ	287	;# 
  8837     011F                     BAUDCTL         equ	287	;# 
  8838     018C                     SSP1BUF         equ	396	;# 
  8839     018D                     SSP1ADD         equ	397	;# 
  8840     018E                     SSP1MSK         equ	398	;# 
  8841     018F                     SSP1STAT        equ	399	;# 
  8842     0190                     SSP1CON1        equ	400	;# 
  8843     0191                     SSP1CON2        equ	401	;# 
  8844     0192                     SSP1CON3        equ	402	;# 
  8845     0196                     SSP2BUF         equ	406	;# 
  8846     0197                     SSP2ADD         equ	407	;# 
  8847     0198                     SSP2MSK         equ	408	;# 
  8848     0199                     SSP2STAT        equ	409	;# 
  8849     019A                     SSP2CON1        equ	410	;# 
  8850     019B                     SSP2CON2        equ	411	;# 
  8851     019C                     SSP2CON3        equ	412	;# 
  8852     020C                     TMR1            equ	524	;# 
  8853     020C                     TMR1L           equ	524	;# 
  8854     020D                     TMR1H           equ	525	;# 
  8855     020E                     T1CON           equ	526	;# 
  8856     020E                     TMR1CON         equ	526	;# 
  8857     020F                     T1GCON          equ	527	;# 
  8858     020F                     TMR1GCON        equ	527	;# 
  8859     0210                     T1GATE          equ	528	;# 
  8860     0210                     TMR1GATE        equ	528	;# 
  8861     0211                     T1CLK           equ	529	;# 
  8862     0211                     TMR1CLK         equ	529	;# 
  8863     0211                     PR1             equ	529	;# 
  8864     0212                     TMR3            equ	530	;# 
  8865     0212                     TMR3L           equ	530	;# 
  8866     0213                     TMR3H           equ	531	;# 
  8867     0214                     T3CON           equ	532	;# 
  8868     0214                     TMR3CON         equ	532	;# 
  8869     0215                     T3GCON          equ	533	;# 
  8870     0215                     TMR3GCON        equ	533	;# 
  8871     0216                     T3GATE          equ	534	;# 
  8872     0216                     TMR3GATE        equ	534	;# 
  8873     0217                     T3CLK           equ	535	;# 
  8874     0217                     TMR3CLK         equ	535	;# 
  8875     0217                     PR3             equ	535	;# 
  8876     0218                     TMR5            equ	536	;# 
  8877     0218                     TMR5L           equ	536	;# 
  8878     0219                     TMR5H           equ	537	;# 
  8879     021A                     T5CON           equ	538	;# 
  8880     021A                     TMR5CON         equ	538	;# 
  8881     021B                     T5GCON          equ	539	;# 
  8882     021B                     TMR5GCON        equ	539	;# 
  8883     021C                     T5GATE          equ	540	;# 
  8884     021C                     TMR5GATE        equ	540	;# 
  8885     021D                     T5CLK           equ	541	;# 
  8886     021D                     TMR5CLK         equ	541	;# 
  8887     021D                     PR5             equ	541	;# 
  8888     021E                     CCPTMRS0        equ	542	;# 
  8889     021F                     CCPTMRS1        equ	543	;# 
  8890     028C                     T2TMR           equ	652	;# 
  8891     028C                     TMR2            equ	652	;# 
  8892     028D                     T2PR            equ	653	;# 
  8893     028D                     PR2             equ	653	;# 
  8894     028E                     T2CON           equ	654	;# 
  8895     028F                     T2HLT           equ	655	;# 
  8896     0290                     T2CLKCON        equ	656	;# 
  8897     0291                     T2RST           equ	657	;# 
  8898     0292                     T4TMR           equ	658	;# 
  8899     0292                     TMR4            equ	658	;# 
  8900     0293                     T4PR            equ	659	;# 
  8901     0293                     PR4             equ	659	;# 
  8902     0294                     T4CON           equ	660	;# 
  8903     0295                     T4HLT           equ	661	;# 
  8904     0296                     T4CLKCON        equ	662	;# 
  8905     0297                     T4RST           equ	663	;# 
  8906     0298                     T6TMR           equ	664	;# 
  8907     0298                     TMR6            equ	664	;# 
  8908     0299                     T6PR            equ	665	;# 
  8909     0299                     PR6             equ	665	;# 
  8910     029A                     T6CON           equ	666	;# 
  8911     029B                     T6HLT           equ	667	;# 
  8912     029C                     T6CLKCON        equ	668	;# 
  8913     029D                     T6RST           equ	669	;# 
  8914     029F                     ADCPCON0        equ	671	;# 
  8915     030C                     CCPR1           equ	780	;# 
  8916     030C                     CCPR1L          equ	780	;# 
  8917     030D                     CCPR1H          equ	781	;# 
  8918     030E                     CCP1CON         equ	782	;# 
  8919     030F                     CCP1CAP         equ	783	;# 
  8920     0310                     CCPR2           equ	784	;# 
  8921     0310                     CCPR2L          equ	784	;# 
  8922     0311                     CCPR2H          equ	785	;# 
  8923     0312                     CCP2CON         equ	786	;# 
  8924     0313                     CCP2CAP         equ	787	;# 
  8925     0314                     CCPR3           equ	788	;# 
  8926     0314                     CCPR3L          equ	788	;# 
  8927     0315                     CCPR3H          equ	789	;# 
  8928     0316                     CCP3CON         equ	790	;# 
  8929     0317                     CCP3CAP         equ	791	;# 
  8930     0318                     CCPR4           equ	792	;# 
  8931     0318                     CCPR4L          equ	792	;# 
  8932     0319                     CCPR4H          equ	793	;# 
  8933     031A                     CCP4CON         equ	794	;# 
  8934     031B                     CCP4CAP         equ	795	;# 
  8935     031C                     CCPR5           equ	796	;# 
  8936     031C                     CCPR5L          equ	796	;# 
  8937     031D                     CCPR5H          equ	797	;# 
  8938     031E                     CCP5CON         equ	798	;# 
  8939     031F                     CCP5CAP         equ	799	;# 
  8940     038C                     PWM6DC          equ	908	;# 
  8941     038C                     PWM6DCL         equ	908	;# 
  8942     038D                     PWM6DCH         equ	909	;# 
  8943     038E                     PWM6CON         equ	910	;# 
  8944     0390                     PWM7DC          equ	912	;# 
  8945     0390                     PWM7DCL         equ	912	;# 
  8946     0391                     PWM7DCH         equ	913	;# 
  8947     0392                     PWM7CON         equ	914	;# 
  8948     048C                     SMT1TMR         equ	1164	;# 
  8949     048C                     SMT1TMRL        equ	1164	;# 
  8950     048D                     SMT1TMRH        equ	1165	;# 
  8951     048E                     SMT1TMRU        equ	1166	;# 
  8952     048F                     SMT1CPR         equ	1167	;# 
  8953     048F                     SMT1CPRL        equ	1167	;# 
  8954     0490                     SMT1CPRH        equ	1168	;# 
  8955     0491                     SMT1CPRU        equ	1169	;# 
  8956     0492                     SMT1CPW         equ	1170	;# 
  8957     0492                     SMT1CPWL        equ	1170	;# 
  8958     0493                     SMT1CPWH        equ	1171	;# 
  8959     0494                     SMT1CPWU        equ	1172	;# 
  8960     0495                     SMT1PR          equ	1173	;# 
  8961     0495                     SMT1PRL         equ	1173	;# 
  8962     0496                     SMT1PRH         equ	1174	;# 
  8963     0497                     SMT1PRU         equ	1175	;# 
  8964     0498                     SMT1CON0        equ	1176	;# 
  8965     0499                     SMT1CON1        equ	1177	;# 
  8966     049A                     SMT1STAT        equ	1178	;# 
  8967     049B                     SMT1CLK         equ	1179	;# 
  8968     049C                     SMT1SIG         equ	1180	;# 
  8969     049D                     SMT1WIN         equ	1181	;# 
  8970     050C                     SMT2TMR         equ	1292	;# 
  8971     050C                     SMT2TMRL        equ	1292	;# 
  8972     050D                     SMT2TMRH        equ	1293	;# 
  8973     050E                     SMT2TMRU        equ	1294	;# 
  8974     050F                     SMT2CPR         equ	1295	;# 
  8975     050F                     SMT2CPRL        equ	1295	;# 
  8976     0510                     SMT2CPRH        equ	1296	;# 
  8977     0511                     SMT2CPRU        equ	1297	;# 
  8978     0512                     SMT2CPW         equ	1298	;# 
  8979     0512                     SMT2CPWL        equ	1298	;# 
  8980     0513                     SMT2CPWH        equ	1299	;# 
  8981     0514                     SMT2CPWU        equ	1300	;# 
  8982     0515                     SMT2PR          equ	1301	;# 
  8983     0515                     SMT2PRL         equ	1301	;# 
  8984     0516                     SMT2PRH         equ	1302	;# 
  8985     0517                     SMT2PRU         equ	1303	;# 
  8986     0518                     SMT2CON0        equ	1304	;# 
  8987     0519                     SMT2CON1        equ	1305	;# 
  8988     051A                     SMT2STAT        equ	1306	;# 
  8989     051B                     SMT2CLK         equ	1307	;# 
  8990     051C                     SMT2SIG         equ	1308	;# 
  8991     051D                     SMT2WIN         equ	1309	;# 
  8992     058C                     NCO1ACC         equ	1420	;# 
  8993     058C                     NCO1ACCL        equ	1420	;# 
  8994     058D                     NCO1ACCH        equ	1421	;# 
  8995     058E                     NCO1ACCU        equ	1422	;# 
  8996     058F                     NCO1INC         equ	1423	;# 
  8997     058F                     NCO1INCL        equ	1423	;# 
  8998     0590                     NCO1INCH        equ	1424	;# 
  8999     0591                     NCO1INCU        equ	1425	;# 
  9000     0592                     NCO1CON         equ	1426	;# 
  9001     0593                     NCO1CLK         equ	1427	;# 
  9002     059C                     TMR0L           equ	1436	;# 
  9003     059C                     TMR0            equ	1436	;# 
  9004     059D                     TMR0H           equ	1437	;# 
  9005     059D                     PR0             equ	1437	;# 
  9006     059E                     T0CON0          equ	1438	;# 
  9007     059F                     T0CON1          equ	1439	;# 
  9008     060C                     CWG1CLK         equ	1548	;# 
  9009     060C                     CWG1CLKCON      equ	1548	;# 
  9010     060D                     CWG1ISM         equ	1549	;# 
  9011     060D                     CWG1DAT         equ	1549	;# 
  9012     060E                     CWG1DBR         equ	1550	;# 
  9013     060F                     CWG1DBF         equ	1551	;# 
  9014     0610                     CWG1CON0        equ	1552	;# 
  9015     0611                     CWG1CON1        equ	1553	;# 
  9016     0612                     CWG1AS0         equ	1554	;# 
  9017     0613                     CWG1AS1         equ	1555	;# 
  9018     0614                     CWG1STR         equ	1556	;# 
  9019     0616                     CWG2CLK         equ	1558	;# 
  9020     0616                     CWG2CLKCON      equ	1558	;# 
  9021     0617                     CWG2ISM         equ	1559	;# 
  9022     0617                     CWG2DAT         equ	1559	;# 
  9023     0618                     CWG2DBR         equ	1560	;# 
  9024     0619                     CWG2DBF         equ	1561	;# 
  9025     061A                     CWG2CON0        equ	1562	;# 
  9026     061B                     CWG2CON1        equ	1563	;# 
  9027     061C                     CWG2AS0         equ	1564	;# 
  9028     061D                     CWG2AS1         equ	1565	;# 
  9029     061E                     CWG2STR         equ	1566	;# 
  9030     068C                     CWG3CLK         equ	1676	;# 
  9031     068C                     CWG3CLKCON      equ	1676	;# 
  9032     068D                     CWG3ISM         equ	1677	;# 
  9033     068D                     CWG3DAT         equ	1677	;# 
  9034     068E                     CWG3DBR         equ	1678	;# 
  9035     068F                     CWG3DBF         equ	1679	;# 
  9036     0690                     CWG3CON0        equ	1680	;# 
  9037     0691                     CWG3CON1        equ	1681	;# 
  9038     0692                     CWG3AS0         equ	1682	;# 
  9039     0693                     CWG3AS1         equ	1683	;# 
  9040     0694                     CWG3STR         equ	1684	;# 
  9041     070C                     PIR0            equ	1804	;# 
  9042     070D                     PIR1            equ	1805	;# 
  9043     070E                     PIR2            equ	1806	;# 
  9044     070F                     PIR3            equ	1807	;# 
  9045     0710                     PIR4            equ	1808	;# 
  9046     0711                     PIR5            equ	1809	;# 
  9047     0712                     PIR6            equ	1810	;# 
  9048     0713                     PIR7            equ	1811	;# 
  9049     0714                     PIR8            equ	1812	;# 
  9050     0716                     PIE0            equ	1814	;# 
  9051     0717                     PIE1            equ	1815	;# 
  9052     0718                     PIE2            equ	1816	;# 
  9053     0719                     PIE3            equ	1817	;# 
  9054     071A                     PIE4            equ	1818	;# 
  9055     071B                     PIE5            equ	1819	;# 
  9056     071C                     PIE6            equ	1820	;# 
  9057     071D                     PIE7            equ	1821	;# 
  9058     071E                     PIE8            equ	1822	;# 
  9059     0796                     PMD0            equ	1942	;# 
  9060     0797                     PMD1            equ	1943	;# 
  9061     0798                     PMD2            equ	1944	;# 
  9062     0799                     PMD3            equ	1945	;# 
  9063     079A                     PMD4            equ	1946	;# 
  9064     079B                     PMD5            equ	1947	;# 
  9065     079C                     PMD6            equ	1948	;# 
  9066     079D                     PMD7            equ	1949	;# 
  9067     080C                     WDTCON0         equ	2060	;# 
  9068     080D                     WDTCON1         equ	2061	;# 
  9069     080E                     WDTPSL          equ	2062	;# 
  9070     080F                     WDTPSH          equ	2063	;# 
  9071     0810                     WDTTMR          equ	2064	;# 
  9072     0811                     BORCON          equ	2065	;# 
  9073     0813                     PCON0           equ	2067	;# 
  9074     0814                     PCON1           equ	2068	;# 
  9075     081A                     NVMADR          equ	2074	;# 
  9076     081A                     NVMADRL         equ	2074	;# 
  9077     081B                     NVMADRH         equ	2075	;# 
  9078     081C                     NVMDAT          equ	2076	;# 
  9079     081C                     NVMDATL         equ	2076	;# 
  9080     081D                     NVMDATH         equ	2077	;# 
  9081     081E                     NVMCON1         equ	2078	;# 
  9082     081F                     NVMCON2         equ	2079	;# 
  9083     088C                     CPUDOZE         equ	2188	;# 
  9084     088D                     OSCCON1         equ	2189	;# 
  9085     088E                     OSCCON2         equ	2190	;# 
  9086     088F                     OSCCON3         equ	2191	;# 
  9087     0890                     OSCSTAT         equ	2192	;# 
  9088     0891                     OSCEN           equ	2193	;# 
  9089     0892                     OSCTUNE         equ	2194	;# 
  9090     0893                     OSCFRQ          equ	2195	;# 
  9091     0895                     CLKRCON         equ	2197	;# 
  9092     0896                     CLKRCLK         equ	2198	;# 
  9093     0897                     MD1CON0         equ	2199	;# 
  9094     0898                     MD1CON1         equ	2200	;# 
  9095     0899                     MD1SRC          equ	2201	;# 
  9096     089A                     MD1CARL         equ	2202	;# 
  9097     089B                     MD1CARH         equ	2203	;# 
  9098     090C                     FVRCON          equ	2316	;# 
  9099     090E                     DAC1CON0        equ	2318	;# 
  9100     090F                     DAC1CON1        equ	2319	;# 
  9101     091F                     ZCDCON          equ	2335	;# 
  9102     098F                     CMOUT           equ	2447	;# 
  9103     098F                     CMSTAT          equ	2447	;# 
  9104     0990                     CM1CON0         equ	2448	;# 
  9105     0991                     CM1CON1         equ	2449	;# 
  9106     0992                     CM1NCH          equ	2450	;# 
  9107     0993                     CM1PCH          equ	2451	;# 
  9108     0994                     CM2CON0         equ	2452	;# 
  9109     0995                     CM2CON1         equ	2453	;# 
  9110     0996                     CM2NCH          equ	2454	;# 
  9111     0997                     CM2PCH          equ	2455	;# 
  9112     0A19                     RC2REG          equ	2585	;# 
  9113     0A19                     RCREG2          equ	2585	;# 
  9114     0A1A                     TX2REG          equ	2586	;# 
  9115     0A1A                     TXREG2          equ	2586	;# 
  9116     0A1B                     SP2BRG          equ	2587	;# 
  9117     0A1B                     SP2BRGL         equ	2587	;# 
  9118     0A1B                     SPBRG2          equ	2587	;# 
  9119     0A1C                     SP2BRGH         equ	2588	;# 
  9120     0A1C                     SPBRGH2         equ	2588	;# 
  9121     0A1D                     RC2STA          equ	2589	;# 
  9122     0A1D                     RCSTA2          equ	2589	;# 
  9123     0A1E                     TX2STA          equ	2590	;# 
  9124     0A1E                     TXSTA2          equ	2590	;# 
  9125     0A1F                     BAUD2CON        equ	2591	;# 
  9126     0A1F                     BAUDCON2        equ	2591	;# 
  9127     0A1F                     BAUDCTL2        equ	2591	;# 
  9128     1E0F                     CLCDATA         equ	7695	;# 
  9129     1E10                     CLC1CON         equ	7696	;# 
  9130     1E11                     CLC1POL         equ	7697	;# 
  9131     1E12                     CLC1SEL0        equ	7698	;# 
  9132     1E13                     CLC1SEL1        equ	7699	;# 
  9133     1E14                     CLC1SEL2        equ	7700	;# 
  9134     1E15                     CLC1SEL3        equ	7701	;# 
  9135     1E16                     CLC1GLS0        equ	7702	;# 
  9136     1E17                     CLC1GLS1        equ	7703	;# 
  9137     1E18                     CLC1GLS2        equ	7704	;# 
  9138     1E19                     CLC1GLS3        equ	7705	;# 
  9139     1E1A                     CLC2CON         equ	7706	;# 
  9140     1E1B                     CLC2POL         equ	7707	;# 
  9141     1E1C                     CLC2SEL0        equ	7708	;# 
  9142     1E1D                     CLC2SEL1        equ	7709	;# 
  9143     1E1E                     CLC2SEL2        equ	7710	;# 
  9144     1E1F                     CLC2SEL3        equ	7711	;# 
  9145     1E20                     CLC2GLS0        equ	7712	;# 
  9146     1E21                     CLC2GLS1        equ	7713	;# 
  9147     1E22                     CLC2GLS2        equ	7714	;# 
  9148     1E23                     CLC2GLS3        equ	7715	;# 
  9149     1E24                     CLC3CON         equ	7716	;# 
  9150     1E25                     CLC3POL         equ	7717	;# 
  9151     1E26                     CLC3SEL0        equ	7718	;# 
  9152     1E27                     CLC3SEL1        equ	7719	;# 
  9153     1E28                     CLC3SEL2        equ	7720	;# 
  9154     1E29                     CLC3SEL3        equ	7721	;# 
  9155     1E2A                     CLC3GLS0        equ	7722	;# 
  9156     1E2B                     CLC3GLS1        equ	7723	;# 
  9157     1E2C                     CLC3GLS2        equ	7724	;# 
  9158     1E2D                     CLC3GLS3        equ	7725	;# 
  9159     1E2E                     CLC4CON         equ	7726	;# 
  9160     1E2F                     CLC4POL         equ	7727	;# 
  9161     1E30                     CLC4SEL0        equ	7728	;# 
  9162     1E31                     CLC4SEL1        equ	7729	;# 
  9163     1E32                     CLC4SEL2        equ	7730	;# 
  9164     1E33                     CLC4SEL3        equ	7731	;# 
  9165     1E34                     CLC4GLS0        equ	7732	;# 
  9166     1E35                     CLC4GLS1        equ	7733	;# 
  9167     1E36                     CLC4GLS2        equ	7734	;# 
  9168     1E37                     CLC4GLS3        equ	7735	;# 
  9169     1E8F                     PPSLOCK         equ	7823	;# 
  9170     1E90                     INTPPS          equ	7824	;# 
  9171     1E91                     T0CKIPPS        equ	7825	;# 
  9172     1E92                     T1CKIPPS        equ	7826	;# 
  9173     1E93                     T1GPPS          equ	7827	;# 
  9174     1E94                     T3CKIPPS        equ	7828	;# 
  9175     1E95                     T3GPPS          equ	7829	;# 
  9176     1E96                     T5CKIPPS        equ	7830	;# 
  9177     1E97                     T5GPPS          equ	7831	;# 
  9178     1E9C                     T2INPPS         equ	7836	;# 
  9179     1E9D                     T4INPPS         equ	7837	;# 
  9180     1E9E                     T6INPPS         equ	7838	;# 
  9181     1EA1                     CCP1PPS         equ	7841	;# 
  9182     1EA2                     CCP2PPS         equ	7842	;# 
  9183     1EA3                     CCP3PPS         equ	7843	;# 
  9184     1EA4                     CCP4PPS         equ	7844	;# 
  9185     1EA5                     CCP5PPS         equ	7845	;# 
  9186     1EA9                     SMT1WINPPS      equ	7849	;# 
  9187     1EAA                     SMT1SIGPPS      equ	7850	;# 
  9188     1EAB                     SMT2WINPPS      equ	7851	;# 
  9189     1EAC                     SMT2SIGPPS      equ	7852	;# 
  9190     1EB1                     CWG1PPS         equ	7857	;# 
  9191     1EB2                     CWG2PPS         equ	7858	;# 
  9192     1EB3                     CWG3PPS         equ	7859	;# 
  9193     1EB8                     MDCARLPPS       equ	7864	;# 
  9194     1EB9                     MDCARHPPS       equ	7865	;# 
  9195     1EBA                     MDSRCPPS        equ	7866	;# 
  9196     1EBB                     CLCIN0PPS       equ	7867	;# 
  9197     1EBC                     CLCIN1PPS       equ	7868	;# 
  9198     1EBD                     CLCIN2PPS       equ	7869	;# 
  9199     1EBE                     CLCIN3PPS       equ	7870	;# 
  9200     1EC3                     ADACTPPS        equ	7875	;# 
  9201     1EC5                     SSP1CLKPPS      equ	7877	;# 
  9202     1EC6                     SSP1DATPPS      equ	7878	;# 
  9203     1EC7                     SSP1SSPPS       equ	7879	;# 
  9204     1EC8                     SSP2CLKPPS      equ	7880	;# 
  9205     1EC9                     SSP2DATPPS      equ	7881	;# 
  9206     1ECA                     SSP2SSPPS       equ	7882	;# 
  9207     1ECB                     RX1PPS          equ	7883	;# 
  9208     1ECC                     CK1PPS          equ	7884	;# 
  9209     1ECD                     RX2PPS          equ	7885	;# 
  9210     1ECE                     CK2PPS          equ	7886	;# 
  9211     1F10                     RA0PPS          equ	7952	;# 
  9212     1F11                     RA1PPS          equ	7953	;# 
  9213     1F12                     RA2PPS          equ	7954	;# 
  9214     1F13                     RA3PPS          equ	7955	;# 
  9215     1F14                     RA4PPS          equ	7956	;# 
  9216     1F15                     RA5PPS          equ	7957	;# 
  9217     1F16                     RA6PPS          equ	7958	;# 
  9218     1F17                     RA7PPS          equ	7959	;# 
  9219     1F18                     RB0PPS          equ	7960	;# 
  9220     1F19                     RB1PPS          equ	7961	;# 
  9221     1F1A                     RB2PPS          equ	7962	;# 
  9222     1F1B                     RB3PPS          equ	7963	;# 
  9223     1F1C                     RB4PPS          equ	7964	;# 
  9224     1F1D                     RB5PPS          equ	7965	;# 
  9225     1F1E                     RB6PPS          equ	7966	;# 
  9226     1F1F                     RB7PPS          equ	7967	;# 
  9227     1F20                     RC0PPS          equ	7968	;# 
  9228     1F21                     RC1PPS          equ	7969	;# 
  9229     1F22                     RC2PPS          equ	7970	;# 
  9230     1F23                     RC3PPS          equ	7971	;# 
  9231     1F24                     RC4PPS          equ	7972	;# 
  9232     1F25                     RC5PPS          equ	7973	;# 
  9233     1F26                     RC6PPS          equ	7974	;# 
  9234     1F27                     RC7PPS          equ	7975	;# 
  9235     1F38                     ANSELA          equ	7992	;# 
  9236     1F39                     WPUA            equ	7993	;# 
  9237     1F3A                     ODCONA          equ	7994	;# 
  9238     1F3B                     SLRCONA         equ	7995	;# 
  9239     1F3C                     INLVLA          equ	7996	;# 
  9240     1F3D                     IOCAP           equ	7997	;# 
  9241     1F3E                     IOCAN           equ	7998	;# 
  9242     1F3F                     IOCAF           equ	7999	;# 
  9243     1F43                     ANSELB          equ	8003	;# 
  9244     1F44                     WPUB            equ	8004	;# 
  9245     1F45                     ODCONB          equ	8005	;# 
  9246     1F46                     SLRCONB         equ	8006	;# 
  9247     1F47                     INLVLB          equ	8007	;# 
  9248     1F48                     IOCBP           equ	8008	;# 
  9249     1F49                     IOCBN           equ	8009	;# 
  9250     1F4A                     IOCBF           equ	8010	;# 
  9251     1F4E                     ANSELC          equ	8014	;# 
  9252     1F4F                     WPUC            equ	8015	;# 
  9253     1F50                     ODCONC          equ	8016	;# 
  9254     1F51                     SLRCONC         equ	8017	;# 
  9255     1F52                     INLVLC          equ	8018	;# 
  9256     1F53                     IOCCP           equ	8019	;# 
  9257     1F54                     IOCCN           equ	8020	;# 
  9258     1F55                     IOCCF           equ	8021	;# 
  9259     1F65                     WPUE            equ	8037	;# 
  9260     1F66                     ODCONE          equ	8038	;# 
  9261     1F67                     SLRCONE         equ	8039	;# 
  9262     1F68                     INLVLE          equ	8040	;# 
  9263     1F69                     IOCEP           equ	8041	;# 
  9264     1F6A                     IOCEN           equ	8042	;# 
  9265     1F6B                     IOCEF           equ	8043	;# 
  9266     1FE4                     STATUS_SHAD     equ	8164	;# 
  9267     1FE5                     WREG_SHAD       equ	8165	;# 
  9268     1FE6                     BSR_SHAD        equ	8166	;# 
  9269     1FE7                     PCLATH_SHAD     equ	8167	;# 
  9270     1FE8                     FSR0_SHAD       equ	8168	;# 
  9271     1FE8                     FSR0L_SHAD      equ	8168	;# 
  9272     1FE9                     FSR0H_SHAD      equ	8169	;# 
  9273     1FEA                     FSR1L_SHAD      equ	8170	;# 
  9274     1FEB                     FSR1H_SHAD      equ	8171	;# 
  9275     1FED                     STKPTR          equ	8173	;# 
  9276     1FEE                     TOSL            equ	8174	;# 
  9277     1FEF                     TOSH            equ	8175	;# 
  9278     0000                     INDF0           equ	0	;# 
  9279     0001                     INDF1           equ	1	;# 
  9280     0002                     PCL             equ	2	;# 
  9281     0003                     STATUS          equ	3	;# 
  9282     0004                     FSR0L           equ	4	;# 
  9283     0005                     FSR0H           equ	5	;# 
  9284     0006                     FSR1L           equ	6	;# 
  9285     0007                     FSR1H           equ	7	;# 
  9286     0008                     BSR             equ	8	;# 
  9287     0009                     WREG            equ	9	;# 
  9288     000A                     PCLATH          equ	10	;# 
  9289     000B                     INTCON          equ	11	;# 
  9290     000C                     PORTA           equ	12	;# 
  9291     000D                     PORTB           equ	13	;# 
  9292     000E                     PORTC           equ	14	;# 
  9293     0010                     PORTE           equ	16	;# 
  9294     0012                     TRISA           equ	18	;# 
  9295     0013                     TRISB           equ	19	;# 
  9296     0014                     TRISC           equ	20	;# 
  9297     0016                     TRISE           equ	22	;# 
  9298     0018                     LATA            equ	24	;# 
  9299     0019                     LATB            equ	25	;# 
  9300     001A                     LATC            equ	26	;# 
  9301     008C                     ADLTH           equ	140	;# 
  9302     008C                     ADLTHL          equ	140	;# 
  9303     008D                     ADLTHH          equ	141	;# 
  9304     008E                     ADUTH           equ	142	;# 
  9305     008E                     ADUTHL          equ	142	;# 
  9306     008F                     ADUTHH          equ	143	;# 
  9307     0090                     ADERR           equ	144	;# 
  9308     0090                     ADERRL          equ	144	;# 
  9309     0091                     ADERRH          equ	145	;# 
  9310     0092                     ADSTPT          equ	146	;# 
  9311     0092                     ADSTPTL         equ	146	;# 
  9312     0093                     ADSTPTH         equ	147	;# 
  9313     0094                     ADFLTR          equ	148	;# 
  9314     0094                     ADFLTRL         equ	148	;# 
  9315     0095                     ADFLTRH         equ	149	;# 
  9316     0096                     ADACC           equ	150	;# 
  9317     0096                     ADACCL          equ	150	;# 
  9318     0097                     ADACCH          equ	151	;# 
  9319     0098                     ADACCU          equ	152	;# 
  9320     0099                     ADCNT           equ	153	;# 
  9321     009A                     ADRPT           equ	154	;# 
  9322     009B                     ADPREV          equ	155	;# 
  9323     009B                     ADPREVL         equ	155	;# 
  9324     009C                     ADPREVH         equ	156	;# 
  9325     009D                     ADRES           equ	157	;# 
  9326     009D                     ADRESL          equ	157	;# 
  9327     009E                     ADRESH          equ	158	;# 
  9328     009F                     ADPCH           equ	159	;# 
  9329     010C                     ADACQ           equ	268	;# 
  9330     010C                     ADACQL          equ	268	;# 
  9331     010D                     ADACQH          equ	269	;# 
  9332     010E                     ADCAP           equ	270	;# 
  9333     010F                     ADPRE           equ	271	;# 
  9334     010F                     ADPREL          equ	271	;# 
  9335     0110                     ADPREH          equ	272	;# 
  9336     0111                     ADCON0          equ	273	;# 
  9337     0112                     ADCON1          equ	274	;# 
  9338     0113                     ADCON2          equ	275	;# 
  9339     0114                     ADCON3          equ	276	;# 
  9340     0115                     ADSTAT          equ	277	;# 
  9341     0116                     ADREF           equ	278	;# 
  9342     0117                     ADACT           equ	279	;# 
  9343     0118                     ADCLK           equ	280	;# 
  9344     0119                     RC1REG          equ	281	;# 
  9345     0119                     RCREG           equ	281	;# 
  9346     0119                     RCREG1          equ	281	;# 
  9347     011A                     TX1REG          equ	282	;# 
  9348     011A                     TXREG1          equ	282	;# 
  9349     011A                     TXREG           equ	282	;# 
  9350     011B                     SP1BRG          equ	283	;# 
  9351     011B                     SPBRG           equ	283	;# 
  9352     011B                     SP1BRGL         equ	283	;# 
  9353     011B                     SPBRG1          equ	283	;# 
  9354     011B                     SPBRGL          equ	283	;# 
  9355     011C                     SP1BRGH         equ	284	;# 
  9356     011C                     SPBRGH          equ	284	;# 
  9357     011C                     SPBRGH1         equ	284	;# 
  9358     011D                     RC1STA          equ	285	;# 
  9359     011D                     RCSTA1          equ	285	;# 
  9360     011D                     RCSTA           equ	285	;# 
  9361     011E                     TX1STA          equ	286	;# 
  9362     011E                     TXSTA1          equ	286	;# 
  9363     011E                     TXSTA           equ	286	;# 
  9364     011F                     BAUD1CON        equ	287	;# 
  9365     011F                     BAUDCON1        equ	287	;# 
  9366     011F                     BAUDCTL1        equ	287	;# 
  9367     011F                     BAUDCON         equ	287	;# 
  9368     011F                     BAUDCTL         equ	287	;# 
  9369     018C                     SSP1BUF         equ	396	;# 
  9370     018D                     SSP1ADD         equ	397	;# 
  9371     018E                     SSP1MSK         equ	398	;# 
  9372     018F                     SSP1STAT        equ	399	;# 
  9373     0190                     SSP1CON1        equ	400	;# 
  9374     0191                     SSP1CON2        equ	401	;# 
  9375     0192                     SSP1CON3        equ	402	;# 
  9376     0196                     SSP2BUF         equ	406	;# 
  9377     0197                     SSP2ADD         equ	407	;# 
  9378     0198                     SSP2MSK         equ	408	;# 
  9379     0199                     SSP2STAT        equ	409	;# 
  9380     019A                     SSP2CON1        equ	410	;# 
  9381     019B                     SSP2CON2        equ	411	;# 
  9382     019C                     SSP2CON3        equ	412	;# 
  9383     020C                     TMR1            equ	524	;# 
  9384     020C                     TMR1L           equ	524	;# 
  9385     020D                     TMR1H           equ	525	;# 
  9386     020E                     T1CON           equ	526	;# 
  9387     020E                     TMR1CON         equ	526	;# 
  9388     020F                     T1GCON          equ	527	;# 
  9389     020F                     TMR1GCON        equ	527	;# 
  9390     0210                     T1GATE          equ	528	;# 
  9391     0210                     TMR1GATE        equ	528	;# 
  9392     0211                     T1CLK           equ	529	;# 
  9393     0211                     TMR1CLK         equ	529	;# 
  9394     0211                     PR1             equ	529	;# 
  9395     0212                     TMR3            equ	530	;# 
  9396     0212                     TMR3L           equ	530	;# 
  9397     0213                     TMR3H           equ	531	;# 
  9398     0214                     T3CON           equ	532	;# 
  9399     0214                     TMR3CON         equ	532	;# 
  9400     0215                     T3GCON          equ	533	;# 
  9401     0215                     TMR3GCON        equ	533	;# 
  9402     0216                     T3GATE          equ	534	;# 
  9403     0216                     TMR3GATE        equ	534	;# 
  9404     0217                     T3CLK           equ	535	;# 
  9405     0217                     TMR3CLK         equ	535	;# 
  9406     0217                     PR3             equ	535	;# 
  9407     0218                     TMR5            equ	536	;# 
  9408     0218                     TMR5L           equ	536	;# 
  9409     0219                     TMR5H           equ	537	;# 
  9410     021A                     T5CON           equ	538	;# 
  9411     021A                     TMR5CON         equ	538	;# 
  9412     021B                     T5GCON          equ	539	;# 
  9413     021B                     TMR5GCON        equ	539	;# 
  9414     021C                     T5GATE          equ	540	;# 
  9415     021C                     TMR5GATE        equ	540	;# 
  9416     021D                     T5CLK           equ	541	;# 
  9417     021D                     TMR5CLK         equ	541	;# 
  9418     021D                     PR5             equ	541	;# 
  9419     021E                     CCPTMRS0        equ	542	;# 
  9420     021F                     CCPTMRS1        equ	543	;# 
  9421     028C                     T2TMR           equ	652	;# 
  9422     028C                     TMR2            equ	652	;# 
  9423     028D                     T2PR            equ	653	;# 
  9424     028D                     PR2             equ	653	;# 
  9425     028E                     T2CON           equ	654	;# 
  9426     028F                     T2HLT           equ	655	;# 
  9427     0290                     T2CLKCON        equ	656	;# 
  9428     0291                     T2RST           equ	657	;# 
  9429     0292                     T4TMR           equ	658	;# 
  9430     0292                     TMR4            equ	658	;# 
  9431     0293                     T4PR            equ	659	;# 
  9432     0293                     PR4             equ	659	;# 
  9433     0294                     T4CON           equ	660	;# 
  9434     0295                     T4HLT           equ	661	;# 
  9435     0296                     T4CLKCON        equ	662	;# 
  9436     0297                     T4RST           equ	663	;# 
  9437     0298                     T6TMR           equ	664	;# 
  9438     0298                     TMR6            equ	664	;# 
  9439     0299                     T6PR            equ	665	;# 
  9440     0299                     PR6             equ	665	;# 
  9441     029A                     T6CON           equ	666	;# 
  9442     029B                     T6HLT           equ	667	;# 
  9443     029C                     T6CLKCON        equ	668	;# 
  9444     029D                     T6RST           equ	669	;# 
  9445     029F                     ADCPCON0        equ	671	;# 
  9446     030C                     CCPR1           equ	780	;# 
  9447     030C                     CCPR1L          equ	780	;# 
  9448     030D                     CCPR1H          equ	781	;# 
  9449     030E                     CCP1CON         equ	782	;# 
  9450     030F                     CCP1CAP         equ	783	;# 
  9451     0310                     CCPR2           equ	784	;# 
  9452     0310                     CCPR2L          equ	784	;# 
  9453     0311                     CCPR2H          equ	785	;# 
  9454     0312                     CCP2CON         equ	786	;# 
  9455     0313                     CCP2CAP         equ	787	;# 
  9456     0314                     CCPR3           equ	788	;# 
  9457     0314                     CCPR3L          equ	788	;# 
  9458     0315                     CCPR3H          equ	789	;# 
  9459     0316                     CCP3CON         equ	790	;# 
  9460     0317                     CCP3CAP         equ	791	;# 
  9461     0318                     CCPR4           equ	792	;# 
  9462     0318                     CCPR4L          equ	792	;# 
  9463     0319                     CCPR4H          equ	793	;# 
  9464     031A                     CCP4CON         equ	794	;# 
  9465     031B                     CCP4CAP         equ	795	;# 
  9466     031C                     CCPR5           equ	796	;# 
  9467     031C                     CCPR5L          equ	796	;# 
  9468     031D                     CCPR5H          equ	797	;# 
  9469     031E                     CCP5CON         equ	798	;# 
  9470     031F                     CCP5CAP         equ	799	;# 
  9471     038C                     PWM6DC          equ	908	;# 
  9472     038C                     PWM6DCL         equ	908	;# 
  9473     038D                     PWM6DCH         equ	909	;# 
  9474     038E                     PWM6CON         equ	910	;# 
  9475     0390                     PWM7DC          equ	912	;# 
  9476     0390                     PWM7DCL         equ	912	;# 
  9477     0391                     PWM7DCH         equ	913	;# 
  9478     0392                     PWM7CON         equ	914	;# 
  9479     048C                     SMT1TMR         equ	1164	;# 
  9480     048C                     SMT1TMRL        equ	1164	;# 
  9481     048D                     SMT1TMRH        equ	1165	;# 
  9482     048E                     SMT1TMRU        equ	1166	;# 
  9483     048F                     SMT1CPR         equ	1167	;# 
  9484     048F                     SMT1CPRL        equ	1167	;# 
  9485     0490                     SMT1CPRH        equ	1168	;# 
  9486     0491                     SMT1CPRU        equ	1169	;# 
  9487     0492                     SMT1CPW         equ	1170	;# 
  9488     0492                     SMT1CPWL        equ	1170	;# 
  9489     0493                     SMT1CPWH        equ	1171	;# 
  9490     0494                     SMT1CPWU        equ	1172	;# 
  9491     0495                     SMT1PR          equ	1173	;# 
  9492     0495                     SMT1PRL         equ	1173	;# 
  9493     0496                     SMT1PRH         equ	1174	;# 
  9494     0497                     SMT1PRU         equ	1175	;# 
  9495     0498                     SMT1CON0        equ	1176	;# 
  9496     0499                     SMT1CON1        equ	1177	;# 
  9497     049A                     SMT1STAT        equ	1178	;# 
  9498     049B                     SMT1CLK         equ	1179	;# 
  9499     049C                     SMT1SIG         equ	1180	;# 
  9500     049D                     SMT1WIN         equ	1181	;# 
  9501     050C                     SMT2TMR         equ	1292	;# 
  9502     050C                     SMT2TMRL        equ	1292	;# 
  9503     050D                     SMT2TMRH        equ	1293	;# 
  9504     050E                     SMT2TMRU        equ	1294	;# 
  9505     050F                     SMT2CPR         equ	1295	;# 
  9506     050F                     SMT2CPRL        equ	1295	;# 
  9507     0510                     SMT2CPRH        equ	1296	;# 
  9508     0511                     SMT2CPRU        equ	1297	;# 
  9509     0512                     SMT2CPW         equ	1298	;# 
  9510     0512                     SMT2CPWL        equ	1298	;# 
  9511     0513                     SMT2CPWH        equ	1299	;# 
  9512     0514                     SMT2CPWU        equ	1300	;# 
  9513     0515                     SMT2PR          equ	1301	;# 
  9514     0515                     SMT2PRL         equ	1301	;# 
  9515     0516                     SMT2PRH         equ	1302	;# 
  9516     0517                     SMT2PRU         equ	1303	;# 
  9517     0518                     SMT2CON0        equ	1304	;# 
  9518     0519                     SMT2CON1        equ	1305	;# 
  9519     051A                     SMT2STAT        equ	1306	;# 
  9520     051B                     SMT2CLK         equ	1307	;# 
  9521     051C                     SMT2SIG         equ	1308	;# 
  9522     051D                     SMT2WIN         equ	1309	;# 
  9523     058C                     NCO1ACC         equ	1420	;# 
  9524     058C                     NCO1ACCL        equ	1420	;# 
  9525     058D                     NCO1ACCH        equ	1421	;# 
  9526     058E                     NCO1ACCU        equ	1422	;# 
  9527     058F                     NCO1INC         equ	1423	;# 
  9528     058F                     NCO1INCL        equ	1423	;# 
  9529     0590                     NCO1INCH        equ	1424	;# 
  9530     0591                     NCO1INCU        equ	1425	;# 
  9531     0592                     NCO1CON         equ	1426	;# 
  9532     0593                     NCO1CLK         equ	1427	;# 
  9533     059C                     TMR0L           equ	1436	;# 
  9534     059C                     TMR0            equ	1436	;# 
  9535     059D                     TMR0H           equ	1437	;# 
  9536     059D                     PR0             equ	1437	;# 
  9537     059E                     T0CON0          equ	1438	;# 
  9538     059F                     T0CON1          equ	1439	;# 
  9539     060C                     CWG1CLK         equ	1548	;# 
  9540     060C                     CWG1CLKCON      equ	1548	;# 
  9541     060D                     CWG1ISM         equ	1549	;# 
  9542     060D                     CWG1DAT         equ	1549	;# 
  9543     060E                     CWG1DBR         equ	1550	;# 
  9544     060F                     CWG1DBF         equ	1551	;# 
  9545     0610                     CWG1CON0        equ	1552	;# 
  9546     0611                     CWG1CON1        equ	1553	;# 
  9547     0612                     CWG1AS0         equ	1554	;# 
  9548     0613                     CWG1AS1         equ	1555	;# 
  9549     0614                     CWG1STR         equ	1556	;# 
  9550     0616                     CWG2CLK         equ	1558	;# 
  9551     0616                     CWG2CLKCON      equ	1558	;# 
  9552     0617                     CWG2ISM         equ	1559	;# 
  9553     0617                     CWG2DAT         equ	1559	;# 
  9554     0618                     CWG2DBR         equ	1560	;# 
  9555     0619                     CWG2DBF         equ	1561	;# 
  9556     061A                     CWG2CON0        equ	1562	;# 
  9557     061B                     CWG2CON1        equ	1563	;# 
  9558     061C                     CWG2AS0         equ	1564	;# 
  9559     061D                     CWG2AS1         equ	1565	;# 
  9560     061E                     CWG2STR         equ	1566	;# 
  9561     068C                     CWG3CLK         equ	1676	;# 
  9562     068C                     CWG3CLKCON      equ	1676	;# 
  9563     068D                     CWG3ISM         equ	1677	;# 
  9564     068D                     CWG3DAT         equ	1677	;# 
  9565     068E                     CWG3DBR         equ	1678	;# 
  9566     068F                     CWG3DBF         equ	1679	;# 
  9567     0690                     CWG3CON0        equ	1680	;# 
  9568     0691                     CWG3CON1        equ	1681	;# 
  9569     0692                     CWG3AS0         equ	1682	;# 
  9570     0693                     CWG3AS1         equ	1683	;# 
  9571     0694                     CWG3STR         equ	1684	;# 
  9572     070C                     PIR0            equ	1804	;# 
  9573     070D                     PIR1            equ	1805	;# 
  9574     070E                     PIR2            equ	1806	;# 
  9575     070F                     PIR3            equ	1807	;# 
  9576     0710                     PIR4            equ	1808	;# 
  9577     0711                     PIR5            equ	1809	;# 
  9578     0712                     PIR6            equ	1810	;# 
  9579     0713                     PIR7            equ	1811	;# 
  9580     0714                     PIR8            equ	1812	;# 
  9581     0716                     PIE0            equ	1814	;# 
  9582     0717                     PIE1            equ	1815	;# 
  9583     0718                     PIE2            equ	1816	;# 
  9584     0719                     PIE3            equ	1817	;# 
  9585     071A                     PIE4            equ	1818	;# 
  9586     071B                     PIE5            equ	1819	;# 
  9587     071C                     PIE6            equ	1820	;# 
  9588     071D                     PIE7            equ	1821	;# 
  9589     071E                     PIE8            equ	1822	;# 
  9590     0796                     PMD0            equ	1942	;# 
  9591     0797                     PMD1            equ	1943	;# 
  9592     0798                     PMD2            equ	1944	;# 
  9593     0799                     PMD3            equ	1945	;# 
  9594     079A                     PMD4            equ	1946	;# 
  9595     079B                     PMD5            equ	1947	;# 
  9596     079C                     PMD6            equ	1948	;# 
  9597     079D                     PMD7            equ	1949	;# 
  9598     080C                     WDTCON0         equ	2060	;# 
  9599     080D                     WDTCON1         equ	2061	;# 
  9600     080E                     WDTPSL          equ	2062	;# 
  9601     080F                     WDTPSH          equ	2063	;# 
  9602     0810                     WDTTMR          equ	2064	;# 
  9603     0811                     BORCON          equ	2065	;# 
  9604     0813                     PCON0           equ	2067	;# 
  9605     0814                     PCON1           equ	2068	;# 
  9606     081A                     NVMADR          equ	2074	;# 
  9607     081A                     NVMADRL         equ	2074	;# 
  9608     081B                     NVMADRH         equ	2075	;# 
  9609     081C                     NVMDAT          equ	2076	;# 
  9610     081C                     NVMDATL         equ	2076	;# 
  9611     081D                     NVMDATH         equ	2077	;# 
  9612     081E                     NVMCON1         equ	2078	;# 
  9613     081F                     NVMCON2         equ	2079	;# 
  9614     088C                     CPUDOZE         equ	2188	;# 
  9615     088D                     OSCCON1         equ	2189	;# 
  9616     088E                     OSCCON2         equ	2190	;# 
  9617     088F                     OSCCON3         equ	2191	;# 
  9618     0890                     OSCSTAT         equ	2192	;# 
  9619     0891                     OSCEN           equ	2193	;# 
  9620     0892                     OSCTUNE         equ	2194	;# 
  9621     0893                     OSCFRQ          equ	2195	;# 
  9622     0895                     CLKRCON         equ	2197	;# 
  9623     0896                     CLKRCLK         equ	2198	;# 
  9624     0897                     MD1CON0         equ	2199	;# 
  9625     0898                     MD1CON1         equ	2200	;# 
  9626     0899                     MD1SRC          equ	2201	;# 
  9627     089A                     MD1CARL         equ	2202	;# 
  9628     089B                     MD1CARH         equ	2203	;# 
  9629     090C                     FVRCON          equ	2316	;# 
  9630     090E                     DAC1CON0        equ	2318	;# 
  9631     090F                     DAC1CON1        equ	2319	;# 
  9632     091F                     ZCDCON          equ	2335	;# 
  9633     098F                     CMOUT           equ	2447	;# 
  9634     098F                     CMSTAT          equ	2447	;# 
  9635     0990                     CM1CON0         equ	2448	;# 
  9636     0991                     CM1CON1         equ	2449	;# 
  9637     0992                     CM1NCH          equ	2450	;# 
  9638     0993                     CM1PCH          equ	2451	;# 
  9639     0994                     CM2CON0         equ	2452	;# 
  9640     0995                     CM2CON1         equ	2453	;# 
  9641     0996                     CM2NCH          equ	2454	;# 
  9642     0997                     CM2PCH          equ	2455	;# 
  9643     0A19                     RC2REG          equ	2585	;# 
  9644     0A19                     RCREG2          equ	2585	;# 
  9645     0A1A                     TX2REG          equ	2586	;# 
  9646     0A1A                     TXREG2          equ	2586	;# 
  9647     0A1B                     SP2BRG          equ	2587	;# 
  9648     0A1B                     SP2BRGL         equ	2587	;# 
  9649     0A1B                     SPBRG2          equ	2587	;# 
  9650     0A1C                     SP2BRGH         equ	2588	;# 
  9651     0A1C                     SPBRGH2         equ	2588	;# 
  9652     0A1D                     RC2STA          equ	2589	;# 
  9653     0A1D                     RCSTA2          equ	2589	;# 
  9654     0A1E                     TX2STA          equ	2590	;# 
  9655     0A1E                     TXSTA2          equ	2590	;# 
  9656     0A1F                     BAUD2CON        equ	2591	;# 
  9657     0A1F                     BAUDCON2        equ	2591	;# 
  9658     0A1F                     BAUDCTL2        equ	2591	;# 
  9659     1E0F                     CLCDATA         equ	7695	;# 
  9660     1E10                     CLC1CON         equ	7696	;# 
  9661     1E11                     CLC1POL         equ	7697	;# 
  9662     1E12                     CLC1SEL0        equ	7698	;# 
  9663     1E13                     CLC1SEL1        equ	7699	;# 
  9664     1E14                     CLC1SEL2        equ	7700	;# 
  9665     1E15                     CLC1SEL3        equ	7701	;# 
  9666     1E16                     CLC1GLS0        equ	7702	;# 
  9667     1E17                     CLC1GLS1        equ	7703	;# 
  9668     1E18                     CLC1GLS2        equ	7704	;# 
  9669     1E19                     CLC1GLS3        equ	7705	;# 
  9670     1E1A                     CLC2CON         equ	7706	;# 
  9671     1E1B                     CLC2POL         equ	7707	;# 
  9672     1E1C                     CLC2SEL0        equ	7708	;# 
  9673     1E1D                     CLC2SEL1        equ	7709	;# 
  9674     1E1E                     CLC2SEL2        equ	7710	;# 
  9675     1E1F                     CLC2SEL3        equ	7711	;# 
  9676     1E20                     CLC2GLS0        equ	7712	;# 
  9677     1E21                     CLC2GLS1        equ	7713	;# 
  9678     1E22                     CLC2GLS2        equ	7714	;# 
  9679     1E23                     CLC2GLS3        equ	7715	;# 
  9680     1E24                     CLC3CON         equ	7716	;# 
  9681     1E25                     CLC3POL         equ	7717	;# 
  9682     1E26                     CLC3SEL0        equ	7718	;# 
  9683     1E27                     CLC3SEL1        equ	7719	;# 
  9684     1E28                     CLC3SEL2        equ	7720	;# 
  9685     1E29                     CLC3SEL3        equ	7721	;# 
  9686     1E2A                     CLC3GLS0        equ	7722	;# 
  9687     1E2B                     CLC3GLS1        equ	7723	;# 
  9688     1E2C                     CLC3GLS2        equ	7724	;# 
  9689     1E2D                     CLC3GLS3        equ	7725	;# 
  9690     1E2E                     CLC4CON         equ	7726	;# 
  9691     1E2F                     CLC4POL         equ	7727	;# 
  9692     1E30                     CLC4SEL0        equ	7728	;# 
  9693     1E31                     CLC4SEL1        equ	7729	;# 
  9694     1E32                     CLC4SEL2        equ	7730	;# 
  9695     1E33                     CLC4SEL3        equ	7731	;# 
  9696     1E34                     CLC4GLS0        equ	7732	;# 
  9697     1E35                     CLC4GLS1        equ	7733	;# 
  9698     1E36                     CLC4GLS2        equ	7734	;# 
  9699     1E37                     CLC4GLS3        equ	7735	;# 
  9700     1E8F                     PPSLOCK         equ	7823	;# 
  9701     1E90                     INTPPS          equ	7824	;# 
  9702     1E91                     T0CKIPPS        equ	7825	;# 
  9703     1E92                     T1CKIPPS        equ	7826	;# 
  9704     1E93                     T1GPPS          equ	7827	;# 
  9705     1E94                     T3CKIPPS        equ	7828	;# 
  9706     1E95                     T3GPPS          equ	7829	;# 
  9707     1E96                     T5CKIPPS        equ	7830	;# 
  9708     1E97                     T5GPPS          equ	7831	;# 
  9709     1E9C                     T2INPPS         equ	7836	;# 
  9710     1E9D                     T4INPPS         equ	7837	;# 
  9711     1E9E                     T6INPPS         equ	7838	;# 
  9712     1EA1                     CCP1PPS         equ	7841	;# 
  9713     1EA2                     CCP2PPS         equ	7842	;# 
  9714     1EA3                     CCP3PPS         equ	7843	;# 
  9715     1EA4                     CCP4PPS         equ	7844	;# 
  9716     1EA5                     CCP5PPS         equ	7845	;# 
  9717     1EA9                     SMT1WINPPS      equ	7849	;# 
  9718     1EAA                     SMT1SIGPPS      equ	7850	;# 
  9719     1EAB                     SMT2WINPPS      equ	7851	;# 
  9720     1EAC                     SMT2SIGPPS      equ	7852	;# 
  9721     1EB1                     CWG1PPS         equ	7857	;# 
  9722     1EB2                     CWG2PPS         equ	7858	;# 
  9723     1EB3                     CWG3PPS         equ	7859	;# 
  9724     1EB8                     MDCARLPPS       equ	7864	;# 
  9725     1EB9                     MDCARHPPS       equ	7865	;# 
  9726     1EBA                     MDSRCPPS        equ	7866	;# 
  9727     1EBB                     CLCIN0PPS       equ	7867	;# 
  9728     1EBC                     CLCIN1PPS       equ	7868	;# 
  9729     1EBD                     CLCIN2PPS       equ	7869	;# 
  9730     1EBE                     CLCIN3PPS       equ	7870	;# 
  9731     1EC3                     ADACTPPS        equ	7875	;# 
  9732     1EC5                     SSP1CLKPPS      equ	7877	;# 
  9733     1EC6                     SSP1DATPPS      equ	7878	;# 
  9734     1EC7                     SSP1SSPPS       equ	7879	;# 
  9735     1EC8                     SSP2CLKPPS      equ	7880	;# 
  9736     1EC9                     SSP2DATPPS      equ	7881	;# 
  9737     1ECA                     SSP2SSPPS       equ	7882	;# 
  9738     1ECB                     RX1PPS          equ	7883	;# 
  9739     1ECC                     CK1PPS          equ	7884	;# 
  9740     1ECD                     RX2PPS          equ	7885	;# 
  9741     1ECE                     CK2PPS          equ	7886	;# 
  9742     1F10                     RA0PPS          equ	7952	;# 
  9743     1F11                     RA1PPS          equ	7953	;# 
  9744     1F12                     RA2PPS          equ	7954	;# 
  9745     1F13                     RA3PPS          equ	7955	;# 
  9746     1F14                     RA4PPS          equ	7956	;# 
  9747     1F15                     RA5PPS          equ	7957	;# 
  9748     1F16                     RA6PPS          equ	7958	;# 
  9749     1F17                     RA7PPS          equ	7959	;# 
  9750     1F18                     RB0PPS          equ	7960	;# 
  9751     1F19                     RB1PPS          equ	7961	;# 
  9752     1F1A                     RB2PPS          equ	7962	;# 
  9753     1F1B                     RB3PPS          equ	7963	;# 
  9754     1F1C                     RB4PPS          equ	7964	;# 
  9755     1F1D                     RB5PPS          equ	7965	;# 
  9756     1F1E                     RB6PPS          equ	7966	;# 
  9757     1F1F                     RB7PPS          equ	7967	;# 
  9758     1F20                     RC0PPS          equ	7968	;# 
  9759     1F21                     RC1PPS          equ	7969	;# 
  9760     1F22                     RC2PPS          equ	7970	;# 
  9761     1F23                     RC3PPS          equ	7971	;# 
  9762     1F24                     RC4PPS          equ	7972	;# 
  9763     1F25                     RC5PPS          equ	7973	;# 
  9764     1F26                     RC6PPS          equ	7974	;# 
  9765     1F27                     RC7PPS          equ	7975	;# 
  9766     1F38                     ANSELA          equ	7992	;# 
  9767     1F39                     WPUA            equ	7993	;# 
  9768     1F3A                     ODCONA          equ	7994	;# 
  9769     1F3B                     SLRCONA         equ	7995	;# 
  9770     1F3C                     INLVLA          equ	7996	;# 
  9771     1F3D                     IOCAP           equ	7997	;# 
  9772     1F3E                     IOCAN           equ	7998	;# 
  9773     1F3F                     IOCAF           equ	7999	;# 
  9774     1F43                     ANSELB          equ	8003	;# 
  9775     1F44                     WPUB            equ	8004	;# 
  9776     1F45                     ODCONB          equ	8005	;# 
  9777     1F46                     SLRCONB         equ	8006	;# 
  9778     1F47                     INLVLB          equ	8007	;# 
  9779     1F48                     IOCBP           equ	8008	;# 
  9780     1F49                     IOCBN           equ	8009	;# 
  9781     1F4A                     IOCBF           equ	8010	;# 
  9782     1F4E                     ANSELC          equ	8014	;# 
  9783     1F4F                     WPUC            equ	8015	;# 
  9784     1F50                     ODCONC          equ	8016	;# 
  9785     1F51                     SLRCONC         equ	8017	;# 
  9786     1F52                     INLVLC          equ	8018	;# 
  9787     1F53                     IOCCP           equ	8019	;# 
  9788     1F54                     IOCCN           equ	8020	;# 
  9789     1F55                     IOCCF           equ	8021	;# 
  9790     1F65                     WPUE            equ	8037	;# 
  9791     1F66                     ODCONE          equ	8038	;# 
  9792     1F67                     SLRCONE         equ	8039	;# 
  9793     1F68                     INLVLE          equ	8040	;# 
  9794     1F69                     IOCEP           equ	8041	;# 
  9795     1F6A                     IOCEN           equ	8042	;# 
  9796     1F6B                     IOCEF           equ	8043	;# 
  9797     1FE4                     STATUS_SHAD     equ	8164	;# 
  9798     1FE5                     WREG_SHAD       equ	8165	;# 
  9799     1FE6                     BSR_SHAD        equ	8166	;# 
  9800     1FE7                     PCLATH_SHAD     equ	8167	;# 
  9801     1FE8                     FSR0_SHAD       equ	8168	;# 
  9802     1FE8                     FSR0L_SHAD      equ	8168	;# 
  9803     1FE9                     FSR0H_SHAD      equ	8169	;# 
  9804     1FEA                     FSR1L_SHAD      equ	8170	;# 
  9805     1FEB                     FSR1H_SHAD      equ	8171	;# 
  9806     1FED                     STKPTR          equ	8173	;# 
  9807     1FEE                     TOSL            equ	8174	;# 
  9808     1FEF                     TOSH            equ	8175	;# 
  9809                           
  9810 ;; Function _do_I2C_RESET is unused but had its address taken
  9811     0000                     _do_I2C_RESET   equ	0
  9812                           
  9813 ;; Function _do_I2C_IDLE is unused but had its address taken
  9814     0000                     _do_I2C_IDLE    equ	0
  9815                           
  9816 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
  9817     0000                     _do_I2C_SEND_RESTART_READ equ	0
  9818                           
  9819 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
  9820     0000                     _do_I2C_SEND_RESTART_WRITE equ	0
  9821                           
  9822 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
  9823     0000                     _do_I2C_SEND_RESTART equ	0
  9824                           
  9825 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
  9826     0000                     _do_I2C_SEND_STOP equ	0
  9827                           
  9828 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
  9829     0000                     _do_I2C_SEND_ADR_READ equ	0
  9830                           
  9831 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
  9832     0000                     _do_I2C_SEND_ADR_WRITE equ	0
  9833                           
  9834 ;; Function _do_I2C_RCEN is unused but had its address taken
  9835     0000                     _do_I2C_RCEN    equ	0
  9836                           
  9837 ;; Function _do_I2C_DO_ACK is unused but had its address taken
  9838     0000                     _do_I2C_DO_ACK  equ	0
  9839                           
  9840 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
  9841     0000                     _do_I2C_DO_NACK_STOP equ	0
  9842                           
  9843 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
  9844     0000                     _do_I2C_DO_NACK_RESTART equ	0
  9845                           
  9846 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
  9847     0000                     _do_I2C_DO_ADDRESS_NACK equ	0
  9848                           
  9849 ;; Function _do_I2C_TX is unused but had its address taken
  9850     0000                     _do_I2C_TX      equ	0
  9851                           
  9852 ;; Function _do_I2C_RX is unused but had its address taken
  9853     0000                     _do_I2C_RX      equ	0
  9854                           
  9855 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
  9856     0000                     _do_I2C_TX_EMPTY equ	0
  9857                           
  9858 ;; Function _i2c_ISR is unused but had its address taken
  9859     0000                     _i2c_ISR        equ	0
  9860                           
  9861 ;; Function _i2c_busCollisionISR is unused but had its address taken
  9862     0000                     _i2c_busCollisionISR equ	0
  9863                           
  9864 ;; Function _returnStop is unused but had its address taken
  9865     0000                     _returnStop     equ	0
  9866                           
  9867 ;; Function _returnReset is unused but had its address taken
  9868     0000                     _returnReset    equ	0
  9869                           
  9870 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  9871     0000                     _EUSART1_is_tx_ready equ	0
  9872                           
  9873                           	psect	idataBANK0
  9874     0002                     __pidataBANK0:
  9875                           
  9876                           ;initializer for RN487X_GetInputsValues@F13149
  9877     0002  3430               	retlw	48
  9878     0003  3430               	retlw	48
  9879                           
  9880                           	psect	idataBANK3
  9881     0880                     __pidataBANK3:
  9882                           
  9883                           ;initializer for __hex
  9884     0880  3430               	retlw	48
  9885     0881  3431               	retlw	49
  9886     0882  3432               	retlw	50
  9887     0883  3433               	retlw	51
  9888     0884  3434               	retlw	52
  9889     0885  3435               	retlw	53
  9890     0886  3436               	retlw	54
  9891     0887  3437               	retlw	55
  9892     0888  3438               	retlw	56
  9893     0889  3439               	retlw	57
  9894     088A  3441               	retlw	65
  9895     088B  3442               	retlw	66
  9896     088C  3443               	retlw	67
  9897     088D  3444               	retlw	68
  9898     088E  3445               	retlw	69
  9899     088F  3446               	retlw	70
  9900     0890  3400               	retlw	0
  9901                           
  9902                           	psect	stringtext1
  9903     1000                     __pstringtext1:
  9904     1000                     _uart:
  9905     1000  349A               	retlw	low _EUSART1_Read
  9906     1001  340B               	retlw	high _EUSART1_Read
  9907     1002  34BE               	retlw	low _EUSART1_Write
  9908     1003  340B               	retlw	high _EUSART1_Write
  9909     1004  3400               	retlw	0
  9910     1005  3400               	retlw	0
  9911     1006  342E               	retlw	low _EUSART1_is_rx_ready
  9912     1007  3417               	retlw	high _EUSART1_is_rx_ready
  9913     1008  34CC               	retlw	low _EUSART1_SetTxInterruptHandler
  9914     1009  3416               	retlw	high _EUSART1_SetTxInterruptHandler
  9915     100A  3449               	retlw	low _EUSART1_Receive_ISR
  9916     100B  340F               	retlw	high _EUSART1_Receive_ISR
  9917     100C  34C6               	retlw	low _EUSART1_SetRxInterruptHandler
  9918     100D  3416               	retlw	high _EUSART1_SetRxInterruptHandler
  9919     100E  3456               	retlw	low _EUSART1_is_tx_done
  9920     100F  3416               	retlw	high _EUSART1_is_tx_done
  9921     1010  34DD               	retlw	low _EUSART1_Transmit_ISR
  9922     1011  340A               	retlw	high _EUSART1_Transmit_ISR
  9923     1012  34C3               	retlw	low _EUSART1_Initialize
  9924     1013  340F               	retlw	high _EUSART1_Initialize
  9925     1014  349A               	retlw	low _EUSART1_Read
  9926     1015  340B               	retlw	high _EUSART1_Read
  9927     1016  34BE               	retlw	low _EUSART1_Write
  9928     1017  340B               	retlw	high _EUSART1_Write
  9929     1018  3400               	retlw	0
  9930     1019  3400               	retlw	0
  9931     101A  342E               	retlw	low _EUSART1_is_rx_ready
  9932     101B  3417               	retlw	high _EUSART1_is_rx_ready
  9933     101C  34CC               	retlw	low _EUSART1_SetTxInterruptHandler
  9934     101D  3416               	retlw	high _EUSART1_SetTxInterruptHandler
  9935     101E  3449               	retlw	low _EUSART1_Receive_ISR
  9936     101F  340F               	retlw	high _EUSART1_Receive_ISR
  9937     1020  34C6               	retlw	low _EUSART1_SetRxInterruptHandler
  9938     1021  3416               	retlw	high _EUSART1_SetRxInterruptHandler
  9939     1022  3456               	retlw	low _EUSART1_is_tx_done
  9940     1023  3416               	retlw	high _EUSART1_is_tx_done
  9941     1024  34DD               	retlw	low _EUSART1_Transmit_ISR
  9942     1025  340A               	retlw	high _EUSART1_Transmit_ISR
  9943     1026  34C3               	retlw	low _EUSART1_Initialize
  9944     1027  340F               	retlw	high _EUSART1_Initialize
  9945     1028                     __end_of_uart:
  9946                           
  9947                           	psect	stringtext2
  9948     1028                     __pstringtext2:
  9949     1028                     _i2c1_fsmStateTable:
  9950     1028  345F               	retlw	low _I2C1_DO_IDLE
  9951     1029  3416               	retlw	high _I2C1_DO_IDLE
  9952     102A  3425               	retlw	low _I2C1_DO_SEND_ADR_READ
  9953     102B  3417               	retlw	high _I2C1_DO_SEND_ADR_READ
  9954     102C  3415               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  9955     102D  3417               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  9956     102E  34C4               	retlw	low _I2C1_DO_TX
  9957     102F  3404               	retlw	high _I2C1_DO_TX
  9958     1030  3471               	retlw	low _I2C1_DO_RX
  9959     1031  3407               	retlw	high _I2C1_DO_RX
  9960     1032  340E               	retlw	low _I2C1_DO_RCEN
  9961     1033  3417               	retlw	high _I2C1_DO_RCEN
  9962     1034  349E               	retlw	low _I2C1_DO_TX_EMPTY
  9963     1035  340D               	retlw	high _I2C1_DO_TX_EMPTY
  9964     1036  3464               	retlw	low _I2C1_DO_SEND_RESTART_READ
  9965     1037  3416               	retlw	high _I2C1_DO_SEND_RESTART_READ
  9966     1038  3469               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  9967     1039  3416               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  9968     103A  346E               	retlw	low _I2C1_DO_SEND_RESTART
  9969     103B  3416               	retlw	high _I2C1_DO_SEND_RESTART
  9970     103C  3473               	retlw	low _I2C1_DO_SEND_STOP
  9971     103D  3416               	retlw	high _I2C1_DO_SEND_STOP
  9972     103E  3478               	retlw	low _I2C1_DO_RX_ACK
  9973     103F  3416               	retlw	high _I2C1_DO_RX_ACK
  9974     1040  347D               	retlw	low _I2C1_DO_RX_NACK_STOP
  9975     1041  3416               	retlw	high _I2C1_DO_RX_NACK_STOP
  9976     1042  3482               	retlw	low _I2C1_DO_RX_NACK_RESTART
  9977     1043  3416               	retlw	high _I2C1_DO_RX_NACK_RESTART
  9978     1044  3487               	retlw	low _I2C1_DO_RESET
  9979     1045  3416               	retlw	high _I2C1_DO_RESET
  9980     1046  341A               	retlw	low _I2C1_DO_ADDRESS_NACK
  9981     1047  340D               	retlw	high _I2C1_DO_ADDRESS_NACK
  9982     1048                     __end_of_i2c1_fsmStateTable:
  9983                           
  9984                           	psect	stringtext3
  9985     1048                     __pstringtext3:
  9986     1048                     _fsmStateTable:
  9987     1048  3400               	retlw	0
  9988     1049  3400               	retlw	0
  9989     104A  3400               	retlw	0
  9990     104B  3400               	retlw	0
  9991     104C  3400               	retlw	0
  9992     104D  3400               	retlw	0
  9993     104E  3400               	retlw	0
  9994     104F  3400               	retlw	0
  9995     1050  3400               	retlw	0
  9996     1051  3400               	retlw	0
  9997     1052  3400               	retlw	0
  9998     1053  3400               	retlw	0
  9999     1054  3400               	retlw	0
 10000     1055  3400               	retlw	0
 10001     1056  3400               	retlw	0
 10002     1057  3400               	retlw	0
 10003     1058  3400               	retlw	0
 10004     1059  3400               	retlw	0
 10005     105A  3400               	retlw	0
 10006     105B  3400               	retlw	0
 10007     105C  3400               	retlw	0
 10008     105D  3400               	retlw	0
 10009     105E  3400               	retlw	0
 10010     105F  3400               	retlw	0
 10011     1060  3400               	retlw	0
 10012     1061  3400               	retlw	0
 10013     1062  3400               	retlw	0
 10014     1063  3400               	retlw	0
 10015     1064  3400               	retlw	0
 10016     1065  3400               	retlw	0
 10017     1066  3400               	retlw	0
 10018     1067  3400               	retlw	0
 10019     1068                     __end_of_fsmStateTable:
 10020                           
 10021                           	psect	stringtext4
 10022     1068                     __pstringtext4:
 10023     1068                     _RN487X:
 10024     1068  3488               	retlw	low _RN487X_Write
 10025     1069  3417               	retlw	high _RN487X_Write
 10026     106A  3440               	retlw	low _RN487X_Read@rn487x_interface$F1569
 10027     106B  3417               	retlw	high _RN487X_Read@rn487x_interface$F1569
 10028     106C  344A               	retlw	low _RN487X_is_tx_done
 10029     106D  3417               	retlw	high _RN487X_is_tx_done
 10030     106E  3454               	retlw	low _RN487X_is_rx_ready
 10031     106F  3417               	retlw	high _RN487X_is_rx_ready
 10032     1070  3472               	retlw	low _RN487X_IndicateRx
 10033     1071  3417               	retlw	high _RN487X_IndicateRx
 10034     1072  347D               	retlw	low _RN487X_Reset
 10035     1073  3417               	retlw	high _RN487X_Reset
 10036     1074  34A0               	retlw	low _RN487X_SetSystemMode
 10037     1075  3417               	retlw	high _RN487X_SetSystemMode
 10038     1076  341D               	retlw	low _RN487X_Delay
 10039     1077  3417               	retlw	high _RN487X_Delay
 10040     1078  34D4               	retlw	low _RN487X_MessageHandler
 10041     1079  340E               	retlw	high _RN487X_MessageHandler
 10042     107A                     __end_of_RN487X:
 10043                           
 10044                           	psect	stringtext5
 10045     1832                     __pstringtext5:
 10046     1832                     _spi2_configuration:
 10047     1832  3422               	retlw	34
 10048     1833  3440               	retlw	64
 10049     1834  3401               	retlw	1
 10050     1835  3400               	retlw	0
 10051     1836                     __end_of_spi2_configuration:
 10052                           
 10053                           	psect	stringtext6
 10054     1836                     __pstringtext6:
 10055     1836                     _rn487x_driver_version:
 10056     1836  3422               	retlw	low (STR_1| (0+32768))
 10057     1837  3498               	retlw	high (STR_1| (0+32768))
 10058     1838                     __end_of_rn487x_driver_version:
 10059                           
 10060                           	psect	stringtext7
 10061     1838                     __pstringtext7:
 10062     1838                     _protocol_version_number:
 10063     1838  3422               	retlw	low (STR_1| (0+32768))
 10064     1839  3498               	retlw	high (STR_1| (0+32768))
 10065     183A                     __end_of_protocol_version_number:
 10066                           
 10067                           	psect	stringtext8
 10068     180C                     __pstringtext8:
 10069     180C                     RN487X_RebootCmd@reboot:
 10070     180C  3452               	retlw	82
 10071     180D  3465               	retlw	101
 10072     180E  3462               	retlw	98
 10073     180F  346F               	retlw	111
 10074     1810  346F               	retlw	111
 10075     1811  3474               	retlw	116
 10076     1812  3469               	retlw	105
 10077     1813  346E               	retlw	110
 10078     1814  3467               	retlw	103
 10079     1815  340D               	retlw	13
 10080     1816  340A               	retlw	10
 10081     1817                     __end_ofRN487X_RebootCmd@reboot:
 10082                           
 10083                           	psect	stringtext9
 10084     1828                     __pstringtext9:
 10085     1828                     RN487X_EnterDataMode@cmdPrompt:
 10086     1828  3445               	retlw	69
 10087     1829  344E               	retlw	78
 10088     182A  3444               	retlw	68
 10089     182B  340D               	retlw	13
 10090     182C  340A               	retlw	10
 10091     182D                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10092                           
 10093                           	psect	stringtext10
 10094     182D                     __pstringtext10:
 10095     182D                     RN487X_EnterCmdMode@cmdPrompt:
 10096     182D  3443               	retlw	67
 10097     182E  344D               	retlw	77
 10098     182F  3444               	retlw	68
 10099     1830  343E               	retlw	62
 10100     1831  3420               	retlw	32
 10101     1832                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10102                           
 10103                           	psect	nvBANK1
 10104     00C8                     __pnvBANK1:
 10105     00C8                     _TMR0_InterruptHandler:
 10106     00C8                     	ds	2
 10107     00CA                     _IOCAF7_InterruptHandler:
 10108     00CA                     	ds	2
 10109     00CC                     _IOCAF6_InterruptHandler:
 10110     00CC                     	ds	2
 10111     00CE                     _EUSART2_RxDefaultInterruptHandler:
 10112     00CE                     	ds	2
 10113     00D0                     _EUSART2_TxDefaultInterruptHandler:
 10114     00D0                     	ds	2
 10115                           
 10116                           	psect	nvBANK2
 10117     0154                     __pnvBANK2:
 10118     0154                     _EUSART2_ErrorHandler:
 10119     0154                     	ds	2
 10120     0156                     _EUSART2_OverrunErrorHandler:
 10121     0156                     	ds	2
 10122     0158                     _EUSART2_FramingErrorHandler:
 10123     0158                     	ds	2
 10124     015A                     _EUSART1_ErrorHandler:
 10125     015A                     	ds	2
 10126     015C                     _EUSART1_OverrunErrorHandler:
 10127     015C                     	ds	2
 10128     015E                     _EUSART1_FramingErrorHandler:
 10129     015E                     	ds	2
 10130     0160                     _EUSART1_RxDefaultInterruptHandler:
 10131     0160                     	ds	2
 10132     0162                     _EUSART1_TxDefaultInterruptHandler:
 10133     0162                     	ds	2
 10134     0014                     _TRISCbits      set	20
 10135     0014                     _TRISC          set	20
 10136     0013                     _TRISB          set	19
 10137     0012                     _TRISA          set	18
 10138     0016                     _TRISE          set	22
 10139     001A                     _LATC           set	26
 10140     0019                     _LATB           set	25
 10141     0018                     _LATA           set	24
 10142     0012                     _TRISAbits      set	18
 10143     001A                     _LATCbits       set	26
 10144     000B                     _INTCONbits     set	11
 10145     0018                     _LATAbits       set	24
 10146     000C                     _PORTAbits      set	12
 10147     0119                     _RC1REG         set	281
 10148     011D                     _RC1STAbits     set	285
 10149     011A                     _TX1REG         set	282
 10150     011E                     _TX1STAbits     set	286
 10151     011C                     _SP1BRGH        set	284
 10152     011B                     _SP1BRGL        set	283
 10153     011E                     _TX1STA         set	286
 10154     011D                     _RC1STA         set	285
 10155     011F                     _BAUD1CON       set	287
 10156     018E                     _SSP1MSK        set	398
 10157     0196                     _SSP2BUF        set	406
 10158     019B                     _SSP2CON2       set	411
 10159     019A                     _SSP2CON1bits   set	410
 10160     0197                     _SSP2ADD        set	407
 10161     019A                     _SSP2CON1       set	410
 10162     0199                     _SSP2STAT       set	409
 10163     018F                     _SSP1STATbits   set	399
 10164     0191                     _SSP1CON2bits   set	401
 10165     018C                     _SSP1BUF        set	396
 10166     0190                     _SSP1CON1bits   set	400
 10167     018D                     _SSP1ADD        set	397
 10168     0191                     _SSP1CON2       set	401
 10169     0190                     _SSP1CON1       set	400
 10170     018F                     _SSP1STAT       set	399
 10171     059E                     _T0CON0bits     set	1438
 10172     059E                     _T0CON0         set	1438
 10173     059C                     _TMR0L          set	1436
 10174     059D                     _TMR0H          set	1437
 10175     059F                     _T0CON1         set	1439
 10176     070F                     _PIR3bits       set	1807
 10177     0719                     _PIE3bits       set	1817
 10178     070C                     _PIR0bits       set	1804
 10179     0716                     _PIE0bits       set	1814
 10180     079D                     _PMD7           set	1949
 10181     079C                     _PMD6           set	1948
 10182     079B                     _PMD5           set	1947
 10183     079A                     _PMD4           set	1946
 10184     0799                     _PMD3           set	1945
 10185     0798                     _PMD2           set	1944
 10186     0797                     _PMD1           set	1943
 10187     0796                     _PMD0           set	1942
 10188     0892                     _OSCTUNE        set	2194
 10189     0890                     _OSCSTAT        set	2192
 10190     0893                     _OSCFRQ         set	2195
 10191     0891                     _OSCEN          set	2193
 10192     088F                     _OSCCON3        set	2191
 10193     088D                     _OSCCON1        set	2189
 10194     0A19                     _RC2REG         set	2585
 10195     0A1D                     _RC2STAbits     set	2589
 10196     0A1A                     _TX2REG         set	2586
 10197     0A1E                     _TX2STAbits     set	2590
 10198     0A1C                     _SP2BRGH        set	2588
 10199     0A1B                     _SP2BRGL        set	2587
 10200     0A1E                     _TX2STA         set	2590
 10201     0A1D                     _RC2STA         set	2589
 10202     0A1F                     _BAUD2CON       set	2591
 10203     1EC8                     _SSP2CLKPPS     set	7880
 10204     1EC6                     _SSP1DATPPS     set	7878
 10205     1EC9                     _SSP2DATPPS     set	7881
 10206     1EC5                     _SSP1CLKPPS     set	7877
 10207     1F22                     _RC2PPS         set	7970
 10208     1F1C                     _RB4PPS         set	7964
 10209     1F24                     _RC4PPS         set	7972
 10210     1F21                     _RC1PPS         set	7969
 10211     1F1A                     _RB2PPS         set	7962
 10212     1F19                     _RB1PPS         set	7961
 10213     1F3D                     _IOCAPbits      set	7997
 10214     1F3E                     _IOCANbits      set	7998
 10215     1F3F                     _IOCAFbits      set	7999
 10216     1F52                     _INLVLC         set	8018
 10217     1F47                     _INLVLB         set	8007
 10218     1F3C                     _INLVLA         set	7996
 10219     1F51                     _SLRCONC        set	8017
 10220     1F46                     _SLRCONB        set	8006
 10221     1F3B                     _SLRCONA        set	7995
 10222     1F50                     _ODCONC         set	8016
 10223     1F45                     _ODCONB         set	8005
 10224     1F3A                     _ODCONA         set	7994
 10225     1F66                     _ODCONE         set	8038
 10226     1F4F                     _WPUC           set	8015
 10227     1F39                     _WPUA           set	7993
 10228     1F44                     _WPUB           set	8004
 10229     1F65                     _WPUE           set	8037
 10230     1F38                     _ANSELA         set	7992
 10231     1F43                     _ANSELB         set	8003
 10232     1F4E                     _ANSELC         set	8014
 10233                           
 10234                           	psect	stringtext11
 10235     1800                     __pstringtext11:
 10236     1800                     STR_5:
 10237     1800  3453               	retlw	83	;'S'
 10238     1801  3454               	retlw	84	;'T'
 10239     1802  3452               	retlw	82	;'R'
 10240     1803  3445               	retlw	69	;'E'
 10241     1804  3441               	retlw	65	;'A'
 10242     1805  344D               	retlw	77	;'M'
 10243     1806  345F               	retlw	95	;'_'
 10244     1807  344F               	retlw	79	;'O'
 10245     1808  3450               	retlw	80	;'P'
 10246     1809  3445               	retlw	69	;'E'
 10247     180A  344E               	retlw	78	;'N'
 10248     180B  3400               	retlw	0
 10249                           
 10250                           	psect	stringtext12
 10251     1817                     __pstringtext12:
 10252     1817                     STR_3:
 10253     1817  3444               	retlw	68	;'D'
 10254     1818  3449               	retlw	73	;'I'
 10255     1819  3453               	retlw	83	;'S'
 10256     181A  3443               	retlw	67	;'C'
 10257     181B  344F               	retlw	79	;'O'
 10258     181C  344E               	retlw	78	;'N'
 10259     181D  344E               	retlw	78	;'N'
 10260     181E  3445               	retlw	69	;'E'
 10261     181F  3443               	retlw	67	;'C'
 10262     1820  3454               	retlw	84	;'T'
 10263     1821  3400               	retlw	0
 10264                           
 10265                           	psect	stringtext13
 10266     1822                     __pstringtext13:
 10267     1822                     STR_1:
 10268     1822  3431               	retlw	49	;'1'
 10269     1823  342E               	retlw	46	;'.'
 10270     1824  3431               	retlw	49	;'1'
 10271     1825  342E               	retlw	46	;'.'
 10272     1826  3430               	retlw	48	;'0'
 10273     1827  3400               	retlw	0
 10274                           
 10275                           	psect	stringtext14
 10276     0000                     __pstringtext14:
 10277     1817                     STR_4           equ	STR_3
 10278     1800                     STR_6           equ	STR_5
 10279     1822                     STR_2           equ	STR_1
 10280                           
 10281                           	psect	cinit
 10282     0063                     start_initialization:	
 10283                           ; #config settings
 10284                           
 10285     0063                     __initialization:
 10286                           
 10287                           ; Initialize objects allocated to BANK0
 10288     0063  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10289     0066  00ED               	movwf	__pdataBANK0& (0+127)
 10290     0067  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10291     006A  00EE               	movwf	(__pdataBANK0+1)& (0+127)
 10292                           
 10293                           ; Initialize objects allocated to BANK3
 10294     006B  3080               	movlw	low __pidataBANK3
 10295     006C  0084               	movwf	4
 10296     006D  3088               	movlw	(high __pidataBANK3)| (0+128)
 10297     006E  0085               	movwf	5
 10298     006F  30C4               	movlw	low __pdataBANK3
 10299     0070  0086               	movwf	6
 10300     0071  3001               	movlw	high __pdataBANK3
 10301     0072  0087               	movwf	7
 10302     0073  3011               	movlw	17
 10303     0074  3197  2708  3180   	fcall	init_ram
 10304                           
 10305                           ; Clear objects allocated to BANK0
 10306     0077  3048               	movlw	low __pbssBANK0
 10307     0078  0084               	movwf	4
 10308     0079  3000               	movlw	high __pbssBANK0
 10309     007A  0085               	movwf	5
 10310     007B  3025               	movlw	37
 10311     007C  3197  2702  3180   	fcall	clear_ram0
 10312                           
 10313                           ; Clear objects allocated to BANK1
 10314     007F  30A0               	movlw	low __pbssBANK1
 10315     0080  0084               	movwf	4
 10316     0081  3000               	movlw	high __pbssBANK1
 10317     0082  0085               	movwf	5
 10318     0083  3028               	movlw	40
 10319     0084  3197  2702  3180   	fcall	clear_ram0
 10320                           
 10321                           ; Clear objects allocated to BANK2
 10322     0087  3020               	movlw	low __pbssBANK2
 10323     0088  0084               	movwf	4
 10324     0089  3001               	movlw	high __pbssBANK2
 10325     008A  0085               	movwf	5
 10326     008B  3034               	movlw	52
 10327     008C  3197  2702  3180   	fcall	clear_ram0
 10328                           
 10329                           ; Clear objects allocated to BANK3
 10330     008F  30A0               	movlw	low __pbssBANK3
 10331     0090  0084               	movwf	4
 10332     0091  3001               	movlw	high __pbssBANK3
 10333     0092  0085               	movwf	5
 10334     0093  3024               	movlw	36
 10335     0094  3197  2702  3180   	fcall	clear_ram0
 10336                           
 10337                           ; Clear objects allocated to BANK4
 10338     0097  3020               	movlw	low __pbssBANK4
 10339     0098  0084               	movwf	4
 10340     0099  3002               	movlw	high __pbssBANK4
 10341     009A  0085               	movwf	5
 10342     009B  3040               	movlw	64
 10343     009C  3197  2702  3180   	fcall	clear_ram0
 10344                           
 10345                           ; Clear objects allocated to BANK5
 10346     009F  30A0               	movlw	low __pbssBANK5
 10347     00A0  0084               	movwf	4
 10348     00A1  3002               	movlw	high __pbssBANK5
 10349     00A2  0085               	movwf	5
 10350     00A3  3050               	movlw	80
 10351     00A4  3197  2702  3180   	fcall	clear_ram0
 10352                           
 10353                           ; Clear objects allocated to BANK6
 10354     00A7  3020               	movlw	low __pbssBANK6
 10355     00A8  0084               	movwf	4
 10356     00A9  3003               	movlw	high __pbssBANK6
 10357     00AA  0085               	movwf	5
 10358     00AB  3050               	movlw	80
 10359     00AC  3197  2702  3180   	fcall	clear_ram0
 10360                           
 10361                           ; Clear objects allocated to BANK7
 10362     00AF  30A0               	movlw	low __pbssBANK7
 10363     00B0  0084               	movwf	4
 10364     00B1  3003               	movlw	high __pbssBANK7
 10365     00B2  0085               	movwf	5
 10366     00B3  3050               	movlw	80
 10367     00B4  3197  2702  3180   	fcall	clear_ram0
 10368                           
 10369                           ; Clear objects allocated to BANK8
 10370     00B7  3020               	movlw	low __pbssBANK8
 10371     00B8  0084               	movwf	4
 10372     00B9  3004               	movlw	high __pbssBANK8
 10373     00BA  0085               	movwf	5
 10374     00BB  3050               	movlw	80
 10375     00BC  3197  2702  3180   	fcall	clear_ram0
 10376                           
 10377                           ; Clear objects allocated to BANK9
 10378     00BF  30A0               	movlw	low __pbssBANK9
 10379     00C0  0084               	movwf	4
 10380     00C1  3004               	movlw	high __pbssBANK9
 10381     00C2  0085               	movwf	5
 10382     00C3  3050               	movlw	80
 10383     00C4  3197  2702  3180   	fcall	clear_ram0
 10384     00C7                     end_of_initialization:	
 10385                           ;End of C runtime variable initialization code
 10386                           
 10387     00C7                     __end_of__initialization:
 10388     00C7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10389     00C8  0140               	movlb	0
 10390     00C9  3181  2996         	ljmp	_main	;jump to C main() function
 10391                           
 10392                           	psect	bssBANK0
 10393     0048                     __pbssBANK0:
 10394     0048                     LIGHTBLUE_ParseIncomingPacket@data:
 10395     0048                     	ds	2
 10396     004A                     _bitMap:
 10397     004A                     	ds	2
 10398     004C                     _serialIndex@main$F4021:
 10399     004C                     	ds	1
 10400     004D                     _eusart2RxLastError:
 10401     004D                     	ds	1
 10402     004E                     _eusart2RxCount:
 10403     004E                     	ds	1
 10404     004F                     _eusart2RxTail:
 10405     004F                     	ds	1
 10406     0050                     _eusart2RxHead:
 10407     0050                     	ds	1
 10408     0051                     _eusart2TxBufferRemaining:
 10409     0051                     	ds	1
 10410     0052                     _eusart2TxTail:
 10411     0052                     	ds	1
 10412     0053                     _eusart2TxHead:
 10413     0053                     	ds	1
 10414     0054                     _eusart1RxLastError:
 10415     0054                     	ds	1
 10416     0055                     _eusart1RxCount:
 10417     0055                     	ds	1
 10418     0056                     _eusart1RxTail:
 10419     0056                     	ds	1
 10420     0057                     _eusart1RxHead:
 10421     0057                     	ds	1
 10422     0058                     _eusart1TxBufferRemaining:
 10423     0058                     	ds	1
 10424     0059                     _eusart1TxTail:
 10425     0059                     	ds	1
 10426     005A                     _eusart1TxHead:
 10427     005A                     	ds	1
 10428     005B                     _flats:
 10429     005B                     	ds	1
 10430     005C                     _serialIndex:
 10431     005C                     	ds	1
 10432     005D                     _sendSpiReadRequest:
 10433     005D                     	ds	1
 10434     005E                     _pushed:
 10435     005E                     	ds	1
 10436     005F                     _connected:
 10437     005F                     	ds	1
 10438     0060                     RN487X_FilterData@asyncBuffering:
 10439     0060                     	ds	1
 10440     0061                     _dataReady:
 10441     0061                     	ds	1
 10442     0062                     _peek:
 10443     0062                     	ds	1
 10444     0063                     _pHead:
 10445     0063                     	ds	1
 10446     0064                     _asyncBufferSize:
 10447     0064                     	ds	1
 10448     0065                     _asyncBuffer:
 10449     0065                     	ds	1
 10450     0066                     _rad:
 10451     0066                     	ds	1
 10452     0067                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10453     0067                     	ds	1
 10454     0068                     LIGHTBLUE_ParseIncomingPacket@length:
 10455     0068                     	ds	1
 10456     0069                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10457     0069                     	ds	1
 10458     006A                     _sequenceNumber:
 10459     006A                     	ds	1
 10460     006B                     _INTERRUPTbits:
 10461     006B                     	ds	1
 10462     006C                     _accelerometerInterruptBits:
 10463     006C                     	ds	1
 10464                           
 10465                           	psect	dataBANK0
 10466     006D                     __pdataBANK0:
 10467     006D                     RN487X_GetInputsValues@F13149:
 10468     006D                     	ds	2
 10469                           
 10470                           	psect	bssBANK1
 10471     00A0                     __pbssBANK1:
 10472     00A0                     _eusart2RxStatusBuffer:
 10473     00A0                     	ds	8
 10474     00A8                     _eusart1RxStatusBuffer:
 10475     00A8                     	ds	8
 10476     00B0                     _eusart1RxBuffer:
 10477     00B0                     	ds	8
 10478     00B8                     _eusart1TxBuffer:
 10479     00B8                     	ds	8
 10480     00C0                     _i2c1_driver_i2cISR:
 10481     00C0                     	ds	2
 10482     00C2                     _i2c1_driver_busCollisionISR:
 10483     00C2                     	ds	2
 10484     00C4                     send_spi_read@data:
 10485     00C4                     	ds	4
 10486                           
 10487                           	psect	bssBANK2
 10488     0120                     __pbssBANK2:
 10489     0120                     _i2c_status:
 10490     0120                     	ds	36
 10491     0144                     _eusart2RxBuffer:
 10492     0144                     	ds	8
 10493     014C                     _eusart2TxBuffer:
 10494     014C                     	ds	8
 10495                           
 10496                           	psect	bssBANK3
 10497     01A0                     __pbssBANK3:
 10498     01A0                     _I2C1_Status:
 10499     01A0                     	ds	36
 10500                           
 10501                           	psect	dataBANK3
 10502     01C4                     __pdataBANK3:
 10503     01C4                     __hex:
 10504     01C4                     	ds	17
 10505                           
 10506                           	psect	bssBANK4
 10507     0220                     __pbssBANK4:
 10508     0220                     _cmdBuf:
 10509     0220                     	ds	64
 10510                           
 10511                           	psect	bssBANK5
 10512     02A0                     __pbssBANK5:
 10513     02A0                     _lightBlueSerial@main$F4020:
 10514     02A0                     	ds	80
 10515                           
 10516                           	psect	bssBANK6
 10517     0320                     __pbssBANK6:
 10518     0320                     _statusBuffer:
 10519     0320                     	ds	80
 10520                           
 10521                           	psect	bssBANK7
 10522     03A0                     __pbssBANK7:
 10523     03A0                     _statusBuffer@main$F2075:
 10524     03A0                     	ds	80
 10525                           
 10526                           	psect	bssBANK8
 10527     0420                     __pbssBANK8:
 10528     0420                     _lightBlueSerial:
 10529     0420                     	ds	80
 10530                           
 10531                           	psect	bssBANK9
 10532     04A0                     __pbssBANK9:
 10533     04A0                     _statusBuffer@main$F4019:
 10534     04A0                     	ds	80
 10535                           
 10536                           	psect	inittext
 10537     1708                     init_ram:
 10538     1708  00FE               	movwf	btemp
 10539     1709                     initloop:
 10540     1709  0012               	moviw fsr0++
 10541     170A  001E               	movwi fsr1++
 10542     170B  0BFE               	decfsz	btemp,f
 10543     170C  2F09               	goto	initloop
 10544     170D  3400               	retlw	0
 10545                           
 10546                           	psect	clrtext
 10547     1702                     clear_ram0:	
 10548                           ;	Called with FSR0 containing the base address, and
 10549                           ;	WREG with the size to clear
 10550                           
 10551     1702  0064               	clrwdt	;clear the watchdog before getting into this loop
 10552     1703                     clrloop0:
 10553     1703  0180               	clrf	0	;clear RAM location pointed to by FSR
 10554     1704  3101               	addfsr 0,1
 10555     1705  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10556     1706  2F03               	goto	clrloop0	;have we reached the end yet?
 10557     1707  3400               	retlw	0	;all done for this memory range, return
 10558                           
 10559                           	psect	cstackCOMMON
 10560     0070                     __pcstackCOMMON:
 10561     0070                     ?_LIGHTBLUE_GetButtonValue:
 10562     0070                     ?_LIGHTBLUE_GetAccState:	
 10563                           ; 1 bytes @ 0x0
 10564                           
 10565     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10566                           ; 1 bytes @ 0x0
 10567                           
 10568     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10569                           ; 1 bytes @ 0x0
 10570                           
 10571     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10572                           ; 1 bytes @ 0x0
 10573                           
 10574     0070                     ?_RN487X_EnterCmdMode:	
 10575                           ; 1 bytes @ 0x0
 10576                           
 10577     0070                     ?_RN487X_EnterDataMode:	
 10578                           ; 1 bytes @ 0x0
 10579                           
 10580     0070                     ?_BMA253_NewAccelDataRdyX:	
 10581                           ; 1 bytes @ 0x0
 10582                           
 10583     0070                     ?_BMA253_NewAccelDataRdyY:	
 10584                           ; 1 bytes @ 0x0
 10585                           
 10586     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10587                           ; 1 bytes @ 0x0
 10588                           
 10589     0070                     ?_EUSART1_Read:	
 10590                           ; 1 bytes @ 0x0
 10591                           
 10592     0070                     ?_EUSART1_Write:	
 10593                           ; 1 bytes @ 0x0
 10594                           
 10595     0070                     ?_EUSART1_is_rx_ready:	
 10596                           ; 1 bytes @ 0x0
 10597                           
 10598     0070                     ?_EUSART1_SetTxInterruptHandler:	
 10599                           ; 1 bytes @ 0x0
 10600                           
 10601     0070                     ?_EUSART1_Receive_ISR:	
 10602                           ; 1 bytes @ 0x0
 10603                           
 10604     0070                     ?_EUSART1_SetRxInterruptHandler:	
 10605                           ; 1 bytes @ 0x0
 10606                           
 10607     0070                     ?_EUSART1_is_tx_done:	
 10608                           ; 1 bytes @ 0x0
 10609                           
 10610     0070                     ?_EUSART1_Transmit_ISR:	
 10611                           ; 1 bytes @ 0x0
 10612                           
 10613     0070                     ?_EUSART1_Initialize:	
 10614                           ; 1 bytes @ 0x0
 10615                           
 10616     0070                     ?_I2C1_SetBuffer:	
 10617                           ; 1 bytes @ 0x0
 10618                           
 10619     0070                     ?_I2C1_Open:	
 10620                           ; 1 bytes @ 0x0
 10621                           
 10622     0070                     ?_I2C1_MasterWrite:	
 10623                           ; 1 bytes @ 0x0
 10624                           
 10625     0070                     ?_I2C1_Close:	
 10626                           ; 1 bytes @ 0x0
 10627                           
 10628     0070                     ?_RN487X_IsConnected:	
 10629                           ; 1 bytes @ 0x0
 10630                           
 10631     0070                     ?_RN487X_Read:	
 10632                           ; 1 bytes @ 0x0
 10633                           
 10634     0070                     ?_RN487X_DataReady:	
 10635                           ; 1 bytes @ 0x0
 10636                           
 10637     0070                     ?_RN487X_FilterData:	
 10638                           ; 1 bytes @ 0x0
 10639                           
 10640     0070                     ?_RN487X_Read@rn487x_interface$F1570:	
 10641                           ; 1 bytes @ 0x0
 10642                           
 10643     0070                     ?_RN487X_is_tx_done:	
 10644                           ; 1 bytes @ 0x0
 10645                           
 10646     0070                     ?_RN487X_is_rx_ready:	
 10647                           ; 1 bytes @ 0x0
 10648                           
 10649     0070                     ?_RN487X_IndicateRx:	
 10650                           ; 1 bytes @ 0x0
 10651                           
 10652     0070                     ?_RN487X_Reset:	
 10653                           ; 1 bytes @ 0x0
 10654                           
 10655     0070                     ?_RN487X_SetSystemMode:	
 10656                           ; 1 bytes @ 0x0
 10657                           
 10658     0070                     ?_DELAY_milliseconds:	
 10659                           ; 1 bytes @ 0x0
 10660                           
 10661     0070                     ?_strcpy:	
 10662                           ; 1 bytes @ 0x0
 10663                           
 10664     0070                     ?_TMR0_ISR:	
 10665                           ; 1 bytes @ 0x0
 10666                           
 10667     0070                     ?_PIN_MANAGER_IOC:	
 10668                           ; 1 bytes @ 0x0
 10669                           
 10670     0070                     ?_IOCAF6_SetInterruptHandler:	
 10671                           ; 1 bytes @ 0x0
 10672                           
 10673     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 10674                           ; 1 bytes @ 0x0
 10675                           
 10676     0070                     ?_IOCAF7_SetInterruptHandler:	
 10677                           ; 1 bytes @ 0x0
 10678                           
 10679     0070                     ?_IOCAF7_DefaultInterruptHandler:	
 10680                           ; 1 bytes @ 0x0
 10681                           
 10682     0070                     ?_IOCAF6_ISR:	
 10683                           ; 1 bytes @ 0x0
 10684                           
 10685     0070                     ?_IOCAF7_ISR:	
 10686                           ; 1 bytes @ 0x0
 10687                           
 10688     0070                     ?_I2C1_DO_IDLE:	
 10689                           ; 1 bytes @ 0x0
 10690                           
 10691     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 10692                           ; 1 bytes @ 0x0
 10693                           
 10694     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 10695                           ; 1 bytes @ 0x0
 10696                           
 10697     0070                     ?_I2C1_DO_TX:	
 10698                           ; 1 bytes @ 0x0
 10699                           
 10700     0070                     ?_I2C1_DO_RX:	
 10701                           ; 1 bytes @ 0x0
 10702                           
 10703     0070                     ?_I2C1_DO_RCEN:	
 10704                           ; 1 bytes @ 0x0
 10705                           
 10706     0070                     ?_I2C1_DO_TX_EMPTY:	
 10707                           ; 1 bytes @ 0x0
 10708                           
 10709     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 10710                           ; 1 bytes @ 0x0
 10711                           
 10712     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 10713                           ; 1 bytes @ 0x0
 10714                           
 10715     0070                     ?_I2C1_DO_SEND_RESTART:	
 10716                           ; 1 bytes @ 0x0
 10717                           
 10718     0070                     ?_I2C1_DO_SEND_STOP:	
 10719                           ; 1 bytes @ 0x0
 10720                           
 10721     0070                     ?_I2C1_DO_RX_ACK:	
 10722                           ; 1 bytes @ 0x0
 10723                           
 10724     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 10725                           ; 1 bytes @ 0x0
 10726                           
 10727     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 10728                           ; 1 bytes @ 0x0
 10729                           
 10730     0070                     ?_I2C1_DO_RESET:	
 10731                           ; 1 bytes @ 0x0
 10732                           
 10733     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 10734                           ; 1 bytes @ 0x0
 10735                           
 10736     0070                     ?_I2C1_MasterClearIrq:	
 10737                           ; 1 bytes @ 0x0
 10738                           
 10739     0070                     ?_I2C1_MasterOpen:	
 10740                           ; 1 bytes @ 0x0
 10741                           
 10742     0070                     ?_I2C1_MasterDisableIrq:	
 10743                           ; 1 bytes @ 0x0
 10744                           
 10745     0070                     ?_I2C1_MasterClose:	
 10746                           ; 1 bytes @ 0x0
 10747                           
 10748     0070                     ?_I2C1_MasterStart:	
 10749                           ; 1 bytes @ 0x0
 10750                           
 10751     0070                     ?_I2C1_Poller:	
 10752                           ; 1 bytes @ 0x0
 10753                           
 10754     0070                     ?_I2C1_SetCallback:	
 10755                           ; 1 bytes @ 0x0
 10756                           
 10757     0070                     ?_I2C1_MasterWaitForEvent:	
 10758                           ; 1 bytes @ 0x0
 10759                           
 10760     0070                     ?_I2C1_MasterFsm:	
 10761                           ; 1 bytes @ 0x0
 10762                           
 10763     0070                     ?_I2C1_MasterIsNack:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766     0070                     ?_I2C1_MasterSendTxData:	
 10767                           ; 1 bytes @ 0x0
 10768                           
 10769     0070                     ?_I2C1_MasterGetRxData:	
 10770                           ; 1 bytes @ 0x0
 10771                           
 10772     0070                     ?_I2C1_MasterSendAck:	
 10773                           ; 1 bytes @ 0x0
 10774                           
 10775     0070                     ?_I2C1_MasterStartRx:	
 10776                           ; 1 bytes @ 0x0
 10777                           
 10778     0070                     ?_I2C1_MasterSetIrq:	
 10779                           ; 1 bytes @ 0x0
 10780                           
 10781     0070                     ?_I2C1_MasterEnableRestart:	
 10782                           ; 1 bytes @ 0x0
 10783                           
 10784     0070                     ?_I2C1_MasterStop:	
 10785                           ; 1 bytes @ 0x0
 10786                           
 10787     0070                     ?_I2C1_MasterSendNack:	
 10788                           ; 1 bytes @ 0x0
 10789                           
 10790     0070                     ?_PMD_Initialize:	
 10791                           ; 1 bytes @ 0x0
 10792                           
 10793     0070                     ?_SPI2_Initialize:	
 10794                           ; 1 bytes @ 0x0
 10795                           
 10796     0070                     ?_OSCILLATOR_Initialize:	
 10797                           ; 1 bytes @ 0x0
 10798                           
 10799     0070                     ?_TMR0_Initialize:	
 10800                           ; 1 bytes @ 0x0
 10801                           
 10802     0070                     ?_EUSART2_Initialize:	
 10803                           ; 1 bytes @ 0x0
 10804                           
 10805     0070                     ?_TMR0_SetInterruptHandler:	
 10806                           ; 1 bytes @ 0x0
 10807                           
 10808     0070                     ?_TMR0_DefaultInterruptHandler:	
 10809                           ; 1 bytes @ 0x0
 10810                           
 10811     0070                     ?_EUSART1_SetFramingErrorHandler:	
 10812                           ; 1 bytes @ 0x0
 10813                           
 10814     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10815                           ; 1 bytes @ 0x0
 10816                           
 10817     0070                     ?_EUSART1_SetOverrunErrorHandler:	
 10818                           ; 1 bytes @ 0x0
 10819                           
 10820     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10821                           ; 1 bytes @ 0x0
 10822                           
 10823     0070                     ?_EUSART1_SetErrorHandler:	
 10824                           ; 1 bytes @ 0x0
 10825                           
 10826     0070                     ?_EUSART1_DefaultErrorHandler:	
 10827                           ; 1 bytes @ 0x0
 10828                           
 10829     0070                     ?_EUSART1_RxDataHandler:	
 10830                           ; 1 bytes @ 0x0
 10831                           
 10832     0070                     ?_EUSART2_SetRxInterruptHandler:	
 10833                           ; 1 bytes @ 0x0
 10834                           
 10835     0070                     ?_EUSART2_Receive_ISR:	
 10836                           ; 1 bytes @ 0x0
 10837                           
 10838     0070                     ?_EUSART2_SetTxInterruptHandler:	
 10839                           ; 1 bytes @ 0x0
 10840                           
 10841     0070                     ?_EUSART2_Transmit_ISR:	
 10842                           ; 1 bytes @ 0x0
 10843                           
 10844     0070                     ?_EUSART2_SetFramingErrorHandler:	
 10845                           ; 1 bytes @ 0x0
 10846                           
 10847     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10848                           ; 1 bytes @ 0x0
 10849                           
 10850     0070                     ?_EUSART2_SetOverrunErrorHandler:	
 10851                           ; 1 bytes @ 0x0
 10852                           
 10853     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10854                           ; 1 bytes @ 0x0
 10855                           
 10856     0070                     ?_EUSART2_SetErrorHandler:	
 10857                           ; 1 bytes @ 0x0
 10858                           
 10859     0070                     ?_EUSART2_DefaultErrorHandler:	
 10860                           ; 1 bytes @ 0x0
 10861                           
 10862     0070                     ?_EUSART2_RxDataHandler:	
 10863                           ; 1 bytes @ 0x0
 10864                           
 10865     0070                     ?_service_acceleremoterInterrupt:	
 10866                           ; 1 bytes @ 0x0
 10867                           
 10868     0070                     ?_strchr:	
 10869                           ; 1 bytes @ 0x0
 10870                           
 10871     0070                     ?_LIGHTBLUE_Initialize:	
 10872                           ; 1 bytes @ 0x0
 10873                           
 10874     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 10875                           ; 1 bytes @ 0x0
 10876                           
 10877     0070                     ?_LIGHTBLUE_AccelSensor:	
 10878                           ; 1 bytes @ 0x0
 10879                           
 10880     0070                     ?_LIGHTBLUE_PushButton:	
 10881                           ; 1 bytes @ 0x0
 10882                           
 10883     0070                     ?_LIGHTBLUE_AccState:	
 10884                           ; 1 bytes @ 0x0
 10885                           
 10886     0070                     ?_LIGHTBLUE_LedState:	
 10887                           ; 1 bytes @ 0x0
 10888                           
 10889     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 10890                           ; 1 bytes @ 0x0
 10891                           
 10892     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 10893                           ; 1 bytes @ 0x0
 10894                           
 10895     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 10896                           ; 1 bytes @ 0x0
 10897                           
 10898     0070                     ?_RN487X_Init:	
 10899                           ; 1 bytes @ 0x0
 10900                           
 10901     0070                     ?_RN487X_ReadDefaultResponse:	
 10902                           ; 1 bytes @ 0x0
 10903                           
 10904     0070                     ?_rn487x_PrintMessageStart:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907     0070                     ?_rn487x_PrintMessageEnd:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910     0070                     ?_rn487x_PrintIndicatorCharacters:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913     0070                     ?_INTERRUPT_InterruptManager:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916     0070                     ?_PIN_MANAGER_Initialize:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919     0070                     ?_I2C1_Initialize:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922     0070                     ?_I2C1_MasterOperation:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925     0070                     ?_SYSTEM_Initialize:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928     0070                     ?_main:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931     0070                     ?_strlen:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934     0070                     ?_strncmp:	
 10935                           ; 2 bytes @ 0x0
 10936                           
 10937     0070                     RN487X_Reset@value:	
 10938                           ; 2 bytes @ 0x0
 10939                           
 10940     0070                     RN487X_IndicateRx@value:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943     0070                     RN487X_SetSystemMode@mode:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946     0070                     I2C1_Open@address:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949     0070                     I2C1_Close@returnValue:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952     0070                     I2C1_MasterSendTxData@data:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955     0070                     EUSART1_Read@readValue:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958     0070                     EUSART1_Write@txData:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961     0070                     strcpy@dest:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964     0070                     strchr@s:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967     0070                     strncmp@l:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970     0070                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973     0070                     IOCAF7_SetInterruptHandler@InterruptHandler:	
 10974                           ; 2 bytes @ 0x0
 10975                           
 10976     0070                     I2C1_SetBuffer@buffer:	
 10977                           ; 2 bytes @ 0x0
 10978                           
 10979     0070                     I2C1_SetCallback@cb:	
 10980                           ; 2 bytes @ 0x0
 10981                           
 10982     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
 10983                           ; 2 bytes @ 0x0
 10984                           
 10985     0070                     DELAY_milliseconds@milliseconds:	
 10986                           ; 2 bytes @ 0x0
 10987                           
 10988     0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10989                           ; 2 bytes @ 0x0
 10990                           
 10991     0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10992                           ; 2 bytes @ 0x0
 10993                           
 10994     0070                     EUSART1_SetErrorHandler@interruptHandler:	
 10995                           ; 2 bytes @ 0x0
 10996                           
 10997     0070                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 10998                           ; 2 bytes @ 0x0
 10999                           
 11000     0070                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11001                           ; 2 bytes @ 0x0
 11002                           
 11003     0070                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11004                           ; 2 bytes @ 0x0
 11005                           
 11006     0070                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11007                           ; 2 bytes @ 0x0
 11008                           
 11009     0070                     EUSART2_SetErrorHandler@interruptHandler:	
 11010                           ; 2 bytes @ 0x0
 11011                           
 11012     0070                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11013                           ; 2 bytes @ 0x0
 11014                           
 11015     0070                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11016                           ; 2 bytes @ 0x0
 11017                           
 11018     0070                     strlen@s:	
 11019                           ; 2 bytes @ 0x0
 11020                           
 11021     0070                     ??_LIGHTBLUE_GetButtonValue:	
 11022                           ; 2 bytes @ 0x0
 11023                           
 11024     0070                     ??_LIGHTBLUE_GetAccState:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027     0070                     ??_LIGHTBLUE_GetDataLedValue:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030     0070                     ??_LIGHTBLUE_GetErrorLedValue:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033     0070                     ??_EUSART1_Read:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036     0070                     ??_EUSART1_is_rx_ready:	
 11037                           ; 1 bytes @ 0x0
 11038                           
 11039     0070                     ??_EUSART1_Receive_ISR:	
 11040                           ; 1 bytes @ 0x0
 11041                           
 11042     0070                     ??_EUSART1_is_tx_done:	
 11043                           ; 1 bytes @ 0x0
 11044                           
 11045     0070                     ??_EUSART1_Transmit_ISR:	
 11046                           ; 1 bytes @ 0x0
 11047                           
 11048     0070                     ??_I2C1_Open:	
 11049                           ; 1 bytes @ 0x0
 11050                           
 11051     0070                     ??_I2C1_Close:	
 11052                           ; 1 bytes @ 0x0
 11053                           
 11054     0070                     ??_RN487X_IsConnected:	
 11055                           ; 1 bytes @ 0x0
 11056                           
 11057     0070                     ??_RN487X_is_tx_done:	
 11058                           ; 1 bytes @ 0x0
 11059                           
 11060     0070                     ??_RN487X_is_rx_ready:	
 11061                           ; 1 bytes @ 0x0
 11062                           
 11063     0070                     ??_TMR0_ISR:	
 11064                           ; 1 bytes @ 0x0
 11065                           
 11066     0070                     ??_PIN_MANAGER_IOC:	
 11067                           ; 1 bytes @ 0x0
 11068                           
 11069     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11070                           ; 1 bytes @ 0x0
 11071                           
 11072     0070                     ??_IOCAF7_DefaultInterruptHandler:	
 11073                           ; 1 bytes @ 0x0
 11074                           
 11075     0070                     ??_IOCAF6_ISR:	
 11076                           ; 1 bytes @ 0x0
 11077                           
 11078     0070                     ??_IOCAF7_ISR:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081     0070                     ??_I2C1_DO_IDLE:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084     0070                     ??_I2C1_DO_SEND_ADR_READ:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087     0070                     ??_I2C1_DO_RCEN:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090     0070                     ??_I2C1_DO_SEND_RESTART_READ:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093     0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096     0070                     ??_I2C1_DO_SEND_RESTART:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099     0070                     ??_I2C1_DO_SEND_STOP:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102     0070                     ??_I2C1_DO_RX_ACK:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105     0070                     ??_I2C1_DO_RX_NACK_STOP:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108     0070                     ??_I2C1_DO_RX_NACK_RESTART:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111     0070                     ??_I2C1_DO_RESET:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114     0070                     ??_I2C1_MasterClearIrq:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117     0070                     ??_I2C1_MasterOpen:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120     0070                     ??_I2C1_MasterDisableIrq:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123     0070                     ??_I2C1_MasterClose:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126     0070                     ??_I2C1_MasterStart:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129     0070                     ??_I2C1_MasterWaitForEvent:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132     0070                     ??_I2C1_MasterIsNack:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135     0070                     ??_I2C1_MasterSendTxData:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138     0070                     ??_I2C1_MasterGetRxData:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141     0070                     ??_I2C1_MasterSendAck:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144     0070                     ??_I2C1_MasterStartRx:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147     0070                     ??_I2C1_MasterSetIrq:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150     0070                     ??_I2C1_MasterEnableRestart:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153     0070                     ??_I2C1_MasterStop:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156     0070                     ??_I2C1_MasterSendNack:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159     0070                     ??_PMD_Initialize:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162     0070                     ??_SPI2_Initialize:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165     0070                     ??_OSCILLATOR_Initialize:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168     0070                     ??_TMR0_DefaultInterruptHandler:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177     0070                     ??_EUSART1_DefaultErrorHandler:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180     0070                     ??_EUSART1_RxDataHandler:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183     0070                     ??_EUSART2_Receive_ISR:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186     0070                     ??_EUSART2_Transmit_ISR:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195     0070                     ??_EUSART2_DefaultErrorHandler:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198     0070                     ??_EUSART2_RxDataHandler:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201     0070                     ??_LIGHTBLUE_Initialize:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204     0070                     ??_INTERRUPT_InterruptManager:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207     0070                     ??_I2C1_Initialize:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210                           
 11211                           ; 1 bytes @ 0x0
 11212     0070                     	ds	1
 11213     0071                     ?_RN487X_ReadMsg:
 11214     0071                     rn487x_PrintIndicatorCharacters@messageType:	
 11215                           ; 1 bytes @ 0x1
 11216                           
 11217     0071                     I2C1_Open@returnValue:	
 11218                           ; 1 bytes @ 0x1
 11219                           
 11220     0071                     strcpy@src:	
 11221                           ; 1 bytes @ 0x1
 11222                           
 11223     0071                     RN487X_ReadMsg@expectedMsg:	
 11224                           ; 1 bytes @ 0x1
 11225                           
 11226     0071                     strchr@c:	
 11227                           ; 2 bytes @ 0x1
 11228                           
 11229     0071                     strncmp@r:	
 11230                           ; 2 bytes @ 0x1
 11231                           
 11232     0071                     RN487X_ReadDefaultResponse@resp:	
 11233                           ; 2 bytes @ 0x1
 11234                           
 11235     0071                     ??_EUSART1_Write:	
 11236                           ; 3 bytes @ 0x1
 11237                           
 11238     0071                     ??_RN487X_Read@rn487x_interface$F1572:	
 11239                           ; 1 bytes @ 0x1
 11240                           
 11241     0071                     ??_RN487X_IndicateRx:	
 11242                           ; 1 bytes @ 0x1
 11243                           
 11244     0071                     ??_RN487X_Reset:	
 11245                           ; 1 bytes @ 0x1
 11246                           
 11247     0071                     ??_RN487X_SetSystemMode:	
 11248                           ; 1 bytes @ 0x1
 11249                           
 11250     0071                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11251                           ; 1 bytes @ 0x1
 11252                           
 11253     0071                     ??_RN487X_ReadDefaultResponse:	
 11254                           ; 1 bytes @ 0x1
 11255                           
 11256     0071                     ??_rn487x_PrintMessageStart:	
 11257                           ; 1 bytes @ 0x1
 11258                           
 11259     0071                     ??_rn487x_PrintMessageEnd:	
 11260                           ; 1 bytes @ 0x1
 11261                           
 11262     0071                     ??_rn487x_PrintIndicatorCharacters:	
 11263                           ; 1 bytes @ 0x1
 11264                           
 11265                           
 11266                           ; 1 bytes @ 0x1
 11267     0071                     	ds	1
 11268     0072                     ?_RN487X_Delay:
 11269     0072                     strcpy@d:	
 11270                           ; 1 bytes @ 0x2
 11271                           
 11272     0072                     RN487X_Delay@delayCount:	
 11273                           ; 1 bytes @ 0x2
 11274                           
 11275     0072                     I2C1_SetBuffer@bufferSize:	
 11276                           ; 2 bytes @ 0x2
 11277                           
 11278     0072                     I2C1_SetCallback@ptr:	
 11279                           ; 2 bytes @ 0x2
 11280                           
 11281     0072                     ??_strlen:	
 11282                           ; 2 bytes @ 0x2
 11283                           
 11284     0072                     ??_EUSART1_SetTxInterruptHandler:	
 11285                           ; 1 bytes @ 0x2
 11286                           
 11287     0072                     ??_EUSART1_SetRxInterruptHandler:	
 11288                           ; 1 bytes @ 0x2
 11289                           
 11290     0072                     ??_EUSART1_Initialize:	
 11291                           ; 1 bytes @ 0x2
 11292                           
 11293     0072                     ??_DELAY_milliseconds:	
 11294                           ; 1 bytes @ 0x2
 11295                           
 11296     0072                     ??_strcpy:	
 11297                           ; 1 bytes @ 0x2
 11298                           
 11299     0072                     ??_IOCAF6_SetInterruptHandler:	
 11300                           ; 1 bytes @ 0x2
 11301                           
 11302     0072                     ??_IOCAF7_SetInterruptHandler:	
 11303                           ; 1 bytes @ 0x2
 11304                           
 11305     0072                     ??_TMR0_Initialize:	
 11306                           ; 1 bytes @ 0x2
 11307                           
 11308     0072                     ??_EUSART2_Initialize:	
 11309                           ; 1 bytes @ 0x2
 11310                           
 11311     0072                     ??_TMR0_SetInterruptHandler:	
 11312                           ; 1 bytes @ 0x2
 11313                           
 11314     0072                     ??_EUSART1_SetFramingErrorHandler:	
 11315                           ; 1 bytes @ 0x2
 11316                           
 11317     0072                     ??_EUSART1_SetOverrunErrorHandler:	
 11318                           ; 1 bytes @ 0x2
 11319                           
 11320     0072                     ??_EUSART1_SetErrorHandler:	
 11321                           ; 1 bytes @ 0x2
 11322                           
 11323     0072                     ??_EUSART2_SetRxInterruptHandler:	
 11324                           ; 1 bytes @ 0x2
 11325                           
 11326     0072                     ??_EUSART2_SetTxInterruptHandler:	
 11327                           ; 1 bytes @ 0x2
 11328                           
 11329     0072                     ??_EUSART2_SetFramingErrorHandler:	
 11330                           ; 1 bytes @ 0x2
 11331                           
 11332     0072                     ??_EUSART2_SetOverrunErrorHandler:	
 11333                           ; 1 bytes @ 0x2
 11334                           
 11335     0072                     ??_EUSART2_SetErrorHandler:	
 11336                           ; 1 bytes @ 0x2
 11337                           
 11338     0072                     ??_PIN_MANAGER_Initialize:	
 11339                           ; 1 bytes @ 0x2
 11340                           
 11341     0072                     ??_SYSTEM_Initialize:	
 11342                           ; 1 bytes @ 0x2
 11343                           
 11344                           
 11345                           ; 1 bytes @ 0x2
 11346     0072                     	ds	1
 11347     0073                     RN487X_ReadMsg@msgLen:
 11348     0073                     strlen@a:	
 11349                           ; 1 bytes @ 0x3
 11350                           
 11351     0073                     strncmp@n:	
 11352                           ; 2 bytes @ 0x3
 11353                           
 11354     0073                     ??_strchr:	
 11355                           ; 2 bytes @ 0x3
 11356                           
 11357                           
 11358                           ; 1 bytes @ 0x3
 11359     0073                     	ds	1
 11360     0074                     RN487X_ReadMsg@resp:
 11361     0074                     RN487X_ReadDefaultResponse@status:	
 11362                           ; 1 bytes @ 0x4
 11363                           
 11364     0074                     I2C1_SetCallback@idx:	
 11365                           ; 1 bytes @ 0x4
 11366                           
 11367     0074                     ??_I2C1_SetBuffer:	
 11368                           ; 1 bytes @ 0x4
 11369                           
 11370     0074                     ??_RN487X_Delay:	
 11371                           ; 1 bytes @ 0x4
 11372                           
 11373     0074                     ??_I2C1_SetCallback:	
 11374                           ; 1 bytes @ 0x4
 11375                           
 11376     0074                     ??_RN487X_Init:	
 11377                           ; 1 bytes @ 0x4
 11378                           
 11379     0074                     ??_RN487X_ReadMsg:	
 11380                           ; 1 bytes @ 0x4
 11381                           
 11382                           
 11383                           ; 1 bytes @ 0x4
 11384     0074                     	ds	1
 11385     0075                     ?_LIGHTBLUE_SplitByte:
 11386     0075                     ?_I2C1_SetDataCompleteCallback:	
 11387                           ; 1 bytes @ 0x5
 11388                           
 11389     0075                     ?_I2C1_SetAddressNackCallback:	
 11390                           ; 1 bytes @ 0x5
 11391                           
 11392     0075                     ?_RN487X_Write:	
 11393                           ; 1 bytes @ 0x5
 11394                           
 11395     0075                     ?_rn487x_PrintMessage:	
 11396                           ; 1 bytes @ 0x5
 11397                           
 11398     0075                     LIGHTBLUE_SplitByte@payload:	
 11399                           ; 1 bytes @ 0x5
 11400                           
 11401     0075                     RN487X_ReadMsg@index:	
 11402                           ; 1 bytes @ 0x5
 11403                           
 11404     0075                     RN487X_Write@txData:	
 11405                           ; 1 bytes @ 0x5
 11406                           
 11407     0075                     rn487x_PrintMessage@passedMessage:	
 11408                           ; 1 bytes @ 0x5
 11409                           
 11410     0075                     I2C1_SetDataCompleteCallback@cb:	
 11411                           ; 1 bytes @ 0x5
 11412                           
 11413     0075                     I2C1_SetAddressNackCallback@cb:	
 11414                           ; 2 bytes @ 0x5
 11415                           
 11416     0075                     ??_strncmp:	
 11417                           ; 2 bytes @ 0x5
 11418                           
 11419                           
 11420                           ; 1 bytes @ 0x5
 11421     0075                     	ds	1
 11422     0076                     ?_LIGHTBLUE_SendPacket:
 11423     0076                     ?_strstr:	
 11424                           ; 1 bytes @ 0x6
 11425                           
 11426     0076                     ?_LIGHTBLUE_SendSerialData:	
 11427                           ; 1 bytes @ 0x6
 11428                           
 11429     0076                     ?_RN487X_SendCmd:	
 11430                           ; 1 bytes @ 0x6
 11431                           
 11432     0076                     LIGHTBLUE_SendSerialData@serialData:	
 11433                           ; 1 bytes @ 0x6
 11434                           
 11435     0076                     LIGHTBLUE_SendPacket@payload:	
 11436                           ; 1 bytes @ 0x6
 11437                           
 11438     0076                     LIGHTBLUE_SplitByte@value:	
 11439                           ; 1 bytes @ 0x6
 11440                           
 11441     0076                     RN487X_SendCmd@cmd:	
 11442                           ; 1 bytes @ 0x6
 11443                           
 11444     0076                     strstr@h:	
 11445                           ; 1 bytes @ 0x6
 11446                           
 11447     0076                     ??_RN487X_Write:	
 11448                           ; 1 bytes @ 0x6
 11449                           
 11450     0076                     ??_rn487x_PrintMessage:	
 11451                           ; 1 bytes @ 0x6
 11452                           
 11453                           
 11454                           ; 1 bytes @ 0x6
 11455     0076                     	ds	1
 11456     0077                     RN487X_SendCmd@cmdLen:
 11457     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11458                           ; 1 bytes @ 0x7
 11459                           
 11460     0077                     I2C1_SetAddressNackCallback@ptr:	
 11461                           ; 2 bytes @ 0x7
 11462                           
 11463     0077                     strstr@n:	
 11464                           ; 2 bytes @ 0x7
 11465                           
 11466     0077                     ??_LIGHTBLUE_SendPacket:	
 11467                           ; 2 bytes @ 0x7
 11468                           
 11469     0077                     ??_LIGHTBLUE_SplitByte:	
 11470                           ; 1 bytes @ 0x7
 11471                           
 11472     0077                     ??_LIGHTBLUE_SendSerialData:	
 11473                           ; 1 bytes @ 0x7
 11474                           
 11475                           
 11476                           ; 1 bytes @ 0x7
 11477     0077                     	ds	1
 11478     0078                     ?_LIGHTBLUE_SplitWord:
 11479     0078                     LIGHTBLUE_SendSerialData@length:	
 11480                           ; 1 bytes @ 0x8
 11481                           
 11482     0078                     LIGHTBLUE_SplitWord@payload:	
 11483                           ; 1 bytes @ 0x8
 11484                           
 11485     0078                     RN487X_SendCmd@index:	
 11486                           ; 1 bytes @ 0x8
 11487                           
 11488     0078                     ??_RN487X_SendCmd:	
 11489                           ; 1 bytes @ 0x8
 11490                           
 11491                           
 11492                           ; 1 bytes @ 0x8
 11493     0078                     	ds	1
 11494     0079                     ?_RN487X_SetOutputs:
 11495     0079                     ?_rd1RegCompleteHandler:	
 11496                           ; 1 bytes @ 0x9
 11497                           
 11498     0079                     ?_rd2RegCompleteHandler:	
 11499                           ; 1 bytes @ 0x9
 11500                           
 11501     0079                     ?_wr1RegCompleteHandler:	
 11502                           ; 1 bytes @ 0x9
 11503                           
 11504     0079                     ?_wr2RegCompleteHandler:	
 11505                           ; 1 bytes @ 0x9
 11506                           
 11507     0079                     ?_rdBlkRegCompleteHandler:	
 11508                           ; 1 bytes @ 0x9
 11509                           
 11510     0079                     ?_I2C1_CallbackReturnStop:	
 11511                           ; 1 bytes @ 0x9
 11512                           
 11513     0079                     ?_I2C1_CallbackReturnReset:	
 11514                           ; 1 bytes @ 0x9
 11515                           
 11516     0079                     ?_wr1RegCompleteHandler@strncmp$F4631:	
 11517                           ; 1 bytes @ 0x9
 11518                           
 11519     0079                     ?_rd1RegCompleteHandler@strncmp$F4637:	
 11520                           ; 1 bytes @ 0x9
 11521                           
 11522     0079                     ?_rd2RegCompleteHandler@strncmp$F4640:	
 11523                           ; 1 bytes @ 0x9
 11524                           
 11525     0079                     ?_wr2RegCompleteHandler@strncmp$F4643:	
 11526                           ; 1 bytes @ 0x9
 11527                           
 11528     0079                     ?_rdBlkRegCompleteHandler@strncmp$F4649:	
 11529                           ; 1 bytes @ 0x9
 11530                           
 11531     0079                     LIGHTBLUE_SendPacket@packetID:	
 11532                           ; 1 bytes @ 0x9
 11533                           
 11534     0079                     LIGHTBLUE_SplitWord@value:	
 11535                           ; 1 bytes @ 0x9
 11536                           
 11537     0079                     wr1RegCompleteHandler@p:	
 11538                           ; 2 bytes @ 0x9
 11539                           
 11540     0079                     rd1RegCompleteHandler@p:	
 11541                           ; 2 bytes @ 0x9
 11542                           
 11543     0079                     rd2RegCompleteHandler@p:	
 11544                           ; 2 bytes @ 0x9
 11545                           
 11546     0079                     wr2RegCompleteHandler@p:	
 11547                           ; 2 bytes @ 0x9
 11548                           
 11549     0079                     rdBlkRegCompleteHandler@p:	
 11550                           ; 2 bytes @ 0x9
 11551                           
 11552     0079                     rd1RegCompleteHandler@i2c1_master_example$F1056@ptr:	
 11553                           ; 2 bytes @ 0x9
 11554                           
 11555     0079                     rd2RegCompleteHandler@i2c1_master_example$F1067@ptr:	
 11556                           ; 2 bytes @ 0x9
 11557                           
 11558     0079                     wr1RegCompleteHandler@i2c1_master_example$F1073@ptr:	
 11559                           ; 2 bytes @ 0x9
 11560                           
 11561     0079                     wr2RegCompleteHandler@i2c1_master_example$F1079@ptr:	
 11562                           ; 2 bytes @ 0x9
 11563                           
 11564     0079                     rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr:	
 11565                           ; 2 bytes @ 0x9
 11566                           
 11567     0079                     RN487X_SetOutputs@bitMap:	
 11568                           ; 2 bytes @ 0x9
 11569                           
 11570     0079                     I2C1_CallbackReturnStop@funPtr:	
 11571                           ; 2 bytes @ 0x9
 11572                           
 11573     0079                     I2C1_CallbackReturnReset@funPtr:	
 11574                           ; 2 bytes @ 0x9
 11575                           
 11576     0079                     ??_RN487X_EnterCmdMode:	
 11577                           ; 2 bytes @ 0x9
 11578                           
 11579     0079                     ??_RN487X_EnterDataMode:	
 11580                           ; 1 bytes @ 0x9
 11581                           
 11582     0079                     ??_I2C1_SetDataCompleteCallback:	
 11583                           ; 1 bytes @ 0x9
 11584                           
 11585     0079                     ??_I2C1_SetAddressNackCallback:	
 11586                           ; 1 bytes @ 0x9
 11587                           
 11588     0079                     ??_strstr:	
 11589                           ; 1 bytes @ 0x9
 11590                           
 11591                           
 11592                           ; 1 bytes @ 0x9
 11593     0079                     	ds	1
 11594     007A                     LIGHTBLUE_PushButton@payload:
 11595     007A                     LIGHTBLUE_AccState@payload:	
 11596                           ; 3 bytes @ 0xA
 11597                           
 11598     007A                     LIGHTBLUE_LedState@payload:	
 11599                           ; 3 bytes @ 0xA
 11600                           
 11601     007A                     ??_LIGHTBLUE_PushButton:	
 11602                           ; 3 bytes @ 0xA
 11603                           
 11604     007A                     ??_LIGHTBLUE_AccState:	
 11605                           ; 1 bytes @ 0xA
 11606                           
 11607     007A                     ??_LIGHTBLUE_LedState:	
 11608                           ; 1 bytes @ 0xA
 11609                           
 11610     007A                     ??_LIGHTBLUE_SendProtocolVersion:	
 11611                           ; 1 bytes @ 0xA
 11612                           
 11613                           
 11614                           ; 1 bytes @ 0xA
 11615     007A                     	ds	1
 11616     007B                     strstr@nl:
 11617     007B                     ??_LIGHTBLUE_SplitWord:	
 11618                           ; 2 bytes @ 0xB
 11619                           
 11620     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 11621                           ; 1 bytes @ 0xB
 11622                           
 11623     007B                     ??_RN487X_SetOutputs:	
 11624                           ; 1 bytes @ 0xB
 11625                           
 11626     007B                     ??_rd1RegCompleteHandler:	
 11627                           ; 1 bytes @ 0xB
 11628                           
 11629     007B                     ??_rd2RegCompleteHandler:	
 11630                           ; 1 bytes @ 0xB
 11631                           
 11632     007B                     ??_wr1RegCompleteHandler:	
 11633                           ; 1 bytes @ 0xB
 11634                           
 11635     007B                     ??_wr2RegCompleteHandler:	
 11636                           ; 1 bytes @ 0xB
 11637                           
 11638     007B                     ??_rdBlkRegCompleteHandler:	
 11639                           ; 1 bytes @ 0xB
 11640                           
 11641     007B                     ??_I2C1_DO_TX:	
 11642                           ; 1 bytes @ 0xB
 11643                           
 11644     007B                     ??_I2C1_DO_RX:	
 11645                           ; 1 bytes @ 0xB
 11646                           
 11647     007B                     ??_I2C1_DO_TX_EMPTY:	
 11648                           ; 1 bytes @ 0xB
 11649                           
 11650     007B                     ??_I2C1_DO_ADDRESS_NACK:	
 11651                           ; 1 bytes @ 0xB
 11652                           
 11653     007B                     ??_I2C1_CallbackReturnStop:	
 11654                           ; 1 bytes @ 0xB
 11655                           
 11656     007B                     ??_I2C1_CallbackReturnReset:	
 11657                           ; 1 bytes @ 0xB
 11658                           
 11659     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 11660                           ; 1 bytes @ 0xB
 11661                           
 11662     007B                     ??_wr1RegCompleteHandler@strncmp$F4633:	
 11663                           ; 1 bytes @ 0xB
 11664                           
 11665     007B                     ??_rd1RegCompleteHandler@strncmp$F4639:	
 11666                           ; 1 bytes @ 0xB
 11667                           
 11668     007B                     ??_rd2RegCompleteHandler@strncmp$F4642:	
 11669                           ; 1 bytes @ 0xB
 11670                           
 11671     007B                     ??_wr2RegCompleteHandler@strncmp$F4645:	
 11672                           ; 1 bytes @ 0xB
 11673                           
 11674     007B                     ??_rdBlkRegCompleteHandler@strncmp$F4651:	
 11675                           ; 1 bytes @ 0xB
 11676                           
 11677                           
 11678                           ; 1 bytes @ 0xB
 11679     007B                     	ds	1
 11680     007C                     LIGHTBLUE_SetErrorLedValue@value:
 11681                           
 11682                           ; 1 bytes @ 0xC
 11683     007C                     	ds	1
 11684     007D                     ?_i2c_read1ByteRegister:
 11685     007D                     ?_RN487X_MessageHandler:	
 11686                           ; 1 bytes @ 0xD
 11687                           
 11688     007D                     LIGHTBLUE_PushButton@button:	
 11689                           ; 1 bytes @ 0xD
 11690                           
 11691     007D                     LIGHTBLUE_AccState@acc:	
 11692                           ; 1 bytes @ 0xD
 11693                           
 11694     007D                     LIGHTBLUE_LedState@led:	
 11695                           ; 1 bytes @ 0xD
 11696                           
 11697     007D                     i2c_read1ByteRegister@reg:	
 11698                           ; 1 bytes @ 0xD
 11699                           
 11700     007D                     RN487X_MessageHandler@message:	
 11701                           ; 1 bytes @ 0xD
 11702                           
 11703     007D                     ??_MCP9844_GetTemperatureValue:	
 11704                           ; 1 bytes @ 0xD
 11705                           
 11706     007D                     ??_LIGHTBLUE_PerformAction:	
 11707                           ; 1 bytes @ 0xD
 11708                           
 11709     007D                     ??_I2C1_MasterWrite:	
 11710                           ; 1 bytes @ 0xD
 11711                           
 11712     007D                     ??_I2C1_Poller:	
 11713                           ; 1 bytes @ 0xD
 11714                           
 11715     007D                     ??_LIGHTBLUE_TemperatureSensor:	
 11716                           ; 1 bytes @ 0xD
 11717                           
 11718     007D                     ??_I2C1_MasterOperation:	
 11719                           ; 1 bytes @ 0xD
 11720                           
 11721                           
 11722                           ; 1 bytes @ 0xD
 11723     007D                     	ds	1
 11724     007E                     ??_BMA253_GetAccelDataXYZ:
 11725     007E                     ??_i2c_read1ByteRegister:	
 11726                           ; 1 bytes @ 0xE
 11727                           
 11728     007E                     ??_BMA253_NewAccelDataRdyX:	
 11729                           ; 1 bytes @ 0xE
 11730                           
 11731     007E                     ??_BMA253_NewAccelDataRdyY:	
 11732                           ; 1 bytes @ 0xE
 11733                           
 11734     007E                     ??_BMA253_NewAccelDataRdyZ:	
 11735                           ; 1 bytes @ 0xE
 11736                           
 11737     007E                     ??_RN487X_Read:	
 11738                           ; 1 bytes @ 0xE
 11739                           
 11740     007E                     ??_RN487X_DataReady:	
 11741                           ; 1 bytes @ 0xE
 11742                           
 11743     007E                     ??_RN487X_FilterData:	
 11744                           ; 1 bytes @ 0xE
 11745                           
 11746     007E                     ??_RN487X_MessageHandler:	
 11747                           ; 1 bytes @ 0xE
 11748                           
 11749     007E                     ??_service_acceleremoterInterrupt:	
 11750                           ; 1 bytes @ 0xE
 11751                           
 11752     007E                     ??_LIGHTBLUE_AccelSensor:	
 11753                           ; 1 bytes @ 0xE
 11754                           
 11755                           
 11756                           	psect	cstackBANK0
 11757     0020                     __pcstackBANK0:	
 11758                           ; 1 bytes @ 0xE
 11759                           
 11760     0020                     RN487X_SetOutputs@ioLowNibble:
 11761     0020                     LIGHTBLUE_SendProtocolVersion@payload:	
 11762                           ; 1 bytes @ 0x0
 11763                           
 11764     0020                     rn487x_PrintMessage@printCharacter:	
 11765                           ; 19 bytes @ 0x0
 11766                           
 11767     0020                     ??_I2C1_MasterFsm:	
 11768                           ; 32 bytes @ 0x0
 11769                           
 11770                           
 11771                           ; 1 bytes @ 0x0
 11772     0020                     	ds	1
 11773     0021                     RN487X_SetOutputs@stateLowNibble:
 11774                           
 11775                           ; 1 bytes @ 0x1
 11776     0021                     	ds	1
 11777     0022                     RN487X_SetOutputs@ioHighNibble:
 11778     0022                     I2C1_MasterOperation@read:	
 11779                           ; 1 bytes @ 0x2
 11780                           
 11781                           
 11782                           ; 1 bytes @ 0x2
 11783     0022                     	ds	1
 11784     0023                     RN487X_SetOutputs@stateHighNibble:
 11785     0023                     I2C1_MasterOperation@returnValue:	
 11786                           ; 1 bytes @ 0x3
 11787                           
 11788                           
 11789                           ; 1 bytes @ 0x3
 11790     0023                     	ds	1
 11791     0024                     ?_LIGHTBLUE_PerformAction:
 11792     0024                     ?_i2c_read2ByteRegister:	
 11793                           ; 1 bytes @ 0x4
 11794                           
 11795     0024                     LIGHTBLUE_PerformAction@data:	
 11796                           ; 2 bytes @ 0x4
 11797                           
 11798     0024                     i2c_read1ByteRegister@address:	
 11799                           ; 1 bytes @ 0x4
 11800                           
 11801     0024                     i2c_read2ByteRegister@reg:	
 11802                           ; 1 bytes @ 0x4
 11803                           
 11804                           
 11805                           ; 1 bytes @ 0x4
 11806     0024                     	ds	1
 11807     0025                     LIGHTBLUE_PerformAction@id:
 11808     0025                     i2c_read1ByteRegister@e:	
 11809                           ; 1 bytes @ 0x5
 11810                           
 11811                           
 11812                           ; 1 bytes @ 0x5
 11813     0025                     	ds	1
 11814     0026                     LIGHTBLUE_PerformAction@led:
 11815     0026                     i2c_read1ByteRegister@x:	
 11816                           ; 1 bytes @ 0x6
 11817                           
 11818     0026                     ??_i2c_read2ByteRegister:	
 11819                           ; 2 bytes @ 0x6
 11820                           
 11821                           
 11822                           ; 1 bytes @ 0x6
 11823     0026                     	ds	1
 11824     0027                     ??_LIGHTBLUE_ParseIncomingPacket:
 11825                           
 11826                           ; 1 bytes @ 0x7
 11827     0027                     	ds	1
 11828     0028                     i2c_read1ByteRegister@d2:
 11829                           
 11830                           ; 1 bytes @ 0x8
 11831     0028                     	ds	1
 11832     0029                     BMA253_NewAccelDataRdyX@xNewData:
 11833     0029                     BMA253_NewAccelDataRdyY@yNewData:	
 11834                           ; 1 bytes @ 0x9
 11835                           
 11836     0029                     BMA253_NewAccelDataRdyZ@zNewData:	
 11837                           ; 1 bytes @ 0x9
 11838                           
 11839     0029                     _LIGHTBLUE_ParseIncomingPacket$377:	
 11840                           ; 1 bytes @ 0x9
 11841                           
 11842                           
 11843                           ; 2 bytes @ 0x9
 11844     0029                     	ds	1
 11845     002A                     ?_BMA253_GetAccelDataX:
 11846     002A                     ?_BMA253_GetAccelDataY:	
 11847                           ; 1 bytes @ 0xA
 11848                           
 11849     002A                     ?_BMA253_GetAccelDataZ:	
 11850                           ; 1 bytes @ 0xA
 11851                           
 11852     002A                     BMA253_GetAccelDataX@xAccelData:	
 11853                           ; 1 bytes @ 0xA
 11854                           
 11855     002A                     BMA253_GetAccelDataY@yAccelData:	
 11856                           ; 1 bytes @ 0xA
 11857                           
 11858     002A                     BMA253_GetAccelDataZ@zAccelData:	
 11859                           ; 1 bytes @ 0xA
 11860                           
 11861     002A                     i2c_read2ByteRegister@address:	
 11862                           ; 1 bytes @ 0xA
 11863                           
 11864                           
 11865                           ; 1 bytes @ 0xA
 11866     002A                     	ds	1
 11867     002B                     _LIGHTBLUE_ParseIncomingPacket$378:
 11868     002B                     i2c_read2ByteRegister@result:	
 11869                           ; 2 bytes @ 0xB
 11870                           
 11871     002B                     ??_BMA253_GetAccelDataX:	
 11872                           ; 2 bytes @ 0xB
 11873                           
 11874     002B                     ??_BMA253_GetAccelDataY:	
 11875                           ; 1 bytes @ 0xB
 11876                           
 11877     002B                     ??_BMA253_GetAccelDataZ:	
 11878                           ; 1 bytes @ 0xB
 11879                           
 11880                           
 11881                           ; 1 bytes @ 0xB
 11882     002B                     	ds	2
 11883     002D                     ?_MCP9844_CalcTemperature:
 11884     002D                     BMA253_GetAccelDataX@lsbData:	
 11885                           ; 2 bytes @ 0xD
 11886                           
 11887     002D                     BMA253_GetAccelDataY@lsbData:	
 11888                           ; 1 bytes @ 0xD
 11889                           
 11890     002D                     BMA253_GetAccelDataZ@lsbData:	
 11891                           ; 1 bytes @ 0xD
 11892                           
 11893     002D                     _LIGHTBLUE_ParseIncomingPacket$379:	
 11894                           ; 1 bytes @ 0xD
 11895                           
 11896                           
 11897                           ; 2 bytes @ 0xD
 11898     002D                     	ds	1
 11899     002E                     BMA253_GetAccelDataX@msbData:
 11900     002E                     BMA253_GetAccelDataY@msbData:	
 11901                           ; 1 bytes @ 0xE
 11902                           
 11903     002E                     BMA253_GetAccelDataZ@msbData:	
 11904                           ; 1 bytes @ 0xE
 11905                           
 11906                           
 11907                           ; 1 bytes @ 0xE
 11908     002E                     	ds	1
 11909     002F                     ?_BMA253_GetAccelDataXYZ:
 11910     002F                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 11911                           ; 1 bytes @ 0xF
 11912                           
 11913     002F                     BMA253_GetAccelDataXYZ@accelData:	
 11914                           ; 1 bytes @ 0xF
 11915                           
 11916     002F                     ??_MCP9844_CalcTemperature:	
 11917                           ; 2 bytes @ 0xF
 11918                           
 11919                           
 11920                           ; 1 bytes @ 0xF
 11921     002F                     	ds	2
 11922     0031                     BMA253_GetAccelDataXYZ@sensorValue:
 11923                           
 11924                           ; 2 bytes @ 0x11
 11925     0031                     	ds	2
 11926     0033                     LIGHTBLUE_SendProtocolVersion@value:
 11927     0033                     LIGHTBLUE_AccelSensor@payload:	
 11928                           ; 1 bytes @ 0x13
 11929                           
 11930                           
 11931                           ; 13 bytes @ 0x13
 11932     0033                     	ds	1
 11933     0034                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 11934     0034                     MCP9844_CalcTemperature@upperByte:	
 11935                           ; 1 bytes @ 0x14
 11936                           
 11937                           
 11938                           ; 1 bytes @ 0x14
 11939     0034                     	ds	1
 11940     0035                     MCP9844_CalcTemperature@lowerByte:
 11941                           
 11942                           ; 1 bytes @ 0x15
 11943     0035                     	ds	1
 11944     0036                     MCP9844_CalcTemperature@temperatureData:
 11945                           
 11946                           ; 2 bytes @ 0x16
 11947     0036                     	ds	2
 11948     0038                     ?_MCP9844_GetTemperatureValue:
 11949     0038                     MCP9844_GetTemperatureValue@temperature:	
 11950                           ; 1 bytes @ 0x18
 11951                           
 11952                           
 11953                           ; 1 bytes @ 0x18
 11954     0038                     	ds	1
 11955     0039                     LIGHTBLUE_TemperatureSensor@payload:
 11956                           
 11957                           ; 5 bytes @ 0x19
 11958     0039                     	ds	5
 11959     003E                     LIGHTBLUE_TemperatureSensor@temperature:
 11960                           
 11961                           ; 2 bytes @ 0x1E
 11962     003E                     	ds	2
 11963     0040                     rn487x_PrintMessage@messageIndex:
 11964     0040                     LIGHTBLUE_AccelSensor@accelData:	
 11965                           ; 1 bytes @ 0x20
 11966                           
 11967                           
 11968                           ; 6 bytes @ 0x20
 11969     0040                     	ds	1
 11970     0041                     RN487X_MessageHandler@messageType:
 11971                           
 11972                           ; 1 bytes @ 0x21
 11973     0041                     	ds	1
 11974     0042                     RN487X_FilterData@readChar:
 11975                           
 11976                           ; 1 bytes @ 0x22
 11977     0042                     	ds	4
 11978     0046                     ??_main:
 11979                           
 11980                           ; 1 bytes @ 0x26
 11981     0046                     	ds	1
 11982     0047                     _main$5041:
 11983                           
 11984                           ; 1 bytes @ 0x27
 11985     0047                     	ds	1
 11986                           
 11987                           	psect	maintext
 11988     0196                     __pmaintext:	
 11989 ;;
 11990 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11991 ;;
 11992 ;; *************** function _main *****************
 11993 ;; Defined at:
 11994 ;;		line 52 in file "main.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : B3F/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;Total ram usage:        2 bytes
 12013 ;; Hardware stack levels required when called: 17
 12014 ;; This function calls:
 12015 ;;		_EUSART1_Read
 12016 ;;		_EUSART1_Write
 12017 ;;		_EUSART1_is_rx_ready
 12018 ;;		_LIGHTBLUE_AccelSensor
 12019 ;;		_LIGHTBLUE_Initialize
 12020 ;;		_LIGHTBLUE_LedState
 12021 ;;		_LIGHTBLUE_ParseIncomingPacket
 12022 ;;		_LIGHTBLUE_PushButton
 12023 ;;		_LIGHTBLUE_SendProtocolVersion
 12024 ;;		_LIGHTBLUE_SendSerialData
 12025 ;;		_LIGHTBLUE_TemperatureSensor
 12026 ;;		_RN487X_DataReady
 12027 ;;		_RN487X_Init
 12028 ;;		_RN487X_IsConnected
 12029 ;;		_RN487X_Read
 12030 ;;		_RN487X_Write
 12031 ;;		_SYSTEM_Initialize
 12032 ;;		_service_acceleremoterInterrupt
 12033 ;; This function is called by:
 12034 ;;		Startup code after reset
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038     0196                     _main:	
 12039                           ;psect for function _main
 12040                           
 12041     0196                     l8743:	
 12042                           ;incstack = 0
 12043 ;; hardware stack exceeded
 12044                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12045                           
 12046                           
 12047                           ;main.c: 54:     SYSTEM_Initialize();
 12048     0196  318A  2270  3181   	fcall	_SYSTEM_Initialize
 12049     0199                     l8745:
 12050                           
 12051                           ;main.c: 60:     (INTCONbits.GIE = 1);
 12052     0199  178B               	bsf	11,7	;volatile
 12053     019A                     l8747:
 12054                           
 12055                           ;main.c: 63:     (INTCONbits.PEIE = 1);
 12056     019A  170B               	bsf	11,6	;volatile
 12057     019B                     l8749:
 12058                           
 12059                           ;main.c: 81:     RN487X_Init();
 12060     019B  3184  240F  3181   	fcall	_RN487X_Init
 12061     019E                     l8751:
 12062                           
 12063                           ;main.c: 82:     LIGHTBLUE_Initialize();
 12064     019E  3196  26A2  3181   	fcall	_LIGHTBLUE_Initialize
 12065     01A1                     l8753:
 12066                           
 12067                           ;main.c: 84:         if (RN487X_IsConnected() == 1) {
 12068     01A1  3196  2634  3181   	fcall	_RN487X_IsConnected
 12069     01A4  3A01               	xorlw	1
 12070     01A5  1D03               	skipz
 12071     01A6  29A8               	goto	u4691
 12072     01A7  29A9               	goto	u4690
 12073     01A8                     u4691:
 12074     01A8  2A2E               	goto	l2191
 12075     01A9                     u4690:
 12076     01A9                     l8755:
 12077                           
 12078                           ;main.c: 85:             service_acceleremoterInterrupt();
 12079     01A9  3189  21E1  3181   	fcall	_service_acceleremoterInterrupt
 12080     01AC                     l8757:
 12081                           
 12082                           ;main.c: 86:             if ((PIR0bits.TMR0IF) == 1) {
 12083     01AC  014E               	movlb	14	; select bank14
 12084     01AD  1E8C               	btfss	12,5	;volatile
 12085     01AE  29B0               	goto	u4701
 12086     01AF  29B1               	goto	u4700
 12087     01B0                     u4701:
 12088     01B0  29C8               	goto	l2180
 12089     01B1                     u4700:
 12090     01B1                     l8759:
 12091                           
 12092                           ;main.c: 87:                 (PIR0bits.TMR0IF = 0);
 12093     01B1  128C               	bcf	12,5	;volatile
 12094     01B2                     l8761:
 12095                           
 12096                           ;main.c: 89:                 LIGHTBLUE_TemperatureSensor();
 12097     01B2  318A  2227  3181   	fcall	_LIGHTBLUE_TemperatureSensor
 12098                           
 12099                           ;main.c: 90:                 LIGHTBLUE_AccelSensor();
 12100     01B5  318E  2630  3181   	fcall	_LIGHTBLUE_AccelSensor
 12101                           
 12102                           ;main.c: 91:                 LIGHTBLUE_PushButton();
 12103     01B8  3188  20A3  3181   	fcall	_LIGHTBLUE_PushButton
 12104                           
 12105                           ;main.c: 92:                 LIGHTBLUE_LedState();
 12106     01BB  318C  242D  3181   	fcall	_LIGHTBLUE_LedState
 12107                           
 12108                           ;main.c: 93:                 LIGHTBLUE_SendProtocolVersion();
 12109     01BE  318D  25CD  3181   	fcall	_LIGHTBLUE_SendProtocolVersion
 12110                           
 12111                           ;main.c: 94:             } else {
 12112     01C1  29A1               	goto	l8753
 12113     01C2                     l8763:
 12114                           
 12115                           ;main.c: 96:                     LIGHTBLUE_ParseIncomingPacket(RN487X_Read());
 12116     01C2  3187  27F4  3181   	fcall	_RN487X_Read
 12117     01C5  3180  20CB  3181   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12118     01C8                     l2180:	
 12119                           ;main.c: 97:                 }
 12120                           
 12121                           
 12122                           ;main.c: 95:                 while (RN487X_DataReady()) {
 12123     01C8  318A  22C1  3181   	fcall	_RN487X_DataReady
 12124     01CB  3A00               	xorlw	0
 12125     01CC  1D03               	skipz
 12126     01CD  29CF               	goto	u4711
 12127     01CE  29D0               	goto	u4710
 12128     01CF                     u4711:
 12129     01CF  29C2               	goto	l8763
 12130     01D0                     u4710:
 12131     01D0  2A0F               	goto	l8781
 12132     01D1                     l8765:
 12133                           
 12134                           ;main.c: 99:                     lightBlueSerial[serialIndex] = uart[UART_CDC].Read();
 12135     01D1  3000               	movlw	low (_uart| (0+32768))
 12136     01D2  0084               	movwf	4
 12137     01D3  3090               	movlw	high (_uart| (0+32768))
 12138     01D4  0085               	movwf	5
 12139     01D5  3F01               	moviw [1]fsr0
 12140     01D6  008A               	movwf	10
 12141     01D7  3F00               	moviw [0]fsr0
 12142     01D8  000A               	callw
 12143     01D9  3181               	pagesel	$
 12144     01DA  0140               	movlb	0	; select bank0
 12145     01DB  00C6               	movwf	??_main
 12146     01DC  084C               	movf	_serialIndex@main$F4021,w
 12147     01DD  3EA0               	addlw	(low (_lightBlueSerial@main$F4020| (0+512)))& (0+255)
 12148     01DE  0086               	movwf	6
 12149     01DF  3002               	movlw	2	; select bank5/6
 12150     01E0  0087               	movwf	7
 12151     01E1  0846               	movf	??_main,w
 12152     01E2  0081               	movwf	1
 12153     01E3                     l8767:
 12154                           
 12155                           ;main.c: 100:                     if ((lightBlueSerial[serialIndex] == '\r')
 12156     01E3  084C               	movf	_serialIndex@main$F4021,w
 12157     01E4  3EA0               	addlw	(low (_lightBlueSerial@main$F4020| (0+512)))& (0+255)
 12158     01E5  0086               	movwf	6
 12159     01E6  3002               	movlw	2	; select bank5/6
 12160     01E7  0087               	movwf	7
 12161     01E8  300D               	movlw	13
 12162     01E9  0601               	xorwf	1,w
 12163     01EA  1903               	btfsc	3,2
 12164     01EB  29ED               	goto	u4721
 12165     01EC  29EE               	goto	u4720
 12166     01ED                     u4721:
 12167     01ED  29FF               	goto	l8773
 12168     01EE                     u4720:
 12169     01EE                     l8769:
 12170     01EE  084C               	movf	_serialIndex@main$F4021,w
 12171     01EF  3EA0               	addlw	(low (_lightBlueSerial@main$F4020| (0+512)))& (0+255)
 12172     01F0  0086               	movwf	6
 12173     01F1  3002               	movlw	2	; select bank5/6
 12174     01F2  0087               	movwf	7
 12175     01F3  300A               	movlw	10
 12176     01F4  0601               	xorwf	1,w
 12177     01F5  1903               	btfsc	3,2
 12178     01F6  29F8               	goto	u4731
 12179     01F7  29F9               	goto	u4730
 12180     01F8                     u4731:
 12181     01F8  29FF               	goto	l8773
 12182     01F9                     u4730:
 12183     01F9                     l8771:
 12184     01F9  304F               	movlw	79
 12185     01FA  064C               	xorwf	_serialIndex@main$F4021,w
 12186     01FB  1D03               	btfss	3,2
 12187     01FC  29FE               	goto	u4741
 12188     01FD  29FF               	goto	u4740
 12189     01FE                     u4741:
 12190     01FE  2A0D               	goto	l8779
 12191     01FF                     u4740:
 12192     01FF                     l8773:
 12193                           
 12194                           ;main.c: 102:                             || (serialIndex == (sizeof (lightBlueSerial) -
      +                           1))) {;main.c: 103:                         lightBlueSerial[serialIndex] = '\0';
 12195     01FF  084C               	movf	_serialIndex@main$F4021,w
 12196     0200  3EA0               	addlw	(low (_lightBlueSerial@main$F4020| (0+512)))& (0+255)
 12197     0201  0086               	movwf	6
 12198     0202  3002               	movlw	2	; select bank5/6
 12199     0203  0087               	movwf	7
 12200     0204  0181               	clrf	1
 12201     0205                     l8775:
 12202                           
 12203                           ;main.c: 104:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12204     0205  30A0               	movlw	(low (_lightBlueSerial@main$F4020| (0+512)))& (0+255)
 12205     0206  00F6               	movwf	LIGHTBLUE_SendSerialData@serialData
 12206     0207  3182  225B  3181   	fcall	_LIGHTBLUE_SendSerialData
 12207     020A                     l8777:
 12208                           
 12209                           ;main.c: 105:                         serialIndex = 0;
 12210     020A  0140               	movlb	0	; select bank0
 12211     020B  01CC               	clrf	_serialIndex@main$F4021
 12212                           
 12213                           ;main.c: 106:                     } else {
 12214     020C  2A0F               	goto	l8781
 12215     020D                     l8779:
 12216                           
 12217                           ;main.c: 107:                         serialIndex++;
 12218     020D  3001               	movlw	1
 12219     020E  07CC               	addwf	_serialIndex@main$F4021,f
 12220     020F                     l8781:
 12221                           
 12222                           ;main.c: 98:                 while (uart[UART_CDC].DataReady()) {
 12223     020F  3006               	movlw	low ((_uart+6)| (0+32768))
 12224     0210  0084               	movwf	4
 12225     0211  3090               	movlw	high ((_uart+6)| (0+32768))
 12226     0212  0085               	movwf	5
 12227     0213  3F01               	moviw [1]fsr0
 12228     0214  008A               	movwf	10
 12229     0215  3F00               	moviw [0]fsr0
 12230     0216  000A               	callw
 12231     0217  3181               	pagesel	$
 12232     0218  3A00               	xorlw	0
 12233     0219  1D03               	skipz
 12234     021A  2A1C               	goto	u4751
 12235     021B  2A1D               	goto	u4750
 12236     021C                     u4751:
 12237     021C  29D1               	goto	l8765
 12238     021D                     u4750:
 12239     021D  29A1               	goto	l8753
 12240     021E                     l8783:
 12241                           
 12242                           ;main.c: 114:                 uart[UART_CDC].Write(RN487X_Read());
 12243     021E  3187  27F4  3181   	fcall	_RN487X_Read
 12244     0221  0140               	movlb	0	; select bank0
 12245     0222  00C7               	movwf	_main$5041
 12246                           
 12247                           ;main.c: 114:                 uart[UART_CDC].Write(RN487X_Read());
 12248     0223  0847               	movf	_main$5041,w
 12249     0224  00F0               	movwf	EUSART1_Write@txData
 12250     0225  3002               	movlw	low ((_uart+2)| (0+32768))
 12251     0226  0084               	movwf	4
 12252     0227  3090               	movlw	high ((_uart+2)| (0+32768))
 12253     0228  0085               	movwf	5
 12254     0229  3F01               	moviw [1]fsr0
 12255     022A  008A               	movwf	10
 12256     022B  3F00               	moviw [0]fsr0
 12257     022C  000A               	callw
 12258     022D  3181               	pagesel	$
 12259     022E                     l2191:	
 12260                           ;main.c: 115:             }
 12261                           
 12262                           
 12263                           ;main.c: 113:             while (RN487X_DataReady()) {
 12264     022E  318A  22C1  3181   	fcall	_RN487X_DataReady
 12265     0231  3A00               	xorlw	0
 12266     0232  1D03               	skipz
 12267     0233  2A35               	goto	u4761
 12268     0234  2A36               	goto	u4760
 12269     0235                     u4761:
 12270     0235  2A1E               	goto	l8783
 12271     0236                     u4760:
 12272     0236  2A4A               	goto	l8787
 12273     0237                     l8785:
 12274                           
 12275                           ;main.c: 117:                 RN487X.Write(uart[UART_CDC].Read());
 12276     0237  3000               	movlw	low (_uart| (0+32768))
 12277     0238  0084               	movwf	4
 12278     0239  3090               	movlw	high (_uart| (0+32768))
 12279     023A  0085               	movwf	5
 12280     023B  3F01               	moviw [1]fsr0
 12281     023C  008A               	movwf	10
 12282     023D  3F00               	moviw [0]fsr0
 12283     023E  000A               	callw
 12284     023F  3181               	pagesel	$
 12285     0240  00F5               	movwf	RN487X_Write@txData
 12286     0241  3068               	movlw	low (_RN487X| (0+32768))
 12287     0242  0084               	movwf	4
 12288     0243  3090               	movlw	high (_RN487X| (0+32768))
 12289     0244  0085               	movwf	5
 12290     0245  3F01               	moviw [1]fsr0
 12291     0246  008A               	movwf	10
 12292     0247  3F00               	moviw [0]fsr0
 12293     0248  000A               	callw
 12294     0249  3181               	pagesel	$
 12295     024A                     l8787:
 12296                           
 12297                           ;main.c: 116:             while (uart[UART_CDC].DataReady()) {
 12298     024A  3006               	movlw	low ((_uart+6)| (0+32768))
 12299     024B  0084               	movwf	4
 12300     024C  3090               	movlw	high ((_uart+6)| (0+32768))
 12301     024D  0085               	movwf	5
 12302     024E  3F01               	moviw [1]fsr0
 12303     024F  008A               	movwf	10
 12304     0250  3F00               	moviw [0]fsr0
 12305     0251  000A               	callw
 12306     0252  3181               	pagesel	$
 12307     0253  3A00               	xorlw	0
 12308     0254  1D03               	skipz
 12309     0255  2A57               	goto	u4771
 12310     0256  2A58               	goto	u4770
 12311     0257                     u4771:
 12312     0257  2A37               	goto	l8785
 12313     0258                     u4770:
 12314     0258  29A1               	goto	l8753
 12315     0259  3180  2861         	ljmp	start
 12316     025B                     __end_of_main:
 12317                           
 12318                           	psect	text1
 12319     09E1                     __ptext1:	
 12320 ;; *************** function _service_acceleremoterInterrupt *****************
 12321 ;; Defined at:
 12322 ;;		line 124 in file "main.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;Total ram usage:        0 bytes
 12341 ;; Hardware stack levels used: 1
 12342 ;; Hardware stack levels required when called: 8
 12343 ;; This function calls:
 12344 ;;		_LIGHTBLUE_AccState
 12345 ;; This function is called by:
 12346 ;;		_main
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350     09E1                     _service_acceleremoterInterrupt:	
 12351                           ;psect for function _service_acceleremoterInterrupt
 12352                           
 12353     09E1                     l7149:	
 12354                           ;incstack = 0
 12355                           ; Regs used in _service_acceleremoterInterrupt: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12356                           
 12357                           
 12358                           ;main.c: 125:     if ((INTERRUPTbits.ACC == 1)) {
 12359     09E1  0140               	movlb	0	; select bank0
 12360     09E2  1C6B               	btfss	_INTERRUPTbits,0	;volatile
 12361     09E3  29E5               	goto	u3331
 12362     09E4  29E6               	goto	u3330
 12363     09E5                     u3331:
 12364     09E5  29F6               	goto	l2204
 12365     09E6                     u3330:
 12366     09E6                     l7151:
 12367                           
 12368                           ;main.c: 126:         (INTERRUPTbits.ACC = 0);
 12369     09E6  106B               	bcf	_INTERRUPTbits,0	;volatile
 12370                           
 12371                           ;main.c: 127:         accelerometerInterruptBits.FLAT = 1;
 12372     09E7  17EC               	bsf	_accelerometerInterruptBits,7	;volatile
 12373     09E8                     l7153:
 12374                           
 12375                           ;main.c: 128:         flats++;
 12376     09E8  3001               	movlw	1
 12377     09E9  07DB               	addwf	_flats,f
 12378     09EA                     l7155:
 12379                           
 12380                           ;main.c: 129:         if (flats > 1) {
 12381     09EA  3002               	movlw	2
 12382     09EB  025B               	subwf	_flats,w
 12383     09EC  1C03               	skipc
 12384     09ED  29EF               	goto	u3341
 12385     09EE  29F0               	goto	u3340
 12386     09EF                     u3341:
 12387     09EF  29F6               	goto	l2204
 12388     09F0                     u3340:
 12389     09F0                     l7157:
 12390                           
 12391                           ;main.c: 130:             LIGHTBLUE_AccState();
 12392     09F0  3188  20C9  3189   	fcall	_LIGHTBLUE_AccState
 12393     09F3                     l7159:
 12394                           
 12395                           ;main.c: 131:             flats = 0;
 12396     09F3  0140               	movlb	0	; select bank0
 12397     09F4  01DB               	clrf	_flats
 12398     09F5                     l7161:
 12399                           
 12400                           ;main.c: 132:             accelerometerInterruptBits.FLAT = 0;
 12401     09F5  13EC               	bcf	_accelerometerInterruptBits,7	;volatile
 12402     09F6                     l2204:
 12403     09F6  0008               	return
 12404     09F7                     __end_of_service_acceleremoterInterrupt:
 12405                           
 12406                           	psect	text2
 12407     08C9                     __ptext2:	
 12408 ;; *************** function _LIGHTBLUE_AccState *****************
 12409 ;; Defined at:
 12410 ;;		line 356 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;		None
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;  payload         3   10[COMMON] unsigned char [3]
 12415 ;;  acc             1   13[COMMON] unsigned char 
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1    wreg      void 
 12418 ;; Registers used:
 12419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12420 ;; Tracked objects:
 12421 ;;		On entry : 0/0
 12422 ;;		On exit  : 0/0
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12429 ;;Total ram usage:        4 bytes
 12430 ;; Hardware stack levels used: 1
 12431 ;; Hardware stack levels required when called: 7
 12432 ;; This function calls:
 12433 ;;		_LIGHTBLUE_GetAccState
 12434 ;;		_LIGHTBLUE_SendPacket
 12435 ;;		_LIGHTBLUE_SplitByte
 12436 ;; This function is called by:
 12437 ;;		_service_acceleremoterInterrupt
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441     08C9                     _LIGHTBLUE_AccState:	
 12442                           ;psect for function _LIGHTBLUE_AccState
 12443                           
 12444     08C9                     l6423:	
 12445                           ;incstack = 0
 12446                           ; Regs used in _LIGHTBLUE_AccState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12447                           
 12448                           
 12449                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 359:     uint8_t acc = LIGHTBLUE_GetAccStat
      +                          e();
 12450     08C9  3196  2637  3188   	fcall	_LIGHTBLUE_GetAccState
 12451     08CC  00FD               	movwf	LIGHTBLUE_AccState@acc
 12452     08CD                     l6425:
 12453                           
 12454                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     *payload = '\0';
 12455     08CD  01FA               	clrf	LIGHTBLUE_AccState@payload
 12456     08CE                     l6427:
 12457                           
 12458                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 362:     LIGHTBLUE_SplitByte(paylo
      +                          ad, acc);
 12459     08CE  307A               	movlw	(low (LIGHTBLUE_AccState@payload| 0))& (0+255)
 12460     08CF  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 12461     08D0  087D               	movf	LIGHTBLUE_AccState@acc,w
 12462     08D1  00F6               	movwf	LIGHTBLUE_SplitByte@value
 12463     08D2  318D  2545  3188   	fcall	_LIGHTBLUE_SplitByte
 12464     08D5                     l6429:
 12465                           
 12466                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     LIGHTBLUE_SendPacket(ACC_
      +                          STATE, payload);
 12467     08D5  307A               	movlw	(low (LIGHTBLUE_AccState@payload| 0))& (0+255)
 12468     08D6  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 12469     08D7  3041               	movlw	65
 12470     08D8  3183  2387  3188   	fcall	_LIGHTBLUE_SendPacket
 12471     08DB                     l65:
 12472     08DB  0008               	return
 12473     08DC                     __end_of_LIGHTBLUE_AccState:
 12474                           
 12475                           	psect	text3
 12476     1637                     __ptext3:	
 12477 ;; *************** function _LIGHTBLUE_GetAccState *****************
 12478 ;; Defined at:
 12479 ;;		line 514 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;		None
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;		None
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  1    wreg      unsigned char 
 12486 ;; Registers used:
 12487 ;;		wreg
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/0
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;Total ram usage:        0 bytes
 12498 ;; Hardware stack levels used: 1
 12499 ;; Hardware stack levels required when called: 4
 12500 ;; This function calls:
 12501 ;;		Nothing
 12502 ;; This function is called by:
 12503 ;;		_LIGHTBLUE_AccState
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507     1637                     _LIGHTBLUE_GetAccState:	
 12508                           ;psect for function _LIGHTBLUE_GetAccState
 12509                           
 12510     1637                     l6271:	
 12511                           ;incstack = 0
 12512                           ; Regs used in _LIGHTBLUE_GetAccState: [wreg]
 12513                           
 12514                           
 12515                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:     return accelerometerInter
      +                          ruptBits.AccelerometerInterruptBits;
 12516     1637  0140               	movlb	0	; select bank0
 12517     1638  086C               	movf	_accelerometerInterruptBits,w	;volatile
 12518     1639                     l140:
 12519     1639  0008               	return
 12520     163A                     __end_of_LIGHTBLUE_GetAccState:
 12521                           
 12522                           	psect	text4
 12523     0A70                     __ptext4:	
 12524 ;; *************** function _SYSTEM_Initialize *****************
 12525 ;; Defined at:
 12526 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;		None
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;		None
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  1    wreg      void 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0, pclath, cstack
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12544 ;;Total ram usage:        0 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 6
 12547 ;; This function calls:
 12548 ;;		_EUSART1_Initialize
 12549 ;;		_EUSART2_Initialize
 12550 ;;		_I2C1_Initialize
 12551 ;;		_OSCILLATOR_Initialize
 12552 ;;		_PIN_MANAGER_Initialize
 12553 ;;		_PMD_Initialize
 12554 ;;		_SPI2_Initialize
 12555 ;;		_TMR0_Initialize
 12556 ;; This function is called by:
 12557 ;;		_main
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561     0A70                     _SYSTEM_Initialize:	
 12562                           ;psect for function _SYSTEM_Initialize
 12563                           
 12564     0A70                     l7049:	
 12565                           ;incstack = 0
 12566                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12567                           
 12568                           
 12569                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12570     0A70  3197  2768  318A   	fcall	_PMD_Initialize
 12571                           
 12572                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 12573     0A73  3197  2737  318A   	fcall	_I2C1_Initialize
 12574                           
 12575                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 12576     0A76  3189  21CB  318A   	fcall	_SPI2_Initialize
 12577     0A79                     l7051:
 12578                           
 12579                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12580     0A79  3184  246D  318A   	fcall	_PIN_MANAGER_Initialize
 12581     0A7C                     l7053:
 12582                           
 12583                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12584     0A7C  3197  275E  318A   	fcall	_OSCILLATOR_Initialize
 12585                           
 12586                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 12587     0A7F  3188  20DC  318A   	fcall	_TMR0_Initialize
 12588                           
 12589                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
 12590     0A82  318F  27C3  318A   	fcall	_EUSART1_Initialize
 12591                           
 12592                           ;mcc_generated_files/mcc.c: 59:     EUSART2_Initialize();
 12593     0A85  3187  27B7  318A   	fcall	_EUSART2_Initialize
 12594     0A88                     l1536:
 12595     0A88  0008               	return
 12596     0A89                     __end_of_SYSTEM_Initialize:
 12597                           
 12598                           	psect	text5
 12599     08DC                     __ptext5:	
 12600 ;; *************** function _TMR0_Initialize *****************
 12601 ;; Defined at:
 12602 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;		None
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      void 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0, pclath, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12620 ;;Total ram usage:        0 bytes
 12621 ;; Hardware stack levels used: 1
 12622 ;; Hardware stack levels required when called: 5
 12623 ;; This function calls:
 12624 ;;		_TMR0_SetInterruptHandler
 12625 ;; This function is called by:
 12626 ;;		_SYSTEM_Initialize
 12627 ;; This function uses a non-reentrant model
 12628 ;;
 12629                           
 12630     08DC                     _TMR0_Initialize:	
 12631                           ;psect for function _TMR0_Initialize
 12632                           
 12633     08DC                     l6613:	
 12634                           ;incstack = 0
 12635                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12636                           
 12637                           
 12638                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x09;
 12639     08DC  3009               	movlw	9
 12640     08DD  014B               	movlb	11	; select bank11
 12641     08DE  009F               	movwf	31	;volatile
 12642                           
 12643                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xC2;
 12644     08DF  30C2               	movlw	194
 12645     08E0  009D               	movwf	29	;volatile
 12646     08E1                     l6615:
 12647                           
 12648                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12649     08E1  019C               	clrf	28	;volatile
 12650     08E2                     l6617:
 12651                           
 12652                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12653     08E2  014E               	movlb	14	; select bank14
 12654     08E3  128C               	bcf	12,5	;volatile
 12655     08E4                     l6619:
 12656                           
 12657                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12658     08E4  1696               	bsf	22,5	;volatile
 12659     08E5                     l6621:
 12660                           
 12661                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12662     08E5  3014               	movlw	low _TMR0_DefaultInterruptHandler
 12663     08E6  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12664     08E7  3016               	movlw	high _TMR0_DefaultInterruptHandler
 12665     08E8  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12666     08E9  3196  26FC  3188   	fcall	_TMR0_SetInterruptHandler
 12667     08EC                     l6623:
 12668                           
 12669                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12670     08EC  3080               	movlw	128
 12671     08ED  014B               	movlb	11	; select bank11
 12672     08EE  009E               	movwf	30	;volatile
 12673     08EF                     l1634:
 12674     08EF  0008               	return
 12675     08F0                     __end_of_TMR0_Initialize:
 12676                           
 12677                           	psect	text6
 12678     16FC                     __ptext6:	
 12679 ;; *************** function _TMR0_SetInterruptHandler *****************
 12680 ;; Defined at:
 12681 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12684 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;		None
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      void 
 12689 ;; Registers used:
 12690 ;;		wreg
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12700 ;;Total ram usage:        2 bytes
 12701 ;; Hardware stack levels used: 1
 12702 ;; Hardware stack levels required when called: 4
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_TMR0_Initialize
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710     16FC                     _TMR0_SetInterruptHandler:	
 12711                           ;psect for function _TMR0_SetInterruptHandler
 12712                           
 12713     16FC                     l6353:	
 12714                           ;incstack = 0
 12715                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12716                           
 12717                           
 12718                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 12719     16FC  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12720     16FD  0141               	movlb	1	; select bank1
 12721     16FE  00C9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 12722     16FF  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12723     1700  00C8               	movwf	_TMR0_InterruptHandler^(0+128)
 12724     1701                     l1656:
 12725     1701  0008               	return
 12726     1702                     __end_of_TMR0_SetInterruptHandler:
 12727                           
 12728                           	psect	text7
 12729     09CB                     __ptext7:	
 12730 ;; *************** function _SPI2_Initialize *****************
 12731 ;; Defined at:
 12732 ;;		line 62 in file "mcc_generated_files/spi2.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		None
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12750 ;;Total ram usage:        0 bytes
 12751 ;; Hardware stack levels used: 1
 12752 ;; Hardware stack levels required when called: 4
 12753 ;; This function calls:
 12754 ;;		Nothing
 12755 ;; This function is called by:
 12756 ;;		_SYSTEM_Initialize
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760     09CB                     _SPI2_Initialize:	
 12761                           ;psect for function _SPI2_Initialize
 12762                           
 12763     09CB                     l6605:	
 12764                           ;incstack = 0
 12765                           ; Regs used in _SPI2_Initialize: []
 12766                           
 12767                           
 12768                           ;mcc_generated_files/spi2.c: 65:     SSP2CLKPPS = 17;
 12769     09CB  3011               	movlw	17
 12770     09CC  017D               	movlb	61	; select bank61
 12771     09CD  00C8               	movwf	72	;volatile
 12772                           
 12773                           ;mcc_generated_files/spi2.c: 66:     SSP2DATPPS = 19;
 12774     09CE  3013               	movlw	19
 12775     09CF  00C9               	movwf	73	;volatile
 12776                           
 12777                           ;mcc_generated_files/spi2.c: 67:     RC1PPS = 21;
 12778     09D0  3015               	movlw	21
 12779     09D1  017E               	movlb	62	; select bank62
 12780     09D2  00A1               	movwf	33	;volatile
 12781                           
 12782                           ;mcc_generated_files/spi2.c: 68:     RC2PPS = 22;
 12783     09D3  3016               	movlw	22
 12784     09D4  00A2               	movwf	34	;volatile
 12785                           
 12786                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x40;
 12787     09D5  3040               	movlw	64
 12788     09D6  0143               	movlb	3	; select bank3
 12789     09D7  0099               	movwf	25	;volatile
 12790                           
 12791                           ;mcc_generated_files/spi2.c: 71:     SSP2CON1 = 0x22;
 12792     09D8  3022               	movlw	34
 12793     09D9  009A               	movwf	26	;volatile
 12794                           
 12795                           ;mcc_generated_files/spi2.c: 72:     SSP2ADD = 0x01;
 12796     09DA  3001               	movlw	1
 12797     09DB  0097               	movwf	23	;volatile
 12798                           
 12799                           ;mcc_generated_files/spi2.c: 73:     TRISCbits.TRISC1 = 0;
 12800     09DC  0140               	movlb	0	; select bank0
 12801     09DD  1094               	bcf	20,1	;volatile
 12802                           
 12803                           ;mcc_generated_files/spi2.c: 74:     SSP2CON1bits.SSPEN = 0;
 12804     09DE  0143               	movlb	3	; select bank3
 12805     09DF  129A               	bcf	26,5	;volatile
 12806     09E0                     l1571:
 12807     09E0  0008               	return
 12808     09E1                     __end_of_SPI2_Initialize:
 12809                           
 12810                           	psect	text8
 12811     1768                     __ptext8:	
 12812 ;; *************** function _PMD_Initialize *****************
 12813 ;; Defined at:
 12814 ;;		line 78 in file "mcc_generated_files/mcc.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;		None
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		status,2
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12832 ;;Total ram usage:        0 bytes
 12833 ;; Hardware stack levels used: 1
 12834 ;; Hardware stack levels required when called: 4
 12835 ;; This function calls:
 12836 ;;		Nothing
 12837 ;; This function is called by:
 12838 ;;		_SYSTEM_Initialize
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842     1768                     _PMD_Initialize:	
 12843                           ;psect for function _PMD_Initialize
 12844                           
 12845     1768                     l6603:	
 12846                           ;incstack = 0
 12847                           ; Regs used in _PMD_Initialize: [status,2]
 12848                           
 12849                           
 12850                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 12851     1768  014F               	movlb	15	; select bank15
 12852     1769  0196               	clrf	22	;volatile
 12853                           
 12854                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 12855     176A  0197               	clrf	23	;volatile
 12856                           
 12857                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 12858     176B  0198               	clrf	24	;volatile
 12859                           
 12860                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 12861     176C  0199               	clrf	25	;volatile
 12862                           
 12863                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 12864     176D  019A               	clrf	26	;volatile
 12865                           
 12866                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 12867     176E  019B               	clrf	27	;volatile
 12868                           
 12869                           ;mcc_generated_files/mcc.c: 93:     PMD6 = 0x00;
 12870     176F  019C               	clrf	28	;volatile
 12871                           
 12872                           ;mcc_generated_files/mcc.c: 95:     PMD7 = 0x00;
 12873     1770  019D               	clrf	29	;volatile
 12874     1771                     l1542:
 12875     1771  0008               	return
 12876     1772                     __end_of_PMD_Initialize:
 12877                           
 12878                           	psect	text9
 12879     046D                     __ptext9:	
 12880 ;; *************** function _PIN_MANAGER_Initialize *****************
 12881 ;; Defined at:
 12882 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, status,2, status,0, pclath, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;Total ram usage:        0 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 5
 12903 ;; This function calls:
 12904 ;;		_IOCAF6_SetInterruptHandler
 12905 ;;		_IOCAF7_SetInterruptHandler
 12906 ;; This function is called by:
 12907 ;;		_SYSTEM_Initialize
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911     046D                     _PIN_MANAGER_Initialize:	
 12912                           ;psect for function _PIN_MANAGER_Initialize
 12913                           
 12914     046D                     l6511:	
 12915                           ;incstack = 0
 12916                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12917                           
 12918                           
 12919                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x01;
 12920     046D  3001               	movlw	1
 12921     046E  0140               	movlb	0	; select bank0
 12922     046F  0098               	movwf	24	;volatile
 12923     0470                     l6513:
 12924                           
 12925                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12926     0470  0199               	clrf	25	;volatile
 12927                           
 12928                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x00;
 12929     0471  019A               	clrf	26	;volatile
 12930     0472                     l6515:
 12931                           
 12932                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x08;
 12933     0472  3008               	movlw	8
 12934     0473  0096               	movwf	22	;volatile
 12935     0474                     l6517:
 12936                           
 12937                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0xDE;
 12938     0474  30DE               	movlw	222
 12939     0475  0092               	movwf	18	;volatile
 12940     0476                     l6519:
 12941                           
 12942                           ;mcc_generated_files/pin_manager.c: 74:     TRISB = 0xEF;
 12943     0476  30EF               	movlw	239
 12944     0477  0093               	movwf	19	;volatile
 12945     0478                     l6521:
 12946                           
 12947                           ;mcc_generated_files/pin_manager.c: 75:     TRISC = 0xA8;
 12948     0478  30A8               	movlw	168
 12949     0479  0094               	movwf	20	;volatile
 12950     047A                     l6523:
 12951                           
 12952                           ;mcc_generated_files/pin_manager.c: 80:     ANSELC = 0x80;
 12953     047A  3080               	movlw	128
 12954     047B  017E               	movlb	62	; select bank62
 12955     047C  00CE               	movwf	78	;volatile
 12956     047D                     l6525:
 12957                           
 12958                           ;mcc_generated_files/pin_manager.c: 81:     ANSELB = 0xE1;
 12959     047D  30E1               	movlw	225
 12960     047E  00C3               	movwf	67	;volatile
 12961     047F                     l6527:
 12962                           
 12963                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x1E;
 12964     047F  301E               	movlw	30
 12965     0480  00B8               	movwf	56	;volatile
 12966                           
 12967                           ;mcc_generated_files/pin_manager.c: 87:     WPUE = 0x00;
 12968     0481  01E5               	clrf	101	;volatile
 12969                           
 12970                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x00;
 12971     0482  01C4               	clrf	68	;volatile
 12972                           
 12973                           ;mcc_generated_files/pin_manager.c: 89:     WPUA = 0x00;
 12974     0483  01B9               	clrf	57	;volatile
 12975     0484                     l6529:
 12976                           
 12977                           ;mcc_generated_files/pin_manager.c: 90:     WPUC = 0x01;
 12978     0484  3001               	movlw	1
 12979     0485  00CF               	movwf	79	;volatile
 12980                           
 12981                           ;mcc_generated_files/pin_manager.c: 95:     ODCONE = 0x00;
 12982     0486  01E6               	clrf	102	;volatile
 12983                           
 12984                           ;mcc_generated_files/pin_manager.c: 96:     ODCONA = 0x00;
 12985     0487  01BA               	clrf	58	;volatile
 12986                           
 12987                           ;mcc_generated_files/pin_manager.c: 97:     ODCONB = 0x00;
 12988     0488  01C5               	clrf	69	;volatile
 12989                           
 12990                           ;mcc_generated_files/pin_manager.c: 98:     ODCONC = 0x00;
 12991     0489  01D0               	clrf	80	;volatile
 12992     048A                     l6531:
 12993                           
 12994                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONA = 0x7E;
 12995     048A  307E               	movlw	126
 12996     048B  00BB               	movwf	59	;volatile
 12997     048C                     l6533:
 12998                           
 12999                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONB = 0xFF;
 13000     048C  30FF               	movlw	255
 13001     048D  00C6               	movwf	70	;volatile
 13002     048E                     l6535:
 13003                           
 13004                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONC = 0xBF;
 13005     048E  30BF               	movlw	191
 13006     048F  00D1               	movwf	81	;volatile
 13007     0490                     l6537:
 13008                           
 13009                           ;mcc_generated_files/pin_manager.c: 110:     INLVLA = 0x3F;
 13010     0490  303F               	movlw	63
 13011     0491  00BC               	movwf	60	;volatile
 13012     0492                     l6539:
 13013                           
 13014                           ;mcc_generated_files/pin_manager.c: 111:     INLVLB = 0x3F;
 13015     0492  303F               	movlw	63
 13016     0493  00C7               	movwf	71	;volatile
 13017     0494                     l6541:
 13018                           
 13019                           ;mcc_generated_files/pin_manager.c: 112:     INLVLC = 0x3F;
 13020     0494  303F               	movlw	63
 13021     0495  00D2               	movwf	82	;volatile
 13022     0496                     l6543:
 13023                           
 13024                           ;mcc_generated_files/pin_manager.c: 119:     IOCAFbits.IOCAF6 = 0;
 13025     0496  133F               	bcf	63,6	;volatile
 13026     0497                     l6545:
 13027                           
 13028                           ;mcc_generated_files/pin_manager.c: 121:     IOCAFbits.IOCAF7 = 0;
 13029     0497  13BF               	bcf	63,7	;volatile
 13030     0498                     l6547:
 13031                           
 13032                           ;mcc_generated_files/pin_manager.c: 123:     IOCANbits.IOCAN6 = 0;
 13033     0498  133E               	bcf	62,6	;volatile
 13034     0499                     l6549:
 13035                           
 13036                           ;mcc_generated_files/pin_manager.c: 125:     IOCANbits.IOCAN7 = 1;
 13037     0499  17BE               	bsf	62,7	;volatile
 13038     049A                     l6551:
 13039                           
 13040                           ;mcc_generated_files/pin_manager.c: 127:     IOCAPbits.IOCAP6 = 1;
 13041     049A  173D               	bsf	61,6	;volatile
 13042     049B                     l6553:
 13043                           
 13044                           ;mcc_generated_files/pin_manager.c: 129:     IOCAPbits.IOCAP7 = 0;
 13045     049B  13BD               	bcf	61,7	;volatile
 13046     049C                     l6555:
 13047                           
 13048                           ;mcc_generated_files/pin_manager.c: 134:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 13049     049C  3013               	movlw	low _IOCAF6_DefaultInterruptHandler
 13050     049D  00F0               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 13051     049E  3016               	movlw	high _IOCAF6_DefaultInterruptHandler
 13052     049F  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 13053     04A0  3196  26F0  3184   	fcall	_IOCAF6_SetInterruptHandler
 13054     04A3                     l6557:
 13055                           
 13056                           ;mcc_generated_files/pin_manager.c: 135:     IOCAF7_SetInterruptHandler(IOCAF7_DefaultIn
      +                          terruptHandler);
 13057     04A3  304A               	movlw	low _IOCAF7_DefaultInterruptHandler
 13058     04A4  00F0               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler
 13059     04A5  3016               	movlw	high _IOCAF7_DefaultInterruptHandler
 13060     04A6  00F1               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler+1
 13061     04A7  3196  26F6  3184   	fcall	_IOCAF7_SetInterruptHandler
 13062     04AA                     l6559:
 13063                           
 13064                           ;mcc_generated_files/pin_manager.c: 138:     PIE0bits.IOCIE = 1;
 13065     04AA  014E               	movlb	14	; select bank14
 13066     04AB  1616               	bsf	22,4	;volatile
 13067     04AC                     l6561:
 13068                           
 13069                           ;mcc_generated_files/pin_manager.c: 141:     SSP1CLKPPS = 0x09;
 13070     04AC  3009               	movlw	9
 13071     04AD  017D               	movlb	61	; select bank61
 13072     04AE  00C5               	movwf	69	;volatile
 13073     04AF                     l6563:
 13074                           
 13075                           ;mcc_generated_files/pin_manager.c: 142:     SSP2DATPPS = 0x13;
 13076     04AF  3013               	movlw	19
 13077     04B0  00C9               	movwf	73	;volatile
 13078     04B1                     l6565:
 13079                           
 13080                           ;mcc_generated_files/pin_manager.c: 143:     RB1PPS = 0x13;
 13081     04B1  3013               	movlw	19
 13082     04B2  017E               	movlb	62	; select bank62
 13083     04B3  0099               	movwf	25	;volatile
 13084     04B4                     l6567:
 13085                           
 13086                           ;mcc_generated_files/pin_manager.c: 144:     RB2PPS = 0x14;
 13087     04B4  3014               	movlw	20
 13088     04B5  009A               	movwf	26	;volatile
 13089     04B6                     l6569:
 13090                           
 13091                           ;mcc_generated_files/pin_manager.c: 145:     RC1PPS = 0x15;
 13092     04B6  3015               	movlw	21
 13093     04B7  00A1               	movwf	33	;volatile
 13094     04B8                     l6571:
 13095                           
 13096                           ;mcc_generated_files/pin_manager.c: 146:     RC4PPS = 0x25;
 13097     04B8  3025               	movlw	37
 13098     04B9  00A4               	movwf	36	;volatile
 13099     04BA                     l6573:
 13100                           
 13101                           ;mcc_generated_files/pin_manager.c: 147:     RB4PPS = 0x0F;
 13102     04BA  300F               	movlw	15
 13103     04BB  009C               	movwf	28	;volatile
 13104     04BC                     l6575:
 13105                           
 13106                           ;mcc_generated_files/pin_manager.c: 148:     RC2PPS = 0x16;
 13107     04BC  3016               	movlw	22
 13108     04BD  00A2               	movwf	34	;volatile
 13109     04BE                     l6577:
 13110                           
 13111                           ;mcc_generated_files/pin_manager.c: 150:     SSP1DATPPS = 0x0A;
 13112     04BE  300A               	movlw	10
 13113     04BF  017D               	movlb	61	; select bank61
 13114     04C0  00C6               	movwf	70	;volatile
 13115     04C1                     l6579:
 13116                           
 13117                           ;mcc_generated_files/pin_manager.c: 152:     SSP2CLKPPS = 0x11;
 13118     04C1  3011               	movlw	17
 13119     04C2  00C8               	movwf	72	;volatile
 13120     04C3                     l1127:
 13121     04C3  0008               	return
 13122     04C4                     __end_of_PIN_MANAGER_Initialize:
 13123                           
 13124                           	psect	text10
 13125     16F6                     __ptext10:	
 13126 ;; *************** function _IOCAF7_SetInterruptHandler *****************
 13127 ;; Defined at:
 13128 ;;		line 218 in file "mcc_generated_files/pin_manager.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 13131 ;;		 -> IOCAF7_DefaultInterruptHandler(1), 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;		None
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  1    wreg      void 
 13136 ;; Registers used:
 13137 ;;		wreg
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13147 ;;Total ram usage:        2 bytes
 13148 ;; Hardware stack levels used: 1
 13149 ;; Hardware stack levels required when called: 4
 13150 ;; This function calls:
 13151 ;;		Nothing
 13152 ;; This function is called by:
 13153 ;;		_PIN_MANAGER_Initialize
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157     16F6                     _IOCAF7_SetInterruptHandler:	
 13158                           ;psect for function _IOCAF7_SetInterruptHandler
 13159                           
 13160     16F6                     l6349:	
 13161                           ;incstack = 0
 13162                           ; Regs used in _IOCAF7_SetInterruptHandler: [wreg]
 13163                           
 13164                           
 13165                           ;mcc_generated_files/pin_manager.c: 219:     IOCAF7_InterruptHandler = InterruptHandler;
 13166     16F6  0871               	movf	IOCAF7_SetInterruptHandler@InterruptHandler+1,w
 13167     16F7  0141               	movlb	1	; select bank1
 13168     16F8  00CB               	movwf	(_IOCAF7_InterruptHandler+1)^(0+128)
 13169     16F9  0870               	movf	IOCAF7_SetInterruptHandler@InterruptHandler,w
 13170     16FA  00CA               	movwf	_IOCAF7_InterruptHandler^(0+128)
 13171     16FB                     l1149:
 13172     16FB  0008               	return
 13173     16FC                     __end_of_IOCAF7_SetInterruptHandler:
 13174                           
 13175                           	psect	text11
 13176     16F0                     __ptext11:	
 13177 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 13178 ;; Defined at:
 13179 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 13182 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13198 ;;Total ram usage:        2 bytes
 13199 ;; Hardware stack levels used: 1
 13200 ;; Hardware stack levels required when called: 4
 13201 ;; This function calls:
 13202 ;;		Nothing
 13203 ;; This function is called by:
 13204 ;;		_PIN_MANAGER_Initialize
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208     16F0                     _IOCAF6_SetInterruptHandler:	
 13209                           ;psect for function _IOCAF6_SetInterruptHandler
 13210                           
 13211     16F0                     l6347:	
 13212                           ;incstack = 0
 13213                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 13214                           
 13215                           
 13216                           ;mcc_generated_files/pin_manager.c: 189:     IOCAF6_InterruptHandler = InterruptHandler;
 13217     16F0  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 13218     16F1  0141               	movlb	1	; select bank1
 13219     16F2  00CD               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 13220     16F3  0870               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 13221     16F4  00CC               	movwf	_IOCAF6_InterruptHandler^(0+128)
 13222     16F5                     l1139:
 13223     16F5  0008               	return
 13224     16F6                     __end_of_IOCAF6_SetInterruptHandler:
 13225                           
 13226                           	psect	text12
 13227     175E                     __ptext12:	
 13228 ;; *************** function _OSCILLATOR_Initialize *****************
 13229 ;; Defined at:
 13230 ;;		line 62 in file "mcc_generated_files/mcc.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;		None
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		status,2
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13248 ;;Total ram usage:        0 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; Hardware stack levels required when called: 4
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_SYSTEM_Initialize
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258     175E                     _OSCILLATOR_Initialize:	
 13259                           ;psect for function _OSCILLATOR_Initialize
 13260                           
 13261     175E                     l6607:	
 13262                           ;incstack = 0
 13263                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
 13264                           
 13265                           
 13266                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x62;
 13267     175E  3062               	movlw	98
 13268     175F  0151               	movlb	17	; select bank17
 13269     1760  008D               	movwf	13	;volatile
 13270     1761                     l6609:
 13271                           
 13272                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 13273     1761  018F               	clrf	15	;volatile
 13274                           
 13275                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 13276     1762  0191               	clrf	17	;volatile
 13277     1763                     l6611:
 13278                           
 13279                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
 13280     1763  3002               	movlw	2
 13281     1764  0093               	movwf	19	;volatile
 13282                           
 13283                           ;mcc_generated_files/mcc.c: 73:     OSCSTAT = 0x00;
 13284     1765  0190               	clrf	16	;volatile
 13285                           
 13286                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13287     1766  0192               	clrf	18	;volatile
 13288     1767                     l1539:
 13289     1767  0008               	return
 13290     1768                     __end_of_OSCILLATOR_Initialize:
 13291                           
 13292                           	psect	text13
 13293     1737                     __ptext13:	
 13294 ;; *************** function _I2C1_Initialize *****************
 13295 ;; Defined at:
 13296 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1    wreg      void 
 13303 ;; Registers used:
 13304 ;;		status,2
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used: 1
 13316 ;; Hardware stack levels required when called: 4
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_SYSTEM_Initialize
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324     1737                     _I2C1_Initialize:	
 13325                           ;psect for function _I2C1_Initialize
 13326                           
 13327     1737                     l6595:	
 13328                           ;incstack = 0
 13329                           ; Regs used in _I2C1_Initialize: [status,2]
 13330                           
 13331                           
 13332                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 13333     1737  0143               	movlb	3	; select bank3
 13334     1738  018F               	clrf	15	;volatile
 13335     1739                     l6597:
 13336                           
 13337                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 13338     1739  3008               	movlw	8
 13339     173A  0090               	movwf	16	;volatile
 13340                           
 13341                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 13342     173B  0191               	clrf	17	;volatile
 13343     173C                     l6599:
 13344                           
 13345                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 13346     173C  3003               	movlw	3
 13347     173D  008D               	movwf	13	;volatile
 13348     173E                     l6601:
 13349                           
 13350                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 13351     173E  1290               	bcf	16,5	;volatile
 13352     173F                     l1257:
 13353     173F  0008               	return
 13354     1740                     __end_of_I2C1_Initialize:
 13355                           
 13356                           	psect	text14
 13357     07B7                     __ptext14:	
 13358 ;; *************** function _EUSART2_Initialize *****************
 13359 ;; Defined at:
 13360 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  1    wreg      void 
 13367 ;; Registers used:
 13368 ;;		wreg, status,2, status,0, pclath, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13378 ;;Total ram usage:        0 bytes
 13379 ;; Hardware stack levels used: 1
 13380 ;; Hardware stack levels required when called: 5
 13381 ;; This function calls:
 13382 ;;		_EUSART2_SetErrorHandler
 13383 ;;		_EUSART2_SetFramingErrorHandler
 13384 ;;		_EUSART2_SetOverrunErrorHandler
 13385 ;;		_EUSART2_SetRxInterruptHandler
 13386 ;;		_EUSART2_SetTxInterruptHandler
 13387 ;; This function is called by:
 13388 ;;		_SYSTEM_Initialize
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392     07B7                     _EUSART2_Initialize:	
 13393                           ;psect for function _EUSART2_Initialize
 13394                           
 13395     07B7                     l6651:	
 13396                           ;incstack = 0
 13397                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13398                           
 13399                           
 13400                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 13401     07B7  014E               	movlb	14	; select bank14
 13402     07B8  1399               	bcf	25,7	;volatile
 13403     07B9                     l6653:
 13404                           
 13405                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 13406     07B9  3086               	movlw	low _EUSART2_Receive_ISR
 13407     07BA  00F0               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 13408     07BB  300F               	movlw	high _EUSART2_Receive_ISR
 13409     07BC  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 13410     07BD  3196  26E4  3187   	fcall	_EUSART2_SetRxInterruptHandler
 13411     07C0                     l6655:
 13412                           
 13413                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 13414     07C0  014E               	movlb	14	; select bank14
 13415     07C1  1319               	bcf	25,6	;volatile
 13416                           
 13417                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 13418     07C2  3037               	movlw	low _EUSART2_Transmit_ISR
 13419     07C3  00F0               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 13420     07C4  300B               	movlw	high _EUSART2_Transmit_ISR
 13421     07C5  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 13422     07C6  3196  26EA  3187   	fcall	_EUSART2_SetTxInterruptHandler
 13423     07C9                     l6657:
 13424                           
 13425                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 13426     07C9  3008               	movlw	8
 13427     07CA  0154               	movlb	20	; select bank20
 13428     07CB  009F               	movwf	31	;volatile
 13429     07CC                     l6659:
 13430                           
 13431                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 13432     07CC  3090               	movlw	144
 13433     07CD  009D               	movwf	29	;volatile
 13434     07CE                     l6661:
 13435                           
 13436                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 13437     07CE  3024               	movlw	36
 13438     07CF  009E               	movwf	30	;volatile
 13439     07D0                     l6663:
 13440                           
 13441                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x19;
 13442     07D0  3019               	movlw	25
 13443     07D1  009B               	movwf	27	;volatile
 13444     07D2                     l6665:
 13445                           
 13446                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x00;
 13447     07D2  019C               	clrf	28	;volatile
 13448     07D3                     l6667:
 13449                           
 13450                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 13451     07D3  3012               	movlw	low _EUSART2_DefaultFramingErrorHandler
 13452     07D4  00F0               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 13453     07D5  3016               	movlw	high _EUSART2_DefaultFramingErrorHandler
 13454     07D6  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 13455     07D7  3196  26D8  3187   	fcall	_EUSART2_SetFramingErrorHandler
 13456     07DA                     l6669:
 13457                           
 13458                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 13459     07DA  3046               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 13460     07DB  00F0               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 13461     07DC  3016               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 13462     07DD  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 13463     07DE  3196  26DE  3187   	fcall	_EUSART2_SetOverrunErrorHandler
 13464     07E1                     l6671:
 13465                           
 13466                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 13467     07E1  3042               	movlw	low _EUSART2_DefaultErrorHandler
 13468     07E2  00F0               	movwf	EUSART2_SetErrorHandler@interruptHandler
 13469     07E3  3016               	movlw	high _EUSART2_DefaultErrorHandler
 13470     07E4  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 13471     07E5  3196  26D2  3187   	fcall	_EUSART2_SetErrorHandler
 13472                           
 13473                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 13474     07E8  0140               	movlb	0	; select bank0
 13475     07E9  01CD               	clrf	_eusart2RxLastError	;volatile
 13476                           
 13477                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 13478     07EA  01D3               	clrf	_eusart2TxHead	;volatile
 13479                           
 13480                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 13481     07EB  01D2               	clrf	_eusart2TxTail	;volatile
 13482     07EC                     l6673:
 13483                           
 13484                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 13485     07EC  3008               	movlw	8
 13486     07ED  00D1               	movwf	_eusart2TxBufferRemaining	;volatile
 13487                           
 13488                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 13489     07EE  01D0               	clrf	_eusart2RxHead	;volatile
 13490                           
 13491                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 13492     07EF  01CF               	clrf	_eusart2RxTail	;volatile
 13493                           
 13494                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 13495     07F0  01CE               	clrf	_eusart2RxCount	;volatile
 13496     07F1                     l6675:
 13497                           
 13498                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 13499     07F1  014E               	movlb	14	; select bank14
 13500     07F2  1799               	bsf	25,7	;volatile
 13501     07F3                     l1895:
 13502     07F3  0008               	return
 13503     07F4                     __end_of_EUSART2_Initialize:
 13504                           
 13505                           	psect	text15
 13506     16EA                     __ptext15:	
 13507 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 13508 ;; Defined at:
 13509 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13512 ;;		 -> EUSART2_Transmit_ISR(1), 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1    wreg      void 
 13517 ;; Registers used:
 13518 ;;		wreg
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13528 ;;Total ram usage:        2 bytes
 13529 ;; Hardware stack levels used: 1
 13530 ;; Hardware stack levels required when called: 4
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_EUSART2_Initialize
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538     16EA                     _EUSART2_SetTxInterruptHandler:	
 13539                           ;psect for function _EUSART2_SetTxInterruptHandler
 13540                           
 13541     16EA                     l6377:	
 13542                           ;incstack = 0
 13543                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 13544                           
 13545                           
 13546                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13547     16EA  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 13548     16EB  0141               	movlb	1	; select bank1
 13549     16EC  00D1               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 13550     16ED  0870               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 13551     16EE  00D0               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 13552     16EF                     l1961:
 13553     16EF  0008               	return
 13554     16F0                     __end_of_EUSART2_SetTxInterruptHandler:
 13555                           
 13556                           	psect	text16
 13557     16E4                     __ptext16:	
 13558 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 13559 ;; Defined at:
 13560 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13563 ;;		 -> EUSART2_Receive_ISR(1), 
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      void 
 13568 ;; Registers used:
 13569 ;;		wreg
 13570 ;; Tracked objects:
 13571 ;;		On entry : 0/0
 13572 ;;		On exit  : 0/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13579 ;;Total ram usage:        2 bytes
 13580 ;; Hardware stack levels used: 1
 13581 ;; Hardware stack levels required when called: 4
 13582 ;; This function calls:
 13583 ;;		Nothing
 13584 ;; This function is called by:
 13585 ;;		_EUSART2_Initialize
 13586 ;; This function uses a non-reentrant model
 13587 ;;
 13588                           
 13589     16E4                     _EUSART2_SetRxInterruptHandler:	
 13590                           ;psect for function _EUSART2_SetRxInterruptHandler
 13591                           
 13592     16E4                     l6375:	
 13593                           ;incstack = 0
 13594                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 13595                           
 13596                           
 13597                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13598     16E4  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 13599     16E5  0141               	movlb	1	; select bank1
 13600     16E6  00CF               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 13601     16E7  0870               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 13602     16E8  00CE               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 13603     16E9                     l1964:
 13604     16E9  0008               	return
 13605     16EA                     __end_of_EUSART2_SetRxInterruptHandler:
 13606                           
 13607                           	psect	text17
 13608     16DE                     __ptext17:	
 13609 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 13610 ;; Defined at:
 13611 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13614 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13630 ;;Total ram usage:        2 bytes
 13631 ;; Hardware stack levels used: 1
 13632 ;; Hardware stack levels required when called: 4
 13633 ;; This function calls:
 13634 ;;		Nothing
 13635 ;; This function is called by:
 13636 ;;		_EUSART2_Initialize
 13637 ;; This function uses a non-reentrant model
 13638 ;;
 13639                           
 13640     16DE                     _EUSART2_SetOverrunErrorHandler:	
 13641                           ;psect for function _EUSART2_SetOverrunErrorHandler
 13642                           
 13643     16DE                     l6381:	
 13644                           ;incstack = 0
 13645                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 13646                           
 13647                           
 13648                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 13649     16DE  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 13650     16DF  0142               	movlb	2	; select bank2
 13651     16E0  00D7               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 13652     16E1  0870               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 13653     16E2  00D6               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 13654     16E3                     l1955:
 13655     16E3  0008               	return
 13656     16E4                     __end_of_EUSART2_SetOverrunErrorHandler:
 13657                           
 13658                           	psect	text18
 13659     16D8                     __ptext18:	
 13660 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 13661 ;; Defined at:
 13662 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13665 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;		None
 13668 ;; Return value:  Size  Location     Type
 13669 ;;                  1    wreg      void 
 13670 ;; Registers used:
 13671 ;;		wreg
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13681 ;;Total ram usage:        2 bytes
 13682 ;; Hardware stack levels used: 1
 13683 ;; Hardware stack levels required when called: 4
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_EUSART2_Initialize
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691     16D8                     _EUSART2_SetFramingErrorHandler:	
 13692                           ;psect for function _EUSART2_SetFramingErrorHandler
 13693                           
 13694     16D8                     l6379:	
 13695                           ;incstack = 0
 13696                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 13697                           
 13698                           
 13699                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 13700     16D8  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 13701     16D9  0142               	movlb	2	; select bank2
 13702     16DA  00D9               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 13703     16DB  0870               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 13704     16DC  00D8               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 13705     16DD                     l1952:
 13706     16DD  0008               	return
 13707     16DE                     __end_of_EUSART2_SetFramingErrorHandler:
 13708                           
 13709                           	psect	text19
 13710     16D2                     __ptext19:	
 13711 ;; *************** function _EUSART2_SetErrorHandler *****************
 13712 ;; Defined at:
 13713 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13716 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;		None
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13732 ;;Total ram usage:        2 bytes
 13733 ;; Hardware stack levels used: 1
 13734 ;; Hardware stack levels required when called: 4
 13735 ;; This function calls:
 13736 ;;		Nothing
 13737 ;; This function is called by:
 13738 ;;		_EUSART2_Initialize
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742     16D2                     _EUSART2_SetErrorHandler:	
 13743                           ;psect for function _EUSART2_SetErrorHandler
 13744                           
 13745     16D2                     l6383:	
 13746                           ;incstack = 0
 13747                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 13748                           
 13749                           
 13750                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 13751     16D2  0871               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 13752     16D3  0142               	movlb	2	; select bank2
 13753     16D4  00D5               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 13754     16D5  0870               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 13755     16D6  00D4               	movwf	_EUSART2_ErrorHandler^(0+256)
 13756     16D7                     l1958:
 13757     16D7  0008               	return
 13758     16D8                     __end_of_EUSART2_SetErrorHandler:
 13759                           
 13760                           	psect	text20
 13761     0FC3                     __ptext20:	
 13762 ;; *************** function _EUSART1_Initialize *****************
 13763 ;; Defined at:
 13764 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, status,2, status,0, pclath, cstack
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used: 1
 13784 ;; Hardware stack levels required when called: 5
 13785 ;; This function calls:
 13786 ;;		_EUSART1_SetErrorHandler
 13787 ;;		_EUSART1_SetFramingErrorHandler
 13788 ;;		_EUSART1_SetOverrunErrorHandler
 13789 ;;		_EUSART1_SetRxInterruptHandler
 13790 ;;		_EUSART1_SetTxInterruptHandler
 13791 ;; This function is called by:
 13792 ;;		_SYSTEM_Initialize
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796     0FC3                     _EUSART1_Initialize:	
 13797                           ;psect for function _EUSART1_Initialize
 13798                           
 13799     0FC3                     l6625:	
 13800                           ;incstack = 0
 13801                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13802                           
 13803                           
 13804                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 13805     0FC3  014E               	movlb	14	; select bank14
 13806     0FC4  1299               	bcf	25,5	;volatile
 13807     0FC5                     l6627:
 13808                           
 13809                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13810     0FC5  3049               	movlw	low _EUSART1_Receive_ISR
 13811     0FC6  00F0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13812     0FC7  300F               	movlw	high _EUSART1_Receive_ISR
 13813     0FC8  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13814     0FC9  3196  26C6  318F   	fcall	_EUSART1_SetRxInterruptHandler
 13815     0FCC                     l6629:
 13816                           
 13817                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 13818     0FCC  014E               	movlb	14	; select bank14
 13819     0FCD  1219               	bcf	25,4	;volatile
 13820                           
 13821                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 13822     0FCE  30DD               	movlw	low _EUSART1_Transmit_ISR
 13823     0FCF  00F0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 13824     0FD0  300A               	movlw	high _EUSART1_Transmit_ISR
 13825     0FD1  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 13826     0FD2  3196  26CC  318F   	fcall	_EUSART1_SetTxInterruptHandler
 13827     0FD5                     l6631:
 13828                           
 13829                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 13830     0FD5  3008               	movlw	8
 13831     0FD6  0142               	movlb	2	; select bank2
 13832     0FD7  009F               	movwf	31	;volatile
 13833     0FD8                     l6633:
 13834                           
 13835                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 13836     0FD8  3090               	movlw	144
 13837     0FD9  009D               	movwf	29	;volatile
 13838     0FDA                     l6635:
 13839                           
 13840                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 13841     0FDA  3024               	movlw	36
 13842     0FDB  009E               	movwf	30	;volatile
 13843     0FDC                     l6637:
 13844                           
 13845                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x19;
 13846     0FDC  3019               	movlw	25
 13847     0FDD  009B               	movwf	27	;volatile
 13848     0FDE                     l6639:
 13849                           
 13850                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 13851     0FDE  019C               	clrf	28	;volatile
 13852     0FDF                     l6641:
 13853                           
 13854                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13855     0FDF  3011               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13856     0FE0  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13857     0FE1  3016               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13858     0FE2  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13859     0FE3  3196  26BA  318F   	fcall	_EUSART1_SetFramingErrorHandler
 13860     0FE6                     l6643:
 13861                           
 13862                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13863     0FE6  303E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13864     0FE7  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13865     0FE8  3016               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13866     0FE9  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13867     0FEA  3196  26C0  318F   	fcall	_EUSART1_SetOverrunErrorHandler
 13868     0FED                     l6645:
 13869                           
 13870                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13871     0FED  303A               	movlw	low _EUSART1_DefaultErrorHandler
 13872     0FEE  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13873     0FEF  3016               	movlw	high _EUSART1_DefaultErrorHandler
 13874     0FF0  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13875     0FF1  3196  26B4  318F   	fcall	_EUSART1_SetErrorHandler
 13876                           
 13877                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 13878     0FF4  0140               	movlb	0	; select bank0
 13879     0FF5  01D4               	clrf	_eusart1RxLastError	;volatile
 13880                           
 13881                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 13882     0FF6  01DA               	clrf	_eusart1TxHead	;volatile
 13883                           
 13884                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 13885     0FF7  01D9               	clrf	_eusart1TxTail	;volatile
 13886     0FF8                     l6647:
 13887                           
 13888                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 13889     0FF8  3008               	movlw	8
 13890     0FF9  00D8               	movwf	_eusart1TxBufferRemaining	;volatile
 13891                           
 13892                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 13893     0FFA  01D7               	clrf	_eusart1RxHead	;volatile
 13894                           
 13895                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 13896     0FFB  01D6               	clrf	_eusart1RxTail	;volatile
 13897                           
 13898                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 13899     0FFC  01D5               	clrf	_eusart1RxCount	;volatile
 13900     0FFD                     l6649:
 13901                           
 13902                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 13903     0FFD  014E               	movlb	14	; select bank14
 13904     0FFE  1699               	bsf	25,5	;volatile
 13905     0FFF                     l1751:
 13906     0FFF  0008               	return
 13907     1000                     __end_of_EUSART1_Initialize:
 13908                           
 13909                           	psect	text21
 13910     16CC                     __ptext21:	
 13911 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 13912 ;; Defined at:
 13913 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13916 ;;		 -> EUSART1_Transmit_ISR(1), 
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  1    wreg      void 
 13921 ;; Registers used:
 13922 ;;		wreg
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13932 ;;Total ram usage:        2 bytes
 13933 ;; Hardware stack levels used: 1
 13934 ;; Hardware stack levels required when called: 4
 13935 ;; This function calls:
 13936 ;;		Nothing
 13937 ;; This function is called by:
 13938 ;;		_EUSART1_Initialize
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942     16CC                     _EUSART1_SetTxInterruptHandler:	
 13943                           ;psect for function _EUSART1_SetTxInterruptHandler
 13944                           
 13945     16CC                     l6357:	
 13946                           ;incstack = 0
 13947                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 13948                           
 13949                           
 13950                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13951     16CC  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 13952     16CD  0142               	movlb	2	; select bank2
 13953     16CE  00E3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 13954     16CF  0870               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 13955     16D0  00E2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 13956     16D1                     l1817:
 13957     16D1  0008               	return
 13958     16D2                     __end_of_EUSART1_SetTxInterruptHandler:
 13959                           
 13960                           	psect	text22
 13961     16C6                     __ptext22:	
 13962 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13963 ;; Defined at:
 13964 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13967 ;;		 -> EUSART1_Receive_ISR(1), 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;		None
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      void 
 13972 ;; Registers used:
 13973 ;;		wreg
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13983 ;;Total ram usage:        2 bytes
 13984 ;; Hardware stack levels used: 1
 13985 ;; Hardware stack levels required when called: 4
 13986 ;; This function calls:
 13987 ;;		Nothing
 13988 ;; This function is called by:
 13989 ;;		_EUSART1_Initialize
 13990 ;; This function uses a non-reentrant model
 13991 ;;
 13992                           
 13993     16C6                     _EUSART1_SetRxInterruptHandler:	
 13994                           ;psect for function _EUSART1_SetRxInterruptHandler
 13995                           
 13996     16C6                     l6355:	
 13997                           ;incstack = 0
 13998                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13999                           
 14000                           
 14001                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 14002     16C6  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14003     16C7  0142               	movlb	2	; select bank2
 14004     16C8  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 14005     16C9  0870               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14006     16CA  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 14007     16CB                     l1820:
 14008     16CB  0008               	return
 14009     16CC                     __end_of_EUSART1_SetRxInterruptHandler:
 14010                           
 14011                           	psect	text23
 14012     16C0                     __ptext23:	
 14013 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 14014 ;; Defined at:
 14015 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 14018 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1    wreg      void 
 14023 ;; Registers used:
 14024 ;;		wreg
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;Total ram usage:        2 bytes
 14035 ;; Hardware stack levels used: 1
 14036 ;; Hardware stack levels required when called: 4
 14037 ;; This function calls:
 14038 ;;		Nothing
 14039 ;; This function is called by:
 14040 ;;		_EUSART1_Initialize
 14041 ;; This function uses a non-reentrant model
 14042 ;;
 14043                           
 14044     16C0                     _EUSART1_SetOverrunErrorHandler:	
 14045                           ;psect for function _EUSART1_SetOverrunErrorHandler
 14046                           
 14047     16C0                     l6361:	
 14048                           ;incstack = 0
 14049                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 14050                           
 14051                           
 14052                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 14053     16C0  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 14054     16C1  0142               	movlb	2	; select bank2
 14055     16C2  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 14056     16C3  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 14057     16C4  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 14058     16C5                     l1811:
 14059     16C5  0008               	return
 14060     16C6                     __end_of_EUSART1_SetOverrunErrorHandler:
 14061                           
 14062                           	psect	text24
 14063     16BA                     __ptext24:	
 14064 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 14065 ;; Defined at:
 14066 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 14069 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;		None
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      void 
 14074 ;; Registers used:
 14075 ;;		wreg
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14085 ;;Total ram usage:        2 bytes
 14086 ;; Hardware stack levels used: 1
 14087 ;; Hardware stack levels required when called: 4
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_EUSART1_Initialize
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095     16BA                     _EUSART1_SetFramingErrorHandler:	
 14096                           ;psect for function _EUSART1_SetFramingErrorHandler
 14097                           
 14098     16BA                     l6359:	
 14099                           ;incstack = 0
 14100                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 14101                           
 14102                           
 14103                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 14104     16BA  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 14105     16BB  0142               	movlb	2	; select bank2
 14106     16BC  00DF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 14107     16BD  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 14108     16BE  00DE               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 14109     16BF                     l1808:
 14110     16BF  0008               	return
 14111     16C0                     __end_of_EUSART1_SetFramingErrorHandler:
 14112                           
 14113                           	psect	text25
 14114     16B4                     __ptext25:	
 14115 ;; *************** function _EUSART1_SetErrorHandler *****************
 14116 ;; Defined at:
 14117 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 14120 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;		None
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  1    wreg      void 
 14125 ;; Registers used:
 14126 ;;		wreg
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14136 ;;Total ram usage:        2 bytes
 14137 ;; Hardware stack levels used: 1
 14138 ;; Hardware stack levels required when called: 4
 14139 ;; This function calls:
 14140 ;;		Nothing
 14141 ;; This function is called by:
 14142 ;;		_EUSART1_Initialize
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146     16B4                     _EUSART1_SetErrorHandler:	
 14147                           ;psect for function _EUSART1_SetErrorHandler
 14148                           
 14149     16B4                     l6363:	
 14150                           ;incstack = 0
 14151                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 14152                           
 14153                           
 14154                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 14155     16B4  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 14156     16B5  0142               	movlb	2	; select bank2
 14157     16B6  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 14158     16B7  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 14159     16B8  00DA               	movwf	_EUSART1_ErrorHandler^(0+256)
 14160     16B9                     l1814:
 14161     16B9  0008               	return
 14162     16BA                     __end_of_EUSART1_SetErrorHandler:
 14163                           
 14164                           	psect	text26
 14165     07F4                     __ptext26:	
 14166 ;; *************** function _RN487X_Read *****************
 14167 ;; Defined at:
 14168 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;		None
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;		None
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  1    wreg      unsigned char 
 14175 ;; Registers used:
 14176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14177 ;; Tracked objects:
 14178 ;;		On entry : 0/0
 14179 ;;		On exit  : 0/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14186 ;;Total ram usage:        0 bytes
 14187 ;; Hardware stack levels used: 1
 14188 ;; Hardware stack levels required when called: 9
 14189 ;; This function calls:
 14190 ;;		_RN487X_DataReady
 14191 ;; This function is called by:
 14192 ;;		_main
 14193 ;;		_RN487X_Example_TransparentUart
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197     07F4                     _RN487X_Read:	
 14198                           ;psect for function _RN487X_Read
 14199                           
 14200     07F4                     l7019:	
 14201                           ;incstack = 0
 14202                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14203                           
 14204     07F4                     l7021:	
 14205                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 14206                           
 14207     07F4  318A  22C1  3187   	fcall	_RN487X_DataReady
 14208     07F7  3A00               	xorlw	0
 14209     07F8  1903               	skipnz
 14210     07F9  2FFB               	goto	u3161
 14211     07FA  2FFC               	goto	u3160
 14212     07FB                     u3161:
 14213     07FB  2FF4               	goto	l7021
 14214     07FC                     u3160:
 14215     07FC                     l7023:
 14216                           
 14217                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 14218     07FC  0140               	movlb	0	; select bank0
 14219     07FD  01E1               	clrf	_dataReady
 14220     07FE                     l7025:
 14221                           
 14222                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 14223     07FE  0862               	movf	_peek,w
 14224     07FF                     l846:
 14225     07FF  0008               	return
 14226     0800                     __end_of_RN487X_Read:
 14227                           
 14228                           	psect	text27
 14229     0AC1                     __ptext27:	
 14230 ;; *************** function _RN487X_DataReady *****************
 14231 ;; Defined at:
 14232 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;		None
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      _Bool 
 14239 ;; Registers used:
 14240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14250 ;;Total ram usage:        0 bytes
 14251 ;; Hardware stack levels used: 1
 14252 ;; Hardware stack levels required when called: 8
 14253 ;; This function calls:
 14254 ;;		_RN487X_FilterData
 14255 ;;		_RN487X_is_rx_ready
 14256 ;; This function is called by:
 14257 ;;		_RN487X_Read
 14258 ;;		_main
 14259 ;;		_RN487X_Example_TransparentUart
 14260 ;; This function uses a non-reentrant model
 14261 ;;
 14262                           
 14263     0AC1                     _RN487X_DataReady:	
 14264                           ;psect for function _RN487X_DataReady
 14265                           
 14266     0AC1                     l6489:	
 14267                           ;incstack = 0
 14268                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14269                           
 14270                           
 14271                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 14272     0AC1  0140               	movlb	0	; select bank0
 14273     0AC2  0861               	movf	_dataReady,w
 14274     0AC3  1903               	btfsc	3,2
 14275     0AC4  2AC6               	goto	u2901
 14276     0AC5  2AC7               	goto	u2900
 14277     0AC6                     u2901:
 14278     0AC6  2AC9               	goto	l6495
 14279     0AC7                     u2900:
 14280     0AC7                     l6491:
 14281                           
 14282                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 14283     0AC7  3001               	movlw	1
 14284     0AC8  2ADC               	goto	l839
 14285     0AC9                     l6495:
 14286                           
 14287                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 14288     0AC9  306E               	movlw	low ((_RN487X+6)| (0+32768))
 14289     0ACA  0084               	movwf	4
 14290     0ACB  3090               	movlw	high ((_RN487X+6)| (0+32768))
 14291     0ACC  0085               	movwf	5
 14292     0ACD  3F01               	moviw [1]fsr0
 14293     0ACE  008A               	movwf	10
 14294     0ACF  3F00               	moviw [0]fsr0
 14295     0AD0  000A               	callw
 14296     0AD1  318A               	pagesel	$
 14297     0AD2  3A00               	xorlw	0
 14298     0AD3  1903               	skipnz
 14299     0AD4  2AD6               	goto	u2911
 14300     0AD5  2AD7               	goto	u2910
 14301     0AD6                     u2911:
 14302     0AD6  2ADB               	goto	l6501
 14303     0AD7                     u2910:
 14304     0AD7                     l6497:
 14305                           
 14306                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 14307     0AD7  3186  2607  318A   	fcall	_RN487X_FilterData
 14308     0ADA  2ADC               	goto	l839
 14309     0ADB                     l6501:
 14310                           
 14311                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 14312     0ADB  3000               	movlw	0
 14313     0ADC                     l839:
 14314     0ADC  0008               	return
 14315     0ADD                     __end_of_RN487X_DataReady:
 14316                           
 14317                           	psect	text28
 14318     0607                     __ptext28:	
 14319 ;; *************** function _RN487X_FilterData *****************
 14320 ;; Defined at:
 14321 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;		None
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  readChar        1   34[BANK0 ] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      _Bool 
 14328 ;; Registers used:
 14329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:        1 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; Hardware stack levels required when called: 7
 14342 ;; This function calls:
 14343 ;;		_RN487X_MessageHandler
 14344 ;;		_RN487X_Read@rn487x_interface$F1569
 14345 ;; This function is called by:
 14346 ;;		_RN487X_DataReady
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350     0607                     _RN487X_FilterData:	
 14351                           ;psect for function _RN487X_FilterData
 14352                           
 14353     0607                     l6315:	
 14354                           ;incstack = 0
 14355                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14356                           
 14357                           
 14358                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 14359     0607  306A               	movlw	low ((_RN487X+2)| (0+32768))
 14360     0608  0084               	movwf	4
 14361     0609  3090               	movlw	high ((_RN487X+2)| (0+32768))
 14362     060A  0085               	movwf	5
 14363     060B  3F01               	moviw [1]fsr0
 14364     060C  008A               	movwf	10
 14365     060D  3F00               	moviw [0]fsr0
 14366     060E  000A               	callw
 14367     060F  3186               	pagesel	$
 14368     0610  0140               	movlb	0	; select bank0
 14369     0611  00C2               	movwf	RN487X_FilterData@readChar
 14370     0612                     l6317:
 14371                           
 14372                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 14373     0612  0360               	decf	RN487X_FilterData@asyncBuffering,w
 14374     0613  1D03               	btfss	3,2
 14375     0614  2E16               	goto	u2761
 14376     0615  2E17               	goto	u2760
 14377     0616                     u2761:
 14378     0616  2E3F               	goto	l6333
 14379     0617                     u2760:
 14380     0617                     l6319:
 14381                           
 14382                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 14383     0617  3025               	movlw	37
 14384     0618  0642               	xorwf	RN487X_FilterData@readChar,w
 14385     0619  1D03               	btfss	3,2
 14386     061A  2E1C               	goto	u2771
 14387     061B  2E1D               	goto	u2770
 14388     061C                     u2771:
 14389     061C  2E2F               	goto	l6327
 14390     061D                     u2770:
 14391     061D                     l6321:
 14392                           
 14393                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 14394     061D  01E0               	clrf	RN487X_FilterData@asyncBuffering
 14395     061E                     l6323:
 14396                           
 14397                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 14398     061E  0863               	movf	_pHead,w
 14399     061F  0086               	movwf	6
 14400     0620  3003               	movlw	3	; select bank6/7
 14401     0621  0087               	movwf	7
 14402     0622  0181               	clrf	1
 14403     0623                     l6325:
 14404                           
 14405                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 14406     0623  0865               	movf	_asyncBuffer,w
 14407     0624  00FD               	movwf	RN487X_MessageHandler@message
 14408     0625  3078               	movlw	low ((_RN487X+16)| (0+32768))
 14409     0626  0084               	movwf	4
 14410     0627  3090               	movlw	high ((_RN487X+16)| (0+32768))
 14411     0628  0085               	movwf	5
 14412     0629  3F01               	moviw [1]fsr0
 14413     062A  008A               	movwf	10
 14414     062B  3F00               	moviw [0]fsr0
 14415     062C  000A               	callw
 14416     062D  3186               	pagesel	$
 14417                           
 14418                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 14419     062E  2E4E               	goto	l855
 14420     062F                     l6327:
 14421     062F  0865               	movf	_asyncBuffer,w
 14422     0630  0764               	addwf	_asyncBufferSize,w
 14423     0631  0263               	subwf	_pHead,w
 14424     0632  1803               	skipnc
 14425     0633  2E35               	goto	u2781
 14426     0634  2E36               	goto	u2780
 14427     0635                     u2781:
 14428     0635  2E4E               	goto	l855
 14429     0636                     u2780:
 14430     0636                     l6329:
 14431                           
 14432                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 14433     0636  0863               	movf	_pHead,w
 14434     0637  0086               	movwf	6
 14435     0638  3003               	movlw	3	; select bank6/7
 14436     0639  0087               	movwf	7
 14437     063A  0842               	movf	RN487X_FilterData@readChar,w
 14438     063B  0081               	movwf	1
 14439     063C                     l6331:
 14440     063C  3001               	movlw	1
 14441     063D  07E3               	addwf	_pHead,f
 14442     063E  2E4E               	goto	l855
 14443     063F                     l6333:
 14444                           
 14445                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 14446     063F  3025               	movlw	37
 14447     0640  0642               	xorwf	RN487X_FilterData@readChar,w
 14448     0641  1D03               	btfss	3,2
 14449     0642  2E44               	goto	u2791
 14450     0643  2E45               	goto	u2790
 14451     0644                     u2791:
 14452     0644  2E4A               	goto	l856
 14453     0645                     u2790:
 14454     0645                     l6335:
 14455                           
 14456                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 14457     0645  3001               	movlw	1
 14458     0646  00E0               	movwf	RN487X_FilterData@asyncBuffering
 14459     0647                     l6337:
 14460                           
 14461                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 14462     0647  0865               	movf	_asyncBuffer,w
 14463     0648  00E3               	movwf	_pHead
 14464                           
 14465                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 14466     0649  2E4E               	goto	l855
 14467     064A                     l856:	
 14468                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 14469                           
 14470                           
 14471                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 14472     064A  3001               	movlw	1
 14473     064B  00E1               	movwf	_dataReady
 14474     064C                     l6339:
 14475                           
 14476                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 14477     064C  0842               	movf	RN487X_FilterData@readChar,w
 14478     064D  00E2               	movwf	_peek
 14479     064E                     l855:	
 14480                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 14481                           
 14482                           
 14483                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 14484     064E  0140               	movlb	0	; select bank0
 14485     064F  0861               	movf	_dataReady,w
 14486     0650                     l858:
 14487     0650  0008               	return
 14488     0651                     __end_of_RN487X_FilterData:
 14489                           
 14490                           	psect	text29
 14491     0ED4                     __ptext29:	
 14492 ;; *************** function _RN487X_MessageHandler *****************
 14493 ;; Defined at:
 14494 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  message         1   13[COMMON] PTR unsigned char 
 14497 ;;		 -> statusBuffer(80), NULL(0), 
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;  messageType     1   33[BANK0 ] enum E13210
 14500 ;; Return value:  Size  Location     Type
 14501 ;;                  1    wreg      void 
 14502 ;; Registers used:
 14503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14504 ;; Tracked objects:
 14505 ;;		On entry : 0/0
 14506 ;;		On exit  : 0/0
 14507 ;;		Unchanged: 0/0
 14508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14512 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14513 ;;Total ram usage:        2 bytes
 14514 ;; Hardware stack levels used: 1
 14515 ;; Hardware stack levels required when called: 6
 14516 ;; This function calls:
 14517 ;;		_rn487x_PrintIndicatorCharacters
 14518 ;;		_rn487x_PrintMessage
 14519 ;;		_rn487x_PrintMessageEnd
 14520 ;;		_rn487x_PrintMessageStart
 14521 ;;		_strstr
 14522 ;; This function is called by:
 14523 ;;		_RN487X_FilterData
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527     0ED4                     _RN487X_MessageHandler:	
 14528                           ;psect for function _RN487X_MessageHandler
 14529                           
 14530     0ED4                     l6227:	
 14531                           ;incstack = 0
 14532                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14533                           
 14534                           
 14535                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 14536     0ED4  318D  2571  318E   	fcall	_rn487x_PrintMessageStart
 14537                           
 14538                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 14539     0ED7  087D               	movf	RN487X_MessageHandler@message,w
 14540     0ED8  00F6               	movwf	strstr@h
 14541     0ED9  3017               	movlw	low (STR_3| (0+32768))
 14542     0EDA  00F7               	movwf	strstr@n
 14543     0EDB  3098               	movlw	high (STR_3| (0+32768))
 14544     0EDC  00F8               	movwf	strstr@n+1
 14545     0EDD  3186  2651  318E   	fcall	_strstr
 14546     0EE0  3A00               	xorlw	0
 14547     0EE1  1903               	skipnz
 14548     0EE2  2EE4               	goto	u2671
 14549     0EE3  2EE5               	goto	u2670
 14550     0EE4                     u2671:
 14551     0EE4  2EE9               	goto	l6231
 14552     0EE5                     u2670:
 14553     0EE5                     l6229:
 14554                           
 14555                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 14556     0EE5  0140               	movlb	0	; select bank0
 14557     0EE6  01C1               	clrf	RN487X_MessageHandler@messageType
 14558                           
 14559                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 14560     0EE7  01DF               	clrf	_connected
 14561                           
 14562                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 14563     0EE8  2F00               	goto	l6235
 14564     0EE9                     l6231:
 14565     0EE9  087D               	movf	RN487X_MessageHandler@message,w
 14566     0EEA  00F6               	movwf	strstr@h
 14567     0EEB  3000               	movlw	low (STR_5| (0+32768))
 14568     0EEC  00F7               	movwf	strstr@n
 14569     0EED  3098               	movlw	high (STR_5| (0+32768))
 14570     0EEE  00F8               	movwf	strstr@n+1
 14571     0EEF  3186  2651  318E   	fcall	_strstr
 14572     0EF2  3A00               	xorlw	0
 14573     0EF3  1903               	skipnz
 14574     0EF4  2EF6               	goto	u2681
 14575     0EF5  2EF7               	goto	u2680
 14576     0EF6                     u2681:
 14577     0EF6  2EFD               	goto	l971
 14578     0EF7                     u2680:
 14579     0EF7                     l6233:
 14580                           
 14581                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 14582     0EF7  3001               	movlw	1
 14583     0EF8  0140               	movlb	0	; select bank0
 14584     0EF9  00C1               	movwf	RN487X_MessageHandler@messageType
 14585                           
 14586                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 14587     0EFA  3001               	movlw	1
 14588     0EFB  00DF               	movwf	_connected
 14589                           
 14590                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 14591     0EFC  2F00               	goto	l6235
 14592     0EFD                     l971:	
 14593                           ;mcc_generated_files/rn487x/rn487x_interface.c: 382:     else
 14594                           
 14595                           
 14596                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 14597     0EFD  3002               	movlw	2
 14598     0EFE  0140               	movlb	0	; select bank0
 14599     0EFF  00C1               	movwf	RN487X_MessageHandler@messageType
 14600     0F00                     l6235:
 14601                           
 14602                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 14603     0F00  087D               	movf	RN487X_MessageHandler@message,w
 14604     0F01  00F5               	movwf	rn487x_PrintMessage@passedMessage
 14605     0F02  318D  25FE  318E   	fcall	_rn487x_PrintMessage
 14606                           
 14607                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 14608     0F05  3185  25B9  318E   	fcall	_rn487x_PrintMessageEnd
 14609                           
 14610                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 14611     0F08  0140               	movlb	0	; select bank0
 14612     0F09  0841               	movf	RN487X_MessageHandler@messageType,w
 14613     0F0A  318B  2377  318E   	fcall	_rn487x_PrintIndicatorCharacters
 14614     0F0D                     l973:
 14615     0F0D  0008               	return
 14616     0F0E                     __end_of_RN487X_MessageHandler:
 14617                           
 14618                           	psect	text30
 14619     0651                     __ptext30:	
 14620 ;; *************** function _strstr *****************
 14621 ;; Defined at:
 14622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  h               1    6[COMMON] PTR const unsigned char 
 14625 ;;		 -> statusBuffer(80), NULL(0), 
 14626 ;;  n               2    7[COMMON] PTR const unsigned char 
 14627 ;;		 -> STR_6(12), STR_4(11), 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  nl              2   11[COMMON] unsigned int 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;                  1    6[COMMON] PTR unsigned char 
 14632 ;; Registers used:
 14633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;Total ram usage:        7 bytes
 14644 ;; Hardware stack levels used: 1
 14645 ;; Hardware stack levels required when called: 5
 14646 ;; This function calls:
 14647 ;;		_strchr
 14648 ;;		_strlen
 14649 ;;		_strncmp
 14650 ;; This function is called by:
 14651 ;;		_RN487X_MessageHandler
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655     0651                     _strstr:	
 14656                           ;psect for function _strstr
 14657                           
 14658     0651                     l6163:	
 14659                           ;incstack = 0
 14660                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14661                           
 14662     0651  0877               	movf	strstr@n,w
 14663     0652  0478               	iorwf	strstr@n+1,w
 14664     0653  1903               	btfsc	3,2
 14665     0654  2E56               	goto	u2551
 14666     0655  2E57               	goto	u2550
 14667     0656                     u2551:
 14668     0656  2E98               	goto	l6179
 14669     0657                     u2550:
 14670     0657                     l6165:
 14671     0657  0878               	movf	strstr@n+1,w
 14672     0658  00F1               	movwf	strlen@s+1
 14673     0659  0877               	movf	strstr@n,w
 14674     065A  00F0               	movwf	strlen@s
 14675     065B  318A  2257  3186   	fcall	_strlen
 14676     065E  0871               	movf	?_strlen+1,w
 14677     065F  00FC               	movwf	strstr@nl+1
 14678     0660  0870               	movf	?_strlen,w
 14679     0661  00FB               	movwf	strstr@nl
 14680     0662  2E8A               	goto	l6175
 14681     0663                     l6167:
 14682     0663  0876               	movf	strstr@h,w
 14683     0664  00F0               	movwf	strncmp@l
 14684     0665  0878               	movf	strstr@n+1,w
 14685     0666  00F2               	movwf	strncmp@r+1
 14686     0667  0877               	movf	strstr@n,w
 14687     0668  00F1               	movwf	strncmp@r
 14688     0669  087C               	movf	strstr@nl+1,w
 14689     066A  00F4               	movwf	strncmp@n+1
 14690     066B  087B               	movf	strstr@nl,w
 14691     066C  00F3               	movwf	strncmp@n
 14692     066D  3185  2519  3186   	fcall	_strncmp
 14693     0670  0870               	movf	?_strncmp,w
 14694     0671  0471               	iorwf	?_strncmp+1,w
 14695     0672  1D03               	btfss	3,2
 14696     0673  2E75               	goto	u2561
 14697     0674  2E76               	goto	u2560
 14698     0675                     u2561:
 14699     0675  2E78               	goto	l6173
 14700     0676                     u2560:
 14701     0676                     l6169:
 14702     0676  0876               	movf	strstr@h,w
 14703     0677  2E99               	goto	l2847
 14704     0678                     l6173:
 14705     0678  0876               	movf	strstr@h,w
 14706     0679  3E01               	addlw	1
 14707     067A  00F0               	movwf	strchr@s
 14708     067B  0877               	movf	strstr@n,w
 14709     067C  0084               	movwf	4
 14710     067D  0878               	movf	strstr@n+1,w
 14711     067E  0085               	movwf	5
 14712     067F  0800               	movf	0,w	;code access
 14713     0680  00F9               	movwf	??_strstr
 14714     0681  01FA               	clrf	??_strstr+1
 14715     0682  0879               	movf	??_strstr,w
 14716     0683  00F1               	movwf	strchr@c
 14717     0684  087A               	movf	??_strstr+1,w
 14718     0685  00F2               	movwf	strchr@c+1
 14719     0686  318A  223F  3186   	fcall	_strchr
 14720     0689  00F6               	movwf	strstr@h
 14721     068A                     l6175:
 14722     068A  0876               	movf	strstr@h,w
 14723     068B  1903               	btfsc	3,2
 14724     068C  2E8E               	goto	u2571
 14725     068D  2E8F               	goto	u2570
 14726     068E                     u2571:
 14727     068E  2E98               	goto	l6179
 14728     068F                     u2570:
 14729     068F                     l6177:
 14730     068F  0876               	movf	strstr@h,w
 14731     0690  0086               	movwf	6
 14732     0691  3003               	movlw	3	; select bank6/7
 14733     0692  0087               	movwf	7
 14734     0693  0801               	movf	1,w
 14735     0694  1D03               	btfss	3,2
 14736     0695  2E97               	goto	u2581
 14737     0696  2E98               	goto	u2580
 14738     0697                     u2581:
 14739     0697  2E63               	goto	l6167
 14740     0698                     u2580:
 14741     0698                     l6179:
 14742     0698  3000               	movlw	0
 14743     0699                     l2847:
 14744     0699  0008               	return
 14745     069A                     __end_of_strstr:
 14746                           
 14747                           	psect	text31
 14748     0519                     __ptext31:	
 14749 ;; *************** function _strncmp *****************
 14750 ;; Defined at:
 14751 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
 14752 ;; Parameters:    Size  Location     Type
 14753 ;;  l               1    0[COMMON] PTR const unsigned char 
 14754 ;;		 -> statusBuffer(80), NULL(0), 
 14755 ;;  r               2    1[COMMON] PTR const unsigned char 
 14756 ;;		 -> STR_6(12), STR_4(11), 
 14757 ;;  n               2    3[COMMON] unsigned int 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;		None
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  2    0[COMMON] int 
 14762 ;; Registers used:
 14763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14769 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14773 ;;Total ram usage:        6 bytes
 14774 ;; Hardware stack levels used: 1
 14775 ;; Hardware stack levels required when called: 4
 14776 ;; This function calls:
 14777 ;;		Nothing
 14778 ;; This function is called by:
 14779 ;;		_strstr
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783     0519                     _strncmp:	
 14784                           ;psect for function _strncmp
 14785                           
 14786     0519                     l6021:	
 14787                           ;incstack = 0
 14788                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 14789                           
 14790     0519  3001               	movlw	1
 14791     051A  02F3               	subwf	strncmp@n,f
 14792     051B  3000               	movlw	0
 14793     051C  3BF4               	subwfb	strncmp@n+1,f
 14794     051D  0A73               	incf	strncmp@n,w
 14795     051E  1D03               	skipz
 14796     051F  2D24               	goto	u2391
 14797     0520  0A74               	incf	strncmp@n+1,w
 14798     0521  1D03               	btfss	3,2
 14799     0522  2D24               	goto	u2391
 14800     0523  2D25               	goto	u2390
 14801     0524                     u2391:
 14802     0524  2D32               	goto	l6033
 14803     0525                     u2390:
 14804     0525                     l6023:
 14805     0525  01F0               	clrf	?_strncmp
 14806     0526  01F1               	clrf	?_strncmp+1
 14807     0527  2D68               	goto	l2860
 14808     0528                     l6027:
 14809     0528  3001               	movlw	1
 14810     0529  07F0               	addwf	strncmp@l,f
 14811     052A                     l6029:
 14812     052A  3001               	movlw	1
 14813     052B  07F1               	addwf	strncmp@r,f
 14814     052C  3000               	movlw	0
 14815     052D  3DF2               	addwfc	strncmp@r+1,f
 14816     052E                     l6031:
 14817     052E  3001               	movlw	1
 14818     052F  02F3               	subwf	strncmp@n,f
 14819     0530  3000               	movlw	0
 14820     0531  3BF4               	subwfb	strncmp@n+1,f
 14821     0532                     l6033:
 14822     0532  0870               	movf	strncmp@l,w
 14823     0533  0086               	movwf	6
 14824     0534  3003               	movlw	3	; select bank6/7
 14825     0535  0087               	movwf	7
 14826     0536  0801               	movf	1,w
 14827     0537  1903               	btfsc	3,2
 14828     0538  2D3A               	goto	u2401
 14829     0539  2D3B               	goto	u2400
 14830     053A                     u2401:
 14831     053A  2D5A               	goto	l6041
 14832     053B                     u2400:
 14833     053B                     l6035:
 14834     053B  0871               	movf	strncmp@r,w
 14835     053C  0084               	movwf	4
 14836     053D  0872               	movf	strncmp@r+1,w
 14837     053E  0085               	movwf	5
 14838     053F  0012               	moviw fsr0++
 14839     0540  1903               	btfsc	3,2
 14840     0541  2D43               	goto	u2411
 14841     0542  2D44               	goto	u2410
 14842     0543                     u2411:
 14843     0543  2D5A               	goto	l6041
 14844     0544                     u2410:
 14845     0544                     l6037:
 14846     0544  0873               	movf	strncmp@n,w
 14847     0545  0474               	iorwf	strncmp@n+1,w
 14848     0546  1903               	btfsc	3,2
 14849     0547  2D49               	goto	u2421
 14850     0548  2D4A               	goto	u2420
 14851     0549                     u2421:
 14852     0549  2D5A               	goto	l6041
 14853     054A                     u2420:
 14854     054A                     l6039:
 14855     054A  0871               	movf	strncmp@r,w
 14856     054B  0084               	movwf	4
 14857     054C  0872               	movf	strncmp@r+1,w
 14858     054D  0085               	movwf	5
 14859     054E  0800               	movf	0,w	;code access
 14860     054F  00F5               	movwf	??_strncmp
 14861     0550  0870               	movf	strncmp@l,w
 14862     0551  0086               	movwf	6
 14863     0552  3003               	movlw	3	; select bank6/7
 14864     0553  0087               	movwf	7
 14865     0554  0801               	movf	1,w
 14866     0555  0675               	xorwf	??_strncmp,w
 14867     0556  1903               	skipnz
 14868     0557  2D59               	goto	u2431
 14869     0558  2D5A               	goto	u2430
 14870     0559                     u2431:
 14871     0559  2D28               	goto	l6027
 14872     055A                     u2430:
 14873     055A                     l6041:
 14874     055A  0870               	movf	strncmp@l,w
 14875     055B  0086               	movwf	6
 14876     055C  3003               	movlw	3	; select bank6/7
 14877     055D  0087               	movwf	7
 14878     055E  0871               	movf	strncmp@r,w
 14879     055F  0084               	movwf	4
 14880     0560  0872               	movf	strncmp@r+1,w
 14881     0561  0085               	movwf	5
 14882     0562  0800               	movf	0,w	;code access
 14883     0563  0201               	subwf	1,w
 14884     0564  00F0               	movwf	?_strncmp
 14885     0565  01F1               	clrf	?_strncmp+1
 14886     0566  1C03               	skipc
 14887     0567  03F1               	decf	?_strncmp+1,f
 14888     0568                     l2860:
 14889     0568  0008               	return
 14890     0569                     __end_of_strncmp:
 14891                           
 14892                           	psect	text32
 14893     0A3F                     __ptext32:	
 14894 ;; *************** function _strchr *****************
 14895 ;; Defined at:
 14896 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;  s               1    0[COMMON] PTR const unsigned char 
 14899 ;;		 -> statusBuffer(80), NULL(0), 
 14900 ;;  c               2    1[COMMON] int 
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    0[COMMON] PTR unsigned char 
 14905 ;; Registers used:
 14906 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14912 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14916 ;;Total ram usage:        3 bytes
 14917 ;; Hardware stack levels used: 1
 14918 ;; Hardware stack levels required when called: 4
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_strstr
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926     0A3F                     _strchr:	
 14927                           ;psect for function _strchr
 14928                           
 14929     0A3F                     l2853:	
 14930                           ;incstack = 0
 14931                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 14932                           
 14933     0A3F                     l6045:
 14934     0A3F  0870               	movf	strchr@s,w
 14935     0A40  0086               	movwf	6
 14936     0A41  3003               	movlw	3	; select bank6/7
 14937     0A42  0087               	movwf	7
 14938     0A43  0801               	movf	1,w
 14939     0A44  0671               	xorwf	strchr@c,w
 14940     0A45  1D03               	skipz
 14941     0A46  2A48               	goto	u2441
 14942     0A47  2A49               	goto	u2440
 14943     0A48                     u2441:
 14944     0A48  2A4B               	goto	l6051
 14945     0A49                     u2440:
 14946     0A49                     l6047:
 14947     0A49  0870               	movf	strchr@s,w
 14948     0A4A  2A56               	goto	l2855
 14949     0A4B                     l6051:
 14950     0A4B  0870               	movf	strchr@s,w
 14951     0A4C  0086               	movwf	6
 14952     0A4D  3003               	movlw	3	; select bank6/7
 14953     0A4E  0087               	movwf	7
 14954     0A4F  0AF0               	incf	strchr@s,f
 14955     0A50  0801               	movf	1,w
 14956     0A51  1D03               	btfss	3,2
 14957     0A52  2A54               	goto	u2451
 14958     0A53  2A55               	goto	u2450
 14959     0A54                     u2451:
 14960     0A54  2A3F               	goto	l2853
 14961     0A55                     u2450:
 14962     0A55                     l6053:
 14963     0A55  3000               	movlw	0
 14964     0A56                     l2855:
 14965     0A56  0008               	return
 14966     0A57                     __end_of_strchr:
 14967                           
 14968                           	psect	text33
 14969     0D71                     __ptext33:	
 14970 ;; *************** function _rn487x_PrintMessageStart *****************
 14971 ;; Defined at:
 14972 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;		None
 14975 ;; Auto vars:     Size  Location     Type
 14976 ;;		None
 14977 ;; Return value:  Size  Location     Type
 14978 ;;                  1    wreg      void 
 14979 ;; Registers used:
 14980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14981 ;; Tracked objects:
 14982 ;;		On entry : 0/0
 14983 ;;		On exit  : 0/0
 14984 ;;		Unchanged: 0/0
 14985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14990 ;;Total ram usage:        0 bytes
 14991 ;; Hardware stack levels used: 1
 14992 ;; Hardware stack levels required when called: 5
 14993 ;; This function calls:
 14994 ;;		_EUSART1_Write
 14995 ;; This function is called by:
 14996 ;;		_RN487X_MessageHandler
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000     0D71                     _rn487x_PrintMessageStart:	
 15001                           ;psect for function _rn487x_PrintMessageStart
 15002                           
 15003     0D71                     l6141:	
 15004                           ;incstack = 0
 15005                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15006                           
 15007                           
 15008                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 15009     0D71  303C               	movlw	60
 15010     0D72  00F0               	movwf	EUSART1_Write@txData
 15011     0D73  3002               	movlw	low ((_uart+2)| (0+32768))
 15012     0D74  0084               	movwf	4
 15013     0D75  3090               	movlw	high ((_uart+2)| (0+32768))
 15014     0D76  0085               	movwf	5
 15015     0D77  3F01               	moviw [1]fsr0
 15016     0D78  008A               	movwf	10
 15017     0D79  3F00               	moviw [0]fsr0
 15018     0D7A  000A               	callw
 15019     0D7B  318D               	pagesel	$
 15020                           
 15021                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 15022     0D7C  303C               	movlw	60
 15023     0D7D  00F0               	movwf	EUSART1_Write@txData
 15024     0D7E  3002               	movlw	low ((_uart+2)| (0+32768))
 15025     0D7F  0084               	movwf	4
 15026     0D80  3090               	movlw	high ((_uart+2)| (0+32768))
 15027     0D81  0085               	movwf	5
 15028     0D82  3F01               	moviw [1]fsr0
 15029     0D83  008A               	movwf	10
 15030     0D84  3F00               	moviw [0]fsr0
 15031     0D85  000A               	callw
 15032     0D86  318D               	pagesel	$
 15033                           
 15034                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 15035     0D87  303C               	movlw	60
 15036     0D88  00F0               	movwf	EUSART1_Write@txData
 15037     0D89  3002               	movlw	low ((_uart+2)| (0+32768))
 15038     0D8A  0084               	movwf	4
 15039     0D8B  3090               	movlw	high ((_uart+2)| (0+32768))
 15040     0D8C  0085               	movwf	5
 15041     0D8D  3F01               	moviw [1]fsr0
 15042     0D8E  008A               	movwf	10
 15043     0D8F  3F00               	moviw [0]fsr0
 15044     0D90  000A               	callw
 15045     0D91  318D               	pagesel	$
 15046                           
 15047                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 15048     0D92  3020               	movlw	32
 15049     0D93  00F0               	movwf	EUSART1_Write@txData
 15050     0D94  3002               	movlw	low ((_uart+2)| (0+32768))
 15051     0D95  0084               	movwf	4
 15052     0D96  3090               	movlw	high ((_uart+2)| (0+32768))
 15053     0D97  0085               	movwf	5
 15054     0D98  3F01               	moviw [1]fsr0
 15055     0D99  008A               	movwf	10
 15056     0D9A  3F00               	moviw [0]fsr0
 15057     0D9B  000A               	callw
 15058     0D9C  318D               	pagesel	$
 15059     0D9D                     l950:
 15060     0D9D  0008               	return
 15061     0D9E                     __end_of_rn487x_PrintMessageStart:
 15062                           
 15063                           	psect	text34
 15064     05B9                     __ptext34:	
 15065 ;; *************** function _rn487x_PrintMessageEnd *****************
 15066 ;; Defined at:
 15067 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;		None
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;		None
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;Total ram usage:        0 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; Hardware stack levels required when called: 5
 15088 ;; This function calls:
 15089 ;;		_EUSART1_Write
 15090 ;; This function is called by:
 15091 ;;		_RN487X_MessageHandler
 15092 ;; This function uses a non-reentrant model
 15093 ;;
 15094                           
 15095     05B9                     _rn487x_PrintMessageEnd:	
 15096                           ;psect for function _rn487x_PrintMessageEnd
 15097                           
 15098     05B9                     l6143:	
 15099                           ;incstack = 0
 15100                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15101                           
 15102                           
 15103                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 15104     05B9  3020               	movlw	32
 15105     05BA  00F0               	movwf	EUSART1_Write@txData
 15106     05BB  3002               	movlw	low ((_uart+2)| (0+32768))
 15107     05BC  0084               	movwf	4
 15108     05BD  3090               	movlw	high ((_uart+2)| (0+32768))
 15109     05BE  0085               	movwf	5
 15110     05BF  3F01               	moviw [1]fsr0
 15111     05C0  008A               	movwf	10
 15112     05C1  3F00               	moviw [0]fsr0
 15113     05C2  000A               	callw
 15114     05C3  3185               	pagesel	$
 15115                           
 15116                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 15117     05C4  303E               	movlw	62
 15118     05C5  00F0               	movwf	EUSART1_Write@txData
 15119     05C6  3002               	movlw	low ((_uart+2)| (0+32768))
 15120     05C7  0084               	movwf	4
 15121     05C8  3090               	movlw	high ((_uart+2)| (0+32768))
 15122     05C9  0085               	movwf	5
 15123     05CA  3F01               	moviw [1]fsr0
 15124     05CB  008A               	movwf	10
 15125     05CC  3F00               	moviw [0]fsr0
 15126     05CD  000A               	callw
 15127     05CE  3185               	pagesel	$
 15128                           
 15129                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 15130     05CF  303E               	movlw	62
 15131     05D0  00F0               	movwf	EUSART1_Write@txData
 15132     05D1  3002               	movlw	low ((_uart+2)| (0+32768))
 15133     05D2  0084               	movwf	4
 15134     05D3  3090               	movlw	high ((_uart+2)| (0+32768))
 15135     05D4  0085               	movwf	5
 15136     05D5  3F01               	moviw [1]fsr0
 15137     05D6  008A               	movwf	10
 15138     05D7  3F00               	moviw [0]fsr0
 15139     05D8  000A               	callw
 15140     05D9  3185               	pagesel	$
 15141                           
 15142                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 15143     05DA  303E               	movlw	62
 15144     05DB  00F0               	movwf	EUSART1_Write@txData
 15145     05DC  3002               	movlw	low ((_uart+2)| (0+32768))
 15146     05DD  0084               	movwf	4
 15147     05DE  3090               	movlw	high ((_uart+2)| (0+32768))
 15148     05DF  0085               	movwf	5
 15149     05E0  3F01               	moviw [1]fsr0
 15150     05E1  008A               	movwf	10
 15151     05E2  3F00               	moviw [0]fsr0
 15152     05E3  000A               	callw
 15153     05E4  3185               	pagesel	$
 15154                           
 15155                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 15156     05E5  3020               	movlw	32
 15157     05E6  00F0               	movwf	EUSART1_Write@txData
 15158     05E7  3002               	movlw	low ((_uart+2)| (0+32768))
 15159     05E8  0084               	movwf	4
 15160     05E9  3090               	movlw	high ((_uart+2)| (0+32768))
 15161     05EA  0085               	movwf	5
 15162     05EB  3F01               	moviw [1]fsr0
 15163     05EC  008A               	movwf	10
 15164     05ED  3F00               	moviw [0]fsr0
 15165     05EE  000A               	callw
 15166     05EF  3185               	pagesel	$
 15167                           
 15168                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 15169     05F0  300D               	movlw	13
 15170     05F1  00F0               	movwf	EUSART1_Write@txData
 15171     05F2  3002               	movlw	low ((_uart+2)| (0+32768))
 15172     05F3  0084               	movwf	4
 15173     05F4  3090               	movlw	high ((_uart+2)| (0+32768))
 15174     05F5  0085               	movwf	5
 15175     05F6  3F01               	moviw [1]fsr0
 15176     05F7  008A               	movwf	10
 15177     05F8  3F00               	moviw [0]fsr0
 15178     05F9  000A               	callw
 15179     05FA  3185               	pagesel	$
 15180                           
 15181                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 15182     05FB  300A               	movlw	10
 15183     05FC  00F0               	movwf	EUSART1_Write@txData
 15184     05FD  3002               	movlw	low ((_uart+2)| (0+32768))
 15185     05FE  0084               	movwf	4
 15186     05FF  3090               	movlw	high ((_uart+2)| (0+32768))
 15187     0600  0085               	movwf	5
 15188     0601  3F01               	moviw [1]fsr0
 15189     0602  008A               	movwf	10
 15190     0603  3F00               	moviw [0]fsr0
 15191     0604  000A               	callw
 15192     0605  3185               	pagesel	$
 15193     0606                     l953:
 15194     0606  0008               	return
 15195     0607                     __end_of_rn487x_PrintMessageEnd:
 15196                           
 15197                           	psect	text35
 15198     0DFE                     __ptext35:	
 15199 ;; *************** function _rn487x_PrintMessage *****************
 15200 ;; Defined at:
 15201 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;  passedMessag    1    5[COMMON] PTR unsigned char 
 15204 ;;		 -> statusBuffer(80), NULL(0), 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 15207 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  1    wreg      void 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/0
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15217 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15218 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15220 ;;      Totals:         2      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15221 ;;Total ram usage:       35 bytes
 15222 ;; Hardware stack levels used: 1
 15223 ;; Hardware stack levels required when called: 5
 15224 ;; This function calls:
 15225 ;;		_EUSART1_Write
 15226 ;;		_strcpy
 15227 ;;		_strlen
 15228 ;; This function is called by:
 15229 ;;		_RN487X_MessageHandler
 15230 ;; This function uses a non-reentrant model
 15231 ;;
 15232                           
 15233     0DFE                     _rn487x_PrintMessage:	
 15234                           ;psect for function _rn487x_PrintMessage
 15235                           
 15236     0DFE                     l6153:	
 15237                           ;incstack = 0
 15238                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15239                           
 15240                           
 15241                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 15242     0DFE  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 15243     0DFF  00F0               	movwf	strcpy@dest
 15244     0E00  0875               	movf	rn487x_PrintMessage@passedMessage,w
 15245     0E01  00F1               	movwf	strcpy@src
 15246     0E02  3188  20B6  318D   	fcall	_strcpy
 15247     0E05                     l6155:
 15248                           
 15249                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 15250     0E05  0140               	movlb	0	; select bank0
 15251     0E06  01C0               	clrf	rn487x_PrintMessage@messageIndex
 15252     0E07  2E1A               	goto	l6161
 15253     0E08                     l6157:
 15254                           
 15255                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 15256     0E08  0840               	movf	rn487x_PrintMessage@messageIndex,w
 15257     0E09  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 15258     0E0A  0086               	movwf	6
 15259     0E0B  0187               	clrf	7
 15260     0E0C  0801               	movf	1,w
 15261     0E0D  00F0               	movwf	EUSART1_Write@txData
 15262     0E0E  3002               	movlw	low ((_uart+2)| (0+32768))
 15263     0E0F  0084               	movwf	4
 15264     0E10  3090               	movlw	high ((_uart+2)| (0+32768))
 15265     0E11  0085               	movwf	5
 15266     0E12  3F01               	moviw [1]fsr0
 15267     0E13  008A               	movwf	10
 15268     0E14  3F00               	moviw [0]fsr0
 15269     0E15  000A               	callw
 15270     0E16  318D               	pagesel	$
 15271     0E17                     l6159:
 15272                           
 15273                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 15274     0E17  3001               	movlw	1
 15275     0E18  0140               	movlb	0	; select bank0
 15276     0E19  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 15277     0E1A                     l6161:
 15278     0E1A  0875               	movf	rn487x_PrintMessage@passedMessage,w
 15279     0E1B  00F0               	movwf	strlen@s
 15280     0E1C  39FF               	andlw	255
 15281     0E1D  1D03               	skipz
 15282     0E1E  3003               	movlw	3
 15283     0E1F  00F1               	movwf	strlen@s+1
 15284     0E20  318A  2257  318D   	fcall	_strlen
 15285     0E23  0140               	movlb	0	; select bank0
 15286     0E24  0840               	movf	rn487x_PrintMessage@messageIndex,w
 15287     0E25  00F6               	movwf	??_rn487x_PrintMessage
 15288     0E26  0871               	movf	?_strlen+1,w
 15289     0E27  1D03               	skipz
 15290     0E28  2E2B               	goto	u2545
 15291     0E29  0870               	movf	?_strlen,w
 15292     0E2A  0276               	subwf	??_rn487x_PrintMessage,w
 15293     0E2B                     u2545:
 15294     0E2B  1C03               	skipc
 15295     0E2C  2E2E               	goto	u2541
 15296     0E2D  2E2F               	goto	u2540
 15297     0E2E                     u2541:
 15298     0E2E  2E08               	goto	l6157
 15299     0E2F                     u2540:
 15300     0E2F                     l966:
 15301     0E2F  0008               	return
 15302     0E30                     __end_of_rn487x_PrintMessage:
 15303                           
 15304                           	psect	text36
 15305     08B6                     __ptext36:	
 15306 ;; *************** function _strcpy *****************
 15307 ;; Defined at:
 15308 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 15309 ;; Parameters:    Size  Location     Type
 15310 ;;  dest            1    0[COMMON] PTR unsigned char 
 15311 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 15312 ;;  src             1    1[COMMON] PTR const unsigned char 
 15313 ;;		 -> statusBuffer(80), NULL(0), 
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;  d               1    2[COMMON] PTR unsigned char 
 15316 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    0[COMMON] PTR unsigned char 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;Total ram usage:        3 bytes
 15331 ;; Hardware stack levels used: 1
 15332 ;; Hardware stack levels required when called: 4
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_rn487x_PrintMessage
 15337 ;; This function uses a non-reentrant model
 15338 ;;
 15339                           
 15340     08B6                     _strcpy:	
 15341                           ;psect for function _strcpy
 15342                           
 15343     08B6                     l6017:	
 15344                           ;incstack = 0
 15345                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 15346                           
 15347     08B6  0870               	movf	strcpy@dest,w
 15348     08B7  00F2               	movwf	strcpy@d
 15349     08B8                     l6019:
 15350     08B8  0872               	movf	strcpy@d,w
 15351     08B9  0086               	movwf	6
 15352     08BA  0187               	clrf	7
 15353     08BB  0AF2               	incf	strcpy@d,f
 15354     08BC  0871               	movf	strcpy@src,w
 15355     08BD  0084               	movwf	4
 15356     08BE  3003               	movlw	3	; select bank6/7
 15357     08BF  0085               	movwf	5
 15358     08C0  0AF1               	incf	strcpy@src,f
 15359     08C1  0800               	movf	0,w
 15360     08C2  3FC0               	movwi [0]fsr1
 15361     08C3  0889               	movf	9,f
 15362     08C4  1D03               	btfss	3,2
 15363     08C5  28C7               	goto	u2381
 15364     08C6  28C8               	goto	u2380
 15365     08C7                     u2381:
 15366     08C7  28B8               	goto	l6019
 15367     08C8                     u2380:
 15368     08C8                     l2828:
 15369     08C8  0008               	return
 15370     08C9                     __end_of_strcpy:
 15371                           
 15372                           	psect	text37
 15373     0B77                     __ptext37:	
 15374 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 15375 ;; Defined at:
 15376 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;  messageType     1    wreg     enum E13210
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;  messageType     1    1[COMMON] enum E13210
 15381 ;; Return value:  Size  Location     Type
 15382 ;;                  1    wreg      void 
 15383 ;; Registers used:
 15384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15394 ;;Total ram usage:        1 bytes
 15395 ;; Hardware stack levels used: 1
 15396 ;; Hardware stack levels required when called: 5
 15397 ;; This function calls:
 15398 ;;		_EUSART1_Write
 15399 ;; This function is called by:
 15400 ;;		_RN487X_MessageHandler
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404     0B77                     _rn487x_PrintIndicatorCharacters:	
 15405                           ;psect for function _rn487x_PrintIndicatorCharacters
 15406                           
 15407                           
 15408                           ;incstack = 0
 15409                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 15410                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 15411     0B77  00F1               	movwf	rn487x_PrintIndicatorCharacters@messageType
 15412     0B78                     l6145:
 15413                           
 15414                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 15415     0B78  0871               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 15416     0B79  1D03               	btfss	3,2
 15417     0B7A  2B7C               	goto	u2521
 15418     0B7B  2B7D               	goto	u2520
 15419     0B7C                     u2521:
 15420     0B7C  2B89               	goto	l6149
 15421     0B7D                     u2520:
 15422     0B7D                     l6147:
 15423                           
 15424                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 15425     0B7D  305B               	movlw	91
 15426     0B7E  00F0               	movwf	EUSART1_Write@txData
 15427     0B7F  3002               	movlw	low ((_uart+2)| (0+32768))
 15428     0B80  0084               	movwf	4
 15429     0B81  3090               	movlw	high ((_uart+2)| (0+32768))
 15430     0B82  0085               	movwf	5
 15431     0B83  3F01               	moviw [1]fsr0
 15432     0B84  008A               	movwf	10
 15433     0B85  3F00               	moviw [0]fsr0
 15434     0B86  000A               	callw
 15435     0B87  318B               	pagesel	$
 15436                           
 15437                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 15438     0B88  2B99               	goto	l960
 15439     0B89                     l6149:
 15440     0B89  0371               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 15441     0B8A  1D03               	btfss	3,2
 15442     0B8B  2B8D               	goto	u2531
 15443     0B8C  2B8E               	goto	u2530
 15444     0B8D                     u2531:
 15445     0B8D  2B99               	goto	l960
 15446     0B8E                     u2530:
 15447     0B8E                     l6151:
 15448                           
 15449                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 15450     0B8E  305D               	movlw	93
 15451     0B8F  00F0               	movwf	EUSART1_Write@txData
 15452     0B90  3002               	movlw	low ((_uart+2)| (0+32768))
 15453     0B91  0084               	movwf	4
 15454     0B92  3090               	movlw	high ((_uart+2)| (0+32768))
 15455     0B93  0085               	movwf	5
 15456     0B94  3F01               	moviw [1]fsr0
 15457     0B95  008A               	movwf	10
 15458     0B96  3F00               	moviw [0]fsr0
 15459     0B97  000A               	callw
 15460     0B98  318B               	pagesel	$
 15461     0B99                     l960:	
 15462                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 15463                           
 15464     0B99  0008               	return
 15465     0B9A                     __end_of_rn487x_PrintIndicatorCharacters:
 15466                           
 15467                           	psect	text38
 15468     1634                     __ptext38:	
 15469 ;; *************** function _RN487X_IsConnected *****************
 15470 ;; Defined at:
 15471 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;		None
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      _Bool 
 15478 ;; Registers used:
 15479 ;;		wreg
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15489 ;;Total ram usage:        0 bytes
 15490 ;; Hardware stack levels used: 1
 15491 ;; Hardware stack levels required when called: 4
 15492 ;; This function calls:
 15493 ;;		Nothing
 15494 ;; This function is called by:
 15495 ;;		_main
 15496 ;;		_RN487X_Example_TransparentUart
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500     1634                     _RN487X_IsConnected:	
 15501                           ;psect for function _RN487X_IsConnected
 15502                           
 15503     1634                     l7015:	
 15504                           ;incstack = 0
 15505                           ; Regs used in _RN487X_IsConnected: [wreg]
 15506                           
 15507                           
 15508                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 15509     1634  0140               	movlb	0	; select bank0
 15510     1635  085F               	movf	_connected,w
 15511     1636                     l901:
 15512     1636  0008               	return
 15513     1637                     __end_of_RN487X_IsConnected:
 15514                           
 15515                           	psect	text39
 15516     040F                     __ptext39:	
 15517 ;; *************** function _RN487X_Init *****************
 15518 ;; Defined at:
 15519 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      _Bool 
 15526 ;; Registers used:
 15527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used: 1
 15539 ;; Hardware stack levels required when called: 6
 15540 ;; This function calls:
 15541 ;;		_RN487X_Delay
 15542 ;;		_RN487X_IndicateRx
 15543 ;;		_RN487X_Read@rn487x_interface$F1569
 15544 ;;		_RN487X_Reset
 15545 ;;		_RN487X_SetSystemMode
 15546 ;;		_RN487X_is_rx_ready
 15547 ;; This function is called by:
 15548 ;;		_main
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552     040F                     _RN487X_Init:	
 15553                           ;psect for function _RN487X_Init
 15554                           
 15555     040F                     l7029:	
 15556                           ;incstack = 0
 15557                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15558                           
 15559                           
 15560                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 15561     040F  01F0               	clrf	RN487X_SetSystemMode@mode
 15562     0410  0AF0               	incf	RN487X_SetSystemMode@mode,f
 15563     0411  3074               	movlw	low ((_RN487X+12)| (0+32768))
 15564     0412  0084               	movwf	4
 15565     0413  3090               	movlw	high ((_RN487X+12)| (0+32768))
 15566     0414  0085               	movwf	5
 15567     0415  3F01               	moviw [1]fsr0
 15568     0416  008A               	movwf	10
 15569     0417  3F00               	moviw [0]fsr0
 15570     0418  000A               	callw
 15571     0419  3184               	pagesel	$
 15572                           
 15573                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 15574     041A  01F0               	clrf	RN487X_Reset@value
 15575     041B  0AF0               	incf	RN487X_Reset@value,f
 15576     041C  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15577     041D  0084               	movwf	4
 15578     041E  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15579     041F  0085               	movwf	5
 15580     0420  3F01               	moviw [1]fsr0
 15581     0421  008A               	movwf	10
 15582     0422  3F00               	moviw [0]fsr0
 15583     0423  000A               	callw
 15584     0424  3184               	pagesel	$
 15585                           
 15586                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 15587     0425  3001               	movlw	1
 15588     0426  00F2               	movwf	RN487X_Delay@delayCount
 15589     0427  3000               	movlw	0
 15590     0428  00F3               	movwf	RN487X_Delay@delayCount+1
 15591     0429  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15592     042A  0084               	movwf	4
 15593     042B  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15594     042C  0085               	movwf	5
 15595     042D  3F01               	moviw [1]fsr0
 15596     042E  008A               	movwf	10
 15597     042F  3F00               	moviw [0]fsr0
 15598     0430  000A               	callw
 15599     0431  3184               	pagesel	$
 15600                           
 15601                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 15602     0432  01F0               	clrf	RN487X_Reset@value
 15603     0433  3072               	movlw	low ((_RN487X+10)| (0+32768))
 15604     0434  0084               	movwf	4
 15605     0435  3090               	movlw	high ((_RN487X+10)| (0+32768))
 15606     0436  0085               	movwf	5
 15607     0437  3F01               	moviw [1]fsr0
 15608     0438  008A               	movwf	10
 15609     0439  3F00               	moviw [0]fsr0
 15610     043A  000A               	callw
 15611     043B  3184               	pagesel	$
 15612                           
 15613                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 15614     043C  01F0               	clrf	RN487X_IndicateRx@value
 15615     043D  0AF0               	incf	RN487X_IndicateRx@value,f
 15616     043E  3070               	movlw	low ((_RN487X+8)| (0+32768))
 15617     043F  0084               	movwf	4
 15618     0440  3090               	movlw	high ((_RN487X+8)| (0+32768))
 15619     0441  0085               	movwf	5
 15620     0442  3F01               	moviw [1]fsr0
 15621     0443  008A               	movwf	10
 15622     0444  3F00               	moviw [0]fsr0
 15623     0445  000A               	callw
 15624     0446  3184               	pagesel	$
 15625                           
 15626                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 15627     0447  30C8               	movlw	200
 15628     0448  00F2               	movwf	RN487X_Delay@delayCount
 15629     0449  3000               	movlw	0
 15630     044A  00F3               	movwf	RN487X_Delay@delayCount+1
 15631     044B  3076               	movlw	low ((_RN487X+14)| (0+32768))
 15632     044C  0084               	movwf	4
 15633     044D  3090               	movlw	high ((_RN487X+14)| (0+32768))
 15634     044E  0085               	movwf	5
 15635     044F  3F01               	moviw [1]fsr0
 15636     0450  008A               	movwf	10
 15637     0451  3F00               	moviw [0]fsr0
 15638     0452  000A               	callw
 15639     0453  3184               	pagesel	$
 15640                           
 15641                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15642     0454  2C5E               	goto	l7033
 15643     0455                     l7031:
 15644                           
 15645                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 15646     0455  306A               	movlw	low ((_RN487X+2)| (0+32768))
 15647     0456  0084               	movwf	4
 15648     0457  3090               	movlw	high ((_RN487X+2)| (0+32768))
 15649     0458  0085               	movwf	5
 15650     0459  3F01               	moviw [1]fsr0
 15651     045A  008A               	movwf	10
 15652     045B  3F00               	moviw [0]fsr0
 15653     045C  000A               	callw
 15654     045D  3184               	pagesel	$
 15655     045E                     l7033:
 15656                           
 15657                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 15658     045E  306E               	movlw	low ((_RN487X+6)| (0+32768))
 15659     045F  0084               	movwf	4
 15660     0460  3090               	movlw	high ((_RN487X+6)| (0+32768))
 15661     0461  0085               	movwf	5
 15662     0462  3F01               	moviw [1]fsr0
 15663     0463  008A               	movwf	10
 15664     0464  3F00               	moviw [0]fsr0
 15665     0465  000A               	callw
 15666     0466  3184               	pagesel	$
 15667     0467  3A00               	xorlw	0
 15668     0468  1D03               	skipz
 15669     0469  2C6B               	goto	u3171
 15670     046A  2C6C               	goto	u3170
 15671     046B                     u3171:
 15672     046B  2C55               	goto	l7031
 15673     046C                     u3170:
 15674     046C                     l761:
 15675     046C  0008               	return
 15676     046D                     __end_of_RN487X_Init:
 15677                           
 15678                           	psect	text40
 15679     1754                     __ptext40:	
 15680 ;; *************** function _RN487X_is_rx_ready *****************
 15681 ;; Defined at:
 15682 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;		None
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;		None
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  1    wreg      _Bool 
 15689 ;; Registers used:
 15690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15691 ;; Tracked objects:
 15692 ;;		On entry : 0/0
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15700 ;;Total ram usage:        0 bytes
 15701 ;; Hardware stack levels used: 1
 15702 ;; Hardware stack levels required when called: 5
 15703 ;; This function calls:
 15704 ;;		_EUSART1_is_rx_ready
 15705 ;; This function is called by:
 15706 ;;		_RN487X_DataReady
 15707 ;;		_RN487X_Init
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711     1754                     _RN487X_is_rx_ready:	
 15712                           ;psect for function _RN487X_is_rx_ready
 15713                           
 15714     1754                     l6343:	
 15715                           ;incstack = 0
 15716                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15717                           
 15718                           
 15719                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 15720     1754  301A               	movlw	low ((_uart+26)| (0+32768))
 15721     1755  0084               	movwf	4
 15722     1756  3090               	movlw	high ((_uart+26)| (0+32768))
 15723     1757  0085               	movwf	5
 15724     1758  3F01               	moviw [1]fsr0
 15725     1759  008A               	movwf	10
 15726     175A  3F00               	moviw [0]fsr0
 15727     175B  000A               	callw
 15728     175C  3197               	pagesel	$
 15729     175D                     l913:
 15730     175D  0008               	return
 15731     175E                     __end_of_RN487X_is_rx_ready:
 15732                           
 15733                           	psect	text41
 15734     172E                     __ptext41:	
 15735 ;; *************** function _EUSART1_is_rx_ready *****************
 15736 ;; Defined at:
 15737 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 15738 ;; Parameters:    Size  Location     Type
 15739 ;;		None
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;		None
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      _Bool 
 15744 ;; Registers used:
 15745 ;;		wreg, status,2, status,0
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15755 ;;Total ram usage:        0 bytes
 15756 ;; Hardware stack levels used: 1
 15757 ;; Hardware stack levels required when called: 4
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_RN487X_is_rx_ready
 15762 ;;		_RN487X_Example_TransparentUart
 15763 ;;		_main
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767     172E                     _EUSART1_is_rx_ready:	
 15768                           ;psect for function _EUSART1_is_rx_ready
 15769                           
 15770     172E                     l6237:	
 15771                           ;incstack = 0
 15772                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15773                           
 15774                           
 15775                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 15776     172E  0140               	movlb	0	; select bank0
 15777     172F  0855               	movf	_eusart1RxCount,w	;volatile
 15778     1730  1D03               	btfss	3,2
 15779     1731  2F33               	goto	u2691
 15780     1732  2F35               	goto	u2690
 15781     1733                     u2691:
 15782     1733  3001               	movlw	1
 15783     1734  2F36               	goto	u2700
 15784     1735                     u2690:
 15785     1735  3000               	movlw	0
 15786     1736                     u2700:
 15787     1736                     l1757:
 15788     1736  0008               	return
 15789     1737                     __end_of_EUSART1_is_rx_ready:
 15790                           
 15791                           	psect	text42
 15792     17A0                     __ptext42:	
 15793 ;; *************** function _RN487X_SetSystemMode *****************
 15794 ;; Defined at:
 15795 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;  mode            1    0[COMMON] enum E204
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;		None
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		wreg, status,2, status,0
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;Total ram usage:        1 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; Hardware stack levels required when called: 4
 15816 ;; This function calls:
 15817 ;;		Nothing
 15818 ;; This function is called by:
 15819 ;;		_RN487X_Init
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823     17A0                     _RN487X_SetSystemMode:	
 15824                           ;psect for function _RN487X_SetSystemMode
 15825                           
 15826     17A0                     l937:	
 15827                           ;incstack = 0
 15828                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 15829                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 15830                           
 15831     17A0  0140               	movlb	0	; select bank0
 15832     17A1  1392               	bcf	18,7	;volatile
 15833     17A2                     l6509:
 15834                           
 15835                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 15836     17A2  0370               	decf	RN487X_SetSystemMode@mode,w
 15837     17A3  1D03               	btfss	3,2
 15838     17A4  2FA6               	goto	u2941
 15839     17A5  2FA7               	goto	u2940
 15840     17A6                     u2941:
 15841     17A6  2FA9               	goto	l943
 15842     17A7                     u2940:
 15843     17A7                     l940:	
 15844                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 15845                           
 15846     17A7  1798               	bsf	24,7	;volatile
 15847     17A8  2FAA               	goto	l945
 15848     17A9                     l943:	
 15849                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 15850                           
 15851     17A9  1398               	bcf	24,7	;volatile
 15852     17AA                     l945:	
 15853                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 15854                           
 15855     17AA  1792               	bsf	18,7	;volatile
 15856     17AB                     l947:
 15857     17AB  0008               	return
 15858     17AC                     __end_of_RN487X_SetSystemMode:
 15859                           
 15860                           	psect	text43
 15861     177D                     __ptext43:	
 15862 ;; *************** function _RN487X_Reset *****************
 15863 ;; Defined at:
 15864 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  value           1    0[COMMON] _Bool 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;		None
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  1    wreg      void 
 15871 ;; Registers used:
 15872 ;;		wreg, status,2, status,0
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15882 ;;Total ram usage:        1 bytes
 15883 ;; Hardware stack levels used: 1
 15884 ;; Hardware stack levels required when called: 4
 15885 ;; This function calls:
 15886 ;;		Nothing
 15887 ;; This function is called by:
 15888 ;;		_RN487X_Init
 15889 ;; This function uses a non-reentrant model
 15890 ;;
 15891                           
 15892     177D                     _RN487X_Reset:	
 15893                           ;psect for function _RN487X_Reset
 15894                           
 15895     177D                     l6505:	
 15896                           ;incstack = 0
 15897                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 15898                           
 15899                           
 15900                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 15901     177D  0370               	decf	RN487X_Reset@value,w
 15902     177E  1D03               	btfss	3,2
 15903     177F  2F81               	goto	u2921
 15904     1780  2F82               	goto	u2920
 15905     1781                     u2921:
 15906     1781  2F85               	goto	l923
 15907     1782                     u2920:
 15908     1782                     l920:	
 15909                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 15910                           
 15911     1782  0140               	movlb	0	; select bank0
 15912     1783  1018               	bcf	24,0	;volatile
 15913     1784  2F87               	goto	l925
 15914     1785                     l923:	
 15915                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 15916                           
 15917     1785  0140               	movlb	0	; select bank0
 15918     1786  1418               	bsf	24,0	;volatile
 15919     1787                     l925:
 15920     1787  0008               	return
 15921     1788                     __end_of_RN487X_Reset:
 15922                           
 15923                           	psect	text44
 15924     1772                     __ptext44:	
 15925 ;; *************** function _RN487X_IndicateRx *****************
 15926 ;; Defined at:
 15927 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;  value           1    0[COMMON] _Bool 
 15930 ;; Auto vars:     Size  Location     Type
 15931 ;;		None
 15932 ;; Return value:  Size  Location     Type
 15933 ;;                  1    wreg      void 
 15934 ;; Registers used:
 15935 ;;		wreg, status,2, status,0
 15936 ;; Tracked objects:
 15937 ;;		On entry : 0/0
 15938 ;;		On exit  : 0/0
 15939 ;;		Unchanged: 0/0
 15940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15945 ;;Total ram usage:        1 bytes
 15946 ;; Hardware stack levels used: 1
 15947 ;; Hardware stack levels required when called: 4
 15948 ;; This function calls:
 15949 ;;		Nothing
 15950 ;; This function is called by:
 15951 ;;		_RN487X_Init
 15952 ;; This function uses a non-reentrant model
 15953 ;;
 15954                           
 15955     1772                     _RN487X_IndicateRx:	
 15956                           ;psect for function _RN487X_IndicateRx
 15957                           
 15958     1772                     l6507:	
 15959                           ;incstack = 0
 15960                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 15961                           
 15962                           
 15963                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 15964     1772  0370               	decf	RN487X_IndicateRx@value,w
 15965     1773  1D03               	btfss	3,2
 15966     1774  2F76               	goto	u2931
 15967     1775  2F77               	goto	u2930
 15968     1776                     u2931:
 15969     1776  2F7A               	goto	l932
 15970     1777                     u2930:
 15971     1777                     l929:	
 15972                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 15973                           
 15974     1777  0140               	movlb	0	; select bank0
 15975     1778  131A               	bcf	26,6	;volatile
 15976     1779  2F7C               	goto	l934
 15977     177A                     l932:	
 15978                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 15979                           
 15980     177A  0140               	movlb	0	; select bank0
 15981     177B  171A               	bsf	26,6	;volatile
 15982     177C                     l934:
 15983     177C  0008               	return
 15984     177D                     __end_of_RN487X_IndicateRx:
 15985                           
 15986                           	psect	text45
 15987     0A27                     __ptext45:	
 15988 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 15989 ;; Defined at:
 15990 ;;		line 316 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;		None
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;  payload         5   25[BANK0 ] unsigned char [5]
 15995 ;;  temperature     2   30[BANK0 ] short 
 15996 ;; Return value:  Size  Location     Type
 15997 ;;                  1    wreg      void 
 15998 ;; Registers used:
 15999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16000 ;; Tracked objects:
 16001 ;;		On entry : 0/0
 16002 ;;		On exit  : 0/0
 16003 ;;		Unchanged: 0/0
 16004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16006 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16008 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16009 ;;Total ram usage:        7 bytes
 16010 ;; Hardware stack levels used: 1
 16011 ;; Hardware stack levels required when called: 15
 16012 ;; This function calls:
 16013 ;;		_LIGHTBLUE_SendPacket
 16014 ;;		_LIGHTBLUE_SplitWord
 16015 ;;		_MCP9844_GetTemperatureValue
 16016 ;; This function is called by:
 16017 ;;		_main
 16018 ;; This function uses a non-reentrant model
 16019 ;;
 16020                           
 16021     0A27                     _LIGHTBLUE_TemperatureSensor:	
 16022                           ;psect for function _LIGHTBLUE_TemperatureSensor
 16023                           
 16024     0A27                     l8501:	
 16025                           ;incstack = 0
 16026                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16027                           
 16028                           
 16029                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 319:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 321:     *payload = '\0';
 16030     0A27  0140               	movlb	0	; select bank0
 16031     0A28  01B9               	clrf	LIGHTBLUE_TemperatureSensor@payload
 16032     0A29                     l8503:
 16033                           
 16034                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 322:     MCP9844_GetTemperatureVal
      +                          ue(&temperature);
 16035     0A29  303E               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 16036     0A2A  00B8               	movwf	MCP9844_GetTemperatureValue@temperature
 16037     0A2B  3197  2794  318A   	fcall	_MCP9844_GetTemperatureValue
 16038     0A2E                     l8505:
 16039                           
 16040                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 324:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 16041     0A2E  3039               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 16042     0A2F  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 16043     0A30  0140               	movlb	0	; select bank0
 16044     0A31  083F               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 16045     0A32  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 16046     0A33  083E               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 16047     0A34  00F9               	movwf	LIGHTBLUE_SplitWord@value
 16048     0A35  3188  200D  318A   	fcall	_LIGHTBLUE_SplitWord
 16049     0A38                     l8507:
 16050                           
 16051                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 326:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 16052     0A38  3039               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 16053     0A39  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16054     0A3A  3054               	movlw	84
 16055     0A3B  3183  2387  318A   	fcall	_LIGHTBLUE_SendPacket
 16056     0A3E                     l56:
 16057     0A3E  0008               	return
 16058     0A3F                     __end_of_LIGHTBLUE_TemperatureSensor:
 16059                           
 16060                           	psect	text46
 16061     1794                     __ptext46:	
 16062 ;; *************** function _MCP9844_GetTemperatureValue *****************
 16063 ;; Defined at:
 16064 ;;		line 70 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 16065 ;; Parameters:    Size  Location     Type
 16066 ;;  temperature     1   24[BANK0 ] PTR short 
 16067 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;		None
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  1    wreg      void 
 16072 ;; Registers used:
 16073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16079 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16083 ;;Total ram usage:        1 bytes
 16084 ;; Hardware stack levels used: 1
 16085 ;; Hardware stack levels required when called: 14
 16086 ;; This function calls:
 16087 ;;		_MCP9844_CalcTemperature
 16088 ;; This function is called by:
 16089 ;;		_LIGHTBLUE_TemperatureSensor
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093     1794                     _MCP9844_GetTemperatureValue:	
 16094                           ;psect for function _MCP9844_GetTemperatureValue
 16095                           
 16096     1794                     l8479:	
 16097                           ;incstack = 0
 16098                           ; Regs used in _MCP9844_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16099                           
 16100                           
 16101                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 70: void MCP9844_GetTemperatureV
      +                          alue(int16_t *temperature);mcc_generated_files/application/MCP9844_temp_sensor.c: 71: {;
      +                          mcc_generated_files/application/MCP9844_temp_sensor.c: 72:     *temperature = MCP9844_Ca
      +                          lcTemperature();
 16102     1794  318C  2408  3197   	fcall	_MCP9844_CalcTemperature
 16103     1797  0140               	movlb	0	; select bank0
 16104     1798  0838               	movf	MCP9844_GetTemperatureValue@temperature,w
 16105     1799  0086               	movwf	6
 16106     179A  0187               	clrf	7
 16107     179B  082D               	movf	?_MCP9844_CalcTemperature,w
 16108     179C  3FC0               	movwi [0]fsr1
 16109     179D  082E               	movf	?_MCP9844_CalcTemperature+1,w
 16110     179E  3FC1               	movwi [1]fsr1
 16111     179F                     l240:
 16112     179F  0008               	return
 16113     17A0                     __end_of_MCP9844_GetTemperatureValue:
 16114                           
 16115                           	psect	text47
 16116     0C08                     __ptext47:	
 16117 ;; *************** function _MCP9844_CalcTemperature *****************
 16118 ;; Defined at:
 16119 ;;		line 75 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 16120 ;; Parameters:    Size  Location     Type
 16121 ;;		None
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;  temperatureD    2   22[BANK0 ] short 
 16124 ;;  lowerByte       1   21[BANK0 ] unsigned char 
 16125 ;;  upperByte       1   20[BANK0 ] unsigned char 
 16126 ;; Return value:  Size  Location     Type
 16127 ;;                  2   13[BANK0 ] short 
 16128 ;; Registers used:
 16129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16130 ;; Tracked objects:
 16131 ;;		On entry : 0/0
 16132 ;;		On exit  : 0/0
 16133 ;;		Unchanged: 0/0
 16134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16136 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16137 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16138 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16139 ;;Total ram usage:       11 bytes
 16140 ;; Hardware stack levels used: 1
 16141 ;; Hardware stack levels required when called: 13
 16142 ;; This function calls:
 16143 ;;		_i2c_read2ByteRegister
 16144 ;; This function is called by:
 16145 ;;		_MCP9844_GetTemperatureValue
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149     0C08                     _MCP9844_CalcTemperature:	
 16150                           ;psect for function _MCP9844_CalcTemperature
 16151                           
 16152     0C08                     l8467:	
 16153                           ;incstack = 0
 16154                           ; Regs used in _MCP9844_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16155                           
 16156                           
 16157                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 77:     int16_t temperatureData;
      +                          ;mcc_generated_files/application/MCP9844_temp_sensor.c: 78:     uint8_t upperByte;;mcc_g
      +                          enerated_files/application/MCP9844_temp_sensor.c: 79:     uint8_t lowerByte;;mcc_generat
      +                          ed_files/application/MCP9844_temp_sensor.c: 81:     temperatureData = i2c_read2ByteRegis
      +                          ter((0x18), (0x05));
 16158     0C08  3005               	movlw	5
 16159     0C09  0140               	movlb	0	; select bank0
 16160     0C0A  00A4               	movwf	i2c_read2ByteRegister@reg
 16161     0C0B  3018               	movlw	24
 16162     0C0C  3186  26E3  318C   	fcall	_i2c_read2ByteRegister
 16163     0C0F  0140               	movlb	0	; select bank0
 16164     0C10  0825               	movf	?_i2c_read2ByteRegister+1,w
 16165     0C11  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 16166     0C12  0824               	movf	?_i2c_read2ByteRegister,w
 16167     0C13  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 16168     0C14                     l8469:
 16169                           
 16170                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 82:     upperByte = ((temperatur
      +                          eData & (0xFF00)) >> 8) & (0x1F);
 16171     0C14  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 16172     0C15  391F               	andlw	31
 16173     0C16  00B4               	movwf	MCP9844_CalcTemperature@upperByte
 16174     0C17                     l8471:
 16175                           
 16176                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 83:     lowerByte = (uint8_t)tem
      +                          peratureData;
 16177     0C17  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 16178     0C18  00B5               	movwf	MCP9844_CalcTemperature@lowerByte
 16179     0C19                     l8473:
 16180                           
 16181                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 85:     temperatureData = ((int1
      +                          6_t)(upperByte << 8) | lowerByte);
 16182     0C19  0835               	movf	MCP9844_CalcTemperature@lowerByte,w
 16183     0C1A  00AF               	movwf	??_MCP9844_CalcTemperature
 16184     0C1B  01B0               	clrf	??_MCP9844_CalcTemperature+1
 16185     0C1C  0834               	movf	MCP9844_CalcTemperature@upperByte,w
 16186     0C1D  00B1               	movwf	??_MCP9844_CalcTemperature+2
 16187     0C1E  01B2               	clrf	??_MCP9844_CalcTemperature+3
 16188     0C1F  0831               	movf	??_MCP9844_CalcTemperature+2,w
 16189     0C20  00B2               	movwf	??_MCP9844_CalcTemperature+3
 16190     0C21  01B1               	clrf	??_MCP9844_CalcTemperature+2
 16191     0C22  082F               	movf	??_MCP9844_CalcTemperature,w
 16192     0C23  0431               	iorwf	??_MCP9844_CalcTemperature+2,w
 16193     0C24  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 16194     0C25  0830               	movf	??_MCP9844_CalcTemperature+1,w
 16195     0C26  0432               	iorwf	??_MCP9844_CalcTemperature+3,w
 16196     0C27  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 16197     0C28                     l8475:
 16198                           
 16199                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 87:     return temperatureData;
 16200     0C28  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 16201     0C29  00AE               	movwf	?_MCP9844_CalcTemperature+1
 16202     0C2A  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 16203     0C2B  00AD               	movwf	?_MCP9844_CalcTemperature
 16204     0C2C                     l243:
 16205     0C2C  0008               	return
 16206     0C2D                     __end_of_MCP9844_CalcTemperature:
 16207                           
 16208                           	psect	text48
 16209     06E3                     __ptext48:	
 16210 ;; *************** function _i2c_read2ByteRegister *****************
 16211 ;; Defined at:
 16212 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;  address         1    wreg     unsigned char 
 16215 ;;  reg             1    4[BANK0 ] unsigned char 
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;  address         1   10[BANK0 ] unsigned char 
 16218 ;;  result          2   11[BANK0 ] unsigned short 
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  2    4[BANK0 ] unsigned short 
 16221 ;; Registers used:
 16222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16230 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16231 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16232 ;;Total ram usage:        9 bytes
 16233 ;; Hardware stack levels used: 1
 16234 ;; Hardware stack levels required when called: 12
 16235 ;; This function calls:
 16236 ;;		_I2C1_Close
 16237 ;;		_I2C1_MasterWrite
 16238 ;;		_I2C1_Open
 16239 ;;		_I2C1_SetAddressNackCallback
 16240 ;;		_I2C1_SetBuffer
 16241 ;;		_I2C1_SetDataCompleteCallback
 16242 ;; This function is called by:
 16243 ;;		_MCP9844_CalcTemperature
 16244 ;;		_MCP9844_GetManufacture
 16245 ;;		_MCP9844_GetDevice
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249     06E3                     _i2c_read2ByteRegister:	
 16250                           ;psect for function _i2c_read2ByteRegister
 16251                           
 16252                           
 16253                           ;incstack = 0
 16254                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16255                           ;i2c_read2ByteRegister@address stored from wreg
 16256     06E3  0140               	movlb	0	; select bank0
 16257     06E4  00AA               	movwf	i2c_read2ByteRegister@address
 16258     06E5                     l8425:
 16259     06E5                     l8427:	
 16260                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 16261                           
 16262     06E5  0140               	movlb	0	; select bank0
 16263     06E6  082A               	movf	i2c_read2ByteRegister@address,w
 16264     06E7  318F  270E  3186   	fcall	_I2C1_Open
 16265     06EA  3A00               	xorlw	0
 16266     06EB  1903               	skipnz
 16267     06EC  2EEE               	goto	u4361
 16268     06ED  2EEF               	goto	u4360
 16269     06EE                     u4361:
 16270     06EE  2EE5               	goto	l8427
 16271     06EF                     u4360:
 16272     06EF                     l8429:
 16273                           
 16274                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 16275     06EF  305D               	movlw	low _rd2RegCompleteHandler
 16276     06F0  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 16277     06F1  3009               	movlw	high _rd2RegCompleteHandler
 16278     06F2  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16279     06F3  302B               	movlw	low i2c_read2ByteRegister@result
 16280     06F4  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 16281     06F5  3000               	movlw	high i2c_read2ByteRegister@result
 16282     06F6  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 16283     06F7  3197  27AC  3186   	fcall	_I2C1_SetDataCompleteCallback
 16284     06FA                     l8431:
 16285                           
 16286                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 16287     06FA  3024               	movlw	low i2c_read2ByteRegister@reg
 16288     06FB  00F0               	movwf	I2C1_SetBuffer@buffer
 16289     06FC  3000               	movlw	high i2c_read2ByteRegister@reg
 16290     06FD  00F1               	movwf	I2C1_SetBuffer@buffer+1
 16291     06FE  3001               	movlw	1
 16292     06FF  00F2               	movwf	I2C1_SetBuffer@bufferSize
 16293     0700  3000               	movlw	0
 16294     0701  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 16295     0702  3197  27F1  3186   	fcall	_I2C1_SetBuffer
 16296     0705                     l8433:
 16297                           
 16298                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 16299     0705  3000               	movlw	0
 16300     0706  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 16301     0707  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 16302     0708  3000               	movlw	0
 16303     0709  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 16304     070A  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 16305     070B  3188  2000  3186   	fcall	_I2C1_SetAddressNackCallback
 16306     070E                     l8435:
 16307                           
 16308                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 16309     070E  3196  268C  3186   	fcall	_I2C1_MasterWrite
 16310     0711                     l8437:	
 16311                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 16312                           
 16313     0711  3189  21F7  3186   	fcall	_I2C1_Close
 16314     0714  3A01               	xorlw	1
 16315     0715  1903               	skipnz
 16316     0716  2F18               	goto	u4371
 16317     0717  2F19               	goto	u4370
 16318     0718                     u4371:
 16319     0718  2F11               	goto	l8437
 16320     0719                     u4370:
 16321     0719                     l8439:
 16322                           
 16323                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 16324     0719  0140               	movlb	0	; select bank0
 16325     071A  082C               	movf	i2c_read2ByteRegister@result+1,w
 16326     071B  00A7               	movwf	??_i2c_read2ByteRegister+1
 16327     071C  082B               	movf	i2c_read2ByteRegister@result,w
 16328     071D  00A6               	movwf	??_i2c_read2ByteRegister
 16329     071E  0827               	movf	??_i2c_read2ByteRegister+1,w
 16330     071F  00A6               	movwf	??_i2c_read2ByteRegister
 16331     0720  01A7               	clrf	??_i2c_read2ByteRegister+1
 16332     0721  082B               	movf	i2c_read2ByteRegister@result,w
 16333     0722  00A9               	movwf	??_i2c_read2ByteRegister+3
 16334     0723  01A8               	clrf	??_i2c_read2ByteRegister+2
 16335     0724  0826               	movf	??_i2c_read2ByteRegister,w
 16336     0725  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 16337     0726  00A4               	movwf	?_i2c_read2ByteRegister
 16338     0727  0827               	movf	??_i2c_read2ByteRegister+1,w
 16339     0728  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 16340     0729  00A5               	movwf	?_i2c_read2ByteRegister+1
 16341     072A                     l539:
 16342     072A  0008               	return
 16343     072B                     __end_of_i2c_read2ByteRegister:
 16344                           
 16345                           	psect	text49
 16346     025B                     __ptext49:	
 16347 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 16348 ;; Defined at:
 16349 ;;		line 404 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  serialData      1    6[COMMON] PTR unsigned char 
 16352 ;;		 -> lightBlueSerial@main$F4020(80), 
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;  length          1    8[COMMON] unsigned char 
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      void 
 16357 ;; Registers used:
 16358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16368 ;;Total ram usage:        3 bytes
 16369 ;; Hardware stack levels used: 1
 16370 ;; Hardware stack levels required when called: 6
 16371 ;; This function calls:
 16372 ;;		_RN487X_Write
 16373 ;;		_strlen
 16374 ;; This function is called by:
 16375 ;;		_main
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379     025B                     _LIGHTBLUE_SendSerialData:	
 16380                           ;psect for function _LIGHTBLUE_SendSerialData
 16381                           
 16382     025B                     l6747:	
 16383                           ;incstack = 0
 16384                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16385                           
 16386                           
 16387                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 404: void LIGHTBLUE_SendSerialData
      +                          (char* serialData);mcc_generated_files/application/LIGHTBLUE_service.c: 405: {;mcc_gener
      +                          ated_files/application/LIGHTBLUE_service.c: 406:     uint8_t length = strlen(serialData)
      +                           * 2;
 16388     025B  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16389     025C  00F0               	movwf	strlen@s
 16390     025D  3002               	movlw	2
 16391     025E  00F1               	movwf	strlen@s+1
 16392     025F  318A  2257  3182   	fcall	_strlen
 16393     0262  3570               	lslf	?_strlen,w
 16394     0263  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 16395     0264                     l6749:
 16396                           
 16397                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 408:     RN487X.Write(('['));
 16398     0264  305B               	movlw	91
 16399     0265  00F5               	movwf	RN487X_Write@txData
 16400     0266  3068               	movlw	low (_RN487X| (0+32768))
 16401     0267  0084               	movwf	4
 16402     0268  3090               	movlw	high (_RN487X| (0+32768))
 16403     0269  0085               	movwf	5
 16404     026A  3F01               	moviw [1]fsr0
 16405     026B  008A               	movwf	10
 16406     026C  3F00               	moviw [0]fsr0
 16407     026D  000A               	callw
 16408     026E  3182               	pagesel	$
 16409     026F                     l6751:
 16410                           
 16411                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 16412     026F  0140               	movlb	0	; select bank0
 16413     0270  086A               	movf	_sequenceNumber,w
 16414     0271  390F               	andlw	15
 16415     0272  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16416     0273  0086               	movwf	6
 16417     0274  3001               	movlw	1	; select bank3/4
 16418     0275  0087               	movwf	7
 16419     0276  0801               	movf	1,w
 16420     0277  00F5               	movwf	RN487X_Write@txData
 16421     0278  3068               	movlw	low (_RN487X| (0+32768))
 16422     0279  0084               	movwf	4
 16423     027A  3090               	movlw	high (_RN487X| (0+32768))
 16424     027B  0085               	movwf	5
 16425     027C  3F01               	moviw [1]fsr0
 16426     027D  008A               	movwf	10
 16427     027E  3F00               	moviw [0]fsr0
 16428     027F  000A               	callw
 16429     0280  3182               	pagesel	$
 16430     0281                     l6753:
 16431     0281  3001               	movlw	1
 16432     0282  0140               	movlb	0	; select bank0
 16433     0283  07EA               	addwf	_sequenceNumber,f
 16434     0284                     l6755:
 16435                           
 16436                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 16437     0284  3053               	movlw	83
 16438     0285  00F5               	movwf	RN487X_Write@txData
 16439     0286  3068               	movlw	low (_RN487X| (0+32768))
 16440     0287  0084               	movwf	4
 16441     0288  3090               	movlw	high (_RN487X| (0+32768))
 16442     0289  0085               	movwf	5
 16443     028A  3F01               	moviw [1]fsr0
 16444     028B  008A               	movwf	10
 16445     028C  3F00               	moviw [0]fsr0
 16446     028D  000A               	callw
 16447     028E  3182               	pagesel	$
 16448     028F                     l6757:
 16449                           
 16450                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 16451     028F  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16452     0290  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16453     0291  3004               	movlw	4
 16454     0292                     u2995:
 16455     0292  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16456     0293  0B89               	decfsz	9,f
 16457     0294  2A92               	goto	u2995
 16458     0295  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16459     0296  390F               	andlw	15
 16460     0297  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16461     0298  0086               	movwf	6
 16462     0299  3001               	movlw	1	; select bank3/4
 16463     029A  0087               	movwf	7
 16464     029B  0801               	movf	1,w
 16465     029C  00F5               	movwf	RN487X_Write@txData
 16466     029D  3068               	movlw	low (_RN487X| (0+32768))
 16467     029E  0084               	movwf	4
 16468     029F  3090               	movlw	high (_RN487X| (0+32768))
 16469     02A0  0085               	movwf	5
 16470     02A1  3F01               	moviw [1]fsr0
 16471     02A2  008A               	movwf	10
 16472     02A3  3F00               	moviw [0]fsr0
 16473     02A4  000A               	callw
 16474     02A5  3182               	pagesel	$
 16475     02A6                     l6759:
 16476                           
 16477                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 16478     02A6  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 16479     02A7  390F               	andlw	15
 16480     02A8  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16481     02A9  0086               	movwf	6
 16482     02AA  3001               	movlw	1	; select bank3/4
 16483     02AB  0087               	movwf	7
 16484     02AC  0801               	movf	1,w
 16485     02AD  00F5               	movwf	RN487X_Write@txData
 16486     02AE  3068               	movlw	low (_RN487X| (0+32768))
 16487     02AF  0084               	movwf	4
 16488     02B0  3090               	movlw	high (_RN487X| (0+32768))
 16489     02B1  0085               	movwf	5
 16490     02B2  3F01               	moviw [1]fsr0
 16491     02B3  008A               	movwf	10
 16492     02B4  3F00               	moviw [0]fsr0
 16493     02B5  000A               	callw
 16494     02B6  3182               	pagesel	$
 16495                           
 16496                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:     while(*serialData)
 16497     02B7  2AEA               	goto	l6765
 16498     02B8                     l6761:
 16499                           
 16500                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 415:         RN487X.Write((_hex[(*serialData >> 4) & 0xF])
      +                          );
 16501     02B8  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16502     02B9  0086               	movwf	6
 16503     02BA  3002               	movlw	2	; select bank4/5
 16504     02BB  0087               	movwf	7
 16505     02BC  0801               	movf	1,w
 16506     02BD  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 16507     02BE  3004               	movlw	4
 16508     02BF                     u3005:
 16509     02BF  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 16510     02C0  0B89               	decfsz	9,f
 16511     02C1  2ABF               	goto	u3005
 16512     02C2  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 16513     02C3  390F               	andlw	15
 16514     02C4  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16515     02C5  0086               	movwf	6
 16516     02C6  3001               	movlw	1	; select bank3/4
 16517     02C7  0087               	movwf	7
 16518     02C8  0801               	movf	1,w
 16519     02C9  00F5               	movwf	RN487X_Write@txData
 16520     02CA  3068               	movlw	low (_RN487X| (0+32768))
 16521     02CB  0084               	movwf	4
 16522     02CC  3090               	movlw	high (_RN487X| (0+32768))
 16523     02CD  0085               	movwf	5
 16524     02CE  3F01               	moviw [1]fsr0
 16525     02CF  008A               	movwf	10
 16526     02D0  3F00               	moviw [0]fsr0
 16527     02D1  000A               	callw
 16528     02D2  3182               	pagesel	$
 16529                           
 16530                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 16531     02D3  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16532     02D4  0086               	movwf	6
 16533     02D5  3002               	movlw	2	; select bank4/5
 16534     02D6  0087               	movwf	7
 16535     02D7  0801               	movf	1,w
 16536     02D8  390F               	andlw	15
 16537     02D9  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 16538     02DA  0086               	movwf	6
 16539     02DB  3001               	movlw	1	; select bank3/4
 16540     02DC  0087               	movwf	7
 16541     02DD  0801               	movf	1,w
 16542     02DE  00F5               	movwf	RN487X_Write@txData
 16543     02DF  3068               	movlw	low (_RN487X| (0+32768))
 16544     02E0  0084               	movwf	4
 16545     02E1  3090               	movlw	high (_RN487X| (0+32768))
 16546     02E2  0085               	movwf	5
 16547     02E3  3F01               	moviw [1]fsr0
 16548     02E4  008A               	movwf	10
 16549     02E5  3F00               	moviw [0]fsr0
 16550     02E6  000A               	callw
 16551     02E7  3182               	pagesel	$
 16552     02E8                     l6763:
 16553     02E8  3001               	movlw	1
 16554     02E9  07F6               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 16555     02EA                     l6765:
 16556                           
 16557                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:     while(*serialData)
 16558     02EA  0876               	movf	LIGHTBLUE_SendSerialData@serialData,w
 16559     02EB  0086               	movwf	6
 16560     02EC  3002               	movlw	2	; select bank4/5
 16561     02ED  0087               	movwf	7
 16562     02EE  0801               	movf	1,w
 16563     02EF  1D03               	btfss	3,2
 16564     02F0  2AF2               	goto	u3011
 16565     02F1  2AF3               	goto	u3010
 16566     02F2                     u3011:
 16567     02F2  2AB8               	goto	l6761
 16568     02F3                     u3010:
 16569     02F3                     l6767:
 16570                           
 16571                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:     RN487X.Write((']'));
 16572     02F3  305D               	movlw	93
 16573     02F4  00F5               	movwf	RN487X_Write@txData
 16574     02F5  3068               	movlw	low (_RN487X| (0+32768))
 16575     02F6  0084               	movwf	4
 16576     02F7  3090               	movlw	high (_RN487X| (0+32768))
 16577     02F8  0085               	movwf	5
 16578     02F9  3F01               	moviw [1]fsr0
 16579     02FA  008A               	movwf	10
 16580     02FB  3F00               	moviw [0]fsr0
 16581     02FC  000A               	callw
 16582     02FD  3182               	pagesel	$
 16583     02FE                     l80:
 16584     02FE  0008               	return
 16585     02FF                     __end_of_LIGHTBLUE_SendSerialData:
 16586                           
 16587                           	psect	text50
 16588     0DCD                     __ptext50:	
 16589 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 16590 ;; Defined at:
 16591 ;;		line 387 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;  payload        19    0[BANK0 ] unsigned char [19]
 16596 ;;  dataIndex       1   20[BANK0 ] unsigned char 
 16597 ;;  value           1   19[BANK0 ] unsigned char 
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      void 
 16600 ;; Registers used:
 16601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Totals:         1      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;Total ram usage:       22 bytes
 16612 ;; Hardware stack levels used: 1
 16613 ;; Hardware stack levels required when called: 7
 16614 ;; This function calls:
 16615 ;;		_LIGHTBLUE_SendPacket
 16616 ;;		_LIGHTBLUE_SplitByte
 16617 ;;		_strlen
 16618 ;; This function is called by:
 16619 ;;		_main
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623     0DCD                     _LIGHTBLUE_SendProtocolVersion:	
 16624                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 16625                           
 16626     0DCD                     l6735:	
 16627                           ;incstack = 0
 16628                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16629                           
 16630                           
 16631                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 390:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 391:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 393:     *payload = '\0';
 16632     0DCD  0140               	movlb	0	; select bank0
 16633     0DCE  01A0               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 16634                           
 16635                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:     for(dataIndex = 0; dataIn
      +                          dex < strlen(protocol_version_number); dataIndex++)
 16636     0DCF  01B4               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 16637     0DD0  2DE4               	goto	l6743
 16638     0DD1                     l6737:
 16639                           
 16640                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 397:         value = protocol_version_number[dataIndex];
 16641     0DD1  0834               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16642     0DD2  3E22               	addlw	low (STR_1| (0+32768))
 16643     0DD3  0084               	movwf	4
 16644     0DD4  3098               	movlw	high (STR_1| (0+32768))
 16645     0DD5  1803               	skipnc
 16646     0DD6  3E01               	addlw	1
 16647     0DD7  0085               	movwf	5
 16648     0DD8  0800               	movf	0,w	;code access
 16649     0DD9  00B3               	movwf	LIGHTBLUE_SendProtocolVersion@value
 16650     0DDA                     l6739:
 16651                           
 16652                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 398:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 16653     0DDA  3020               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16654     0DDB  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 16655     0DDC  0833               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 16656     0DDD  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16657     0DDE  318D  2545  318D   	fcall	_LIGHTBLUE_SplitByte
 16658     0DE1                     l6741:
 16659                           
 16660                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 399:     }
 16661     0DE1  3001               	movlw	1
 16662     0DE2  0140               	movlb	0	; select bank0
 16663     0DE3  07B4               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 16664     0DE4                     l6743:
 16665     0DE4  3022               	movlw	low (STR_1| (0+32768))
 16666     0DE5  00F0               	movwf	strlen@s
 16667     0DE6  3098               	movlw	high (STR_1| (0+32768))
 16668     0DE7  00F1               	movwf	strlen@s+1
 16669     0DE8  318A  2257  318D   	fcall	_strlen
 16670     0DEB  0140               	movlb	0	; select bank0
 16671     0DEC  0834               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 16672     0DED  00FA               	movwf	??_LIGHTBLUE_SendProtocolVersion
 16673     0DEE  0871               	movf	?_strlen+1,w
 16674     0DEF  1D03               	skipz
 16675     0DF0  2DF3               	goto	u2985
 16676     0DF1  0870               	movf	?_strlen,w
 16677     0DF2  027A               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 16678     0DF3                     u2985:
 16679     0DF3  1C03               	skipc
 16680     0DF4  2DF6               	goto	u2981
 16681     0DF5  2DF7               	goto	u2980
 16682     0DF6                     u2981:
 16683     0DF6  2DD1               	goto	l6737
 16684     0DF7                     u2980:
 16685     0DF7                     l6745:
 16686                           
 16687                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 16688     0DF7  3020               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 16689     0DF8  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16690     0DF9  3056               	movlw	86
 16691     0DFA  3183  2387  318D   	fcall	_LIGHTBLUE_SendPacket
 16692     0DFD                     l74:
 16693     0DFD  0008               	return
 16694     0DFE                     __end_of_LIGHTBLUE_SendProtocolVersion:
 16695                           
 16696                           	psect	text51
 16697     08A3                     __ptext51:	
 16698 ;; *************** function _LIGHTBLUE_PushButton *****************
 16699 ;; Defined at:
 16700 ;;		line 345 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;		None
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;  payload         3   10[COMMON] unsigned char [3]
 16705 ;;  button          1   13[COMMON] unsigned char 
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  1    wreg      void 
 16708 ;; Registers used:
 16709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;Total ram usage:        4 bytes
 16720 ;; Hardware stack levels used: 1
 16721 ;; Hardware stack levels required when called: 7
 16722 ;; This function calls:
 16723 ;;		_LIGHTBLUE_GetButtonValue
 16724 ;;		_LIGHTBLUE_SendPacket
 16725 ;;		_LIGHTBLUE_SplitByte
 16726 ;; This function is called by:
 16727 ;;		_main
 16728 ;; This function uses a non-reentrant model
 16729 ;;
 16730                           
 16731     08A3                     _LIGHTBLUE_PushButton:	
 16732                           ;psect for function _LIGHTBLUE_PushButton
 16733                           
 16734     08A3                     l6713:	
 16735                           ;incstack = 0
 16736                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16737                           
 16738                           
 16739                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 348:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 16740     08A3  3196  26AE  3188   	fcall	_LIGHTBLUE_GetButtonValue
 16741     08A6  00FD               	movwf	LIGHTBLUE_PushButton@button
 16742     08A7                     l6715:
 16743                           
 16744                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 350:     *payload = '\0';
 16745     08A7  01FA               	clrf	LIGHTBLUE_PushButton@payload
 16746     08A8                     l6717:
 16747                           
 16748                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 351:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 16749     08A8  307A               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16750     08A9  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 16751     08AA  087D               	movf	LIGHTBLUE_PushButton@button,w
 16752     08AB  00F6               	movwf	LIGHTBLUE_SplitByte@value
 16753     08AC  318D  2545  3188   	fcall	_LIGHTBLUE_SplitByte
 16754     08AF                     l6719:
 16755                           
 16756                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 16757     08AF  307A               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 16758     08B0  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 16759     08B1  3050               	movlw	80
 16760     08B2  3183  2387  3188   	fcall	_LIGHTBLUE_SendPacket
 16761     08B5                     l62:
 16762     08B5  0008               	return
 16763     08B6                     __end_of_LIGHTBLUE_PushButton:
 16764                           
 16765                           	psect	text52
 16766     16AE                     __ptext52:	
 16767 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 16768 ;; Defined at:
 16769 ;;		line 509 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;		None
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;		None
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      unsigned char 
 16776 ;; Registers used:
 16777 ;;		wreg, status,2, status,0
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;Total ram usage:        0 bytes
 16788 ;; Hardware stack levels used: 1
 16789 ;; Hardware stack levels required when called: 4
 16790 ;; This function calls:
 16791 ;;		Nothing
 16792 ;; This function is called by:
 16793 ;;		_LIGHTBLUE_PushButton
 16794 ;; This function uses a non-reentrant model
 16795 ;;
 16796                           
 16797     16AE                     _LIGHTBLUE_GetButtonValue:	
 16798                           ;psect for function _LIGHTBLUE_GetButtonValue
 16799                           
 16800     16AE                     l6419:	
 16801                           ;incstack = 0
 16802                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 16803                           
 16804                           
 16805                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:     return (0x01) - PORTAbits
      +                          .RA7;
 16806     16AE  0140               	movlb	0	; select bank0
 16807     16AF  0D0C               	rlf	12,w	;volatile
 16808     16B0  0D0C               	rlf	12,w	;volatile
 16809     16B1  3901               	andlw	1
 16810     16B2  3C01               	sublw	1
 16811     16B3                     l137:
 16812     16B3  0008               	return
 16813     16B4                     __end_of_LIGHTBLUE_GetButtonValue:
 16814                           
 16815                           	psect	text53
 16816     00CB                     __ptext53:	
 16817 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 16818 ;; Defined at:
 16819 ;;		line 421 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  receivedByte    1    wreg     unsigned char 
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;  receivedByte    1   15[BANK0 ] unsigned char 
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16837 ;;Total ram usage:        9 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; Hardware stack levels required when called: 11
 16840 ;; This function calls:
 16841 ;;		_LIGHTBLUE_PerformAction
 16842 ;; This function is called by:
 16843 ;;		_main
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847     00CB                     _LIGHTBLUE_ParseIncomingPacket:	
 16848                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 16849                           
 16850                           
 16851                           ;incstack = 0
 16852                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16853                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 16854     00CB  0140               	movlb	0	; select bank0
 16855     00CC  00AF               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 16856     00CD                     l6769:
 16857                           
 16858                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421: void LIGHTBLUE_ParseIncomingP
      +                          acket(char receivedByte);mcc_generated_files/application/LIGHTBLUE_service.c: 422: {;mcc
      +                          _generated_files/application/LIGHTBLUE_service.c: 423:     static PACKET_PARSER_STATE_t 
      +                          parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 424:     static
      +                           uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 425:     stati
      +                          c uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 426:     stati
      +                          c char packetID = '\0';
 16859     00CD  2976               	goto	l6827
 16860     00CE                     l92:	
 16861                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 430:         case SEQUENCE_NUMBER:
 16862                           
 16863                           
 16864                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 432:             parserState = PAC
      +                          KET_ID;
 16865     00CE  3002               	movlw	2
 16866     00CF  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16867                           
 16868                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             break;
 16869     00D0  2995               	goto	l122
 16870     00D1                     l6771:
 16871                           
 16872                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             packetID = receiv
      +                          edByte;
 16873     00D1  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16874     00D2  00E7               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 16875     00D3                     l6773:
 16876                           
 16877                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             parserState = PAY
      +                          LOAD_SIZE_0;
 16878     00D3  3003               	movlw	3
 16879     00D4  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16880                           
 16881                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 437:             break;
 16882     00D5  2995               	goto	l122
 16883     00D6                     l6775:
 16884                           
 16885                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 439:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16886     00D6  303A               	movlw	58
 16887     00D7  022F               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16888     00D8  1C03               	skipc
 16889     00D9  28DB               	goto	u3021
 16890     00DA  28DC               	goto	u3020
 16891     00DB                     u3021:
 16892     00DB  28E5               	goto	l6779
 16893     00DC                     u3020:
 16894     00DC                     l6777:
 16895     00DC  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16896     00DD  395F               	andlw	95
 16897     00DE  3EC9               	addlw	201
 16898     00DF  00A9               	movwf	_LIGHTBLUE_ParseIncomingPacket$377
 16899     00E0  30FF               	movlw	255
 16900     00E1  1803               	skipnc
 16901     00E2  3000               	movlw	0
 16902     00E3  00AA               	movwf	_LIGHTBLUE_ParseIncomingPacket$377+1
 16903     00E4  28EC               	goto	l99
 16904     00E5                     l6779:
 16905     00E5  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16906     00E6  3ED0               	addlw	208
 16907     00E7  00A9               	movwf	_LIGHTBLUE_ParseIncomingPacket$377
 16908     00E8  30FF               	movlw	255
 16909     00E9  1803               	skipnc
 16910     00EA  3000               	movlw	0
 16911     00EB  00AA               	movwf	_LIGHTBLUE_ParseIncomingPacket$377+1
 16912     00EC                     l99:
 16913     00EC  0829               	movf	_LIGHTBLUE_ParseIncomingPacket$377,w
 16914     00ED  00E8               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16915     00EE                     l6781:
 16916                           
 16917                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 440:             parserState = PAY
      +                          LOAD_SIZE_1;
 16918     00EE  3004               	movlw	4
 16919     00EF  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16920                           
 16921                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 441:             break;
 16922     00F0  2995               	goto	l122
 16923     00F1                     l6783:
 16924                           
 16925                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 443:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 16926     00F1  303A               	movlw	58
 16927     00F2  022F               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16928     00F3  1C03               	skipc
 16929     00F4  28F6               	goto	u3031
 16930     00F5  28F7               	goto	u3030
 16931     00F6                     u3031:
 16932     00F6  2900               	goto	l6787
 16933     00F7                     u3030:
 16934     00F7                     l6785:
 16935     00F7  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16936     00F8  395F               	andlw	95
 16937     00F9  3EC9               	addlw	201
 16938     00FA  00AB               	movwf	_LIGHTBLUE_ParseIncomingPacket$378
 16939     00FB  30FF               	movlw	255
 16940     00FC  1803               	skipnc
 16941     00FD  3000               	movlw	0
 16942     00FE  00AC               	movwf	_LIGHTBLUE_ParseIncomingPacket$378+1
 16943     00FF  2907               	goto	l6789
 16944     0100                     l6787:
 16945     0100  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16946     0101  3ED0               	addlw	208
 16947     0102  00AB               	movwf	_LIGHTBLUE_ParseIncomingPacket$378
 16948     0103  30FF               	movlw	255
 16949     0104  1803               	skipnc
 16950     0105  3000               	movlw	0
 16951     0106  00AC               	movwf	_LIGHTBLUE_ParseIncomingPacket$378+1
 16952     0107                     l6789:
 16953     0107  0868               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16954     0108  00A7               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16955     0109  3004               	movlw	4
 16956     010A                     u3045:
 16957     010A  35A7               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 16958     010B  0B89               	decfsz	9,f
 16959     010C  290A               	goto	u3045
 16960     010D  0827               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 16961     010E  072B               	addwf	_LIGHTBLUE_ParseIncomingPacket$378,w
 16962     010F  00E8               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16963     0110                     l6791:
 16964                           
 16965                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             parserState = PAY
      +                          LOAD_0;
 16966     0110  3005               	movlw	5
 16967     0111  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16968                           
 16969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:             break;
 16970     0112  2995               	goto	l122
 16971     0113                     l6793:
 16972                           
 16973                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 447:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16974     0113  303A               	movlw	58
 16975     0114  022F               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16976     0115  1C03               	skipc
 16977     0116  2918               	goto	u3051
 16978     0117  2919               	goto	u3050
 16979     0118                     u3051:
 16980     0118  2922               	goto	l6797
 16981     0119                     u3050:
 16982     0119                     l6795:
 16983     0119  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16984     011A  395F               	andlw	95
 16985     011B  3EC9               	addlw	201
 16986     011C  00C8               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16987     011D  30FF               	movlw	255
 16988     011E  1803               	skipnc
 16989     011F  3000               	movlw	0
 16990     0120  00C9               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16991     0121  2929               	goto	l6799
 16992     0122                     l6797:
 16993     0122  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16994     0123  3ED0               	addlw	208
 16995     0124  00C8               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16996     0125  30FF               	movlw	255
 16997     0126  1803               	skipnc
 16998     0127  3000               	movlw	0
 16999     0128  00C9               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 17000     0129                     l6799:
 17001                           
 17002                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 448:             length--;
 17003     0129  3001               	movlw	1
 17004     012A  02E8               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 17005     012B                     l6801:
 17006                           
 17007                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 449:             if (length == 0)
 17008     012B  0868               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 17009     012C  1D03               	btfss	3,2
 17010     012D  292F               	goto	u3061
 17011     012E  2930               	goto	u3060
 17012     012F                     u3061:
 17013     012F  2932               	goto	l110
 17014     0130                     u3060:
 17015     0130                     l6803:
 17016                           
 17017                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 450:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 451:                 parserState = IDLE;
 17018     0130  01E9               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 17019                           
 17020                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:             }
 17021     0131  2995               	goto	l122
 17022     0132                     l110:	
 17023                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:             else
 17024                           
 17025                           
 17026                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 455:                 parserState = PAYLOAD_1;
 17027     0132  3006               	movlw	6
 17028     0133  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17029     0134  2995               	goto	l122
 17030     0135                     l6805:
 17031                           
 17032                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 17033     0135  303A               	movlw	58
 17034     0136  022F               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17035     0137  1C03               	skipc
 17036     0138  293A               	goto	u3071
 17037     0139  293B               	goto	u3070
 17038     013A                     u3071:
 17039     013A  2944               	goto	l6809
 17040     013B                     u3070:
 17041     013B                     l6807:
 17042     013B  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17043     013C  395F               	andlw	95
 17044     013D  3EC9               	addlw	201
 17045     013E  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$379
 17046     013F  30FF               	movlw	255
 17047     0140  1803               	skipnc
 17048     0141  3000               	movlw	0
 17049     0142  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$379+1
 17050     0143  294B               	goto	l6811
 17051     0144                     l6809:
 17052     0144  082F               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17053     0145  3ED0               	addlw	208
 17054     0146  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$379
 17055     0147  30FF               	movlw	255
 17056     0148  1803               	skipnc
 17057     0149  3000               	movlw	0
 17058     014A  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$379+1
 17059     014B                     l6811:
 17060     014B  0849               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 17061     014C  00A8               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 17062     014D  0848               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 17063     014E  00A7               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 17064     014F  0EA7               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 17065     0150  0EA8               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17066     0151  30F0               	movlw	240
 17067     0152  05A8               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17068     0153  0827               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 17069     0154  390F               	andlw	15
 17070     0155  04A8               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 17071     0156  30F0               	movlw	240
 17072     0157  05A7               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 17073     0158  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$379,w
 17074     0159  0727               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 17075     015A  00C8               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 17076     015B  082E               	movf	_LIGHTBLUE_ParseIncomingPacket$379+1,w
 17077     015C  3D28               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 17078     015D  00C9               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 17079     015E                     l6813:
 17080                           
 17081                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 17082     015E  0848               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 17083     015F  00A4               	movwf	LIGHTBLUE_PerformAction@data
 17084     0160  0867               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 17085     0161  318E  269C  3180   	fcall	_LIGHTBLUE_PerformAction
 17086     0164                     l6815:
 17087                           
 17088                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 461:             length--;
 17089     0164  3001               	movlw	1
 17090     0165  0140               	movlb	0	; select bank0
 17091     0166  02E8               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 17092     0167                     l6817:
 17093                           
 17094                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 462:             if (length == 0)
 17095     0167  0868               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 17096     0168  1D03               	btfss	3,2
 17097     0169  296B               	goto	u3081
 17098     016A  296C               	goto	u3080
 17099     016B                     u3081:
 17100     016B  2910               	goto	l6791
 17101     016C                     u3080:
 17102     016C  2930               	goto	l6803
 17103     016D                     l6821:
 17104                           
 17105                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 473:             if (receivedByte 
      +                          == ('['))
 17106     016D  305B               	movlw	91
 17107     016E  062F               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 17108     016F  1D03               	btfss	3,2
 17109     0170  2972               	goto	u3091
 17110     0171  2973               	goto	u3090
 17111     0172                     u3091:
 17112     0172  2995               	goto	l122
 17113     0173                     u3090:
 17114     0173                     l6823:
 17115                           
 17116                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 474:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 475:                 parserState = SEQUENCE_NUMBER
      +                          ;
 17117     0173  3001               	movlw	1
 17118     0174  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 17119     0175  2995               	goto	l122
 17120     0176                     l6827:
 17121     0176  0869               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 17122     0177  00A7               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 17123     0178  01A8               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 17124                           
 17125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17126                           ; Switch size 1, requested type "simple"
 17127                           ; Number of cases is 1, Range of values is 0 to 0
 17128                           ; switch strategies available:
 17129                           ; Name         Instructions Cycles
 17130                           ; simple_byte            4     3 (average)
 17131                           ; direct_byte            8     6 (fixed)
 17132                           ; jumptable            260     6 (fixed)
 17133                           ;	Chosen strategy is simple_byte
 17134     0179  0828               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 17135     017A  3A00               	xorlw	0	; case 0
 17136     017B  1903               	skipnz
 17137     017C  297E               	goto	l8929
 17138     017D  296D               	goto	l6821
 17139     017E                     l8929:
 17140                           
 17141                           ; Switch size 1, requested type "simple"
 17142                           ; Number of cases is 7, Range of values is 0 to 6
 17143                           ; switch strategies available:
 17144                           ; Name         Instructions Cycles
 17145                           ; direct_byte           20     6 (fixed)
 17146                           ; simple_byte           22    12 (average)
 17147                           ; jumptable            260     6 (fixed)
 17148                           ;	Chosen strategy is simple_byte
 17149     017E  0827               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 17150     017F  3A00               	xorlw	0	; case 0
 17151     0180  1903               	skipnz
 17152     0181  296D               	goto	l6821
 17153     0182  3A01               	xorlw	1	; case 1
 17154     0183  1903               	skipnz
 17155     0184  28CE               	goto	l92
 17156     0185  3A03               	xorlw	3	; case 2
 17157     0186  1903               	skipnz
 17158     0187  28D1               	goto	l6771
 17159     0188  3A01               	xorlw	1	; case 3
 17160     0189  1903               	skipnz
 17161     018A  28D6               	goto	l6775
 17162     018B  3A07               	xorlw	7	; case 4
 17163     018C  1903               	skipnz
 17164     018D  28F1               	goto	l6783
 17165     018E  3A01               	xorlw	1	; case 5
 17166     018F  1903               	skipnz
 17167     0190  2913               	goto	l6793
 17168     0191  3A03               	xorlw	3	; case 6
 17169     0192  1903               	skipnz
 17170     0193  2935               	goto	l6805
 17171     0194  296D               	goto	l6821
 17172     0195                     l122:
 17173     0195  0008               	return
 17174     0196                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 17175                           
 17176                           	psect	text54
 17177     0E9C                     __ptext54:	
 17178 ;; *************** function _LIGHTBLUE_PerformAction *****************
 17179 ;; Defined at:
 17180 ;;		line 543 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;  id              1    wreg     unsigned char 
 17183 ;;  data            1    4[BANK0 ] unsigned char 
 17184 ;; Auto vars:     Size  Location     Type
 17185 ;;  id              1    5[BANK0 ] unsigned char 
 17186 ;;  led             1    6[BANK0 ] unsigned char 
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  1    wreg      void 
 17189 ;; Registers used:
 17190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17196 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17199 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17200 ;;Total ram usage:        4 bytes
 17201 ;; Hardware stack levels used: 1
 17202 ;; Hardware stack levels required when called: 10
 17203 ;; This function calls:
 17204 ;;		_EUSART1_Write
 17205 ;;		_LIGHTBLUE_SetErrorLedValue
 17206 ;; This function is called by:
 17207 ;;		_LIGHTBLUE_ParseIncomingPacket
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211     0E9C                     _LIGHTBLUE_PerformAction:	
 17212                           ;psect for function _LIGHTBLUE_PerformAction
 17213                           
 17214                           
 17215                           ;incstack = 0
 17216                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17217                           ;LIGHTBLUE_PerformAction@id stored from wreg
 17218     0E9C  0140               	movlb	0	; select bank0
 17219     0E9D  00A5               	movwf	LIGHTBLUE_PerformAction@id
 17220     0E9E                     l6439:
 17221                           
 17222                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 543: static void LIGHTBLUE_Perform
      +                          Action(char id, uint8_t data);mcc_generated_files/application/LIGHTBLUE_service.c: 544: 
      +                          {;mcc_generated_files/application/LIGHTBLUE_service.c: 545:     uint8_t led;;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 547:     switch(id)
 17223     0E9E  2ECB               	goto	l6451
 17224     0E9F                     l6441:
 17225                           
 17226                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 550:             led = (data >> 4)
      +                           & (0x01);
 17227     0E9F  0824               	movf	LIGHTBLUE_PerformAction@data,w
 17228     0EA0  00FD               	movwf	??_LIGHTBLUE_PerformAction
 17229     0EA1  3004               	movlw	4
 17230     0EA2                     u2855:
 17231     0EA2  36FD               	lsrf	??_LIGHTBLUE_PerformAction,f
 17232     0EA3  0B89               	decfsz	9,f
 17233     0EA4  2EA2               	goto	u2855
 17234     0EA5  087D               	movf	??_LIGHTBLUE_PerformAction,w
 17235     0EA6  3901               	andlw	1
 17236     0EA7  00A6               	movwf	LIGHTBLUE_PerformAction@led
 17237                           
 17238                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 551:             if(led == (0x00))
 17239     0EA8  0826               	movf	LIGHTBLUE_PerformAction@led,w
 17240     0EA9  1D03               	btfss	3,2
 17241     0EAA  2EAC               	goto	u2861
 17242     0EAB  2EAD               	goto	u2860
 17243     0EAC                     u2861:
 17244     0EAC  2EB5               	goto	l6445
 17245     0EAD                     u2860:
 17246     0EAD                     l6443:
 17247                           
 17248                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 552:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 553:                 if((data & (0x01)) == (0x00))
 17249     0EAD  1824               	btfsc	LIGHTBLUE_PerformAction@data,0
 17250     0EAE  2EB0               	goto	u2871
 17251     0EAF  2EB1               	goto	u2870
 17252     0EB0                     u2871:
 17253     0EB0  2EB3               	goto	l162
 17254     0EB1                     u2870:
 17255     0EB1                     l159:	
 17256                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 554:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 555:                     do { LATAbits.LATA5 =
      +                           1; } while(0);
 17257                           
 17258     0EB1  1698               	bsf	24,5	;volatile
 17259     0EB2  2ED3               	goto	l168
 17260     0EB3                     l162:	
 17261                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 558:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 559:                     do { LATAbits.LATA5 =
      +                           0; } while(0);
 17262                           
 17263     0EB3  1298               	bcf	24,5	;volatile
 17264     0EB4  2ED3               	goto	l168
 17265     0EB5                     l6445:
 17266                           
 17267                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 563:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 564:                 LIGHTBLUE_SetErrorLedValue(da
      +                          ta & (0x01));
 17268     0EB5  1824               	btfsc	LIGHTBLUE_PerformAction@data,0
 17269     0EB6  2EB8               	goto	u2881
 17270     0EB7  2EBA               	goto	u2880
 17271     0EB8                     u2881:
 17272     0EB8  3001               	movlw	1
 17273     0EB9  2EBB               	goto	u2890
 17274     0EBA                     u2880:
 17275     0EBA  3000               	movlw	0
 17276     0EBB                     u2890:
 17277     0EBB  3188  201C  318E   	fcall	_LIGHTBLUE_SetErrorLedValue
 17278     0EBE  2ED3               	goto	l168
 17279     0EBF                     l6447:
 17280                           
 17281                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 568:             uart[UART_CDC].Wr
      +                          ite(data);
 17282     0EBF  0824               	movf	LIGHTBLUE_PerformAction@data,w
 17283     0EC0  00F0               	movwf	EUSART1_Write@txData
 17284     0EC1  3002               	movlw	low ((_uart+2)| (0+32768))
 17285     0EC2  0084               	movwf	4
 17286     0EC3  3090               	movlw	high ((_uart+2)| (0+32768))
 17287     0EC4  0085               	movwf	5
 17288     0EC5  3F01               	moviw [1]fsr0
 17289     0EC6  008A               	movwf	10
 17290     0EC7  3F00               	moviw [0]fsr0
 17291     0EC8  000A               	callw
 17292     0EC9  318E               	pagesel	$
 17293                           
 17294                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 569:             break;
 17295     0ECA  2ED3               	goto	l168
 17296     0ECB                     l6451:
 17297     0ECB  0825               	movf	LIGHTBLUE_PerformAction@id,w
 17298                           
 17299                           ; Switch size 1, requested type "simple"
 17300                           ; Number of cases is 2, Range of values is 76 to 83
 17301                           ; switch strategies available:
 17302                           ; Name         Instructions Cycles
 17303                           ; simple_byte            7     4 (average)
 17304                           ; direct_byte           25     9 (fixed)
 17305                           ; jumptable            263     9 (fixed)
 17306                           ;	Chosen strategy is simple_byte
 17307     0ECC  3A4C               	xorlw	76	; case 76
 17308     0ECD  1903               	skipnz
 17309     0ECE  2E9F               	goto	l6441
 17310     0ECF  3A1F               	xorlw	31	; case 83
 17311     0ED0  1903               	skipnz
 17312     0ED1  2EBF               	goto	l6447
 17313     0ED2  2ED3               	goto	l168
 17314     0ED3                     l168:
 17315     0ED3  0008               	return
 17316     0ED4                     __end_of_LIGHTBLUE_PerformAction:
 17317                           
 17318                           	psect	text55
 17319     081C                     __ptext55:	
 17320 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 17321 ;; Defined at:
 17322 ;;		line 529 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  value           1    wreg     _Bool 
 17325 ;; Auto vars:     Size  Location     Type
 17326 ;;  value           1   12[COMMON] _Bool 
 17327 ;; Return value:  Size  Location     Type
 17328 ;;                  1    wreg      void 
 17329 ;; Registers used:
 17330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17331 ;; Tracked objects:
 17332 ;;		On entry : 0/0
 17333 ;;		On exit  : 0/0
 17334 ;;		Unchanged: 0/0
 17335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17340 ;;Total ram usage:        2 bytes
 17341 ;; Hardware stack levels used: 1
 17342 ;; Hardware stack levels required when called: 9
 17343 ;; This function calls:
 17344 ;;		_LIGHTBLUE_UpdateErrorLed
 17345 ;; This function is called by:
 17346 ;;		_LIGHTBLUE_PerformAction
 17347 ;; This function uses a non-reentrant model
 17348 ;;
 17349                           
 17350     081C                     _LIGHTBLUE_SetErrorLedValue:	
 17351                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 17352                           
 17353                           
 17354                           ;incstack = 0
 17355                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17356                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 17357     081C  00FC               	movwf	LIGHTBLUE_SetErrorLedValue@value
 17358     081D                     l6275:
 17359                           
 17360                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 529: static void LIGHTBLUE_SetErro
      +                          rLedValue(_Bool value);mcc_generated_files/application/LIGHTBLUE_service.c: 530: {;mcc_g
      +                          enerated_files/application/LIGHTBLUE_service.c: 531:     (bitMap.ioStateBitMap.p2_2_stat
      +                          e) = (0x01) - value;
 17361     081D  3001               	movlw	1
 17362     081E  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 17363     081F  087C               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 17364     0820  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 17365     0821  0140               	movlb	0	; select bank0
 17366     0822  084B               	movf	_bitMap+1,w	;volatile
 17367     0823  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17368     0824  39FE               	andlw	-2
 17369     0825  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 17370     0826  00CB               	movwf	_bitMap+1	;volatile
 17371     0827                     l6277:
 17372                           
 17373                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 532:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 17374     0827  318A  22A5  3188   	fcall	_LIGHTBLUE_UpdateErrorLed
 17375     082A                     l149:
 17376     082A  0008               	return
 17377     082B                     __end_of_LIGHTBLUE_SetErrorLedValue:
 17378                           
 17379                           	psect	text56
 17380     0AA5                     __ptext56:	
 17381 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 17382 ;; Defined at:
 17383 ;;		line 535 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1    wreg      void 
 17390 ;; Registers used:
 17391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used: 1
 17403 ;; Hardware stack levels required when called: 8
 17404 ;; This function calls:
 17405 ;;		_RN487X_Delay
 17406 ;;		_RN487X_EnterCmdMode
 17407 ;;		_RN487X_EnterDataMode
 17408 ;;		_RN487X_SetOutputs
 17409 ;; This function is called by:
 17410 ;;		_LIGHTBLUE_SetErrorLedValue
 17411 ;; This function uses a non-reentrant model
 17412 ;;
 17413                           
 17414     0AA5                     _LIGHTBLUE_UpdateErrorLed:	
 17415                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 17416                           
 17417     0AA5                     l6183:	
 17418                           ;incstack = 0
 17419                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17420                           
 17421                           
 17422                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 537:     RN487X_EnterCmdMode();
 17423     0AA5  318A  220F  318A   	fcall	_RN487X_EnterCmdMode
 17424     0AA8                     l6185:
 17425                           
 17426                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 538:     RN487X.DelayMs((20));
 17427     0AA8  3014               	movlw	20
 17428     0AA9  00F2               	movwf	RN487X_Delay@delayCount
 17429     0AAA  3000               	movlw	0
 17430     0AAB  00F3               	movwf	RN487X_Delay@delayCount+1
 17431     0AAC  3076               	movlw	low ((_RN487X+14)| (0+32768))
 17432     0AAD  0084               	movwf	4
 17433     0AAE  3090               	movlw	high ((_RN487X+14)| (0+32768))
 17434     0AAF  0085               	movwf	5
 17435     0AB0  3F01               	moviw [1]fsr0
 17436     0AB1  008A               	movwf	10
 17437     0AB2  3F00               	moviw [0]fsr0
 17438     0AB3  000A               	callw
 17439     0AB4  318A               	pagesel	$
 17440     0AB5                     l6187:
 17441                           
 17442                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 539:     RN487X_SetOutputs(bitMap)
      +                          ;
 17443     0AB5  0140               	movlb	0	; select bank0
 17444     0AB6  084B               	movf	_bitMap+1,w	;volatile
 17445     0AB7  00FA               	movwf	RN487X_SetOutputs@bitMap+1
 17446     0AB8  084A               	movf	_bitMap,w	;volatile
 17447     0AB9  00F9               	movwf	RN487X_SetOutputs@bitMap
 17448     0ABA  3186  269A  318A   	fcall	_RN487X_SetOutputs
 17449     0ABD                     l6189:
 17450                           
 17451                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 540:     RN487X_EnterDataMode();
 17452     0ABD  318A  2289  318A   	fcall	_RN487X_EnterDataMode
 17453     0AC0                     l152:
 17454     0AC0  0008               	return
 17455     0AC1                     __end_of_LIGHTBLUE_UpdateErrorLed:
 17456                           
 17457                           	psect	text57
 17458     069A                     __ptext57:	
 17459 ;; *************** function _RN487X_SetOutputs *****************
 17460 ;; Defined at:
 17461 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 17462 ;; Parameters:    Size  Location     Type
 17463 ;;  bitMap          2    9[COMMON] struct .
 17464 ;; Auto vars:     Size  Location     Type
 17465 ;;  stateHighNib    1    3[BANK0 ] unsigned char 
 17466 ;;  ioHighNibble    1    2[BANK0 ] unsigned char 
 17467 ;;  stateLowNibb    1    1[BANK0 ] unsigned char 
 17468 ;;  ioLowNibble     1    0[BANK0 ] unsigned char 
 17469 ;; Return value:  Size  Location     Type
 17470 ;;                  1    wreg      _Bool 
 17471 ;; Registers used:
 17472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17473 ;; Tracked objects:
 17474 ;;		On entry : 0/0
 17475 ;;		On exit  : 0/0
 17476 ;;		Unchanged: 0/0
 17477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17479 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17481 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17482 ;;Total ram usage:        6 bytes
 17483 ;; Hardware stack levels used: 1
 17484 ;; Hardware stack levels required when called: 7
 17485 ;; This function calls:
 17486 ;;		_RN487X_ReadDefaultResponse
 17487 ;;		_RN487X_SendCmd
 17488 ;; This function is called by:
 17489 ;;		_LIGHTBLUE_UpdateErrorLed
 17490 ;; This function uses a non-reentrant model
 17491 ;;
 17492                           
 17493     069A                     _RN487X_SetOutputs:	
 17494                           ;psect for function _RN487X_SetOutputs
 17495                           
 17496     069A                     l6063:	
 17497                           ;incstack = 0
 17498                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17499                           
 17500                           
 17501                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 17502     069A  3030               	movlw	48
 17503     069B  0140               	movlb	0	; select bank0
 17504     069C  00A0               	movwf	RN487X_SetOutputs@ioLowNibble
 17505                           
 17506                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 17507     069D  3030               	movlw	48
 17508     069E  00A3               	movwf	RN487X_SetOutputs@stateHighNibble
 17509                           
 17510                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 17511     069F  3030               	movlw	48
 17512     06A0  00A1               	movwf	RN487X_SetOutputs@stateLowNibble
 17513                           
 17514                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 17515     06A1  1E79               	btfss	RN487X_SetOutputs@bitMap,4
 17516     06A2  2EA4               	goto	u2461
 17517     06A3  2EA5               	goto	u2460
 17518     06A4                     u2461:
 17519     06A4  2EA8               	goto	l811
 17520     06A5                     u2460:
 17521     06A5                     l6065:
 17522                           
 17523                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 17524     06A5  3031               	movlw	49
 17525     06A6  00A2               	movwf	RN487X_SetOutputs@ioHighNibble
 17526                           
 17527                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 17528     06A7  2EAA               	goto	l6067
 17529     06A8                     l811:	
 17530                           ;mcc_generated_files/rn487x/rn487x.c: 235:     else
 17531                           
 17532                           
 17533                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 17534     06A8  3030               	movlw	48
 17535     06A9  00A2               	movwf	RN487X_SetOutputs@ioHighNibble
 17536     06AA                     l6067:
 17537                           
 17538                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 17539     06AA  0879               	movf	RN487X_SetOutputs@bitMap,w
 17540     06AB  390F               	andlw	15
 17541     06AC  3E30               	addlw	48
 17542     06AD  00A0               	movwf	RN487X_SetOutputs@ioLowNibble
 17543     06AE                     l6069:
 17544                           
 17545                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 17546     06AE  1E7A               	btfss	RN487X_SetOutputs@bitMap+1,4
 17547     06AF  2EB1               	goto	u2471
 17548     06B0  2EB2               	goto	u2470
 17549     06B1                     u2471:
 17550     06B1  2EB5               	goto	l813
 17551     06B2                     u2470:
 17552     06B2                     l6071:
 17553                           
 17554                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 17555     06B2  3031               	movlw	49
 17556     06B3  00A3               	movwf	RN487X_SetOutputs@stateHighNibble
 17557                           
 17558                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 17559     06B4  2EB7               	goto	l6073
 17560     06B5                     l813:	
 17561                           ;mcc_generated_files/rn487x/rn487x.c: 246:     else
 17562                           
 17563                           
 17564                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 17565     06B5  3030               	movlw	48
 17566     06B6  00A3               	movwf	RN487X_SetOutputs@stateHighNibble
 17567     06B7                     l6073:
 17568                           
 17569                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 17570     06B7  087A               	movf	RN487X_SetOutputs@bitMap+1,w
 17571     06B8  390F               	andlw	15
 17572     06B9  3E30               	addlw	48
 17573     06BA  00A1               	movwf	RN487X_SetOutputs@stateLowNibble
 17574     06BB                     l6075:
 17575                           
 17576                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 17577     06BB  307C               	movlw	124
 17578     06BC  0144               	movlb	4	; select bank4
 17579     06BD  00A0               	movwf	_cmdBuf^(0+512)
 17580     06BE                     l6077:
 17581                           
 17582                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 17583     06BE  304F               	movlw	79
 17584     06BF  00A1               	movwf	(_cmdBuf^(0+512)+1)
 17585     06C0                     l6079:
 17586                           
 17587                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 17588     06C0  302C               	movlw	44
 17589     06C1  00A2               	movwf	(_cmdBuf^(0+512)+2)
 17590     06C2                     l6081:
 17591                           
 17592                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 17593     06C2  0140               	movlb	0	; select bank0
 17594     06C3  0822               	movf	RN487X_SetOutputs@ioHighNibble,w
 17595     06C4  0144               	movlb	4	; select bank4
 17596     06C5  00A3               	movwf	(_cmdBuf^(0+512)+3)
 17597     06C6                     l6083:
 17598                           
 17599                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 17600     06C6  0140               	movlb	0	; select bank0
 17601     06C7  0820               	movf	RN487X_SetOutputs@ioLowNibble,w
 17602     06C8  0144               	movlb	4	; select bank4
 17603     06C9  00A4               	movwf	(_cmdBuf^(0+512)+4)
 17604     06CA                     l6085:
 17605                           
 17606                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 17607     06CA  302C               	movlw	44
 17608     06CB  00A5               	movwf	(_cmdBuf^(0+512)+5)
 17609     06CC                     l6087:
 17610                           
 17611                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 17612     06CC  0140               	movlb	0	; select bank0
 17613     06CD  0823               	movf	RN487X_SetOutputs@stateHighNibble,w
 17614     06CE  0144               	movlb	4	; select bank4
 17615     06CF  00A6               	movwf	(_cmdBuf^(0+512)+6)
 17616     06D0                     l6089:
 17617                           
 17618                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 17619     06D0  0140               	movlb	0	; select bank0
 17620     06D1  0821               	movf	RN487X_SetOutputs@stateLowNibble,w
 17621     06D2  0144               	movlb	4	; select bank4
 17622     06D3  00A7               	movwf	(_cmdBuf^(0+512)+7)
 17623     06D4                     l6091:
 17624                           
 17625                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 17626     06D4  300D               	movlw	13
 17627     06D5  00A8               	movwf	(_cmdBuf^(0+512)+8)
 17628     06D6                     l6093:
 17629                           
 17630                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 17631     06D6  300A               	movlw	10
 17632     06D7  00A9               	movwf	(_cmdBuf^(0+512)+9)
 17633     06D8                     l6095:
 17634                           
 17635                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 17636     06D8  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 17637     06D9  00F6               	movwf	RN487X_SendCmd@cmd
 17638     06DA  300A               	movlw	10
 17639     06DB  00F7               	movwf	RN487X_SendCmd@cmdLen
 17640     06DC  318C  24F1  3186   	fcall	_RN487X_SendCmd
 17641     06DF                     l6097:
 17642                           
 17643                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 17644     06DF  3182  22FF  3186   	fcall	_RN487X_ReadDefaultResponse
 17645     06E2                     l815:
 17646     06E2  0008               	return
 17647     06E3                     __end_of_RN487X_SetOutputs:
 17648                           
 17649                           	psect	text58
 17650     02FF                     __ptext58:	
 17651 ;; *************** function _RN487X_ReadDefaultResponse *****************
 17652 ;; Defined at:
 17653 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;		None
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;  resp            3    1[COMMON] unsigned char [3]
 17658 ;;  status          1    4[COMMON] _Bool 
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      _Bool 
 17661 ;; Registers used:
 17662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17669 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17672 ;;Total ram usage:        4 bytes
 17673 ;; Hardware stack levels used: 1
 17674 ;; Hardware stack levels required when called: 6
 17675 ;; This function calls:
 17676 ;;		_RN487X_Read@rn487x_interface$F1569
 17677 ;; This function is called by:
 17678 ;;		_RN487X_SetOutputs
 17679 ;;		_RN487X_Disconnect
 17680 ;; This function uses a non-reentrant model
 17681 ;;
 17682                           
 17683     02FF                     _RN487X_ReadDefaultResponse:	
 17684                           ;psect for function _RN487X_ReadDefaultResponse
 17685                           
 17686     02FF                     l5977:	
 17687                           ;incstack = 0
 17688                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17689                           
 17690                           
 17691                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 17692     02FF  01F4               	clrf	RN487X_ReadDefaultResponse@status
 17693     0300                     l5979:
 17694                           
 17695                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 17696     0300  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17697     0301  0084               	movwf	4
 17698     0302  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17699     0303  0085               	movwf	5
 17700     0304  3F01               	moviw [1]fsr0
 17701     0305  008A               	movwf	10
 17702     0306  3F00               	moviw [0]fsr0
 17703     0307  000A               	callw
 17704     0308  3182               	pagesel	$
 17705     0309  00F1               	movwf	RN487X_ReadDefaultResponse@resp
 17706     030A                     l5981:
 17707                           
 17708                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 17709     030A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17710     030B  0084               	movwf	4
 17711     030C  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17712     030D  0085               	movwf	5
 17713     030E  3F01               	moviw [1]fsr0
 17714     030F  008A               	movwf	10
 17715     0310  3F00               	moviw [0]fsr0
 17716     0311  000A               	callw
 17717     0312  3182               	pagesel	$
 17718     0313  00F2               	movwf	RN487X_ReadDefaultResponse@resp+1
 17719     0314                     l5983:
 17720                           
 17721                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 17722     0314  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17723     0315  0084               	movwf	4
 17724     0316  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17725     0317  0085               	movwf	5
 17726     0318  3F01               	moviw [1]fsr0
 17727     0319  008A               	movwf	10
 17728     031A  3F00               	moviw [0]fsr0
 17729     031B  000A               	callw
 17730     031C  3182               	pagesel	$
 17731     031D  00F3               	movwf	RN487X_ReadDefaultResponse@resp+2
 17732                           
 17733                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 17734     031E  2B3E               	goto	l6003
 17735     031F                     l5985:
 17736                           
 17737                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 17738     031F  304F               	movlw	79
 17739     0320  0672               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 17740     0321  1D03               	btfss	3,2
 17741     0322  2B24               	goto	u2331
 17742     0323  2B25               	goto	u2330
 17743     0324                     u2331:
 17744     0324  2B46               	goto	l6005
 17745     0325                     u2330:
 17746     0325                     l5987:
 17747     0325  304B               	movlw	75
 17748     0326  0673               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 17749     0327  1D03               	btfss	3,2
 17750     0328  2B2A               	goto	u2341
 17751     0329  2B2B               	goto	u2340
 17752     032A                     u2341:
 17753     032A  2B46               	goto	l6005
 17754     032B                     u2340:
 17755     032B                     l5989:
 17756                           
 17757                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 17758     032B  3001               	movlw	1
 17759     032C  00F4               	movwf	RN487X_ReadDefaultResponse@status
 17760     032D  2B46               	goto	l6005
 17761     032E                     l5991:
 17762                           
 17763                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 17764     032E  3072               	movlw	114
 17765     032F  0672               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 17766     0330  1D03               	btfss	3,2
 17767     0331  2B33               	goto	u2351
 17768     0332  2B34               	goto	u2350
 17769     0333                     u2351:
 17770     0333  2B46               	goto	l6005
 17771     0334                     u2350:
 17772     0334                     l5993:
 17773     0334  3072               	movlw	114
 17774     0335  0673               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 17775     0336  1D03               	btfss	3,2
 17776     0337  2B39               	goto	u2361
 17777     0338  2B3A               	goto	u2360
 17778     0339                     u2361:
 17779     0339  2B46               	goto	l6005
 17780     033A                     u2360:
 17781     033A                     l5995:
 17782                           
 17783                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 17784     033A  01F4               	clrf	RN487X_ReadDefaultResponse@status
 17785     033B  2B46               	goto	l6005
 17786     033C                     l5997:
 17787                           
 17788                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 17789     033C  3000               	movlw	0
 17790     033D  2B86               	goto	l790
 17791     033E                     l6003:
 17792     033E  0871               	movf	RN487X_ReadDefaultResponse@resp,w
 17793                           
 17794                           ; Switch size 1, requested type "simple"
 17795                           ; Number of cases is 2, Range of values is 65 to 69
 17796                           ; switch strategies available:
 17797                           ; Name         Instructions Cycles
 17798                           ; simple_byte            7     4 (average)
 17799                           ; direct_byte           19     9 (fixed)
 17800                           ; jumptable            263     9 (fixed)
 17801                           ;	Chosen strategy is simple_byte
 17802     033F  3A41               	xorlw	65	; case 65
 17803     0340  1903               	skipnz
 17804     0341  2B1F               	goto	l5985
 17805     0342  3A04               	xorlw	4	; case 69
 17806     0343  1903               	skipnz
 17807     0344  2B2E               	goto	l5991
 17808     0345  2B3C               	goto	l5997
 17809     0346                     l6005:
 17810                           
 17811                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 17812     0346  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17813     0347  0084               	movwf	4
 17814     0348  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17815     0349  0085               	movwf	5
 17816     034A  3F01               	moviw [1]fsr0
 17817     034B  008A               	movwf	10
 17818     034C  3F00               	moviw [0]fsr0
 17819     034D  000A               	callw
 17820     034E  3182               	pagesel	$
 17821                           
 17822                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 17823     034F  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17824     0350  0084               	movwf	4
 17825     0351  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17826     0352  0085               	movwf	5
 17827     0353  3F01               	moviw [1]fsr0
 17828     0354  008A               	movwf	10
 17829     0355  3F00               	moviw [0]fsr0
 17830     0356  000A               	callw
 17831     0357  3182               	pagesel	$
 17832                           
 17833                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 17834     0358  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17835     0359  0084               	movwf	4
 17836     035A  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17837     035B  0085               	movwf	5
 17838     035C  3F01               	moviw [1]fsr0
 17839     035D  008A               	movwf	10
 17840     035E  3F00               	moviw [0]fsr0
 17841     035F  000A               	callw
 17842     0360  3182               	pagesel	$
 17843                           
 17844                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 17845     0361  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17846     0362  0084               	movwf	4
 17847     0363  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17848     0364  0085               	movwf	5
 17849     0365  3F01               	moviw [1]fsr0
 17850     0366  008A               	movwf	10
 17851     0367  3F00               	moviw [0]fsr0
 17852     0368  000A               	callw
 17853     0369  3182               	pagesel	$
 17854                           
 17855                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 17856     036A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17857     036B  0084               	movwf	4
 17858     036C  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17859     036D  0085               	movwf	5
 17860     036E  3F01               	moviw [1]fsr0
 17861     036F  008A               	movwf	10
 17862     0370  3F00               	moviw [0]fsr0
 17863     0371  000A               	callw
 17864     0372  3182               	pagesel	$
 17865                           
 17866                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 17867     0373  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17868     0374  0084               	movwf	4
 17869     0375  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17870     0376  0085               	movwf	5
 17871     0377  3F01               	moviw [1]fsr0
 17872     0378  008A               	movwf	10
 17873     0379  3F00               	moviw [0]fsr0
 17874     037A  000A               	callw
 17875     037B  3182               	pagesel	$
 17876                           
 17877                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 17878     037C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17879     037D  0084               	movwf	4
 17880     037E  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17881     037F  0085               	movwf	5
 17882     0380  3F01               	moviw [1]fsr0
 17883     0381  008A               	movwf	10
 17884     0382  3F00               	moviw [0]fsr0
 17885     0383  000A               	callw
 17886     0384  3182               	pagesel	$
 17887     0385                     l6007:
 17888                           
 17889                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 17890     0385  0874               	movf	RN487X_ReadDefaultResponse@status,w
 17891     0386                     l790:
 17892     0386  0008               	return
 17893     0387                     __end_of_RN487X_ReadDefaultResponse:
 17894                           
 17895                           	psect	text59
 17896     0A89                     __ptext59:	
 17897 ;; *************** function _RN487X_EnterDataMode *****************
 17898 ;; Defined at:
 17899 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;		None
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;		None
 17904 ;; Return value:  Size  Location     Type
 17905 ;;                  1    wreg      _Bool 
 17906 ;; Registers used:
 17907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17908 ;; Tracked objects:
 17909 ;;		On entry : 0/0
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17917 ;;Total ram usage:        0 bytes
 17918 ;; Hardware stack levels used: 1
 17919 ;; Hardware stack levels required when called: 7
 17920 ;; This function calls:
 17921 ;;		_RN487X_ReadMsg
 17922 ;;		_RN487X_SendCmd
 17923 ;; This function is called by:
 17924 ;;		_LIGHTBLUE_UpdateErrorLed
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928     0A89                     _RN487X_EnterDataMode:	
 17929                           ;psect for function _RN487X_EnterDataMode
 17930                           
 17931     0A89                     l6101:	
 17932                           ;incstack = 0
 17933                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17934                           
 17935                           
 17936                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 17937     0A89  302D               	movlw	45
 17938     0A8A  0144               	movlb	4	; select bank4
 17939     0A8B  00A0               	movwf	_cmdBuf^(0+512)
 17940                           
 17941                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 17942     0A8C  302D               	movlw	45
 17943     0A8D  00A1               	movwf	(_cmdBuf^(0+512)+1)
 17944                           
 17945                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 17946     0A8E  302D               	movlw	45
 17947     0A8F  00A2               	movwf	(_cmdBuf^(0+512)+2)
 17948                           
 17949                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 17950     0A90  300D               	movlw	13
 17951     0A91  00A3               	movwf	(_cmdBuf^(0+512)+3)
 17952                           
 17953                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 17954     0A92  300A               	movlw	10
 17955     0A93  00A4               	movwf	(_cmdBuf^(0+512)+4)
 17956     0A94                     l6103:
 17957                           
 17958                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 17959     0A94  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 17960     0A95  00F6               	movwf	RN487X_SendCmd@cmd
 17961     0A96  3005               	movlw	5
 17962     0A97  00F7               	movwf	RN487X_SendCmd@cmdLen
 17963     0A98  318C  24F1  318A   	fcall	_RN487X_SendCmd
 17964                           
 17965                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 17966     0A9B  3028               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17967     0A9C  00F1               	movwf	RN487X_ReadMsg@expectedMsg
 17968     0A9D  3098               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17969     0A9E  00F2               	movwf	RN487X_ReadMsg@expectedMsg+1
 17970     0A9F  3005               	movlw	5
 17971     0AA0  00F3               	movwf	RN487X_ReadMsg@msgLen
 17972     0AA1  318B  23E3  318A   	fcall	_RN487X_ReadMsg
 17973     0AA4                     l808:
 17974     0AA4  0008               	return
 17975     0AA5                     __end_of_RN487X_EnterDataMode:
 17976                           
 17977                           	psect	text60
 17978     0A0F                     __ptext60:	
 17979 ;; *************** function _RN487X_EnterCmdMode *****************
 17980 ;; Defined at:
 17981 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 17982 ;; Parameters:    Size  Location     Type
 17983 ;;		None
 17984 ;; Auto vars:     Size  Location     Type
 17985 ;;		None
 17986 ;; Return value:  Size  Location     Type
 17987 ;;                  1    wreg      _Bool 
 17988 ;; Registers used:
 17989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17990 ;; Tracked objects:
 17991 ;;		On entry : 0/0
 17992 ;;		On exit  : 0/0
 17993 ;;		Unchanged: 0/0
 17994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17999 ;;Total ram usage:        0 bytes
 18000 ;; Hardware stack levels used: 1
 18001 ;; Hardware stack levels required when called: 7
 18002 ;; This function calls:
 18003 ;;		_RN487X_ReadMsg
 18004 ;;		_RN487X_SendCmd
 18005 ;; This function is called by:
 18006 ;;		_LIGHTBLUE_UpdateErrorLed
 18007 ;; This function uses a non-reentrant model
 18008 ;;
 18009                           
 18010     0A0F                     _RN487X_EnterCmdMode:	
 18011                           ;psect for function _RN487X_EnterCmdMode
 18012                           
 18013     0A0F                     l6057:	
 18014                           ;incstack = 0
 18015                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18016                           
 18017                           
 18018                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 18019     0A0F  3024               	movlw	36
 18020     0A10  0144               	movlb	4	; select bank4
 18021     0A11  00A0               	movwf	_cmdBuf^(0+512)
 18022                           
 18023                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 18024     0A12  3024               	movlw	36
 18025     0A13  00A1               	movwf	(_cmdBuf^(0+512)+1)
 18026                           
 18027                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 18028     0A14  3024               	movlw	36
 18029     0A15  00A2               	movwf	(_cmdBuf^(0+512)+2)
 18030     0A16                     l6059:
 18031                           
 18032                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 18033     0A16  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 18034     0A17  00F6               	movwf	RN487X_SendCmd@cmd
 18035     0A18  3003               	movlw	3
 18036     0A19  00F7               	movwf	RN487X_SendCmd@cmdLen
 18037     0A1A  318C  24F1  318A   	fcall	_RN487X_SendCmd
 18038                           
 18039                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 18040     0A1D  302D               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 18041     0A1E  00F1               	movwf	RN487X_ReadMsg@expectedMsg
 18042     0A1F  3098               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 18043     0A20  00F2               	movwf	RN487X_ReadMsg@expectedMsg+1
 18044     0A21  3005               	movlw	5
 18045     0A22  00F3               	movwf	RN487X_ReadMsg@msgLen
 18046     0A23  318B  23E3  318A   	fcall	_RN487X_ReadMsg
 18047     0A26                     l803:
 18048     0A26  0008               	return
 18049     0A27                     __end_of_RN487X_EnterCmdMode:
 18050                           
 18051                           	psect	text61
 18052     0CF1                     __ptext61:	
 18053 ;; *************** function _RN487X_SendCmd *****************
 18054 ;; Defined at:
 18055 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;  cmd             1    6[COMMON] PTR const unsigned char 
 18058 ;;		 -> cmdBuf(64), 
 18059 ;;  cmdLen          1    7[COMMON] unsigned char 
 18060 ;; Auto vars:     Size  Location     Type
 18061 ;;  index           1    8[COMMON] unsigned char 
 18062 ;; Return value:  Size  Location     Type
 18063 ;;                  1    wreg      void 
 18064 ;; Registers used:
 18065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18066 ;; Tracked objects:
 18067 ;;		On entry : 0/0
 18068 ;;		On exit  : 0/0
 18069 ;;		Unchanged: 0/0
 18070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18075 ;;Total ram usage:        3 bytes
 18076 ;; Hardware stack levels used: 1
 18077 ;; Hardware stack levels required when called: 6
 18078 ;; This function calls:
 18079 ;;		_RN487X_Write
 18080 ;;		_RN487X_is_tx_done
 18081 ;; This function is called by:
 18082 ;;		_RN487X_EnterCmdMode
 18083 ;;		_RN487X_EnterDataMode
 18084 ;;		_RN487X_SetOutputs
 18085 ;;		_RN487X_GetCmd
 18086 ;;		_RN487X_GetInputsValues
 18087 ;;		_RN487X_RebootCmd
 18088 ;;		_RN487X_Disconnect
 18089 ;; This function uses a non-reentrant model
 18090 ;;
 18091                           
 18092     0CF1                     _RN487X_SendCmd:	
 18093                           ;psect for function _RN487X_SendCmd
 18094                           
 18095     0CF1                     l5949:	
 18096                           ;incstack = 0
 18097                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18098                           
 18099                           
 18100                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 18101     0CF1  01F8               	clrf	RN487X_SendCmd@index
 18102                           
 18103                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 18104     0CF2  2D13               	goto	l5957
 18105     0CF3                     l5951:
 18106                           
 18107                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 18108     0CF3  306C               	movlw	low ((_RN487X+4)| (0+32768))
 18109     0CF4  0084               	movwf	4
 18110     0CF5  3090               	movlw	high ((_RN487X+4)| (0+32768))
 18111     0CF6  0085               	movwf	5
 18112     0CF7  3F01               	moviw [1]fsr0
 18113     0CF8  008A               	movwf	10
 18114     0CF9  3F00               	moviw [0]fsr0
 18115     0CFA  000A               	callw
 18116     0CFB  318C               	pagesel	$
 18117     0CFC  3A00               	xorlw	0
 18118     0CFD  1903               	skipnz
 18119     0CFE  2D00               	goto	u2291
 18120     0CFF  2D01               	goto	u2290
 18121     0D00                     u2291:
 18122     0D00  2D13               	goto	l5957
 18123     0D01                     u2290:
 18124     0D01                     l5953:
 18125                           
 18126                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 18127     0D01  0876               	movf	RN487X_SendCmd@cmd,w
 18128     0D02  0778               	addwf	RN487X_SendCmd@index,w
 18129     0D03  0086               	movwf	6
 18130     0D04  3002               	movlw	2	; select bank4/5
 18131     0D05  0087               	movwf	7
 18132     0D06  0801               	movf	1,w
 18133     0D07  00F5               	movwf	RN487X_Write@txData
 18134     0D08  3068               	movlw	low (_RN487X| (0+32768))
 18135     0D09  0084               	movwf	4
 18136     0D0A  3090               	movlw	high (_RN487X| (0+32768))
 18137     0D0B  0085               	movwf	5
 18138     0D0C  3F01               	moviw [1]fsr0
 18139     0D0D  008A               	movwf	10
 18140     0D0E  3F00               	moviw [0]fsr0
 18141     0D0F  000A               	callw
 18142     0D10  318C               	pagesel	$
 18143     0D11                     l5955:
 18144                           
 18145                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 18146     0D11  3001               	movlw	1
 18147     0D12  07F8               	addwf	RN487X_SendCmd@index,f
 18148     0D13                     l5957:
 18149                           
 18150                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 18151     0D13  0877               	movf	RN487X_SendCmd@cmdLen,w
 18152     0D14  0278               	subwf	RN487X_SendCmd@index,w
 18153     0D15  1C03               	skipc
 18154     0D16  2D18               	goto	u2301
 18155     0D17  2D19               	goto	u2300
 18156     0D18                     u2301:
 18157     0D18  2CF3               	goto	l5951
 18158     0D19                     u2300:
 18159     0D19                     l768:
 18160     0D19  0008               	return
 18161     0D1A                     __end_of_RN487X_SendCmd:
 18162                           
 18163                           	psect	text62
 18164     174A                     __ptext62:	
 18165 ;; *************** function _RN487X_is_tx_done *****************
 18166 ;; Defined at:
 18167 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18168 ;; Parameters:    Size  Location     Type
 18169 ;;		None
 18170 ;; Auto vars:     Size  Location     Type
 18171 ;;		None
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  1    wreg      _Bool 
 18174 ;; Registers used:
 18175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18185 ;;Total ram usage:        0 bytes
 18186 ;; Hardware stack levels used: 1
 18187 ;; Hardware stack levels required when called: 5
 18188 ;; This function calls:
 18189 ;;		_EUSART1_is_tx_done
 18190 ;; This function is called by:
 18191 ;;		_RN487X_SendCmd
 18192 ;; This function uses a non-reentrant model
 18193 ;;
 18194                           
 18195     174A                     _RN487X_is_tx_done:	
 18196                           ;psect for function _RN487X_is_tx_done
 18197                           
 18198     174A                     l5847:	
 18199                           ;incstack = 0
 18200                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18201                           
 18202                           
 18203                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 18204     174A  3022               	movlw	low ((_uart+34)| (0+32768))
 18205     174B  0084               	movwf	4
 18206     174C  3090               	movlw	high ((_uart+34)| (0+32768))
 18207     174D  0085               	movwf	5
 18208     174E  3F01               	moviw [1]fsr0
 18209     174F  008A               	movwf	10
 18210     1750  3F00               	moviw [0]fsr0
 18211     1751  000A               	callw
 18212     1752  3197               	pagesel	$
 18213     1753                     l910:
 18214     1753  0008               	return
 18215     1754                     __end_of_RN487X_is_tx_done:
 18216                           
 18217                           	psect	text63
 18218     1656                     __ptext63:	
 18219 ;; *************** function _EUSART1_is_tx_done *****************
 18220 ;; Defined at:
 18221 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 18222 ;; Parameters:    Size  Location     Type
 18223 ;;		None
 18224 ;; Auto vars:     Size  Location     Type
 18225 ;;		None
 18226 ;; Return value:  Size  Location     Type
 18227 ;;                  1    wreg      _Bool 
 18228 ;; Registers used:
 18229 ;;		wreg, status,2, status,0
 18230 ;; Tracked objects:
 18231 ;;		On entry : 0/0
 18232 ;;		On exit  : 0/0
 18233 ;;		Unchanged: 0/0
 18234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18239 ;;Total ram usage:        0 bytes
 18240 ;; Hardware stack levels used: 1
 18241 ;; Hardware stack levels required when called: 4
 18242 ;; This function calls:
 18243 ;;		Nothing
 18244 ;; This function is called by:
 18245 ;;		_RN487X_is_tx_done
 18246 ;; This function uses a non-reentrant model
 18247 ;;
 18248                           
 18249     1656                     _EUSART1_is_tx_done:	
 18250                           ;psect for function _EUSART1_is_tx_done
 18251                           
 18252     1656                     l5797:	
 18253                           ;incstack = 0
 18254                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 18255                           
 18256                           
 18257                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 18258     1656  0142               	movlb	2	; select bank2
 18259     1657  0C1E               	rrf	30,w	;volatile
 18260     1658  3901               	andlw	1
 18261     1659                     l1760:
 18262     1659  0008               	return
 18263     165A                     __end_of_EUSART1_is_tx_done:
 18264                           
 18265                           	psect	text64
 18266     0BE3                     __ptext64:	
 18267 ;; *************** function _RN487X_ReadMsg *****************
 18268 ;; Defined at:
 18269 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;  expectedMsg     2    1[COMMON] PTR const unsigned char 
 18272 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 18273 ;;  msgLen          1    3[COMMON] unsigned char 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  index           1    5[COMMON] unsigned char 
 18276 ;;  resp            1    4[COMMON] unsigned char 
 18277 ;; Return value:  Size  Location     Type
 18278 ;;                  1    wreg      _Bool 
 18279 ;; Registers used:
 18280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18281 ;; Tracked objects:
 18282 ;;		On entry : 0/0
 18283 ;;		On exit  : 0/0
 18284 ;;		Unchanged: 0/0
 18285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18286 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18289 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18290 ;;Total ram usage:        5 bytes
 18291 ;; Hardware stack levels used: 1
 18292 ;; Hardware stack levels required when called: 6
 18293 ;; This function calls:
 18294 ;;		_RN487X_Read@rn487x_interface$F1569
 18295 ;; This function is called by:
 18296 ;;		_RN487X_EnterCmdMode
 18297 ;;		_RN487X_EnterDataMode
 18298 ;;		_RN487X_GetInputsValues
 18299 ;;		_RN487X_RebootCmd
 18300 ;; This function uses a non-reentrant model
 18301 ;;
 18302                           
 18303     0BE3                     _RN487X_ReadMsg:	
 18304                           ;psect for function _RN487X_ReadMsg
 18305                           
 18306     0BE3                     l5959:	
 18307                           ;incstack = 0
 18308                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18309                           
 18310                           
 18311                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 18312     0BE3  01F5               	clrf	RN487X_ReadMsg@index
 18313     0BE4  2C00               	goto	l5971
 18314     0BE5                     l5961:
 18315                           
 18316                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 18317     0BE5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18318     0BE6  0084               	movwf	4
 18319     0BE7  3090               	movlw	high ((_RN487X+2)| (0+32768))
 18320     0BE8  0085               	movwf	5
 18321     0BE9  3F01               	moviw [1]fsr0
 18322     0BEA  008A               	movwf	10
 18323     0BEB  3F00               	moviw [0]fsr0
 18324     0BEC  000A               	callw
 18325     0BED  318B               	pagesel	$
 18326     0BEE  00F4               	movwf	RN487X_ReadMsg@resp
 18327     0BEF                     l5963:
 18328                           
 18329                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 18330     0BEF  0875               	movf	RN487X_ReadMsg@index,w
 18331     0BF0  0771               	addwf	RN487X_ReadMsg@expectedMsg,w
 18332     0BF1  0084               	movwf	4
 18333     0BF2  0872               	movf	RN487X_ReadMsg@expectedMsg+1,w
 18334     0BF3  1803               	skipnc
 18335     0BF4  3E01               	addlw	1
 18336     0BF5  0085               	movwf	5
 18337     0BF6  0800               	movf	0,w	;code access
 18338     0BF7  0674               	xorwf	RN487X_ReadMsg@resp,w
 18339     0BF8  1903               	skipnz
 18340     0BF9  2BFB               	goto	u2311
 18341     0BFA  2BFC               	goto	u2310
 18342     0BFB                     u2311:
 18343     0BFB  2BFE               	goto	l5969
 18344     0BFC                     u2310:
 18345     0BFC                     l5965:
 18346                           
 18347                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 18348     0BFC  3000               	movlw	0
 18349     0BFD  2C07               	goto	l779
 18350     0BFE                     l5969:
 18351                           
 18352                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 18353     0BFE  3001               	movlw	1
 18354     0BFF  07F5               	addwf	RN487X_ReadMsg@index,f
 18355     0C00                     l5971:
 18356     0C00  0873               	movf	RN487X_ReadMsg@msgLen,w
 18357     0C01  0275               	subwf	RN487X_ReadMsg@index,w
 18358     0C02  1C03               	skipc
 18359     0C03  2C05               	goto	u2321
 18360     0C04  2C06               	goto	u2320
 18361     0C05                     u2321:
 18362     0C05  2BE5               	goto	l5961
 18363     0C06                     u2320:
 18364     0C06                     l5973:
 18365                           
 18366                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 18367     0C06  3001               	movlw	1
 18368     0C07                     l779:
 18369     0C07  0008               	return
 18370     0C08                     __end_of_RN487X_ReadMsg:
 18371                           
 18372                           	psect	text65
 18373     1740                     __ptext65:	
 18374 ;; *************** function _RN487X_Read@rn487x_interface$F1569 *****************
 18375 ;; Defined at:
 18376 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;		None
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;		None
 18381 ;; Return value:  Size  Location     Type
 18382 ;;                  1    wreg      unsigned char 
 18383 ;; Registers used:
 18384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18385 ;; Tracked objects:
 18386 ;;		On entry : 0/0
 18387 ;;		On exit  : 0/0
 18388 ;;		Unchanged: 0/0
 18389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18394 ;;Total ram usage:        0 bytes
 18395 ;; Hardware stack levels used: 1
 18396 ;; Hardware stack levels required when called: 5
 18397 ;; This function calls:
 18398 ;;		_EUSART1_Read
 18399 ;; This function is called by:
 18400 ;;		_RN487X_ReadMsg
 18401 ;;		_RN487X_ReadDefaultResponse
 18402 ;;		_RN487X_FilterData
 18403 ;;		_RN487X_Init
 18404 ;;		_RN487X_GetCmd
 18405 ;;		_RN487X_WaitForMsg
 18406 ;; This function uses a non-reentrant model
 18407 ;;
 18408                           
 18409     1740                     _RN487X_Read@rn487x_interface$F1569:	
 18410                           ;psect for function _RN487X_Read@rn487x_interface$F1569
 18411                           
 18412     1740                     l5843:	
 18413                           ;incstack = 0
 18414                           ; Regs used in _RN487X_Read@rn487x_interface$F1569: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 18415                           
 18416                           
 18417                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 18418     1740  3014               	movlw	low ((_uart+20)| (0+32768))
 18419     1741  0084               	movwf	4
 18420     1742  3090               	movlw	high ((_uart+20)| (0+32768))
 18421     1743  0085               	movwf	5
 18422     1744  3F01               	moviw [1]fsr0
 18423     1745  008A               	movwf	10
 18424     1746  3F00               	moviw [0]fsr0
 18425     1747  000A               	callw
 18426     1748  3197               	pagesel	$
 18427     1749                     l907:
 18428     1749  0008               	return
 18429     174A                     __end_of_RN487X_Read@rn487x_interface$F1569:
 18430                           
 18431                           	psect	text66
 18432     0B9A                     __ptext66:	
 18433 ;; *************** function _EUSART1_Read *****************
 18434 ;; Defined at:
 18435 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;		None
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;  readValue       1    0[COMMON] unsigned char 
 18440 ;; Return value:  Size  Location     Type
 18441 ;;                  1    wreg      unsigned char 
 18442 ;; Registers used:
 18443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18444 ;; Tracked objects:
 18445 ;;		On entry : 0/0
 18446 ;;		On exit  : 0/0
 18447 ;;		Unchanged: 0/0
 18448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18453 ;;Total ram usage:        1 bytes
 18454 ;; Hardware stack levels used: 1
 18455 ;; Hardware stack levels required when called: 4
 18456 ;; This function calls:
 18457 ;;		Nothing
 18458 ;; This function is called by:
 18459 ;;		_RN487X_Read@rn487x_interface$F1569
 18460 ;;		_RN487X_Example_TransparentUart
 18461 ;;		_main
 18462 ;; This function uses a non-reentrant model
 18463 ;;
 18464                           
 18465     0B9A                     _EUSART1_Read:	
 18466                           ;psect for function _EUSART1_Read
 18467                           
 18468     0B9A                     l5801:	
 18469                           ;incstack = 0
 18470                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 18471                           
 18472     0B9A                     l5803:	
 18473                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18474                           
 18475                           
 18476                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18477     0B9A  0140               	movlb	0	; select bank0
 18478     0B9B  0855               	movf	_eusart1RxCount,w	;volatile
 18479     0B9C  1903               	btfsc	3,2
 18480     0B9D  2B9F               	goto	u2181
 18481     0B9E  2BA0               	goto	u2180
 18482     0B9F                     u2181:
 18483     0B9F  2B9A               	goto	l5803
 18484     0BA0                     u2180:
 18485     0BA0                     l5805:
 18486                           
 18487                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 18488     0BA0  0856               	movf	_eusart1RxTail,w	;volatile
 18489     0BA1  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 18490     0BA2  0086               	movwf	6
 18491     0BA3  0187               	clrf	7
 18492     0BA4  0801               	movf	1,w
 18493     0BA5  00D4               	movwf	_eusart1RxLastError	;volatile
 18494                           
 18495                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 18496     0BA6  0856               	movf	_eusart1RxTail,w
 18497     0BA7  3EB0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 18498     0BA8  0086               	movwf	6
 18499     0BA9  0187               	clrf	7
 18500     0BAA  0801               	movf	1,w
 18501     0BAB  00F0               	movwf	EUSART1_Read@readValue
 18502     0BAC                     l5807:
 18503     0BAC  3001               	movlw	1
 18504     0BAD  07D6               	addwf	_eusart1RxTail,f	;volatile
 18505     0BAE                     l5809:
 18506                           
 18507                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 18508     0BAE  3008               	movlw	8
 18509     0BAF  0256               	subwf	_eusart1RxTail,w	;volatile
 18510     0BB0  1C03               	skipc
 18511     0BB1  2BB3               	goto	u2191
 18512     0BB2  2BB4               	goto	u2190
 18513     0BB3                     u2191:
 18514     0BB3  2BB5               	goto	l5813
 18515     0BB4                     u2190:
 18516     0BB4                     l5811:
 18517                           
 18518                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 18519     0BB4  01D6               	clrf	_eusart1RxTail	;volatile
 18520     0BB5                     l5813:
 18521                           
 18522                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 18523     0BB5  014E               	movlb	14	; select bank14
 18524     0BB6  1299               	bcf	25,5	;volatile
 18525     0BB7                     l5815:
 18526                           
 18527                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 18528     0BB7  3001               	movlw	1
 18529     0BB8  0140               	movlb	0	; select bank0
 18530     0BB9  02D5               	subwf	_eusart1RxCount,f	;volatile
 18531     0BBA                     l5817:
 18532                           
 18533                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 18534     0BBA  014E               	movlb	14	; select bank14
 18535     0BBB  1699               	bsf	25,5	;volatile
 18536     0BBC                     l5819:
 18537                           
 18538                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 18539     0BBC  0870               	movf	EUSART1_Read@readValue,w
 18540     0BBD                     l1770:
 18541     0BBD  0008               	return
 18542     0BBE                     __end_of_EUSART1_Read:
 18543                           
 18544                           	psect	text67
 18545     171D                     __ptext67:	
 18546 ;; *************** function _RN487X_Delay *****************
 18547 ;; Defined at:
 18548 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18549 ;; Parameters:    Size  Location     Type
 18550 ;;  delayCount      2    2[COMMON] unsigned short 
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;		None
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      void 
 18555 ;; Registers used:
 18556 ;;		wreg, status,2, status,0, pclath, cstack
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18566 ;;Total ram usage:        2 bytes
 18567 ;; Hardware stack levels used: 1
 18568 ;; Hardware stack levels required when called: 5
 18569 ;; This function calls:
 18570 ;;		_DELAY_milliseconds
 18571 ;; This function is called by:
 18572 ;;		_LIGHTBLUE_UpdateErrorLed
 18573 ;;		_RN487X_Init
 18574 ;; This function uses a non-reentrant model
 18575 ;;
 18576                           
 18577     171D                     _RN487X_Delay:	
 18578                           ;psect for function _RN487X_Delay
 18579                           
 18580     171D                     l6137:	
 18581                           ;incstack = 0
 18582                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 18583                           
 18584                           
 18585                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 18586     171D  0873               	movf	RN487X_Delay@delayCount+1,w
 18587     171E  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 18588     171F  0872               	movf	RN487X_Delay@delayCount,w
 18589     1720  00F0               	movwf	DELAY_milliseconds@milliseconds
 18590     1721  3188  2091  3197   	fcall	_DELAY_milliseconds
 18591     1724                     l916:
 18592     1724  0008               	return
 18593     1725                     __end_of_RN487X_Delay:
 18594                           
 18595                           	psect	text68
 18596     0891                     __ptext68:	
 18597 ;; *************** function _DELAY_milliseconds *****************
 18598 ;; Defined at:
 18599 ;;		line 38 in file "mcc_generated_files/delay.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  milliseconds    2    0[COMMON] unsigned short 
 18602 ;; Auto vars:     Size  Location     Type
 18603 ;;		None
 18604 ;; Return value:  Size  Location     Type
 18605 ;;                  1    wreg      void 
 18606 ;; Registers used:
 18607 ;;		wreg, status,2, status,0
 18608 ;; Tracked objects:
 18609 ;;		On entry : 0/0
 18610 ;;		On exit  : 0/0
 18611 ;;		Unchanged: 0/0
 18612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;Total ram usage:        2 bytes
 18618 ;; Hardware stack levels used: 1
 18619 ;; Hardware stack levels required when called: 4
 18620 ;; This function calls:
 18621 ;;		Nothing
 18622 ;; This function is called by:
 18623 ;;		_RN487X_Delay
 18624 ;; This function uses a non-reentrant model
 18625 ;;
 18626                           
 18627     0891                     _DELAY_milliseconds:	
 18628                           ;psect for function _DELAY_milliseconds
 18629                           
 18630     0891                     l6011:	
 18631                           ;incstack = 0
 18632                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 18633                           
 18634                           
 18635                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18636     0891  2896               	goto	l6015
 18637     0892                     l6013:
 18638                           
 18639                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(1000000/4000.0)));
 18640     0892  3053               	movlw	83
 18641     0893                     u4787:
 18642     0893  0B89               	decfsz	9,f
 18643     0894  2893               	goto	u4787
 18644     0895  0000               	nop
 18645     0896                     l6015:
 18646                           
 18647                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18648     0896  3001               	movlw	1
 18649     0897  02F0               	subwf	DELAY_milliseconds@milliseconds,f
 18650     0898  3000               	movlw	0
 18651     0899  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
 18652     089A  0A70               	incf	DELAY_milliseconds@milliseconds,w
 18653     089B  1D03               	skipz
 18654     089C  28A1               	goto	u2371
 18655     089D  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
 18656     089E  1D03               	btfss	3,2
 18657     089F  28A1               	goto	u2371
 18658     08A0  28A2               	goto	u2370
 18659     08A1                     u2371:
 18660     08A1  2892               	goto	l6013
 18661     08A2                     u2370:
 18662     08A2                     l1667:
 18663     08A2  0008               	return
 18664     08A3                     __end_of_DELAY_milliseconds:
 18665                           
 18666                           	psect	text69
 18667     0C2D                     __ptext69:	
 18668 ;; *************** function _LIGHTBLUE_LedState *****************
 18669 ;; Defined at:
 18670 ;;		line 368 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;		None
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;  payload         3   10[COMMON] unsigned char [3]
 18675 ;;  led             1   13[COMMON] unsigned char 
 18676 ;; Return value:  Size  Location     Type
 18677 ;;                  1    wreg      void 
 18678 ;; Registers used:
 18679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18680 ;; Tracked objects:
 18681 ;;		On entry : 0/0
 18682 ;;		On exit  : 0/0
 18683 ;;		Unchanged: 0/0
 18684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18686 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18689 ;;Total ram usage:        4 bytes
 18690 ;; Hardware stack levels used: 1
 18691 ;; Hardware stack levels required when called: 7
 18692 ;; This function calls:
 18693 ;;		_LIGHTBLUE_GetDataLedValue
 18694 ;;		_LIGHTBLUE_GetErrorLedValue
 18695 ;;		_LIGHTBLUE_SendPacket
 18696 ;;		_LIGHTBLUE_SplitByte
 18697 ;; This function is called by:
 18698 ;;		_main
 18699 ;; This function uses a non-reentrant model
 18700 ;;
 18701                           
 18702     0C2D                     _LIGHTBLUE_LedState:	
 18703                           ;psect for function _LIGHTBLUE_LedState
 18704                           
 18705     0C2D                     l6721:	
 18706                           ;incstack = 0
 18707                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18708                           
 18709                           
 18710                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 370:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 371:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 373:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 18711     0C2D  3196  26A8  318C   	fcall	_LIGHTBLUE_GetDataLedValue
 18712     0C30  00FD               	movwf	LIGHTBLUE_LedState@led
 18713     0C31                     l6723:
 18714                           
 18715                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 375:     *payload = '\0';
 18716     0C31  01FA               	clrf	LIGHTBLUE_LedState@payload
 18717     0C32                     l6725:
 18718                           
 18719                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 376:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18720     0C32  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18721     0C33  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 18722     0C34  087D               	movf	LIGHTBLUE_LedState@led,w
 18723     0C35  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18724     0C36  318D  2545  318C   	fcall	_LIGHTBLUE_SplitByte
 18725     0C39                     l6727:
 18726                           
 18727                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18728     0C39  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18729     0C3A  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 18730     0C3B  304C               	movlw	76
 18731     0C3C  3183  2387  318C   	fcall	_LIGHTBLUE_SendPacket
 18732     0C3F                     l6729:
 18733                           
 18734                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 18735     0C3F  3196  2691  318C   	fcall	_LIGHTBLUE_GetErrorLedValue
 18736     0C42  3E10               	addlw	16
 18737     0C43  00FD               	movwf	LIGHTBLUE_LedState@led
 18738                           
 18739                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:     *payload = '\0';
 18740     0C44  01FA               	clrf	LIGHTBLUE_LedState@payload
 18741     0C45                     l6731:
 18742                           
 18743                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18744     0C45  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18745     0C46  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 18746     0C47  087D               	movf	LIGHTBLUE_LedState@led,w
 18747     0C48  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18748     0C49  318D  2545  318C   	fcall	_LIGHTBLUE_SplitByte
 18749     0C4C                     l6733:
 18750                           
 18751                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 384:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18752     0C4C  307A               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18753     0C4D  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 18754     0C4E  304C               	movlw	76
 18755     0C4F  3183  2387  318C   	fcall	_LIGHTBLUE_SendPacket
 18756     0C52                     l68:
 18757     0C52  0008               	return
 18758     0C53                     __end_of_LIGHTBLUE_LedState:
 18759                           
 18760                           	psect	text70
 18761     1691                     __ptext70:	
 18762 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 18763 ;; Defined at:
 18764 ;;		line 524 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18765 ;; Parameters:    Size  Location     Type
 18766 ;;		None
 18767 ;; Auto vars:     Size  Location     Type
 18768 ;;		None
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  1    wreg      unsigned char 
 18771 ;; Registers used:
 18772 ;;		wreg, status,2, status,0
 18773 ;; Tracked objects:
 18774 ;;		On entry : 0/0
 18775 ;;		On exit  : 0/0
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18782 ;;Total ram usage:        0 bytes
 18783 ;; Hardware stack levels used: 1
 18784 ;; Hardware stack levels required when called: 4
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_LIGHTBLUE_LedState
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792     1691                     _LIGHTBLUE_GetErrorLedValue:	
 18793                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 18794                           
 18795     1691                     l6435:	
 18796                           ;incstack = 0
 18797                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 18798                           
 18799                           
 18800                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 526:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 18801     1691  0140               	movlb	0	; select bank0
 18802     1692  084B               	movf	_bitMap+1,w	;volatile
 18803     1693  3901               	andlw	1
 18804     1694  3C01               	sublw	1
 18805     1695                     l146:
 18806     1695  0008               	return
 18807     1696                     __end_of_LIGHTBLUE_GetErrorLedValue:
 18808                           
 18809                           	psect	text71
 18810     16A8                     __ptext71:	
 18811 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 18812 ;; Defined at:
 18813 ;;		line 519 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;		None
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  1    wreg      unsigned char 
 18820 ;; Registers used:
 18821 ;;		wreg, status,2, status,0
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18831 ;;Total ram usage:        0 bytes
 18832 ;; Hardware stack levels used: 1
 18833 ;; Hardware stack levels required when called: 4
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_LIGHTBLUE_LedState
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841     16A8                     _LIGHTBLUE_GetDataLedValue:	
 18842                           ;psect for function _LIGHTBLUE_GetDataLedValue
 18843                           
 18844     16A8                     l6431:	
 18845                           ;incstack = 0
 18846                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 18847                           
 18848                           
 18849                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 521:     return (0x01) - PORTAbits
      +                          .RA5;
 18850     16A8  0140               	movlb	0	; select bank0
 18851     16A9  0E0C               	swapf	12,w	;volatile
 18852     16AA  0C89               	rrf	9,f
 18853     16AB  3901               	andlw	1
 18854     16AC  3C01               	sublw	1
 18855     16AD                     l143:
 18856     16AD  0008               	return
 18857     16AE                     __end_of_LIGHTBLUE_GetDataLedValue:
 18858                           
 18859                           	psect	text72
 18860     16A2                     __ptext72:	
 18861 ;; *************** function _LIGHTBLUE_Initialize *****************
 18862 ;; Defined at:
 18863 ;;		line 310 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18864 ;; Parameters:    Size  Location     Type
 18865 ;;		None
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;		None
 18868 ;; Return value:  Size  Location     Type
 18869 ;;                  1    wreg      void 
 18870 ;; Registers used:
 18871 ;;		None
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;Total ram usage:        0 bytes
 18882 ;; Hardware stack levels used: 1
 18883 ;; Hardware stack levels required when called: 4
 18884 ;; This function calls:
 18885 ;;		Nothing
 18886 ;; This function is called by:
 18887 ;;		_main
 18888 ;; This function uses a non-reentrant model
 18889 ;;
 18890                           
 18891     16A2                     _LIGHTBLUE_Initialize:	
 18892                           ;psect for function _LIGHTBLUE_Initialize
 18893                           
 18894     16A2                     l6691:	
 18895                           ;incstack = 0
 18896                           ; Regs used in _LIGHTBLUE_Initialize: []
 18897                           
 18898                           
 18899                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 18900     16A2  3001               	movlw	1
 18901     16A3  0140               	movlb	0	; select bank0
 18902     16A4  00CA               	movwf	_bitMap	;volatile
 18903                           
 18904                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 313:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 18905     16A5  3001               	movlw	1
 18906     16A6  00CB               	movwf	_bitMap+1	;volatile
 18907     16A7                     l53:
 18908     16A7  0008               	return
 18909     16A8                     __end_of_LIGHTBLUE_Initialize:
 18910                           
 18911                           	psect	text73
 18912     0E30                     __ptext73:	
 18913 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 18914 ;; Defined at:
 18915 ;;		line 329 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18916 ;; Parameters:    Size  Location     Type
 18917 ;;		None
 18918 ;; Auto vars:     Size  Location     Type
 18919 ;;  payload        13   19[BANK0 ] unsigned char [13]
 18920 ;;  accelData       6   32[BANK0 ] struct .
 18921 ;; Return value:  Size  Location     Type
 18922 ;;                  1    wreg      void 
 18923 ;; Registers used:
 18924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18925 ;; Tracked objects:
 18926 ;;		On entry : 0/0
 18927 ;;		On exit  : 0/0
 18928 ;;		Unchanged: 0/0
 18929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18931 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18933 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18934 ;;Total ram usage:       19 bytes
 18935 ;; Hardware stack levels used: 1
 18936 ;; Hardware stack levels required when called: 16
 18937 ;; This function calls:
 18938 ;;		_BMA253_GetAccelDataXYZ
 18939 ;;		_LIGHTBLUE_SendPacket
 18940 ;;		_LIGHTBLUE_SplitWord
 18941 ;; This function is called by:
 18942 ;;		_main
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946     0E30                     _LIGHTBLUE_AccelSensor:	
 18947                           ;psect for function _LIGHTBLUE_AccelSensor
 18948                           
 18949     0E30                     l8509:	
 18950                           ;incstack = 0
 18951 ;; hardware stack exceeded
 18952                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18953                           
 18954                           
 18955                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 331:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 332:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 334:     *payload = '\0';
 18956     0E30  0140               	movlb	0	; select bank0
 18957     0E31  01B3               	clrf	LIGHTBLUE_AccelSensor@payload
 18958     0E32                     l8511:
 18959                           
 18960                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 18961     0E32  3040               	movlw	low LIGHTBLUE_AccelSensor@accelData
 18962     0E33  00AF               	movwf	BMA253_GetAccelDataXYZ@accelData
 18963     0E34  3000               	movlw	high LIGHTBLUE_AccelSensor@accelData
 18964     0E35  00B0               	movwf	BMA253_GetAccelDataXYZ@accelData+1
 18965     0E36  3187  272B  318E   	fcall	_BMA253_GetAccelDataXYZ
 18966     0E39                     l8513:
 18967                           
 18968                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 18969     0E39  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18970     0E3A  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 18971     0E3B  30FF               	movlw	255
 18972     0E3C  0140               	movlb	0	; select bank0
 18973     0E3D  0540               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 18974     0E3E  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18975     0E3F  300F               	movlw	15
 18976     0E40  0541               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 18977     0E41  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18978     0E42  3188  200D  318E   	fcall	_LIGHTBLUE_SplitWord
 18979     0E45                     l8515:
 18980                           
 18981                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 18982     0E45  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18983     0E46  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 18984     0E47  30FF               	movlw	255
 18985     0E48  0140               	movlb	0	; select bank0
 18986     0E49  0542               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 18987     0E4A  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18988     0E4B  300F               	movlw	15
 18989     0E4C  0543               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 18990     0E4D  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18991     0E4E  3188  200D  318E   	fcall	_LIGHTBLUE_SplitWord
 18992     0E51                     l8517:
 18993                           
 18994                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 340:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 18995     0E51  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18996     0E52  00F8               	movwf	LIGHTBLUE_SplitWord@payload
 18997     0E53  30FF               	movlw	255
 18998     0E54  0140               	movlb	0	; select bank0
 18999     0E55  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 19000     0E56  00F9               	movwf	LIGHTBLUE_SplitWord@value
 19001     0E57  300F               	movlw	15
 19002     0E58  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 19003     0E59  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 19004     0E5A  3188  200D  318E   	fcall	_LIGHTBLUE_SplitWord
 19005     0E5D                     l8519:
 19006                           
 19007                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 19008     0E5D  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 19009     0E5E  00F6               	movwf	LIGHTBLUE_SendPacket@payload
 19010     0E5F  3058               	movlw	88
 19011     0E60  3183  2387  318E   	fcall	_LIGHTBLUE_SendPacket
 19012     0E63                     l59:
 19013     0E63  0008               	return
 19014     0E64                     __end_of_LIGHTBLUE_AccelSensor:
 19015                           
 19016                           	psect	text74
 19017     080D                     __ptext74:	
 19018 ;; *************** function _LIGHTBLUE_SplitWord *****************
 19019 ;; Defined at:
 19020 ;;		line 495 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;  payload         1    8[COMMON] PTR unsigned char 
 19023 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 19024 ;;  value           2    9[COMMON] short 
 19025 ;; Auto vars:     Size  Location     Type
 19026 ;;		None
 19027 ;; Return value:  Size  Location     Type
 19028 ;;                  1    wreg      void 
 19029 ;; Registers used:
 19030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19031 ;; Tracked objects:
 19032 ;;		On entry : 0/0
 19033 ;;		On exit  : 0/0
 19034 ;;		Unchanged: 0/0
 19035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19036 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19040 ;;Total ram usage:        3 bytes
 19041 ;; Hardware stack levels used: 1
 19042 ;; Hardware stack levels required when called: 6
 19043 ;; This function calls:
 19044 ;;		_LIGHTBLUE_SplitByte
 19045 ;; This function is called by:
 19046 ;;		_LIGHTBLUE_TemperatureSensor
 19047 ;;		_LIGHTBLUE_AccelSensor
 19048 ;; This function uses a non-reentrant model
 19049 ;;
 19050                           
 19051     080D                     _LIGHTBLUE_SplitWord:	
 19052                           ;psect for function _LIGHTBLUE_SplitWord
 19053                           
 19054     080D                     l6397:	
 19055                           ;incstack = 0
 19056                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19057                           
 19058                           
 19059                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495: static void LIGHTBLUE_SplitWo
      +                          rd(char* payload, int16_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 49
      +                          6: {;mcc_generated_files/application/LIGHTBLUE_service.c: 497:     LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 19060     080D  0878               	movf	LIGHTBLUE_SplitWord@payload,w
 19061     080E  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 19062     080F  0879               	movf	LIGHTBLUE_SplitWord@value,w
 19063     0810  00F6               	movwf	LIGHTBLUE_SplitByte@value
 19064     0811  318D  2545  3188   	fcall	_LIGHTBLUE_SplitByte
 19065                           
 19066                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 498:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 19067     0814  0878               	movf	LIGHTBLUE_SplitWord@payload,w
 19068     0815  00F5               	movwf	LIGHTBLUE_SplitByte@payload
 19069     0816  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 19070     0817  00F6               	movwf	LIGHTBLUE_SplitByte@value
 19071     0818  318D  2545  3188   	fcall	_LIGHTBLUE_SplitByte
 19072     081B                     l131:
 19073     081B  0008               	return
 19074     081C                     __end_of_LIGHTBLUE_SplitWord:
 19075                           
 19076                           	psect	text75
 19077     0D45                     __ptext75:	
 19078 ;; *************** function _LIGHTBLUE_SplitByte *****************
 19079 ;; Defined at:
 19080 ;;		line 501 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19081 ;; Parameters:    Size  Location     Type
 19082 ;;  payload         1    5[COMMON] PTR unsigned char 
 19083 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 19084 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 19085 ;;  value           1    6[COMMON] char 
 19086 ;; Auto vars:     Size  Location     Type
 19087 ;;		None
 19088 ;; Return value:  Size  Location     Type
 19089 ;;                  1    wreg      void 
 19090 ;; Registers used:
 19091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19092 ;; Tracked objects:
 19093 ;;		On entry : 0/0
 19094 ;;		On exit  : 0/0
 19095 ;;		Unchanged: 0/0
 19096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19100 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19101 ;;Total ram usage:        3 bytes
 19102 ;; Hardware stack levels used: 1
 19103 ;; Hardware stack levels required when called: 5
 19104 ;; This function calls:
 19105 ;;		_strlen
 19106 ;; This function is called by:
 19107 ;;		_LIGHTBLUE_PushButton
 19108 ;;		_LIGHTBLUE_AccState
 19109 ;;		_LIGHTBLUE_LedState
 19110 ;;		_LIGHTBLUE_SendProtocolVersion
 19111 ;;		_LIGHTBLUE_SplitWord
 19112 ;; This function uses a non-reentrant model
 19113 ;;
 19114                           
 19115     0D45                     _LIGHTBLUE_SplitByte:	
 19116                           ;psect for function _LIGHTBLUE_SplitByte
 19117                           
 19118     0D45                     l6259:	
 19119                           ;incstack = 0
 19120                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19121                           
 19122                           
 19123                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 501: static void LIGHTBLUE_SplitBy
      +                          te(char* payload, int8_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 502
      +                          : {;mcc_generated_files/application/LIGHTBLUE_service.c: 503:     payload += strlen(payl
      +                          oad);
 19124     0D45  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 19125     0D46  00F0               	movwf	strlen@s
 19126     0D47  01F1               	clrf	strlen@s+1
 19127     0D48  318A  2257  318D   	fcall	_strlen
 19128     0D4B  0870               	movf	?_strlen,w
 19129     0D4C  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 19130     0D4D                     l6261:
 19131                           
 19132                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 19133     0D4D  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 19134     0D4E  0086               	movwf	6
 19135     0D4F  0187               	clrf	7
 19136     0D50  0876               	movf	LIGHTBLUE_SplitByte@value,w
 19137     0D51  00F7               	movwf	??_LIGHTBLUE_SplitByte
 19138     0D52  0E77               	swapf	??_LIGHTBLUE_SplitByte,w
 19139     0D53  390F               	andlw	15
 19140     0D54  1BF7               	btfsc	??_LIGHTBLUE_SplitByte,7
 19141     0D55  38F0               	iorlw	240
 19142     0D56  390F               	andlw	15
 19143     0D57  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 19144     0D58  0084               	movwf	4
 19145     0D59  3001               	movlw	1	; select bank3/4
 19146     0D5A  0085               	movwf	5
 19147     0D5B  0800               	movf	0,w
 19148     0D5C  0081               	movwf	1
 19149     0D5D                     l6263:
 19150     0D5D  3001               	movlw	1
 19151     0D5E  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 19152     0D5F                     l6265:
 19153                           
 19154                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 19155     0D5F  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 19156     0D60  0086               	movwf	6
 19157     0D61  0187               	clrf	7
 19158     0D62  0876               	movf	LIGHTBLUE_SplitByte@value,w
 19159     0D63  390F               	andlw	15
 19160     0D64  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 19161     0D65  0084               	movwf	4
 19162     0D66  3001               	movlw	1	; select bank3/4
 19163     0D67  0085               	movwf	5
 19164     0D68  0800               	movf	0,w
 19165     0D69  0081               	movwf	1
 19166     0D6A                     l6267:
 19167     0D6A  3001               	movlw	1
 19168     0D6B  07F5               	addwf	LIGHTBLUE_SplitByte@payload,f
 19169     0D6C                     l6269:
 19170                           
 19171                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:     *payload = '\0';
 19172     0D6C  0875               	movf	LIGHTBLUE_SplitByte@payload,w
 19173     0D6D  0086               	movwf	6
 19174     0D6E  0187               	clrf	7
 19175     0D6F  0181               	clrf	1
 19176     0D70                     l134:
 19177     0D70  0008               	return
 19178     0D71                     __end_of_LIGHTBLUE_SplitByte:
 19179                           
 19180                           	psect	text76
 19181     0387                     __ptext76:	
 19182 ;; *************** function _LIGHTBLUE_SendPacket *****************
 19183 ;; Defined at:
 19184 ;;		line 481 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 19185 ;; Parameters:    Size  Location     Type
 19186 ;;  packetID        1    wreg     unsigned char 
 19187 ;;  payload         1    6[COMMON] PTR unsigned char 
 19188 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3), LIGHTBL
      +UE_PushButton@payload(3), 
 19189 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 19190 ;; Auto vars:     Size  Location     Type
 19191 ;;  packetID        1    9[COMMON] unsigned char 
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  1    wreg      void 
 19194 ;; Registers used:
 19195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19201 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19205 ;;Total ram usage:        4 bytes
 19206 ;; Hardware stack levels used: 1
 19207 ;; Hardware stack levels required when called: 6
 19208 ;; This function calls:
 19209 ;;		_RN487X_Write
 19210 ;;		_strlen
 19211 ;; This function is called by:
 19212 ;;		_LIGHTBLUE_TemperatureSensor
 19213 ;;		_LIGHTBLUE_AccelSensor
 19214 ;;		_LIGHTBLUE_PushButton
 19215 ;;		_LIGHTBLUE_AccState
 19216 ;;		_LIGHTBLUE_LedState
 19217 ;;		_LIGHTBLUE_SendProtocolVersion
 19218 ;; This function uses a non-reentrant model
 19219 ;;
 19220                           
 19221     0387                     _LIGHTBLUE_SendPacket:	
 19222                           ;psect for function _LIGHTBLUE_SendPacket
 19223                           
 19224                           
 19225                           ;incstack = 0
 19226                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19227                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 19228     0387  00F9               	movwf	LIGHTBLUE_SendPacket@packetID
 19229     0388                     l6241:
 19230                           
 19231                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 481: static void LIGHTBLUE_SendPac
      +                          ket(char packetID, char* payload);mcc_generated_files/application/LIGHTBLUE_service.c: 4
      +                          82: {;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     RN487X.Write(('['));
 19232     0388  305B               	movlw	91
 19233     0389  00F5               	movwf	RN487X_Write@txData
 19234     038A  3068               	movlw	low (_RN487X| (0+32768))
 19235     038B  0084               	movwf	4
 19236     038C  3090               	movlw	high (_RN487X| (0+32768))
 19237     038D  0085               	movwf	5
 19238     038E  3F01               	moviw [1]fsr0
 19239     038F  008A               	movwf	10
 19240     0390  3F00               	moviw [0]fsr0
 19241     0391  000A               	callw
 19242     0392  3183               	pagesel	$
 19243                           
 19244                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 19245     0393  0140               	movlb	0	; select bank0
 19246     0394  086A               	movf	_sequenceNumber,w
 19247     0395  390F               	andlw	15
 19248     0396  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 19249     0397  0086               	movwf	6
 19250     0398  3001               	movlw	1	; select bank3/4
 19251     0399  0087               	movwf	7
 19252     039A  0801               	movf	1,w
 19253     039B  00F5               	movwf	RN487X_Write@txData
 19254     039C  3068               	movlw	low (_RN487X| (0+32768))
 19255     039D  0084               	movwf	4
 19256     039E  3090               	movlw	high (_RN487X| (0+32768))
 19257     039F  0085               	movwf	5
 19258     03A0  3F01               	moviw [1]fsr0
 19259     03A1  008A               	movwf	10
 19260     03A2  3F00               	moviw [0]fsr0
 19261     03A3  000A               	callw
 19262     03A4  3183               	pagesel	$
 19263     03A5                     l6243:
 19264     03A5  3001               	movlw	1
 19265     03A6  0140               	movlb	0	; select bank0
 19266     03A7  07EA               	addwf	_sequenceNumber,f
 19267     03A8                     l6245:
 19268                           
 19269                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 485:     RN487X.Write(packetID);
 19270     03A8  0879               	movf	LIGHTBLUE_SendPacket@packetID,w
 19271     03A9  00F5               	movwf	RN487X_Write@txData
 19272     03AA  3068               	movlw	low (_RN487X| (0+32768))
 19273     03AB  0084               	movwf	4
 19274     03AC  3090               	movlw	high (_RN487X| (0+32768))
 19275     03AD  0085               	movwf	5
 19276     03AE  3F01               	moviw [1]fsr0
 19277     03AF  008A               	movwf	10
 19278     03B0  3F00               	moviw [0]fsr0
 19279     03B1  000A               	callw
 19280     03B2  3183               	pagesel	$
 19281     03B3                     l6247:
 19282                           
 19283                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 486:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 19284     03B3  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 19285     03B4  00F0               	movwf	strlen@s
 19286     03B5  01F1               	clrf	strlen@s+1
 19287     03B6  318A  2257  3183   	fcall	_strlen
 19288     03B9  0870               	movf	?_strlen,w
 19289     03BA  00F7               	movwf	??_LIGHTBLUE_SendPacket
 19290     03BB  0871               	movf	?_strlen+1,w
 19291     03BC  00F8               	movwf	??_LIGHTBLUE_SendPacket+1
 19292     03BD  3004               	movlw	4
 19293     03BE                     u2715:
 19294     03BE  36F8               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 19295     03BF  0CF7               	rrf	??_LIGHTBLUE_SendPacket,f
 19296     03C0  0B89               	decfsz	9,f
 19297     03C1  2BBE               	goto	u2715
 19298     03C2  0877               	movf	??_LIGHTBLUE_SendPacket,w
 19299     03C3  390F               	andlw	15
 19300     03C4  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 19301     03C5  0086               	movwf	6
 19302     03C6  3001               	movlw	1	; select bank3/4
 19303     03C7  0087               	movwf	7
 19304     03C8  0801               	movf	1,w
 19305     03C9  00F5               	movwf	RN487X_Write@txData
 19306     03CA  3068               	movlw	low (_RN487X| (0+32768))
 19307     03CB  0084               	movwf	4
 19308     03CC  3090               	movlw	high (_RN487X| (0+32768))
 19309     03CD  0085               	movwf	5
 19310     03CE  3F01               	moviw [1]fsr0
 19311     03CF  008A               	movwf	10
 19312     03D0  3F00               	moviw [0]fsr0
 19313     03D1  000A               	callw
 19314     03D2  3183               	pagesel	$
 19315     03D3                     l6249:
 19316                           
 19317                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 487:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 19318     03D3  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 19319     03D4  00F0               	movwf	strlen@s
 19320     03D5  01F1               	clrf	strlen@s+1
 19321     03D6  318A  2257  3183   	fcall	_strlen
 19322     03D9  0870               	movf	?_strlen,w
 19323     03DA  390F               	andlw	15
 19324     03DB  3EC4               	addlw	(low (__hex| (0+256)))& (0+255)
 19325     03DC  0086               	movwf	6
 19326     03DD  3001               	movlw	1	; select bank3/4
 19327     03DE  0087               	movwf	7
 19328     03DF  0801               	movf	1,w
 19329     03E0  00F5               	movwf	RN487X_Write@txData
 19330     03E1  3068               	movlw	low (_RN487X| (0+32768))
 19331     03E2  0084               	movwf	4
 19332     03E3  3090               	movlw	high (_RN487X| (0+32768))
 19333     03E4  0085               	movwf	5
 19334     03E5  3F01               	moviw [1]fsr0
 19335     03E6  008A               	movwf	10
 19336     03E7  3F00               	moviw [0]fsr0
 19337     03E8  000A               	callw
 19338     03E9  3183               	pagesel	$
 19339                           
 19340                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     while (*payload)
 19341     03EA  2BFB               	goto	l6255
 19342     03EB                     l6251:
 19343                           
 19344                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 490:         RN487X.Write((*(uint8_t *)payload++));
 19345     03EB  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 19346     03EC  0086               	movwf	6
 19347     03ED  0187               	clrf	7
 19348     03EE  0801               	movf	1,w
 19349     03EF  00F5               	movwf	RN487X_Write@txData
 19350     03F0  3068               	movlw	low (_RN487X| (0+32768))
 19351     03F1  0084               	movwf	4
 19352     03F2  3090               	movlw	high (_RN487X| (0+32768))
 19353     03F3  0085               	movwf	5
 19354     03F4  3F01               	moviw [1]fsr0
 19355     03F5  008A               	movwf	10
 19356     03F6  3F00               	moviw [0]fsr0
 19357     03F7  000A               	callw
 19358     03F8  3183               	pagesel	$
 19359     03F9                     l6253:
 19360     03F9  3001               	movlw	1
 19361     03FA  07F6               	addwf	LIGHTBLUE_SendPacket@payload,f
 19362     03FB                     l6255:
 19363                           
 19364                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     while (*payload)
 19365     03FB  0876               	movf	LIGHTBLUE_SendPacket@payload,w
 19366     03FC  0086               	movwf	6
 19367     03FD  0187               	clrf	7
 19368     03FE  0801               	movf	1,w
 19369     03FF  1D03               	btfss	3,2
 19370     0400  2C02               	goto	u2721
 19371     0401  2C03               	goto	u2720
 19372     0402                     u2721:
 19373     0402  2BEB               	goto	l6251
 19374     0403                     u2720:
 19375     0403                     l6257:
 19376                           
 19377                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 492:     RN487X.Write((']'));
 19378     0403  305D               	movlw	93
 19379     0404  00F5               	movwf	RN487X_Write@txData
 19380     0405  3068               	movlw	low (_RN487X| (0+32768))
 19381     0406  0084               	movwf	4
 19382     0407  3090               	movlw	high (_RN487X| (0+32768))
 19383     0408  0085               	movwf	5
 19384     0409  3F01               	moviw [1]fsr0
 19385     040A  008A               	movwf	10
 19386     040B  3F00               	moviw [0]fsr0
 19387     040C  000A               	callw
 19388     040D  3183               	pagesel	$
 19389     040E                     l128:
 19390     040E  0008               	return
 19391     040F                     __end_of_LIGHTBLUE_SendPacket:
 19392                           
 19393                           	psect	text77
 19394     0A57                     __ptext77:	
 19395 ;; *************** function _strlen *****************
 19396 ;; Defined at:
 19397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 19398 ;; Parameters:    Size  Location     Type
 19399 ;;  s               2    0[COMMON] PTR const unsigned char 
 19400 ;;		 -> lightBlueSerial@main$F4020(80), STR_6(12), STR_4(11), statusBuffer(80), 
 19401 ;;		 -> NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3)
      +, 
 19402 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 19403 ;; Auto vars:     Size  Location     Type
 19404 ;;  a               2    3[COMMON] PTR const unsigned char 
 19405 ;;		 -> lightBlueSerial@main$F4020(80), STR_6(12), STR_4(11), statusBuffer(80), 
 19406 ;;		 -> NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_AccState@payload(3)
      +, 
 19407 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 19408 ;; Return value:  Size  Location     Type
 19409 ;;                  2    0[COMMON] unsigned int 
 19410 ;; Registers used:
 19411 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19412 ;; Tracked objects:
 19413 ;;		On entry : 0/0
 19414 ;;		On exit  : 0/0
 19415 ;;		Unchanged: 0/0
 19416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19421 ;;Total ram usage:        5 bytes
 19422 ;; Hardware stack levels used: 1
 19423 ;; Hardware stack levels required when called: 4
 19424 ;; This function calls:
 19425 ;;		Nothing
 19426 ;; This function is called by:
 19427 ;;		_LIGHTBLUE_SendProtocolVersion
 19428 ;;		_LIGHTBLUE_SendSerialData
 19429 ;;		_LIGHTBLUE_SendPacket
 19430 ;;		_LIGHTBLUE_SplitByte
 19431 ;;		_rn487x_PrintMessage
 19432 ;;		_strstr
 19433 ;; This function uses a non-reentrant model
 19434 ;;
 19435                           
 19436     0A57                     _strlen:	
 19437                           ;psect for function _strlen
 19438                           
 19439     0A57                     l5885:	
 19440                           ;incstack = 0
 19441                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 19442                           
 19443     0A57  0871               	movf	strlen@s+1,w
 19444     0A58  00F4               	movwf	strlen@a+1
 19445     0A59  0870               	movf	strlen@s,w
 19446     0A5A  00F3               	movwf	strlen@a
 19447     0A5B  2A60               	goto	l5889
 19448     0A5C                     l5887:
 19449     0A5C  3001               	movlw	1
 19450     0A5D  07F0               	addwf	strlen@s,f
 19451     0A5E  3000               	movlw	0
 19452     0A5F  3DF1               	addwfc	strlen@s+1,f
 19453     0A60                     l5889:
 19454     0A60  0870               	movf	strlen@s,w
 19455     0A61  0084               	movwf	4
 19456     0A62  0871               	movf	strlen@s+1,w
 19457     0A63  0085               	movwf	5
 19458     0A64  0012               	moviw fsr0++
 19459     0A65  1D03               	btfss	3,2
 19460     0A66  2A68               	goto	u2261
 19461     0A67  2A69               	goto	u2260
 19462     0A68                     u2261:
 19463     0A68  2A5C               	goto	l5887
 19464     0A69                     u2260:
 19465     0A69                     l5891:
 19466     0A69  0873               	movf	strlen@a,w
 19467     0A6A  0270               	subwf	strlen@s,w
 19468     0A6B  00F0               	movwf	?_strlen
 19469     0A6C  0874               	movf	strlen@a+1,w
 19470     0A6D  3B71               	subwfb	strlen@s+1,w
 19471     0A6E  00F1               	movwf	?_strlen+1
 19472     0A6F                     l2834:
 19473     0A6F  0008               	return
 19474     0A70                     __end_of_strlen:
 19475                           
 19476                           	psect	text78
 19477     1788                     __ptext78:	
 19478 ;; *************** function _RN487X_Write *****************
 19479 ;; Defined at:
 19480 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19481 ;; Parameters:    Size  Location     Type
 19482 ;;  txData          1    5[COMMON] unsigned char 
 19483 ;; Auto vars:     Size  Location     Type
 19484 ;;		None
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  1    wreg      void 
 19487 ;; Registers used:
 19488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/0
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19498 ;;Total ram usage:        1 bytes
 19499 ;; Hardware stack levels used: 1
 19500 ;; Hardware stack levels required when called: 5
 19501 ;; This function calls:
 19502 ;;		_EUSART1_Write
 19503 ;; This function is called by:
 19504 ;;		_RN487X_SendCmd
 19505 ;;		_LIGHTBLUE_SendPacket
 19506 ;;		_LIGHTBLUE_SendSerialData
 19507 ;;		_RN487X_Example_TransparentUart
 19508 ;;		_main
 19509 ;; This function uses a non-reentrant model
 19510 ;;
 19511                           
 19512     1788                     _RN487X_Write:	
 19513                           ;psect for function _RN487X_Write
 19514                           
 19515     1788                     l5841:	
 19516                           ;incstack = 0
 19517                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19518                           
 19519                           
 19520                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 19521     1788  0875               	movf	RN487X_Write@txData,w
 19522     1789  00F0               	movwf	EUSART1_Write@txData
 19523     178A  3016               	movlw	low ((_uart+22)| (0+32768))
 19524     178B  0084               	movwf	4
 19525     178C  3090               	movlw	high ((_uart+22)| (0+32768))
 19526     178D  0085               	movwf	5
 19527     178E  3F01               	moviw [1]fsr0
 19528     178F  008A               	movwf	10
 19529     1790  3F00               	moviw [0]fsr0
 19530     1791  000A               	callw
 19531     1792  3197               	pagesel	$
 19532     1793                     l904:
 19533     1793  0008               	return
 19534     1794                     __end_of_RN487X_Write:
 19535                           
 19536                           	psect	text79
 19537     0BBE                     __ptext79:	
 19538 ;; *************** function _EUSART1_Write *****************
 19539 ;; Defined at:
 19540 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;  txData          1    0[COMMON] unsigned char 
 19543 ;; Auto vars:     Size  Location     Type
 19544 ;;		None
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  1    wreg      void 
 19547 ;; Registers used:
 19548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19549 ;; Tracked objects:
 19550 ;;		On entry : 0/0
 19551 ;;		On exit  : 0/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19558 ;;Total ram usage:        1 bytes
 19559 ;; Hardware stack levels used: 1
 19560 ;; Hardware stack levels required when called: 4
 19561 ;; This function calls:
 19562 ;;		Nothing
 19563 ;; This function is called by:
 19564 ;;		_RN487X_Write
 19565 ;;		_rn487x_PrintMessageStart
 19566 ;;		_rn487x_PrintMessageEnd
 19567 ;;		_rn487x_PrintIndicatorCharacters
 19568 ;;		_rn487x_PrintMessage
 19569 ;;		_LIGHTBLUE_PerformAction
 19570 ;;		_RN487X_Example_TransparentUart
 19571 ;;		_main
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575     0BBE                     _EUSART1_Write:	
 19576                           ;psect for function _EUSART1_Write
 19577                           
 19578     0BBE                     l5823:	
 19579                           ;incstack = 0
 19580                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19581                           
 19582     0BBE                     l5825:	
 19583                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 19584                           
 19585                           
 19586                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 19587     0BBE  0140               	movlb	0	; select bank0
 19588     0BBF  0858               	movf	_eusart1TxBufferRemaining,w	;volatile
 19589     0BC0  1903               	btfsc	3,2
 19590     0BC1  2BC3               	goto	u2201
 19591     0BC2  2BC4               	goto	u2200
 19592     0BC3                     u2201:
 19593     0BC3  2BBE               	goto	l5825
 19594     0BC4                     u2200:
 19595     0BC4                     l1775:
 19596                           
 19597                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 19598     0BC4  014E               	movlb	14	; select bank14
 19599     0BC5  1A19               	btfsc	25,4	;volatile
 19600     0BC6  2BC8               	goto	u2211
 19601     0BC7  2BC9               	goto	u2210
 19602     0BC8                     u2211:
 19603     0BC8  2BCD               	goto	l1776
 19604     0BC9                     u2210:
 19605     0BC9                     l5827:
 19606                           
 19607                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 19608     0BC9  0870               	movf	EUSART1_Write@txData,w
 19609     0BCA  0142               	movlb	2	; select bank2
 19610     0BCB  009A               	movwf	26	;volatile
 19611                           
 19612                           ;mcc_generated_files/eusart1.c: 182:     }
 19613     0BCC  2BE0               	goto	l5839
 19614     0BCD                     l1776:	
 19615                           ;mcc_generated_files/eusart1.c: 183:     else
 19616                           
 19617                           
 19618                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 19619     0BCD  1219               	bcf	25,4	;volatile
 19620     0BCE                     l5829:
 19621                           
 19622                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 19623     0BCE  0140               	movlb	0	; select bank0
 19624     0BCF  085A               	movf	_eusart1TxHead,w
 19625     0BD0  3EB8               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 19626     0BD1  0086               	movwf	6
 19627     0BD2  0187               	clrf	7
 19628     0BD3  0870               	movf	EUSART1_Write@txData,w
 19629     0BD4  0081               	movwf	1
 19630     0BD5                     l5831:
 19631     0BD5  3001               	movlw	1
 19632     0BD6  07DA               	addwf	_eusart1TxHead,f	;volatile
 19633     0BD7                     l5833:
 19634                           
 19635                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 19636     0BD7  3008               	movlw	8
 19637     0BD8  025A               	subwf	_eusart1TxHead,w	;volatile
 19638     0BD9  1C03               	skipc
 19639     0BDA  2BDC               	goto	u2221
 19640     0BDB  2BDD               	goto	u2220
 19641     0BDC                     u2221:
 19642     0BDC  2BDE               	goto	l5837
 19643     0BDD                     u2220:
 19644     0BDD                     l5835:
 19645                           
 19646                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 19647     0BDD  01DA               	clrf	_eusart1TxHead	;volatile
 19648     0BDE                     l5837:
 19649                           
 19650                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 19651     0BDE  3001               	movlw	1
 19652     0BDF  02D8               	subwf	_eusart1TxBufferRemaining,f	;volatile
 19653     0BE0                     l5839:
 19654                           
 19655                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 19656     0BE0  014E               	movlb	14	; select bank14
 19657     0BE1  1619               	bsf	25,4	;volatile
 19658     0BE2                     l1779:
 19659     0BE2  0008               	return
 19660     0BE3                     __end_of_EUSART1_Write:
 19661                           
 19662                           	psect	text80
 19663     072B                     __ptext80:	
 19664 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 19665 ;; Defined at:
 19666 ;;		line 119 in file "mcc_generated_files/application/BMA253_accel.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  accelData       2   15[BANK0 ] PTR struct .
 19669 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;  sensorValue     2   17[BANK0 ] short 
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  1    wreg      void 
 19674 ;; Registers used:
 19675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19685 ;;Total ram usage:        4 bytes
 19686 ;; Hardware stack levels used: 1
 19687 ;; Hardware stack levels required when called: 15
 19688 ;; This function calls:
 19689 ;;		_BMA253_GetAccelDataX
 19690 ;;		_BMA253_GetAccelDataY
 19691 ;;		_BMA253_GetAccelDataZ
 19692 ;;		_BMA253_NewAccelDataRdyX
 19693 ;;		_BMA253_NewAccelDataRdyY
 19694 ;;		_BMA253_NewAccelDataRdyZ
 19695 ;; This function is called by:
 19696 ;;		_LIGHTBLUE_AccelSensor
 19697 ;; This function uses a non-reentrant model
 19698 ;;
 19699                           
 19700     072B                     _BMA253_GetAccelDataXYZ:	
 19701                           ;psect for function _BMA253_GetAccelDataXYZ
 19702                           
 19703     072B                     l8481:	
 19704                           ;incstack = 0
 19705 ;; hardware stack exceeded
 19706                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19707                           
 19708     072B                     l8483:	
 19709                           ;mcc_generated_files/application/BMA253_accel.c: 120:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 121:     while (!BMA253_NewAccelDataRdyX()) {
 19710                           
 19711                           
 19712                           ;mcc_generated_files/application/BMA253_accel.c: 121:     while (!BMA253_NewAccelDataRdy
      +                          X()) {
 19713     072B  3188  204D  3187   	fcall	_BMA253_NewAccelDataRdyX
 19714     072E  3A00               	xorlw	0
 19715     072F  1903               	skipnz
 19716     0730  2F32               	goto	u4411
 19717     0731  2F33               	goto	u4410
 19718     0732                     u4411:
 19719     0732  2F2B               	goto	l8483
 19720     0733                     u4410:
 19721     0733                     l8485:
 19722                           
 19723                           ;mcc_generated_files/application/BMA253_accel.c: 125:     BMA253_GetAccelDataX(&sensorVa
      +                          lue);
 19724     0733  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19725     0734  0140               	movlb	0	; select bank0
 19726     0735  00AA               	movwf	BMA253_GetAccelDataX@xAccelData
 19727     0736  318C  2453  3187   	fcall	_BMA253_GetAccelDataX
 19728     0739                     l8487:
 19729                           
 19730                           ;mcc_generated_files/application/BMA253_accel.c: 126:     accelData->x = sensorValue;
 19731     0739  0140               	movlb	0	; select bank0
 19732     073A  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19733     073B  0086               	movwf	6
 19734     073C  0830               	movf	BMA253_GetAccelDataXYZ@accelData+1,w
 19735     073D  0087               	movwf	7
 19736     073E  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19737     073F  3FC0               	movwi [0]fsr1
 19738     0740  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19739     0741  3FC1               	movwi [1]fsr1
 19740     0742                     l8489:	
 19741                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 19742                           
 19743                           
 19744                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 19745     0742  3188  205E  3187   	fcall	_BMA253_NewAccelDataRdyY
 19746     0745  3A00               	xorlw	0
 19747     0746  1903               	skipnz
 19748     0747  2F49               	goto	u4421
 19749     0748  2F4A               	goto	u4420
 19750     0749                     u4421:
 19751     0749  2F42               	goto	l8489
 19752     074A                     u4420:
 19753     074A                     l8491:
 19754                           
 19755                           ;mcc_generated_files/application/BMA253_accel.c: 132:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 19756     074A  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19757     074B  0140               	movlb	0	; select bank0
 19758     074C  00AA               	movwf	BMA253_GetAccelDataY@yAccelData
 19759     074D  318C  247A  3187   	fcall	_BMA253_GetAccelDataY
 19760     0750                     l8493:
 19761                           
 19762                           ;mcc_generated_files/application/BMA253_accel.c: 133:     accelData->y = sensorValue;
 19763     0750  0140               	movlb	0	; select bank0
 19764     0751  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19765     0752  0086               	movwf	6
 19766     0753  0187               	clrf	7
 19767     0754  3142               	addfsr 1,2
 19768     0755  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19769     0756  3FC0               	movwi [0]fsr1
 19770     0757  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19771     0758  3FC1               	movwi [1]fsr1
 19772     0759                     l8495:	
 19773                           ;mcc_generated_files/application/BMA253_accel.c: 135:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 19774                           
 19775                           
 19776                           ;mcc_generated_files/application/BMA253_accel.c: 135:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 19777     0759  3188  206F  3187   	fcall	_BMA253_NewAccelDataRdyZ
 19778     075C  3A00               	xorlw	0
 19779     075D  1903               	skipnz
 19780     075E  2F60               	goto	u4431
 19781     075F  2F61               	goto	u4430
 19782     0760                     u4431:
 19783     0760  2F59               	goto	l8495
 19784     0761                     u4430:
 19785     0761                     l8497:
 19786                           
 19787                           ;mcc_generated_files/application/BMA253_accel.c: 139:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 19788     0761  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19789     0762  0140               	movlb	0	; select bank0
 19790     0763  00AA               	movwf	BMA253_GetAccelDataZ@zAccelData
 19791     0764  318C  24A1  3187   	fcall	_BMA253_GetAccelDataZ
 19792     0767                     l8499:
 19793                           
 19794                           ;mcc_generated_files/application/BMA253_accel.c: 140:     accelData->z = sensorValue;
 19795     0767  0140               	movlb	0	; select bank0
 19796     0768  082F               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19797     0769  0086               	movwf	6
 19798     076A  0187               	clrf	7
 19799     076B  3144               	addfsr 1,4
 19800     076C  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19801     076D  3FC0               	movwi [0]fsr1
 19802     076E  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19803     076F  3FC1               	movwi [1]fsr1
 19804     0770                     l215:
 19805     0770  0008               	return
 19806     0771                     __end_of_BMA253_GetAccelDataXYZ:
 19807                           
 19808                           	psect	text81
 19809     0CA1                     __ptext81:	
 19810 ;; *************** function _BMA253_GetAccelDataZ *****************
 19811 ;; Defined at:
 19812 ;;		line 107 in file "mcc_generated_files/application/BMA253_accel.c"
 19813 ;; Parameters:    Size  Location     Type
 19814 ;;  zAccelData      1   10[BANK0 ] PTR short 
 19815 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19816 ;; Auto vars:     Size  Location     Type
 19817 ;;  msbData         1   14[BANK0 ] unsigned char 
 19818 ;;  lsbData         1   13[BANK0 ] unsigned char 
 19819 ;; Return value:  Size  Location     Type
 19820 ;;                  1    wreg      void 
 19821 ;; Registers used:
 19822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19823 ;; Tracked objects:
 19824 ;;		On entry : 0/0
 19825 ;;		On exit  : 0/0
 19826 ;;		Unchanged: 0/0
 19827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19828 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19831 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19832 ;;Total ram usage:        5 bytes
 19833 ;; Hardware stack levels used: 1
 19834 ;; Hardware stack levels required when called: 14
 19835 ;; This function calls:
 19836 ;;		_BMA253_NewAccelDataRdyZ
 19837 ;;		_i2c_read1ByteRegister
 19838 ;; This function is called by:
 19839 ;;		_BMA253_GetAccelDataXYZ
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843     0CA1                     _BMA253_GetAccelDataZ:	
 19844                           ;psect for function _BMA253_GetAccelDataZ
 19845                           
 19846     0CA1                     l8459:	
 19847                           ;incstack = 0
 19848 ;; hardware stack exceeded
 19849                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19850                           
 19851     0CA1                     l8461:	
 19852                           ;mcc_generated_files/application/BMA253_accel.c: 108:     uint8_t lsbData;;mcc_generated
      +                          _files/application/BMA253_accel.c: 109:     uint8_t msbData;;mcc_generated_files/applica
      +                          tion/BMA253_accel.c: 110:     while (!BMA253_NewAccelDataRdyZ()) {
 19853                           
 19854                           
 19855                           ;mcc_generated_files/application/BMA253_accel.c: 110:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 19856     0CA1  3188  206F  318C   	fcall	_BMA253_NewAccelDataRdyZ
 19857     0CA4  3A00               	xorlw	0
 19858     0CA5  1903               	skipnz
 19859     0CA6  2CA8               	goto	u4401
 19860     0CA7  2CA9               	goto	u4400
 19861     0CA8                     u4401:
 19862     0CA8  2CA1               	goto	l8461
 19863     0CA9                     u4400:
 19864     0CA9                     l8463:
 19865                           
 19866                           ;mcc_generated_files/application/BMA253_accel.c: 114:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 19867     0CA9  3006               	movlw	6
 19868     0CAA  00FD               	movwf	i2c_read1ByteRegister@reg
 19869     0CAB  3019               	movlw	25
 19870     0CAC  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 19871     0CAF  0140               	movlb	0	; select bank0
 19872     0CB0  00AD               	movwf	BMA253_GetAccelDataZ@lsbData
 19873                           
 19874                           ;mcc_generated_files/application/BMA253_accel.c: 115:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 19875     0CB1  3007               	movlw	7
 19876     0CB2  00FD               	movwf	i2c_read1ByteRegister@reg
 19877     0CB3  3019               	movlw	25
 19878     0CB4  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 19879     0CB7  0140               	movlb	0	; select bank0
 19880     0CB8  00AE               	movwf	BMA253_GetAccelDataZ@msbData
 19881     0CB9                     l8465:
 19882                           
 19883                           ;mcc_generated_files/application/BMA253_accel.c: 116:     *zAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 19884     0CB9  082A               	movf	BMA253_GetAccelDataZ@zAccelData,w
 19885     0CBA  0086               	movwf	6
 19886     0CBB  0187               	clrf	7
 19887     0CBC  0E2D               	swapf	BMA253_GetAccelDataZ@lsbData,w
 19888     0CBD  390F               	andlw	15
 19889     0CBE  00AB               	movwf	??_BMA253_GetAccelDataZ
 19890     0CBF  0E2E               	swapf	BMA253_GetAccelDataZ@msbData,w
 19891     0CC0  00AC               	movwf	??_BMA253_GetAccelDataZ+1
 19892     0CC1  39F0               	andlw	240
 19893     0CC2  042B               	iorwf	??_BMA253_GetAccelDataZ,w
 19894     0CC3  3FC0               	movwi [0]fsr1
 19895     0CC4  082C               	movf	??_BMA253_GetAccelDataZ+1,w
 19896     0CC5  390F               	andlw	15
 19897     0CC6  3FC1               	movwi [1]fsr1
 19898     0CC7                     l203:
 19899     0CC7  0008               	return
 19900     0CC8                     __end_of_BMA253_GetAccelDataZ:
 19901                           
 19902                           	psect	text82
 19903     086F                     __ptext82:	
 19904 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 19905 ;; Defined at:
 19906 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 19907 ;; Parameters:    Size  Location     Type
 19908 ;;		None
 19909 ;; Auto vars:     Size  Location     Type
 19910 ;;  zNewData        1    9[BANK0 ] _Bool 
 19911 ;; Return value:  Size  Location     Type
 19912 ;;                  1    wreg      _Bool 
 19913 ;; Registers used:
 19914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19915 ;; Tracked objects:
 19916 ;;		On entry : 0/0
 19917 ;;		On exit  : 0/0
 19918 ;;		Unchanged: 0/0
 19919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19924 ;;Total ram usage:        1 bytes
 19925 ;; Hardware stack levels used: 1
 19926 ;; Hardware stack levels required when called: 13
 19927 ;; This function calls:
 19928 ;;		_i2c_read1ByteRegister
 19929 ;; This function is called by:
 19930 ;;		_BMA253_GetAccelDataZ
 19931 ;;		_BMA253_GetAccelDataXYZ
 19932 ;; This function uses a non-reentrant model
 19933 ;;
 19934                           
 19935     086F                     _BMA253_NewAccelDataRdyZ:	
 19936                           ;psect for function _BMA253_NewAccelDataRdyZ
 19937                           
 19938     086F                     l8419:	
 19939                           ;incstack = 0
 19940                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19941                           
 19942                           
 19943                           ;mcc_generated_files/application/BMA253_accel.c: 164:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 166:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 19944     086F  3006               	movlw	6
 19945     0870  00FD               	movwf	i2c_read1ByteRegister@reg
 19946     0871  3019               	movlw	25
 19947     0872  3185  2569  3188   	fcall	_i2c_read1ByteRegister
 19948     0875  3901               	andlw	1
 19949     0876  1D03               	btfss	3,2
 19950     0877  2879               	goto	u4341
 19951     0878  287B               	goto	u4340
 19952     0879                     u4341:
 19953     0879  3001               	movlw	1
 19954     087A  287C               	goto	u4350
 19955     087B                     u4340:
 19956     087B  3000               	movlw	0
 19957     087C                     u4350:
 19958     087C  0140               	movlb	0	; select bank0
 19959     087D  00A9               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 19960     087E                     l8421:
 19961                           
 19962                           ;mcc_generated_files/application/BMA253_accel.c: 168:     return zNewData;
 19963     087E  0829               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 19964     087F                     l227:
 19965     087F  0008               	return
 19966     0880                     __end_of_BMA253_NewAccelDataRdyZ:
 19967                           
 19968                           	psect	text83
 19969     0C7A                     __ptext83:	
 19970 ;; *************** function _BMA253_GetAccelDataY *****************
 19971 ;; Defined at:
 19972 ;;		line 95 in file "mcc_generated_files/application/BMA253_accel.c"
 19973 ;; Parameters:    Size  Location     Type
 19974 ;;  yAccelData      1   10[BANK0 ] PTR short 
 19975 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19976 ;; Auto vars:     Size  Location     Type
 19977 ;;  msbData         1   14[BANK0 ] unsigned char 
 19978 ;;  lsbData         1   13[BANK0 ] unsigned char 
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  1    wreg      void 
 19981 ;; Registers used:
 19982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19988 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19991 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19992 ;;Total ram usage:        5 bytes
 19993 ;; Hardware stack levels used: 1
 19994 ;; Hardware stack levels required when called: 14
 19995 ;; This function calls:
 19996 ;;		_BMA253_NewAccelDataRdyY
 19997 ;;		_i2c_read1ByteRegister
 19998 ;; This function is called by:
 19999 ;;		_BMA253_GetAccelDataXYZ
 20000 ;; This function uses a non-reentrant model
 20001 ;;
 20002                           
 20003     0C7A                     _BMA253_GetAccelDataY:	
 20004                           ;psect for function _BMA253_GetAccelDataY
 20005                           
 20006     0C7A                     l8451:	
 20007                           ;incstack = 0
 20008 ;; hardware stack exceeded
 20009                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20010                           
 20011     0C7A                     l8453:	
 20012                           ;mcc_generated_files/application/BMA253_accel.c: 96:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 97:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 98:     while (!BMA253_NewAccelDataRdyY()) {
 20013                           
 20014                           
 20015                           ;mcc_generated_files/application/BMA253_accel.c: 98:     while (!BMA253_NewAccelDataRdyY
      +                          ()) {
 20016     0C7A  3188  205E  318C   	fcall	_BMA253_NewAccelDataRdyY
 20017     0C7D  3A00               	xorlw	0
 20018     0C7E  1903               	skipnz
 20019     0C7F  2C81               	goto	u4391
 20020     0C80  2C82               	goto	u4390
 20021     0C81                     u4391:
 20022     0C81  2C7A               	goto	l8453
 20023     0C82                     u4390:
 20024     0C82                     l8455:
 20025                           
 20026                           ;mcc_generated_files/application/BMA253_accel.c: 102:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x04));
 20027     0C82  3004               	movlw	4
 20028     0C83  00FD               	movwf	i2c_read1ByteRegister@reg
 20029     0C84  3019               	movlw	25
 20030     0C85  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 20031     0C88  0140               	movlb	0	; select bank0
 20032     0C89  00AD               	movwf	BMA253_GetAccelDataY@lsbData
 20033                           
 20034                           ;mcc_generated_files/application/BMA253_accel.c: 103:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 20035     0C8A  3005               	movlw	5
 20036     0C8B  00FD               	movwf	i2c_read1ByteRegister@reg
 20037     0C8C  3019               	movlw	25
 20038     0C8D  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 20039     0C90  0140               	movlb	0	; select bank0
 20040     0C91  00AE               	movwf	BMA253_GetAccelDataY@msbData
 20041     0C92                     l8457:
 20042                           
 20043                           ;mcc_generated_files/application/BMA253_accel.c: 104:     *yAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 20044     0C92  082A               	movf	BMA253_GetAccelDataY@yAccelData,w
 20045     0C93  0086               	movwf	6
 20046     0C94  0187               	clrf	7
 20047     0C95  0E2D               	swapf	BMA253_GetAccelDataY@lsbData,w
 20048     0C96  390F               	andlw	15
 20049     0C97  00AB               	movwf	??_BMA253_GetAccelDataY
 20050     0C98  0E2E               	swapf	BMA253_GetAccelDataY@msbData,w
 20051     0C99  00AC               	movwf	??_BMA253_GetAccelDataY+1
 20052     0C9A  39F0               	andlw	240
 20053     0C9B  042B               	iorwf	??_BMA253_GetAccelDataY,w
 20054     0C9C  3FC0               	movwi [0]fsr1
 20055     0C9D  082C               	movf	??_BMA253_GetAccelDataY+1,w
 20056     0C9E  390F               	andlw	15
 20057     0C9F  3FC1               	movwi [1]fsr1
 20058     0CA0                     l197:
 20059     0CA0  0008               	return
 20060     0CA1                     __end_of_BMA253_GetAccelDataY:
 20061                           
 20062                           	psect	text84
 20063     085E                     __ptext84:	
 20064 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 20065 ;; Defined at:
 20066 ;;		line 155 in file "mcc_generated_files/application/BMA253_accel.c"
 20067 ;; Parameters:    Size  Location     Type
 20068 ;;		None
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;  yNewData        1    9[BANK0 ] _Bool 
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  1    wreg      _Bool 
 20073 ;; Registers used:
 20074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20083 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20084 ;;Total ram usage:        1 bytes
 20085 ;; Hardware stack levels used: 1
 20086 ;; Hardware stack levels required when called: 13
 20087 ;; This function calls:
 20088 ;;		_i2c_read1ByteRegister
 20089 ;; This function is called by:
 20090 ;;		_BMA253_GetAccelDataY
 20091 ;;		_BMA253_GetAccelDataXYZ
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095     085E                     _BMA253_NewAccelDataRdyY:	
 20096                           ;psect for function _BMA253_NewAccelDataRdyY
 20097                           
 20098     085E                     l8413:	
 20099                           ;incstack = 0
 20100                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20101                           
 20102                           
 20103                           ;mcc_generated_files/application/BMA253_accel.c: 156:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 158:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 20104     085E  3004               	movlw	4
 20105     085F  00FD               	movwf	i2c_read1ByteRegister@reg
 20106     0860  3019               	movlw	25
 20107     0861  3185  2569  3188   	fcall	_i2c_read1ByteRegister
 20108     0864  3901               	andlw	1
 20109     0865  1D03               	btfss	3,2
 20110     0866  2868               	goto	u4321
 20111     0867  286A               	goto	u4320
 20112     0868                     u4321:
 20113     0868  3001               	movlw	1
 20114     0869  286B               	goto	u4330
 20115     086A                     u4320:
 20116     086A  3000               	movlw	0
 20117     086B                     u4330:
 20118     086B  0140               	movlb	0	; select bank0
 20119     086C  00A9               	movwf	BMA253_NewAccelDataRdyY@yNewData
 20120     086D                     l8415:
 20121                           
 20122                           ;mcc_generated_files/application/BMA253_accel.c: 160:     return yNewData;
 20123     086D  0829               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 20124     086E                     l224:
 20125     086E  0008               	return
 20126     086F                     __end_of_BMA253_NewAccelDataRdyY:
 20127                           
 20128                           	psect	text85
 20129     0C53                     __ptext85:	
 20130 ;; *************** function _BMA253_GetAccelDataX *****************
 20131 ;; Defined at:
 20132 ;;		line 83 in file "mcc_generated_files/application/BMA253_accel.c"
 20133 ;; Parameters:    Size  Location     Type
 20134 ;;  xAccelData      1   10[BANK0 ] PTR short 
 20135 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 20136 ;; Auto vars:     Size  Location     Type
 20137 ;;  msbData         1   14[BANK0 ] unsigned char 
 20138 ;;  lsbData         1   13[BANK0 ] unsigned char 
 20139 ;; Return value:  Size  Location     Type
 20140 ;;                  1    wreg      void 
 20141 ;; Registers used:
 20142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20151 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20152 ;;Total ram usage:        5 bytes
 20153 ;; Hardware stack levels used: 1
 20154 ;; Hardware stack levels required when called: 14
 20155 ;; This function calls:
 20156 ;;		_BMA253_NewAccelDataRdyX
 20157 ;;		_i2c_read1ByteRegister
 20158 ;; This function is called by:
 20159 ;;		_BMA253_GetAccelDataXYZ
 20160 ;; This function uses a non-reentrant model
 20161 ;;
 20162                           
 20163     0C53                     _BMA253_GetAccelDataX:	
 20164                           ;psect for function _BMA253_GetAccelDataX
 20165                           
 20166     0C53                     l8443:	
 20167                           ;incstack = 0
 20168 ;; hardware stack exceeded
 20169                           ; Regs used in _BMA253_GetAccelDataX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20170                           
 20171     0C53                     l8445:	
 20172                           ;mcc_generated_files/application/BMA253_accel.c: 84:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 85:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 86:     while (!BMA253_NewAccelDataRdyX()) {
 20173                           
 20174                           
 20175                           ;mcc_generated_files/application/BMA253_accel.c: 86:     while (!BMA253_NewAccelDataRdyX
      +                          ()) {
 20176     0C53  3188  204D  318C   	fcall	_BMA253_NewAccelDataRdyX
 20177     0C56  3A00               	xorlw	0
 20178     0C57  1903               	skipnz
 20179     0C58  2C5A               	goto	u4381
 20180     0C59  2C5B               	goto	u4380
 20181     0C5A                     u4381:
 20182     0C5A  2C53               	goto	l8445
 20183     0C5B                     u4380:
 20184     0C5B                     l8447:
 20185                           
 20186                           ;mcc_generated_files/application/BMA253_accel.c: 90:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x02));
 20187     0C5B  3002               	movlw	2
 20188     0C5C  00FD               	movwf	i2c_read1ByteRegister@reg
 20189     0C5D  3019               	movlw	25
 20190     0C5E  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 20191     0C61  0140               	movlb	0	; select bank0
 20192     0C62  00AD               	movwf	BMA253_GetAccelDataX@lsbData
 20193                           
 20194                           ;mcc_generated_files/application/BMA253_accel.c: 91:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x03));
 20195     0C63  3003               	movlw	3
 20196     0C64  00FD               	movwf	i2c_read1ByteRegister@reg
 20197     0C65  3019               	movlw	25
 20198     0C66  3185  2569  318C   	fcall	_i2c_read1ByteRegister
 20199     0C69  0140               	movlb	0	; select bank0
 20200     0C6A  00AE               	movwf	BMA253_GetAccelDataX@msbData
 20201     0C6B                     l8449:
 20202                           
 20203                           ;mcc_generated_files/application/BMA253_accel.c: 92:     *xAccelData = ((((int16_t) msbD
      +                          ata) << 8) | (lsbData)) >> 4;
 20204     0C6B  082A               	movf	BMA253_GetAccelDataX@xAccelData,w
 20205     0C6C  0086               	movwf	6
 20206     0C6D  0187               	clrf	7
 20207     0C6E  0E2D               	swapf	BMA253_GetAccelDataX@lsbData,w
 20208     0C6F  390F               	andlw	15
 20209     0C70  00AB               	movwf	??_BMA253_GetAccelDataX
 20210     0C71  0E2E               	swapf	BMA253_GetAccelDataX@msbData,w
 20211     0C72  00AC               	movwf	??_BMA253_GetAccelDataX+1
 20212     0C73  39F0               	andlw	240
 20213     0C74  042B               	iorwf	??_BMA253_GetAccelDataX,w
 20214     0C75  3FC0               	movwi [0]fsr1
 20215     0C76  082C               	movf	??_BMA253_GetAccelDataX+1,w
 20216     0C77  390F               	andlw	15
 20217     0C78  3FC1               	movwi [1]fsr1
 20218     0C79                     l191:
 20219     0C79  0008               	return
 20220     0C7A                     __end_of_BMA253_GetAccelDataX:
 20221                           
 20222                           	psect	text86
 20223     084D                     __ptext86:	
 20224 ;; *************** function _BMA253_NewAccelDataRdyX *****************
 20225 ;; Defined at:
 20226 ;;		line 147 in file "mcc_generated_files/application/BMA253_accel.c"
 20227 ;; Parameters:    Size  Location     Type
 20228 ;;		None
 20229 ;; Auto vars:     Size  Location     Type
 20230 ;;  xNewData        1    9[BANK0 ] _Bool 
 20231 ;; Return value:  Size  Location     Type
 20232 ;;                  1    wreg      _Bool 
 20233 ;; Registers used:
 20234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20235 ;; Tracked objects:
 20236 ;;		On entry : 0/0
 20237 ;;		On exit  : 0/0
 20238 ;;		Unchanged: 0/0
 20239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20243 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20244 ;;Total ram usage:        1 bytes
 20245 ;; Hardware stack levels used: 1
 20246 ;; Hardware stack levels required when called: 13
 20247 ;; This function calls:
 20248 ;;		_i2c_read1ByteRegister
 20249 ;; This function is called by:
 20250 ;;		_BMA253_GetAccelDataX
 20251 ;;		_BMA253_GetAccelDataXYZ
 20252 ;; This function uses a non-reentrant model
 20253 ;;
 20254                           
 20255     084D                     _BMA253_NewAccelDataRdyX:	
 20256                           ;psect for function _BMA253_NewAccelDataRdyX
 20257                           
 20258     084D                     l8407:	
 20259                           ;incstack = 0
 20260                           ; Regs used in _BMA253_NewAccelDataRdyX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20261                           
 20262                           
 20263                           ;mcc_generated_files/application/BMA253_accel.c: 148:     _Bool xNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 150:     xNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          02)) & (0x01));
 20264     084D  3002               	movlw	2
 20265     084E  00FD               	movwf	i2c_read1ByteRegister@reg
 20266     084F  3019               	movlw	25
 20267     0850  3185  2569  3188   	fcall	_i2c_read1ByteRegister
 20268     0853  3901               	andlw	1
 20269     0854  1D03               	btfss	3,2
 20270     0855  2857               	goto	u4301
 20271     0856  2859               	goto	u4300
 20272     0857                     u4301:
 20273     0857  3001               	movlw	1
 20274     0858  285A               	goto	u4310
 20275     0859                     u4300:
 20276     0859  3000               	movlw	0
 20277     085A                     u4310:
 20278     085A  0140               	movlb	0	; select bank0
 20279     085B  00A9               	movwf	BMA253_NewAccelDataRdyX@xNewData
 20280     085C                     l8409:
 20281                           
 20282                           ;mcc_generated_files/application/BMA253_accel.c: 152:     return xNewData;
 20283     085C  0829               	movf	BMA253_NewAccelDataRdyX@xNewData,w
 20284     085D                     l221:
 20285     085D  0008               	return
 20286     085E                     __end_of_BMA253_NewAccelDataRdyX:
 20287                           
 20288                           	psect	text87
 20289     0569                     __ptext87:	
 20290 ;; *************** function _i2c_read1ByteRegister *****************
 20291 ;; Defined at:
 20292 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20293 ;; Parameters:    Size  Location     Type
 20294 ;;  address         1    wreg     unsigned char 
 20295 ;;  reg             1   13[COMMON] unsigned char 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  address         1    4[BANK0 ] unsigned char 
 20298 ;;  x               2    6[BANK0 ] int 
 20299 ;;  d2              1    8[BANK0 ] unsigned char 
 20300 ;;  e               1    5[BANK0 ] enum E358
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  1    wreg      unsigned char 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20313 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20314 ;;Total ram usage:        6 bytes
 20315 ;; Hardware stack levels used: 1
 20316 ;; Hardware stack levels required when called: 12
 20317 ;; This function calls:
 20318 ;;		_I2C1_Close
 20319 ;;		_I2C1_MasterWrite
 20320 ;;		_I2C1_Open
 20321 ;;		_I2C1_SetAddressNackCallback
 20322 ;;		_I2C1_SetBuffer
 20323 ;;		_I2C1_SetDataCompleteCallback
 20324 ;; This function is called by:
 20325 ;;		_BMA253_GetAccelDataX
 20326 ;;		_BMA253_GetAccelDataY
 20327 ;;		_BMA253_GetAccelDataZ
 20328 ;;		_BMA253_NewAccelDataRdyX
 20329 ;;		_BMA253_NewAccelDataRdyY
 20330 ;;		_BMA253_NewAccelDataRdyZ
 20331 ;;		_BMA253_Initialize
 20332 ;;		_BMA253_GetAccelChipId
 20333 ;; This function uses a non-reentrant model
 20334 ;;
 20335                           
 20336     0569                     _i2c_read1ByteRegister:	
 20337                           ;psect for function _i2c_read1ByteRegister
 20338                           
 20339                           
 20340                           ;incstack = 0
 20341                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20342                           ;i2c_read1ByteRegister@address stored from wreg
 20343     0569  0140               	movlb	0	; select bank0
 20344     056A  00A4               	movwf	i2c_read1ByteRegister@address
 20345     056B                     l8377:
 20346                           
 20347                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 20348     056B  302A               	movlw	42
 20349     056C  00A8               	movwf	i2c_read1ByteRegister@d2
 20350                           
 20351                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 20352     056D  3002               	movlw	2
 20353     056E  00A6               	movwf	i2c_read1ByteRegister@x
 20354     056F  3000               	movlw	0
 20355     0570  00A7               	movwf	i2c_read1ByteRegister@x+1
 20356     0571                     l8383:
 20357     0571  0140               	movlb	0	; select bank0
 20358     0572  0824               	movf	i2c_read1ByteRegister@address,w
 20359     0573  318F  270E  3185   	fcall	_I2C1_Open
 20360     0576  3A00               	xorlw	0
 20361     0577  1903               	skipnz
 20362     0578  2D7A               	goto	u4261
 20363     0579  2D7B               	goto	u4260
 20364     057A                     u4261:
 20365     057A  2D71               	goto	l8383
 20366     057B                     u4260:
 20367     057B                     l8385:
 20368                           
 20369                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 20370     057B  3047               	movlw	low _rd1RegCompleteHandler
 20371     057C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20372     057D  3009               	movlw	high _rd1RegCompleteHandler
 20373     057E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20374     057F  3028               	movlw	low i2c_read1ByteRegister@d2
 20375     0580  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20376     0581  3000               	movlw	high i2c_read1ByteRegister@d2
 20377     0582  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 20378     0583  3197  27AC  3185   	fcall	_I2C1_SetDataCompleteCallback
 20379     0586                     l8387:
 20380                           
 20381                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 20382     0586  307D               	movlw	low i2c_read1ByteRegister@reg
 20383     0587  00F0               	movwf	I2C1_SetBuffer@buffer
 20384     0588  3000               	movlw	high i2c_read1ByteRegister@reg
 20385     0589  00F1               	movwf	I2C1_SetBuffer@buffer+1
 20386     058A  3001               	movlw	1
 20387     058B  00F2               	movwf	I2C1_SetBuffer@bufferSize
 20388     058C  3000               	movlw	0
 20389     058D  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 20390     058E  3197  27F1  3185   	fcall	_I2C1_SetBuffer
 20391     0591                     l8389:
 20392                           
 20393                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 20394     0591  3000               	movlw	0
 20395     0592  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20396     0593  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20397     0594  3000               	movlw	0
 20398     0595  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20399     0596  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20400     0597  3188  2000  3185   	fcall	_I2C1_SetAddressNackCallback
 20401     059A                     l8391:
 20402                           
 20403                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 20404     059A  3196  268C  3185   	fcall	_I2C1_MasterWrite
 20405     059D                     l8393:	
 20406                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 20407                           
 20408     059D  3189  21F7  3185   	fcall	_I2C1_Close
 20409     05A0  0140               	movlb	0	; select bank0
 20410     05A1  00A5               	movwf	i2c_read1ByteRegister@e
 20411     05A2  0325               	decf	i2c_read1ByteRegister@e,w
 20412     05A3  1903               	btfsc	3,2
 20413     05A4  2DA6               	goto	u4271
 20414     05A5  2DA7               	goto	u4270
 20415     05A6                     u4271:
 20416     05A6  2D9D               	goto	l8393
 20417     05A7                     u4270:
 20418     05A7                     l8395:
 20419                           
 20420                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 20421     05A7  0825               	movf	i2c_read1ByteRegister@e,w
 20422     05A8  1D03               	btfss	3,2
 20423     05A9  2DAB               	goto	u4281
 20424     05AA  2DAC               	goto	u4280
 20425     05AB                     u4281:
 20426     05AB  2DAD               	goto	l8399
 20427     05AC                     u4280:
 20428     05AC  2DB7               	goto	l8403
 20429     05AD                     l8399:
 20430                           
 20431                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 20432     05AD  30FF               	movlw	255
 20433     05AE  07A6               	addwf	i2c_read1ByteRegister@x,f
 20434     05AF  30FF               	movlw	255
 20435     05B0  3DA7               	addwfc	i2c_read1ByteRegister@x+1,f
 20436     05B1                     l8401:
 20437     05B1  0826               	movf	i2c_read1ByteRegister@x,w
 20438     05B2  0427               	iorwf	i2c_read1ByteRegister@x+1,w
 20439     05B3  1D03               	btfss	3,2
 20440     05B4  2DB6               	goto	u4291
 20441     05B5  2DB7               	goto	u4290
 20442     05B6                     u4291:
 20443     05B6  2D71               	goto	l8383
 20444     05B7                     u4290:
 20445     05B7                     l8403:
 20446                           
 20447                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 20448     05B7  0828               	movf	i2c_read1ByteRegister@d2,w
 20449     05B8                     l527:
 20450     05B8  0008               	return
 20451     05B9                     __end_of_i2c_read1ByteRegister:
 20452                           
 20453                           	psect	text88
 20454     0800                     __ptext88:	
 20455 ;; *************** function _I2C1_SetAddressNackCallback *****************
 20456 ;; Defined at:
 20457 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20460 ;;		 -> NULL(1), 
 20461 ;;  ptr             2    7[COMMON] PTR void 
 20462 ;;		 -> NULL(0), 
 20463 ;; Auto vars:     Size  Location     Type
 20464 ;;		None
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  1    wreg      void 
 20467 ;; Registers used:
 20468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20469 ;; Tracked objects:
 20470 ;;		On entry : 0/0
 20471 ;;		On exit  : 0/0
 20472 ;;		Unchanged: 0/0
 20473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20478 ;;Total ram usage:        4 bytes
 20479 ;; Hardware stack levels used: 1
 20480 ;; Hardware stack levels required when called: 5
 20481 ;; This function calls:
 20482 ;;		_I2C1_SetCallback
 20483 ;; This function is called by:
 20484 ;;		_i2c_read1ByteRegister
 20485 ;;		_i2c_read2ByteRegister
 20486 ;;		_i2c_write1ByteRegister
 20487 ;;		_i2c_writeNBytes
 20488 ;;		_i2c_write2ByteRegister
 20489 ;;		_i2c_readDataBlock
 20490 ;;		_I2C1_Read1ByteRegister
 20491 ;;		_I2C1_Read2ByteRegister
 20492 ;;		_I2C1_Write1ByteRegister
 20493 ;;		_I2C1_Write2ByteRegister
 20494 ;;		_I2C1_WriteNBytes
 20495 ;;		_I2C1_ReadDataBlock
 20496 ;; This function uses a non-reentrant model
 20497 ;;
 20498                           
 20499     0800                     _I2C1_SetAddressNackCallback:	
 20500                           ;psect for function _I2C1_SetAddressNackCallback
 20501                           
 20502     0800                     l8359:	
 20503                           ;incstack = 0
 20504                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 20505                           
 20506                           
 20507                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 20508     0800  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 20509     0801  00F1               	movwf	I2C1_SetCallback@cb+1
 20510     0802  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 20511     0803  00F0               	movwf	I2C1_SetCallback@cb
 20512     0804  0878               	movf	I2C1_SetAddressNackCallback@ptr+1,w
 20513     0805  00F3               	movwf	I2C1_SetCallback@ptr+1
 20514     0806  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 20515     0807  00F2               	movwf	I2C1_SetCallback@ptr
 20516     0808  3002               	movlw	2
 20517     0809  318E  2664  3188   	fcall	_I2C1_SetCallback
 20518     080C                     l1293:
 20519     080C  0008               	return
 20520     080D                     __end_of_I2C1_SetAddressNackCallback:
 20521                           
 20522                           	psect	text89
 20523     0F0E                     __ptext89:	
 20524 ;; *************** function _I2C1_Open *****************
 20525 ;; Defined at:
 20526 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 20527 ;; Parameters:    Size  Location     Type
 20528 ;;  address         1    wreg     unsigned char 
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;  address         1    0[COMMON] unsigned char 
 20531 ;;  returnValue     1    1[COMMON] enum E358
 20532 ;; Return value:  Size  Location     Type
 20533 ;;                  1    wreg      enum E358
 20534 ;; Registers used:
 20535 ;;		wreg, status,2, status,0, pclath, cstack
 20536 ;; Tracked objects:
 20537 ;;		On entry : 0/0
 20538 ;;		On exit  : 0/0
 20539 ;;		Unchanged: 0/0
 20540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20545 ;;Total ram usage:        2 bytes
 20546 ;; Hardware stack levels used: 1
 20547 ;; Hardware stack levels required when called: 5
 20548 ;; This function calls:
 20549 ;;		_I2C1_MasterClearIrq
 20550 ;;		_I2C1_MasterOpen
 20551 ;; This function is called by:
 20552 ;;		_i2c_read1ByteRegister
 20553 ;;		_i2c_read2ByteRegister
 20554 ;;		_i2c_write1ByteRegister
 20555 ;;		_i2c_writeNBytes
 20556 ;;		_i2c_write2ByteRegister
 20557 ;;		_i2c_readDataBlock
 20558 ;;		_i2c_readNBytes
 20559 ;;		_I2C1_Read1ByteRegister
 20560 ;;		_I2C1_Read2ByteRegister
 20561 ;;		_I2C1_Write1ByteRegister
 20562 ;;		_I2C1_Write2ByteRegister
 20563 ;;		_I2C1_WriteNBytes
 20564 ;;		_I2C1_ReadNBytes
 20565 ;;		_I2C1_ReadDataBlock
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569     0F0E                     _I2C1_Open:	
 20570                           ;psect for function _I2C1_Open
 20571                           
 20572                           
 20573                           ;incstack = 0
 20574                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 20575                           ;I2C1_Open@address stored from wreg
 20576     0F0E  00F0               	movwf	I2C1_Open@address
 20577     0F0F                     l8323:
 20578                           
 20579                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 20580     0F0F  3001               	movlw	1
 20581     0F10  00F1               	movwf	I2C1_Open@returnValue
 20582                           
 20583                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 20584     0F11  0143               	movlb	3	; select bank3
 20585     0F12  1943               	btfsc	(_I2C1_Status^(0+384)+35),2
 20586     0F13  2F15               	goto	u4241
 20587     0F14  2F16               	goto	u4240
 20588     0F15                     u4241:
 20589     0F15  2F47               	goto	l8355
 20590     0F16                     u4240:
 20591     0F16                     l8325:
 20592                           
 20593                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 20594     0F16  0870               	movf	I2C1_Open@address,w
 20595     0F17  00BC               	movwf	(_I2C1_Status^(0+384)+28)
 20596     0F18                     l8327:
 20597                           
 20598                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 20599     0F18  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 20600     0F19                     l8329:
 20601                           
 20602                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 20603     0F19  1543               	bsf	(_I2C1_Status^(0+384)+35),2
 20604     0F1A                     l8331:
 20605                           
 20606                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 20607     0F1A  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 20608     0F1B                     l8333:
 20609                           
 20610                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 20611     0F1B  300E               	movlw	14
 20612     0F1C  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 20613     0F1D                     l8335:
 20614                           
 20615                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 20616     0F1D  30F4               	movlw	244
 20617     0F1E  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 20618     0F1F  3001               	movlw	1
 20619     0F20  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 20620     0F21                     l8337:
 20621                           
 20622                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 20623     0F21  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 20624                           
 20625                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 20626     0F22  3015               	movlw	low _I2C1_CallbackReturnStop
 20627     0F23  00A0               	movwf	_I2C1_Status^(0+384)
 20628     0F24  3016               	movlw	high _I2C1_CallbackReturnStop
 20629     0F25  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 20630     0F26                     l8339:
 20631                           
 20632                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 20633     0F26  01AC               	clrf	(_I2C1_Status^(0+384)+12)
 20634     0F27  01AD               	clrf	((_I2C1_Status+1)^(0+384)+12)
 20635     0F28                     l8341:
 20636                           
 20637                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 20638     0F28  3015               	movlw	low _I2C1_CallbackReturnStop
 20639     0F29  00A2               	movwf	(_I2C1_Status^(0+384)+2)
 20640     0F2A  3016               	movlw	high _I2C1_CallbackReturnStop
 20641     0F2B  00A3               	movwf	(_I2C1_Status^(0+384)+3)
 20642                           
 20643                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 20644     0F2C  01AE               	clrf	(_I2C1_Status^(0+384)+14)
 20645     0F2D  01AF               	clrf	((_I2C1_Status+1)^(0+384)+14)
 20646     0F2E                     l8343:
 20647                           
 20648                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20649     0F2E  3015               	movlw	low _I2C1_CallbackReturnStop
 20650     0F2F  00A4               	movwf	(_I2C1_Status^(0+384)+4)
 20651     0F30  3016               	movlw	high _I2C1_CallbackReturnStop
 20652     0F31  00A5               	movwf	(_I2C1_Status^(0+384)+5)
 20653     0F32                     l8345:
 20654                           
 20655                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 20656     0F32  01B0               	clrf	(_I2C1_Status^(0+384)+16)
 20657     0F33  01B1               	clrf	((_I2C1_Status+1)^(0+384)+16)
 20658                           
 20659                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20660     0F34  3015               	movlw	low _I2C1_CallbackReturnStop
 20661     0F35  00A6               	movwf	(_I2C1_Status^(0+384)+6)
 20662     0F36  3016               	movlw	high _I2C1_CallbackReturnStop
 20663     0F37  00A7               	movwf	(_I2C1_Status^(0+384)+7)
 20664     0F38                     l8347:
 20665                           
 20666                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 20667     0F38  01B2               	clrf	(_I2C1_Status^(0+384)+18)
 20668     0F39  01B3               	clrf	((_I2C1_Status+1)^(0+384)+18)
 20669     0F3A                     l8349:
 20670                           
 20671                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 20672     0F3A  3017               	movlw	low _I2C1_CallbackReturnReset
 20673     0F3B  00A8               	movwf	(_I2C1_Status^(0+384)+8)
 20674     0F3C  3016               	movlw	high _I2C1_CallbackReturnReset
 20675     0F3D  00A9               	movwf	(_I2C1_Status^(0+384)+9)
 20676                           
 20677                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 20678     0F3E  01B4               	clrf	(_I2C1_Status^(0+384)+20)
 20679     0F3F  01B5               	clrf	((_I2C1_Status+1)^(0+384)+20)
 20680     0F40                     l8351:
 20681                           
 20682                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 20683     0F40  3196  2619  318F   	fcall	_I2C1_MasterClearIrq
 20684     0F43                     l8353:
 20685                           
 20686                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 20687     0F43  3197  27C6  318F   	fcall	_I2C1_MasterOpen
 20688                           
 20689                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 20690     0F46  01F1               	clrf	I2C1_Open@returnValue
 20691     0F47                     l8355:
 20692                           
 20693                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 20694     0F47  0871               	movf	I2C1_Open@returnValue,w
 20695     0F48                     l1261:
 20696     0F48  0008               	return
 20697     0F49                     __end_of_I2C1_Open:
 20698                           
 20699                           	psect	text90
 20700     17C6                     __ptext90:	
 20701 ;; *************** function _I2C1_MasterOpen *****************
 20702 ;; Defined at:
 20703 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 20704 ;; Parameters:    Size  Location     Type
 20705 ;;		None
 20706 ;; Auto vars:     Size  Location     Type
 20707 ;;		None
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  1    wreg      _Bool 
 20710 ;; Registers used:
 20711 ;;		status,2
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/0
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20721 ;;Total ram usage:        0 bytes
 20722 ;; Hardware stack levels used: 1
 20723 ;; Hardware stack levels required when called: 4
 20724 ;; This function calls:
 20725 ;;		Nothing
 20726 ;; This function is called by:
 20727 ;;		_I2C1_Open
 20728 ;; This function uses a non-reentrant model
 20729 ;;
 20730                           
 20731     17C6                     _I2C1_MasterOpen:	
 20732                           ;psect for function _I2C1_MasterOpen
 20733                           
 20734     17C6                     l8289:	
 20735                           ;incstack = 0
 20736                           ; Regs used in _I2C1_MasterOpen: [status,2]
 20737                           
 20738                           
 20739                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 20740     17C6  0143               	movlb	3	; select bank3
 20741     17C7  1A90               	btfsc	16,5	;volatile
 20742     17C8  2FCA               	goto	u4211
 20743     17C9  2FCB               	goto	u4210
 20744     17CA                     u4211:
 20745     17CA  2FD2               	goto	l1426
 20746     17CB                     u4210:
 20747     17CB                     l8291:
 20748                           
 20749                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 20750     17CB  018F               	clrf	15	;volatile
 20751     17CC                     l8293:
 20752                           
 20753                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 20754     17CC  3008               	movlw	8
 20755     17CD  0090               	movwf	16	;volatile
 20756                           
 20757                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 20758     17CE  0191               	clrf	17	;volatile
 20759     17CF                     l8295:
 20760                           
 20761                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x03;
 20762     17CF  3003               	movlw	3
 20763     17D0  008D               	movwf	13	;volatile
 20764     17D1                     l8297:
 20765                           
 20766                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 20767     17D1  1690               	bsf	16,5	;volatile
 20768     17D2                     l1426:
 20769     17D2  0008               	return
 20770     17D3                     __end_of_I2C1_MasterOpen:
 20771                           
 20772                           	psect	text91
 20773     168C                     __ptext91:	
 20774 ;; *************** function _I2C1_MasterWrite *****************
 20775 ;; Defined at:
 20776 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      enum E358
 20783 ;; Registers used:
 20784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20794 ;;Total ram usage:        0 bytes
 20795 ;; Hardware stack levels used: 1
 20796 ;; Hardware stack levels required when called: 11
 20797 ;; This function calls:
 20798 ;;		_I2C1_MasterOperation
 20799 ;; This function is called by:
 20800 ;;		_i2c_read1ByteRegister
 20801 ;;		_i2c_read2ByteRegister
 20802 ;;		_i2c_write1ByteRegister
 20803 ;;		_i2c_writeNBytes
 20804 ;;		_i2c_write2ByteRegister
 20805 ;;		_i2c_readDataBlock
 20806 ;;		_I2C1_Read1ByteRegister
 20807 ;;		_I2C1_Read2ByteRegister
 20808 ;;		_I2C1_Write1ByteRegister
 20809 ;;		_I2C1_Write2ByteRegister
 20810 ;;		_I2C1_WriteNBytes
 20811 ;;		_I2C1_ReadDataBlock
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815     168C                     _I2C1_MasterWrite:	
 20816                           ;psect for function _I2C1_MasterWrite
 20817                           
 20818     168C                     l8361:	
 20819                           ;incstack = 0
 20820                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20821                           
 20822                           
 20823                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 20824     168C  3000               	movlw	0
 20825     168D  318B  2356  3196   	fcall	_I2C1_MasterOperation
 20826     1690                     l1277:
 20827     1690  0008               	return
 20828     1691                     __end_of_I2C1_MasterWrite:
 20829                           
 20830                           	psect	text92
 20831     0B56                     __ptext92:	
 20832 ;; *************** function _I2C1_MasterOperation *****************
 20833 ;; Defined at:
 20834 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;  read            1    wreg     _Bool 
 20837 ;; Auto vars:     Size  Location     Type
 20838 ;;  read            1    2[BANK0 ] _Bool 
 20839 ;;  returnValue     1    3[BANK0 ] enum E358
 20840 ;; Return value:  Size  Location     Type
 20841 ;;                  1    wreg      enum E358
 20842 ;; Registers used:
 20843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20852 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20853 ;;Total ram usage:        2 bytes
 20854 ;; Hardware stack levels used: 1
 20855 ;; Hardware stack levels required when called: 10
 20856 ;; This function calls:
 20857 ;;		_I2C1_MasterStart
 20858 ;;		_I2C1_Poller
 20859 ;; This function is called by:
 20860 ;;		_I2C1_MasterWrite
 20861 ;;		_I2C1_MasterRead
 20862 ;; This function uses a non-reentrant model
 20863 ;;
 20864                           
 20865     0B56                     _I2C1_MasterOperation:	
 20866                           ;psect for function _I2C1_MasterOperation
 20867                           
 20868                           
 20869                           ;incstack = 0
 20870                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20871                           ;I2C1_MasterOperation@read stored from wreg
 20872     0B56  0140               	movlb	0	; select bank0
 20873     0B57  00A2               	movwf	I2C1_MasterOperation@read
 20874     0B58                     l8305:
 20875                           
 20876                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 20877     0B58  3001               	movlw	1
 20878     0B59  00A3               	movwf	I2C1_MasterOperation@returnValue
 20879                           
 20880                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 20881     0B5A  0143               	movlb	3	; select bank3
 20882     0B5B  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 20883     0B5C  2B5E               	goto	u4221
 20884     0B5D  2B5F               	goto	u4220
 20885     0B5E                     u4221:
 20886     0B5E  2B74               	goto	l8319
 20887     0B5F                     u4220:
 20888     0B5F                     l8307:
 20889                           
 20890                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 20891     0B5F  14C3               	bsf	(_I2C1_Status^(0+384)+35),1
 20892     0B60                     l8309:
 20893                           
 20894                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 20895     0B60  0140               	movlb	0	; select bank0
 20896     0B61  01A3               	clrf	I2C1_MasterOperation@returnValue
 20897     0B62                     l8311:
 20898                           
 20899                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 20900     0B62  0822               	movf	I2C1_MasterOperation@read,w
 20901     0B63  1903               	btfsc	3,2
 20902     0B64  2B66               	goto	u4231
 20903     0B65  2B67               	goto	u4230
 20904     0B66                     u4231:
 20905     0B66  2B6B               	goto	l1269
 20906     0B67                     u4230:
 20907     0B67                     l8313:
 20908                           
 20909                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 20910     0B67  3001               	movlw	1
 20911     0B68  0143               	movlb	3	; select bank3
 20912     0B69  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 20913                           
 20914                           ;mcc_generated_files/i2c1_master.c: 235:         }
 20915     0B6A  2B6E               	goto	l8315
 20916     0B6B                     l1269:	
 20917                           ;mcc_generated_files/i2c1_master.c: 236:         else
 20918                           
 20919                           
 20920                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 20921     0B6B  3002               	movlw	2
 20922     0B6C  0143               	movlb	3	; select bank3
 20923     0B6D  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 20924     0B6E                     l8315:
 20925                           
 20926                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 20927     0B6E  3196  2622  318B   	fcall	_I2C1_MasterStart
 20928     0B71                     l8317:
 20929                           
 20930                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 20931     0B71  3197  27B9  318B   	fcall	_I2C1_Poller
 20932     0B74                     l8319:
 20933                           
 20934                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 20935     0B74  0140               	movlb	0	; select bank0
 20936     0B75  0823               	movf	I2C1_MasterOperation@returnValue,w
 20937     0B76                     l1271:
 20938     0B76  0008               	return
 20939     0B77                     __end_of_I2C1_MasterOperation:
 20940                           
 20941                           	psect	text93
 20942     17B9                     __ptext93:	
 20943 ;; *************** function _I2C1_Poller *****************
 20944 ;; Defined at:
 20945 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;		None
 20948 ;; Auto vars:     Size  Location     Type
 20949 ;;		None
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      void 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20963 ;;Total ram usage:        0 bytes
 20964 ;; Hardware stack levels used: 1
 20965 ;; Hardware stack levels required when called: 9
 20966 ;; This function calls:
 20967 ;;		_I2C1_MasterFsm
 20968 ;;		_I2C1_MasterWaitForEvent
 20969 ;; This function is called by:
 20970 ;;		_I2C1_MasterOperation
 20971 ;; This function uses a non-reentrant model
 20972 ;;
 20973                           
 20974     17B9                     _I2C1_Poller:	
 20975                           ;psect for function _I2C1_Poller
 20976                           
 20977     17B9                     l8281:	
 20978                           ;incstack = 0
 20979                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20980                           
 20981                           
 20982                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20983     17B9  2FC0               	goto	l8287
 20984     17BA                     l8283:
 20985                           
 20986                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 20987     17BA  3196  269C  3197   	fcall	_I2C1_MasterWaitForEvent
 20988     17BD                     l8285:
 20989                           
 20990                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 20991     17BD  318C  24C8  3197   	fcall	_I2C1_MasterFsm
 20992     17C0                     l8287:
 20993                           
 20994                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20995     17C0  0143               	movlb	3	; select bank3
 20996     17C1  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 20997     17C2  2FC4               	goto	u4201
 20998     17C3  2FC5               	goto	u4200
 20999     17C4                     u4201:
 21000     17C4  2FBA               	goto	l8283
 21001     17C5                     u4200:
 21002     17C5                     l1310:
 21003     17C5  0008               	return
 21004     17C6                     __end_of_I2C1_Poller:
 21005                           
 21006                           	psect	text94
 21007     169C                     __ptext94:	
 21008 ;; *************** function _I2C1_MasterWaitForEvent *****************
 21009 ;; Defined at:
 21010 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;		None
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  1    wreg      void 
 21017 ;; Registers used:
 21018 ;;		None
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;Total ram usage:        0 bytes
 21029 ;; Hardware stack levels used: 1
 21030 ;; Hardware stack levels required when called: 4
 21031 ;; This function calls:
 21032 ;;		Nothing
 21033 ;; This function is called by:
 21034 ;;		_I2C1_Poller
 21035 ;; This function uses a non-reentrant model
 21036 ;;
 21037                           
 21038     169C                     _I2C1_MasterWaitForEvent:	
 21039                           ;psect for function _I2C1_MasterWaitForEvent
 21040                           
 21041     169C                     l1483:	
 21042                           ;incstack = 0
 21043                           ; Regs used in _I2C1_MasterWaitForEvent: []
 21044                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 21045                           
 21046                           
 21047                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 21048     169C  014E               	movlb	14	; select bank14
 21049     169D  1C0F               	btfss	15,0	;volatile
 21050     169E  2EA0               	goto	u4171
 21051     169F  2EA1               	goto	u4170
 21052     16A0                     u4171:
 21053     16A0  2E9C               	goto	l1483
 21054     16A1                     u4170:
 21055     16A1                     l1487:
 21056     16A1  0008               	return
 21057     16A2                     __end_of_I2C1_MasterWaitForEvent:
 21058                           
 21059                           	psect	text95
 21060     0CC8                     __ptext95:	
 21061 ;; *************** function _I2C1_MasterFsm *****************
 21062 ;; Defined at:
 21063 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 21064 ;; Parameters:    Size  Location     Type
 21065 ;;		None
 21066 ;; Auto vars:     Size  Location     Type
 21067 ;;		None
 21068 ;; Return value:  Size  Location     Type
 21069 ;;                  1    wreg      void 
 21070 ;; Registers used:
 21071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21072 ;; Tracked objects:
 21073 ;;		On entry : 0/0
 21074 ;;		On exit  : 0/0
 21075 ;;		Unchanged: 0/0
 21076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21081 ;;Total ram usage:        2 bytes
 21082 ;; Hardware stack levels used: 1
 21083 ;; Hardware stack levels required when called: 8
 21084 ;; This function calls:
 21085 ;;		_I2C1_DO_ADDRESS_NACK
 21086 ;;		_I2C1_DO_IDLE
 21087 ;;		_I2C1_DO_RCEN
 21088 ;;		_I2C1_DO_RESET
 21089 ;;		_I2C1_DO_RX
 21090 ;;		_I2C1_DO_RX_ACK
 21091 ;;		_I2C1_DO_RX_NACK_RESTART
 21092 ;;		_I2C1_DO_RX_NACK_STOP
 21093 ;;		_I2C1_DO_SEND_ADR_READ
 21094 ;;		_I2C1_DO_SEND_ADR_WRITE
 21095 ;;		_I2C1_DO_SEND_RESTART
 21096 ;;		_I2C1_DO_SEND_RESTART_READ
 21097 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21098 ;;		_I2C1_DO_SEND_STOP
 21099 ;;		_I2C1_DO_TX
 21100 ;;		_I2C1_DO_TX_EMPTY
 21101 ;;		_I2C1_MasterClearIrq
 21102 ;;		_I2C1_MasterIsNack
 21103 ;; This function is called by:
 21104 ;;		_I2C1_Poller
 21105 ;; This function uses a non-reentrant model
 21106 ;;
 21107                           
 21108     0CC8                     _I2C1_MasterFsm:	
 21109                           ;psect for function _I2C1_MasterFsm
 21110                           
 21111     0CC8                     l8269:	
 21112                           ;incstack = 0
 21113                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21114                           
 21115                           
 21116                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 21117     0CC8  3196  2619  318C   	fcall	_I2C1_MasterClearIrq
 21118     0CCB                     l8271:
 21119                           
 21120                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 21121     0CCB  0143               	movlb	3	; select bank3
 21122     0CCC  1C43               	btfss	(_I2C1_Status^(0+384)+35),0
 21123     0CCD  2CCF               	goto	u4181
 21124     0CCE  2CD0               	goto	u4180
 21125     0CCF                     u4181:
 21126     0CCF  2CDB               	goto	l8277
 21127     0CD0                     u4180:
 21128     0CD0                     l8273:
 21129     0CD0  3196  2696  318C   	fcall	_I2C1_MasterIsNack
 21130     0CD3  3A00               	xorlw	0
 21131     0CD4  1903               	skipnz
 21132     0CD5  2CD7               	goto	u4191
 21133     0CD6  2CD8               	goto	u4190
 21134     0CD7                     u4191:
 21135     0CD7  2CDB               	goto	l8277
 21136     0CD8                     u4190:
 21137     0CD8                     l8275:
 21138                           
 21139                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 21140     0CD8  300F               	movlw	15
 21141     0CD9  0143               	movlb	3	; select bank3
 21142     0CDA  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 21143     0CDB                     l8277:
 21144                           
 21145                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 21146     0CDB  0143               	movlb	3	; select bank3
 21147     0CDC  0841               	movf	(_I2C1_Status^(0+384)+33),w
 21148     0CDD  0140               	movlb	0	; select bank0
 21149     0CDE  00A0               	movwf	??_I2C1_MasterFsm
 21150     0CDF  01A1               	clrf	??_I2C1_MasterFsm+1
 21151     0CE0  35A0               	lslf	??_I2C1_MasterFsm,f
 21152     0CE1  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 21153     0CE2  3028               	movlw	low _i2c1_fsmStateTable
 21154     0CE3  0720               	addwf	??_I2C1_MasterFsm,w
 21155     0CE4  0084               	movwf	4
 21156     0CE5  3010               	movlw	high _i2c1_fsmStateTable
 21157     0CE6  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 21158     0CE7  3880               	iorlw	128
 21159     0CE8  0085               	movwf	5
 21160     0CE9  3F01               	moviw [1]fsr0
 21161     0CEA  008A               	movwf	10
 21162     0CEB  3F00               	moviw [0]fsr0
 21163     0CEC  000A               	callw
 21164     0CED  318C               	pagesel	$
 21165     0CEE  0143               	movlb	3	; select bank3
 21166     0CEF  00C1               	movwf	(_I2C1_Status^(0+384)+33)
 21167     0CF0                     l1314:
 21168     0CF0  0008               	return
 21169     0CF1                     __end_of_I2C1_MasterFsm:
 21170                           
 21171                           	psect	text96
 21172     0D1A                     __ptext96:	
 21173 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 21174 ;; Defined at:
 21175 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 21176 ;; Parameters:    Size  Location     Type
 21177 ;;		None
 21178 ;; Auto vars:     Size  Location     Type
 21179 ;;		None
 21180 ;; Return value:  Size  Location     Type
 21181 ;;                  1    wreg      enum E12795
 21182 ;; Registers used:
 21183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21184 ;; Tracked objects:
 21185 ;;		On entry : 0/0
 21186 ;;		On exit  : 0/0
 21187 ;;		Unchanged: 0/0
 21188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21193 ;;Total ram usage:        2 bytes
 21194 ;; Hardware stack levels used: 1
 21195 ;; Hardware stack levels required when called: 7
 21196 ;; This function calls:
 21197 ;;		NULL
 21198 ;;		_I2C1_CallbackReturnReset
 21199 ;;		_I2C1_CallbackReturnStop
 21200 ;;		_I2C1_DO_SEND_RESTART
 21201 ;;		_I2C1_DO_SEND_STOP
 21202 ;;		_rd1RegCompleteHandler
 21203 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 21204 ;;		_rd2RegCompleteHandler
 21205 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 21206 ;;		_rdBlkRegCompleteHandler
 21207 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 21208 ;;		_wr1RegCompleteHandler
 21209 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 21210 ;;		_wr2RegCompleteHandler
 21211 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 21212 ;; This function is called by:
 21213 ;;		_I2C1_MasterFsm
 21214 ;; This function uses a non-reentrant model
 21215 ;;
 21216                           
 21217     0D1A                     _I2C1_DO_ADDRESS_NACK:	
 21218                           ;psect for function _I2C1_DO_ADDRESS_NACK
 21219                           
 21220     0D1A                     l8247:	
 21221                           ;incstack = 0
 21222                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21223                           
 21224                           
 21225                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 21226     0D1A  0143               	movlb	3	; select bank3
 21227     0D1B  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 21228                           
 21229                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 21230     0D1C  3002               	movlw	2
 21231     0D1D  00C2               	movwf	(_I2C1_Status^(0+384)+34)
 21232                           
 21233                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 21234     0D1E  2D27               	goto	l8259
 21235     0D1F                     l8249:
 21236                           
 21237                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 21238     0D1F  3196  266E  318D   	fcall	_I2C1_DO_SEND_RESTART
 21239     0D22  2D44               	goto	l1405
 21240     0D23                     l8253:
 21241                           
 21242                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 21243     0D23  3196  2673  318D   	fcall	_I2C1_DO_SEND_STOP
 21244     0D26  2D44               	goto	l1405
 21245     0D27                     l8259:
 21246     0D27  0831               	movf	((_I2C1_Status+1)^(0+384)+16),w
 21247     0D28  00FA               	movwf	I2C1_CallbackReturnReset@funPtr+1
 21248     0D29  0830               	movf	(_I2C1_Status^(0+384)+16),w
 21249     0D2A  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 21250     0D2B  30A0               	movlw	low _I2C1_Status
 21251     0D2C  0086               	movwf	6
 21252     0D2D  3001               	movlw	high _I2C1_Status
 21253     0D2E  0087               	movwf	7
 21254     0D2F  3144               	addfsr 1,4
 21255     0D30  3F41               	moviw [1]fsr1
 21256     0D31  008A               	movwf	10
 21257     0D32  3F40               	moviw [0]fsr1
 21258     0D33  000A               	callw
 21259     0D34  318D               	pagesel	$
 21260     0D35  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK
 21261     0D36  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 21262                           
 21263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21264                           ; Switch size 1, requested type "simple"
 21265                           ; Number of cases is 1, Range of values is 0 to 0
 21266                           ; switch strategies available:
 21267                           ; Name         Instructions Cycles
 21268                           ; simple_byte            4     3 (average)
 21269                           ; direct_byte            8     6 (fixed)
 21270                           ; jumptable            260     6 (fixed)
 21271                           ;	Chosen strategy is simple_byte
 21272     0D37  087C               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 21273     0D38  3A00               	xorlw	0	; case 0
 21274     0D39  1903               	skipnz
 21275     0D3A  2D3C               	goto	l8931
 21276     0D3B  2D23               	goto	l8253
 21277     0D3C                     l8931:
 21278                           
 21279                           ; Switch size 1, requested type "simple"
 21280                           ; Number of cases is 2, Range of values is 2 to 3
 21281                           ; switch strategies available:
 21282                           ; Name         Instructions Cycles
 21283                           ; simple_byte            7     4 (average)
 21284                           ; direct_byte           13     9 (fixed)
 21285                           ; jumptable            263     9 (fixed)
 21286                           ;	Chosen strategy is simple_byte
 21287     0D3C  087B               	movf	??_I2C1_DO_ADDRESS_NACK,w
 21288     0D3D  3A02               	xorlw	2	; case 2
 21289     0D3E  1903               	skipnz
 21290     0D3F  2D1F               	goto	l8249
 21291     0D40  3A01               	xorlw	1	; case 3
 21292     0D41  1903               	skipnz
 21293     0D42  2D1F               	goto	l8249
 21294     0D43  2D23               	goto	l8253
 21295     0D44                     l1405:
 21296     0D44  0008               	return
 21297     0D45                     __end_of_I2C1_DO_ADDRESS_NACK:
 21298                           
 21299                           	psect	text97
 21300     1687                     __ptext97:	
 21301 ;; *************** function _I2C1_DO_RESET *****************
 21302 ;; Defined at:
 21303 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 21304 ;; Parameters:    Size  Location     Type
 21305 ;;		None
 21306 ;; Auto vars:     Size  Location     Type
 21307 ;;		None
 21308 ;; Return value:  Size  Location     Type
 21309 ;;                  1    wreg      enum E12795
 21310 ;; Registers used:
 21311 ;;		wreg, status,2
 21312 ;; Tracked objects:
 21313 ;;		On entry : 0/0
 21314 ;;		On exit  : 0/0
 21315 ;;		Unchanged: 0/0
 21316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21321 ;;Total ram usage:        0 bytes
 21322 ;; Hardware stack levels used: 1
 21323 ;; Hardware stack levels required when called: 4
 21324 ;; This function calls:
 21325 ;;		Nothing
 21326 ;; This function is called by:
 21327 ;;		_I2C1_MasterFsm
 21328 ;; This function uses a non-reentrant model
 21329 ;;
 21330                           
 21331     1687                     _I2C1_DO_RESET:	
 21332                           ;psect for function _I2C1_DO_RESET
 21333                           
 21334     1687                     l8239:	
 21335                           ;incstack = 0
 21336                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 21337                           
 21338                           
 21339                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 21340     1687  0143               	movlb	3	; select bank3
 21341     1688  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 21342     1689                     l8241:
 21343                           
 21344                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 21345     1689  01C2               	clrf	(_I2C1_Status^(0+384)+34)
 21346     168A                     l8243:
 21347                           
 21348                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 21349     168A  300E               	movlw	14
 21350     168B                     l1399:
 21351     168B  0008               	return
 21352     168C                     __end_of_I2C1_DO_RESET:
 21353                           
 21354                           	psect	text98
 21355     1682                     __ptext98:	
 21356 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 21357 ;; Defined at:
 21358 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 21359 ;; Parameters:    Size  Location     Type
 21360 ;;		None
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;		None
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  1    wreg      enum E12795
 21365 ;; Registers used:
 21366 ;;		wreg, status,2, status,0, pclath, cstack
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21376 ;;Total ram usage:        0 bytes
 21377 ;; Hardware stack levels used: 1
 21378 ;; Hardware stack levels required when called: 5
 21379 ;; This function calls:
 21380 ;;		_I2C1_MasterSendNack
 21381 ;; This function is called by:
 21382 ;;		_I2C1_DO_RX
 21383 ;;		_I2C1_MasterFsm
 21384 ;; This function uses a non-reentrant model
 21385 ;;
 21386                           
 21387     1682                     _I2C1_DO_RX_NACK_RESTART:	
 21388                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 21389                           
 21390     1682                     l8077:	
 21391                           ;incstack = 0
 21392                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21393                           
 21394                           
 21395                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 21396     1682  3196  264E  3196   	fcall	_I2C1_MasterSendNack
 21397     1685                     l8079:
 21398                           
 21399                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 21400     1685  3009               	movlw	9
 21401     1686                     l1396:
 21402     1686  0008               	return
 21403     1687                     __end_of_I2C1_DO_RX_NACK_RESTART:
 21404                           
 21405                           	psect	text99
 21406     167D                     __ptext99:	
 21407 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 21408 ;; Defined at:
 21409 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 21410 ;; Parameters:    Size  Location     Type
 21411 ;;		None
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  1    wreg      enum E12795
 21416 ;; Registers used:
 21417 ;;		wreg, status,2, status,0, pclath, cstack
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21427 ;;Total ram usage:        0 bytes
 21428 ;; Hardware stack levels used: 1
 21429 ;; Hardware stack levels required when called: 5
 21430 ;; This function calls:
 21431 ;;		_I2C1_MasterSendNack
 21432 ;; This function is called by:
 21433 ;;		_I2C1_DO_RX
 21434 ;;		_I2C1_MasterFsm
 21435 ;; This function uses a non-reentrant model
 21436 ;;
 21437                           
 21438     167D                     _I2C1_DO_RX_NACK_STOP:	
 21439                           ;psect for function _I2C1_DO_RX_NACK_STOP
 21440                           
 21441     167D                     l8083:	
 21442                           ;incstack = 0
 21443                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 21444                           
 21445                           
 21446                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 21447     167D  3196  264E  3196   	fcall	_I2C1_MasterSendNack
 21448     1680                     l8085:
 21449                           
 21450                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 21451     1680  300A               	movlw	10
 21452     1681                     l1393:
 21453     1681  0008               	return
 21454     1682                     __end_of_I2C1_DO_RX_NACK_STOP:
 21455                           
 21456                           	psect	text100
 21457     1678                     __ptext100:	
 21458 ;; *************** function _I2C1_DO_RX_ACK *****************
 21459 ;; Defined at:
 21460 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 21461 ;; Parameters:    Size  Location     Type
 21462 ;;		None
 21463 ;; Auto vars:     Size  Location     Type
 21464 ;;		None
 21465 ;; Return value:  Size  Location     Type
 21466 ;;                  1    wreg      enum E12795
 21467 ;; Registers used:
 21468 ;;		wreg, status,2, status,0, pclath, cstack
 21469 ;; Tracked objects:
 21470 ;;		On entry : 0/0
 21471 ;;		On exit  : 0/0
 21472 ;;		Unchanged: 0/0
 21473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21478 ;;Total ram usage:        0 bytes
 21479 ;; Hardware stack levels used: 1
 21480 ;; Hardware stack levels required when called: 5
 21481 ;; This function calls:
 21482 ;;		_I2C1_MasterSendAck
 21483 ;; This function is called by:
 21484 ;;		_I2C1_MasterFsm
 21485 ;; This function uses a non-reentrant model
 21486 ;;
 21487                           
 21488     1678                     _I2C1_DO_RX_ACK:	
 21489                           ;psect for function _I2C1_DO_RX_ACK
 21490                           
 21491     1678                     l8233:	
 21492                           ;incstack = 0
 21493                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 21494                           
 21495                           
 21496                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 21497     1678  3196  2652  3196   	fcall	_I2C1_MasterSendAck
 21498     167B                     l8235:
 21499                           
 21500                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 21501     167B  3005               	movlw	5
 21502     167C                     l1390:
 21503     167C  0008               	return
 21504     167D                     __end_of_I2C1_DO_RX_ACK:
 21505                           
 21506                           	psect	text101
 21507     1673                     __ptext101:	
 21508 ;; *************** function _I2C1_DO_SEND_STOP *****************
 21509 ;; Defined at:
 21510 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 21511 ;; Parameters:    Size  Location     Type
 21512 ;;		None
 21513 ;; Auto vars:     Size  Location     Type
 21514 ;;		None
 21515 ;; Return value:  Size  Location     Type
 21516 ;;                  1    wreg      enum E12795
 21517 ;; Registers used:
 21518 ;;		wreg, status,2, status,0, pclath, cstack
 21519 ;; Tracked objects:
 21520 ;;		On entry : 0/0
 21521 ;;		On exit  : 0/0
 21522 ;;		Unchanged: 0/0
 21523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;Total ram usage:        0 bytes
 21529 ;; Hardware stack levels used: 1
 21530 ;; Hardware stack levels required when called: 5
 21531 ;; This function calls:
 21532 ;;		_I2C1_MasterStop
 21533 ;; This function is called by:
 21534 ;;		_I2C1_DO_TX
 21535 ;;		_I2C1_DO_TX_EMPTY
 21536 ;;		_I2C1_DO_ADDRESS_NACK
 21537 ;;		_I2C1_MasterFsm
 21538 ;; This function uses a non-reentrant model
 21539 ;;
 21540                           
 21541     1673                     _I2C1_DO_SEND_STOP:	
 21542                           ;psect for function _I2C1_DO_SEND_STOP
 21543                           
 21544     1673                     l8065:	
 21545                           ;incstack = 0
 21546                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 21547                           
 21548                           
 21549                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 21550     1673  3196  2628  3196   	fcall	_I2C1_MasterStop
 21551     1676                     l8067:
 21552                           
 21553                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 21554     1676  3000               	movlw	0
 21555     1677                     l1387:
 21556     1677  0008               	return
 21557     1678                     __end_of_I2C1_DO_SEND_STOP:
 21558                           
 21559                           	psect	text102
 21560     166E                     __ptext102:	
 21561 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 21562 ;; Defined at:
 21563 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 21564 ;; Parameters:    Size  Location     Type
 21565 ;;		None
 21566 ;; Auto vars:     Size  Location     Type
 21567 ;;		None
 21568 ;; Return value:  Size  Location     Type
 21569 ;;                  1    wreg      enum E12795
 21570 ;; Registers used:
 21571 ;;		wreg, status,2, status,0, pclath, cstack
 21572 ;; Tracked objects:
 21573 ;;		On entry : 0/0
 21574 ;;		On exit  : 0/0
 21575 ;;		Unchanged: 0/0
 21576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21581 ;;Total ram usage:        0 bytes
 21582 ;; Hardware stack levels used: 1
 21583 ;; Hardware stack levels required when called: 5
 21584 ;; This function calls:
 21585 ;;		_I2C1_MasterEnableRestart
 21586 ;; This function is called by:
 21587 ;;		_I2C1_DO_TX_EMPTY
 21588 ;;		_I2C1_DO_ADDRESS_NACK
 21589 ;;		_I2C1_MasterFsm
 21590 ;; This function uses a non-reentrant model
 21591 ;;
 21592                           
 21593     166E                     _I2C1_DO_SEND_RESTART:	
 21594                           ;psect for function _I2C1_DO_SEND_RESTART
 21595                           
 21596     166E                     l8091:	
 21597                           ;incstack = 0
 21598                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21599                           
 21600                           
 21601                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 21602     166E  3196  2625  3196   	fcall	_I2C1_MasterEnableRestart
 21603     1671                     l8093:
 21604                           
 21605                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 21606     1671  3001               	movlw	1
 21607     1672                     l1384:
 21608     1672  0008               	return
 21609     1673                     __end_of_I2C1_DO_SEND_RESTART:
 21610                           
 21611                           	psect	text103
 21612     1669                     __ptext103:	
 21613 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 21614 ;; Defined at:
 21615 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 21616 ;; Parameters:    Size  Location     Type
 21617 ;;		None
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;		None
 21620 ;; Return value:  Size  Location     Type
 21621 ;;                  1    wreg      enum E12795
 21622 ;; Registers used:
 21623 ;;		wreg, status,2, status,0, pclath, cstack
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21633 ;;Total ram usage:        0 bytes
 21634 ;; Hardware stack levels used: 1
 21635 ;; Hardware stack levels required when called: 5
 21636 ;; This function calls:
 21637 ;;		_I2C1_MasterEnableRestart
 21638 ;; This function is called by:
 21639 ;;		_I2C1_DO_TX
 21640 ;;		_I2C1_MasterFsm
 21641 ;; This function uses a non-reentrant model
 21642 ;;
 21643                           
 21644     1669                     _I2C1_DO_SEND_RESTART_WRITE:	
 21645                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 21646                           
 21647     1669                     l8059:	
 21648                           ;incstack = 0
 21649                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21650                           
 21651                           
 21652                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 21653     1669  3196  2625  3196   	fcall	_I2C1_MasterEnableRestart
 21654     166C                     l8061:
 21655                           
 21656                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 21657     166C  3002               	movlw	2
 21658     166D                     l1381:
 21659     166D  0008               	return
 21660     166E                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 21661                           
 21662                           	psect	text104
 21663     1664                     __ptext104:	
 21664 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 21665 ;; Defined at:
 21666 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 21667 ;; Parameters:    Size  Location     Type
 21668 ;;		None
 21669 ;; Auto vars:     Size  Location     Type
 21670 ;;		None
 21671 ;; Return value:  Size  Location     Type
 21672 ;;                  1    wreg      enum E12795
 21673 ;; Registers used:
 21674 ;;		wreg, status,2, status,0, pclath, cstack
 21675 ;; Tracked objects:
 21676 ;;		On entry : 0/0
 21677 ;;		On exit  : 0/0
 21678 ;;		Unchanged: 0/0
 21679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21684 ;;Total ram usage:        0 bytes
 21685 ;; Hardware stack levels used: 1
 21686 ;; Hardware stack levels required when called: 5
 21687 ;; This function calls:
 21688 ;;		_I2C1_MasterEnableRestart
 21689 ;; This function is called by:
 21690 ;;		_I2C1_DO_TX
 21691 ;;		_I2C1_MasterFsm
 21692 ;; This function uses a non-reentrant model
 21693 ;;
 21694                           
 21695     1664                     _I2C1_DO_SEND_RESTART_READ:	
 21696                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 21697                           
 21698     1664                     l8053:	
 21699                           ;incstack = 0
 21700                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21701                           
 21702                           
 21703                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 21704     1664  3196  2625  3196   	fcall	_I2C1_MasterEnableRestart
 21705     1667                     l8055:
 21706                           
 21707                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 21708     1667  3001               	movlw	1
 21709     1668                     l1378:
 21710     1668  0008               	return
 21711     1669                     __end_of_I2C1_DO_SEND_RESTART_READ:
 21712                           
 21713                           	psect	text105
 21714     170E                     __ptext105:	
 21715 ;; *************** function _I2C1_DO_RCEN *****************
 21716 ;; Defined at:
 21717 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 21718 ;; Parameters:    Size  Location     Type
 21719 ;;		None
 21720 ;; Auto vars:     Size  Location     Type
 21721 ;;		None
 21722 ;; Return value:  Size  Location     Type
 21723 ;;                  1    wreg      enum E12795
 21724 ;; Registers used:
 21725 ;;		wreg, status,2, status,0, pclath, cstack
 21726 ;; Tracked objects:
 21727 ;;		On entry : 0/0
 21728 ;;		On exit  : 0/0
 21729 ;;		Unchanged: 0/0
 21730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21735 ;;Total ram usage:        0 bytes
 21736 ;; Hardware stack levels used: 1
 21737 ;; Hardware stack levels required when called: 5
 21738 ;; This function calls:
 21739 ;;		_I2C1_MasterStartRx
 21740 ;; This function is called by:
 21741 ;;		_I2C1_MasterFsm
 21742 ;; This function uses a non-reentrant model
 21743 ;;
 21744                           
 21745     170E                     _I2C1_DO_RCEN:	
 21746                           ;psect for function _I2C1_DO_RCEN
 21747                           
 21748     170E                     l8199:	
 21749                           ;incstack = 0
 21750                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 21751                           
 21752                           
 21753                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 21754     170E  0143               	movlb	3	; select bank3
 21755     170F  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 21756     1710                     l8201:
 21757                           
 21758                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 21759     1710  3196  262B  3197   	fcall	_I2C1_MasterStartRx
 21760     1713                     l8203:
 21761                           
 21762                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 21763     1713  3004               	movlw	4
 21764     1714                     l1354:
 21765     1714  0008               	return
 21766     1715                     __end_of_I2C1_DO_RCEN:
 21767                           
 21768                           	psect	text106
 21769     0771                     __ptext106:	
 21770 ;; *************** function _I2C1_DO_RX *****************
 21771 ;; Defined at:
 21772 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 21773 ;; Parameters:    Size  Location     Type
 21774 ;;		None
 21775 ;; Auto vars:     Size  Location     Type
 21776 ;;		None
 21777 ;; Return value:  Size  Location     Type
 21778 ;;                  1    wreg      enum E12795
 21779 ;; Registers used:
 21780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21781 ;; Tracked objects:
 21782 ;;		On entry : 0/0
 21783 ;;		On exit  : 0/0
 21784 ;;		Unchanged: 0/0
 21785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21790 ;;Total ram usage:        2 bytes
 21791 ;; Hardware stack levels used: 1
 21792 ;; Hardware stack levels required when called: 7
 21793 ;; This function calls:
 21794 ;;		NULL
 21795 ;;		_I2C1_CallbackReturnReset
 21796 ;;		_I2C1_CallbackReturnStop
 21797 ;;		_I2C1_DO_RX_NACK_RESTART
 21798 ;;		_I2C1_DO_RX_NACK_STOP
 21799 ;;		_I2C1_MasterGetRxData
 21800 ;;		_I2C1_MasterSendAck
 21801 ;;		_rd1RegCompleteHandler
 21802 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 21803 ;;		_rd2RegCompleteHandler
 21804 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 21805 ;;		_rdBlkRegCompleteHandler
 21806 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 21807 ;;		_wr1RegCompleteHandler
 21808 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 21809 ;;		_wr2RegCompleteHandler
 21810 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 21811 ;; This function is called by:
 21812 ;;		_I2C1_MasterFsm
 21813 ;; This function uses a non-reentrant model
 21814 ;;
 21815                           
 21816     0771                     _I2C1_DO_RX:	
 21817                           ;psect for function _I2C1_DO_RX
 21818                           
 21819     0771                     l8167:	
 21820                           ;incstack = 0
 21821                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21822                           
 21823                           
 21824                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 21825     0771  0143               	movlb	3	; select bank3
 21826     0772  083D               	movf	(_I2C1_Status^(0+384)+29),w
 21827     0773  0086               	movwf	6
 21828     0774  083E               	movf	((_I2C1_Status+1)^(0+384)+29),w
 21829     0775  0087               	movwf	7
 21830     0776  3196  262E  3187   	fcall	_I2C1_MasterGetRxData
 21831     0779  0081               	movwf	1
 21832     077A                     l8169:
 21833     077A  3001               	movlw	1
 21834     077B  0143               	movlb	3	; select bank3
 21835     077C  07BD               	addwf	(_I2C1_Status^(0+384)+29),f
 21836     077D  3000               	movlw	0
 21837     077E  3DBE               	addwfc	((_I2C1_Status+1)^(0+384)+29),f
 21838     077F                     l8171:
 21839                           
 21840                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 21841     077F  3001               	movlw	1
 21842     0780  02BF               	subwf	(_I2C1_Status^(0+384)+31),f
 21843     0781  3000               	movlw	0
 21844     0782  3BC0               	subwfb	((_I2C1_Status+1)^(0+384)+31),f
 21845     0783  083F               	movf	(_I2C1_Status^(0+384)+31),w
 21846     0784  0440               	iorwf	((_I2C1_Status+1)^(0+384)+31),w
 21847     0785  1903               	btfsc	3,2
 21848     0786  2F88               	goto	u4161
 21849     0787  2F89               	goto	u4160
 21850     0788                     u4161:
 21851     0788  2F8E               	goto	l1342
 21852     0789                     u4160:
 21853     0789                     l8173:
 21854                           
 21855                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 21856     0789  3196  2652  3187   	fcall	_I2C1_MasterSendAck
 21857     078C                     l8175:
 21858                           
 21859                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 21860     078C  3005               	movlw	5
 21861     078D  2FB6               	goto	l1343
 21862     078E                     l1342:	
 21863                           ;mcc_generated_files/i2c1_master.c: 386:     else
 21864                           
 21865                           
 21866                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 21867     078E  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 21868                           
 21869                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21870     078F  2F98               	goto	l8191
 21871     0790                     l8181:
 21872                           
 21873                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 21874     0790  3196  2682  3187   	fcall	_I2C1_DO_RX_NACK_RESTART
 21875     0793  2FB6               	goto	l1343
 21876     0794                     l8185:
 21877                           
 21878                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 21879     0794  3196  267D  3187   	fcall	_I2C1_DO_RX_NACK_STOP
 21880     0797  2FB6               	goto	l1343
 21881     0798                     l8191:
 21882     0798  082D               	movf	((_I2C1_Status+1)^(0+384)+12),w
 21883     0799  00FA               	movwf	I2C1_CallbackReturnReset@funPtr+1
 21884     079A  082C               	movf	(_I2C1_Status^(0+384)+12),w
 21885     079B  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 21886     079C  0821               	movf	(_I2C1_Status+1)^(0+384),w
 21887     079D  008A               	movwf	10
 21888     079E  0820               	movf	_I2C1_Status^(0+384),w
 21889     079F  000A               	callw
 21890     07A0  3187               	pagesel	$
 21891     07A1  00FB               	movwf	??_I2C1_DO_RX
 21892     07A2  01FC               	clrf	??_I2C1_DO_RX+1
 21893                           
 21894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21895                           ; Switch size 1, requested type "simple"
 21896                           ; Number of cases is 1, Range of values is 0 to 0
 21897                           ; switch strategies available:
 21898                           ; Name         Instructions Cycles
 21899                           ; simple_byte            4     3 (average)
 21900                           ; direct_byte            8     6 (fixed)
 21901                           ; jumptable            260     6 (fixed)
 21902                           ;	Chosen strategy is simple_byte
 21903     07A3  087C               	movf	??_I2C1_DO_RX+1,w
 21904     07A4  3A00               	xorlw	0	; case 0
 21905     07A5  1903               	skipnz
 21906     07A6  2FA8               	goto	l8933
 21907     07A7  2F94               	goto	l8185
 21908     07A8                     l8933:
 21909                           
 21910                           ; Switch size 1, requested type "simple"
 21911                           ; Number of cases is 4, Range of values is 1 to 4
 21912                           ; switch strategies available:
 21913                           ; Name         Instructions Cycles
 21914                           ; simple_byte           13     7 (average)
 21915                           ; direct_byte           17     9 (fixed)
 21916                           ; jumptable            263     9 (fixed)
 21917                           ;	Chosen strategy is simple_byte
 21918     07A8  087B               	movf	??_I2C1_DO_RX,w
 21919     07A9  3A01               	xorlw	1	; case 1
 21920     07AA  1903               	skipnz
 21921     07AB  2F94               	goto	l8185
 21922     07AC  3A03               	xorlw	3	; case 2
 21923     07AD  1903               	skipnz
 21924     07AE  2F90               	goto	l8181
 21925     07AF  3A01               	xorlw	1	; case 3
 21926     07B0  1903               	skipnz
 21927     07B1  2F90               	goto	l8181
 21928     07B2  3A07               	xorlw	7	; case 4
 21929     07B3  1903               	skipnz
 21930     07B4  2F94               	goto	l8185
 21931     07B5  2F94               	goto	l8185
 21932     07B6                     l1343:
 21933     07B6  0008               	return
 21934     07B7                     __end_of_I2C1_DO_RX:
 21935                           
 21936                           	psect	text107
 21937     04C4                     __ptext107:	
 21938 ;; *************** function _I2C1_DO_TX *****************
 21939 ;; Defined at:
 21940 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 21941 ;; Parameters:    Size  Location     Type
 21942 ;;		None
 21943 ;; Auto vars:     Size  Location     Type
 21944 ;;		None
 21945 ;; Return value:  Size  Location     Type
 21946 ;;                  1    wreg      enum E12795
 21947 ;; Registers used:
 21948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21949 ;; Tracked objects:
 21950 ;;		On entry : 0/0
 21951 ;;		On exit  : 0/0
 21952 ;;		Unchanged: 0/0
 21953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21958 ;;Total ram usage:        2 bytes
 21959 ;; Hardware stack levels used: 1
 21960 ;; Hardware stack levels required when called: 7
 21961 ;; This function calls:
 21962 ;;		NULL
 21963 ;;		_I2C1_CallbackReturnReset
 21964 ;;		_I2C1_CallbackReturnStop
 21965 ;;		_I2C1_DO_SEND_RESTART_READ
 21966 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21967 ;;		_I2C1_DO_SEND_STOP
 21968 ;;		_I2C1_MasterIsNack
 21969 ;;		_I2C1_MasterSendTxData
 21970 ;;		_rd1RegCompleteHandler
 21971 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 21972 ;;		_rd2RegCompleteHandler
 21973 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 21974 ;;		_rdBlkRegCompleteHandler
 21975 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 21976 ;;		_wr1RegCompleteHandler
 21977 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 21978 ;;		_wr2RegCompleteHandler
 21979 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 21980 ;; This function is called by:
 21981 ;;		_I2C1_MasterFsm
 21982 ;; This function uses a non-reentrant model
 21983 ;;
 21984                           
 21985     04C4                     _I2C1_DO_TX:	
 21986                           ;psect for function _I2C1_DO_TX
 21987                           
 21988     04C4                     l8133:	
 21989                           ;incstack = 0
 21990                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21991                           
 21992                           
 21993                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 21994     04C4  3196  2696  3184   	fcall	_I2C1_MasterIsNack
 21995     04C7  3A00               	xorlw	0
 21996     04C8  1903               	skipnz
 21997     04C9  2CCB               	goto	u4141
 21998     04CA  2CCC               	goto	u4140
 21999     04CB                     u4141:
 22000     04CB  2CFD               	goto	l1326
 22001     04CC                     u4140:
 22002     04CC  2CD9               	goto	l8151
 22003     04CD                     l8137:
 22004                           
 22005                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 22006     04CD  3196  2664  3184   	fcall	_I2C1_DO_SEND_RESTART_READ
 22007     04D0  2D18               	goto	l1329
 22008     04D1                     l8141:
 22009                           
 22010                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 22011     04D1  3196  2669  3184   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 22012     04D4  2D18               	goto	l1329
 22013     04D5                     l8145:
 22014                           
 22015                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 22016     04D5  3196  2673  3184   	fcall	_I2C1_DO_SEND_STOP
 22017     04D8  2D18               	goto	l1329
 22018     04D9                     l8151:
 22019     04D9  0143               	movlb	3	; select bank3
 22020     04DA  0833               	movf	((_I2C1_Status+1)^(0+384)+18),w
 22021     04DB  00FA               	movwf	I2C1_CallbackReturnReset@funPtr+1
 22022     04DC  0832               	movf	(_I2C1_Status^(0+384)+18),w
 22023     04DD  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 22024     04DE  30A0               	movlw	low _I2C1_Status
 22025     04DF  0086               	movwf	6
 22026     04E0  3001               	movlw	high _I2C1_Status
 22027     04E1  0087               	movwf	7
 22028     04E2  3146               	addfsr 1,6
 22029     04E3  3F41               	moviw [1]fsr1
 22030     04E4  008A               	movwf	10
 22031     04E5  3F40               	moviw [0]fsr1
 22032     04E6  000A               	callw
 22033     04E7  3184               	pagesel	$
 22034     04E8  00FB               	movwf	??_I2C1_DO_TX
 22035     04E9  01FC               	clrf	??_I2C1_DO_TX+1
 22036                           
 22037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22038                           ; Switch size 1, requested type "simple"
 22039                           ; Number of cases is 1, Range of values is 0 to 0
 22040                           ; switch strategies available:
 22041                           ; Name         Instructions Cycles
 22042                           ; simple_byte            4     3 (average)
 22043                           ; direct_byte            8     6 (fixed)
 22044                           ; jumptable            260     6 (fixed)
 22045                           ;	Chosen strategy is simple_byte
 22046     04EA  087C               	movf	??_I2C1_DO_TX+1,w
 22047     04EB  3A00               	xorlw	0	; case 0
 22048     04EC  1903               	skipnz
 22049     04ED  2CEF               	goto	l8935
 22050     04EE  2CD5               	goto	l8145
 22051     04EF                     l8935:
 22052                           
 22053                           ; Switch size 1, requested type "simple"
 22054                           ; Number of cases is 4, Range of values is 1 to 4
 22055                           ; switch strategies available:
 22056                           ; Name         Instructions Cycles
 22057                           ; simple_byte           13     7 (average)
 22058                           ; direct_byte           17     9 (fixed)
 22059                           ; jumptable            263     9 (fixed)
 22060                           ;	Chosen strategy is simple_byte
 22061     04EF  087B               	movf	??_I2C1_DO_TX,w
 22062     04F0  3A01               	xorlw	1	; case 1
 22063     04F1  1903               	skipnz
 22064     04F2  2CD5               	goto	l8145
 22065     04F3  3A03               	xorlw	3	; case 2
 22066     04F4  1903               	skipnz
 22067     04F5  2CCD               	goto	l8137
 22068     04F6  3A01               	xorlw	1	; case 3
 22069     04F7  1903               	skipnz
 22070     04F8  2CD1               	goto	l8141
 22071     04F9  3A07               	xorlw	7	; case 4
 22072     04FA  1903               	skipnz
 22073     04FB  2CD5               	goto	l8145
 22074     04FC  2CD5               	goto	l8145
 22075     04FD                     l1326:	
 22076                           ;mcc_generated_files/i2c1_master.c: 370:     else
 22077                           
 22078                           
 22079                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 22080     04FD  0143               	movlb	3	; select bank3
 22081     04FE  1043               	bcf	(_I2C1_Status^(0+384)+35),0
 22082     04FF                     l8153:
 22083                           
 22084                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 22085     04FF  083E               	movf	((_I2C1_Status+1)^(0+384)+29),w
 22086     0500  0087               	movwf	7
 22087     0501  083D               	movf	(_I2C1_Status^(0+384)+29),w
 22088     0502  0086               	movwf	6
 22089     0503  0ABD               	incf	(_I2C1_Status^(0+384)+29),f
 22090     0504  1903               	skipnz
 22091     0505  0ABE               	incf	((_I2C1_Status+1)^(0+384)+29),f
 22092     0506  0801               	movf	1,w
 22093     0507  3196  265A  3184   	fcall	_I2C1_MasterSendTxData
 22094     050A                     l8155:
 22095                           
 22096                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 22097     050A  3001               	movlw	1
 22098     050B  0143               	movlb	3	; select bank3
 22099     050C  02BF               	subwf	(_I2C1_Status^(0+384)+31),f
 22100     050D  3000               	movlw	0
 22101     050E  3BC0               	subwfb	((_I2C1_Status+1)^(0+384)+31),f
 22102     050F  083F               	movf	(_I2C1_Status^(0+384)+31),w
 22103     0510  0440               	iorwf	((_I2C1_Status+1)^(0+384)+31),w
 22104     0511  1D03               	btfss	3,2
 22105     0512  2D14               	goto	u4151
 22106     0513  2D15               	goto	u4150
 22107     0514                     u4151:
 22108     0514  2D17               	goto	l8159
 22109     0515                     u4150:
 22110     0515                     l8157:
 22111     0515  3006               	movlw	6
 22112     0516  2D18               	goto	l1329
 22113     0517                     l8159:
 22114     0517  3003               	movlw	3
 22115     0518                     l1329:
 22116     0518  0008               	return
 22117     0519                     __end_of_I2C1_DO_TX:
 22118                           
 22119                           	psect	text108
 22120     1715                     __ptext108:	
 22121 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 22122 ;; Defined at:
 22123 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 22124 ;; Parameters:    Size  Location     Type
 22125 ;;		None
 22126 ;; Auto vars:     Size  Location     Type
 22127 ;;		None
 22128 ;; Return value:  Size  Location     Type
 22129 ;;                  1    wreg      enum E12795
 22130 ;; Registers used:
 22131 ;;		wreg, status,2, status,0, pclath, cstack
 22132 ;; Tracked objects:
 22133 ;;		On entry : 0/0
 22134 ;;		On exit  : 0/0
 22135 ;;		Unchanged: 0/0
 22136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22141 ;;Total ram usage:        0 bytes
 22142 ;; Hardware stack levels used: 1
 22143 ;; Hardware stack levels required when called: 5
 22144 ;; This function calls:
 22145 ;;		_I2C1_MasterSendTxData
 22146 ;; This function is called by:
 22147 ;;		_I2C1_MasterFsm
 22148 ;; This function uses a non-reentrant model
 22149 ;;
 22150                           
 22151     1715                     _I2C1_DO_SEND_ADR_WRITE:	
 22152                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 22153                           
 22154     1715                     l8125:	
 22155                           ;incstack = 0
 22156                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 22157                           
 22158                           
 22159                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 22160     1715  0143               	movlb	3	; select bank3
 22161     1716  1443               	bsf	(_I2C1_Status^(0+384)+35),0
 22162     1717                     l8127:
 22163                           
 22164                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 22165     1717  353C               	lslf	(_I2C1_Status^(0+384)+28),w
 22166     1718  3196  265A  3197   	fcall	_I2C1_MasterSendTxData
 22167     171B                     l8129:
 22168                           
 22169                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 22170     171B  3003               	movlw	3
 22171     171C                     l1323:
 22172     171C  0008               	return
 22173     171D                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 22174                           
 22175                           	psect	text109
 22176     1725                     __ptext109:	
 22177 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 22178 ;; Defined at:
 22179 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;		None
 22182 ;; Auto vars:     Size  Location     Type
 22183 ;;		None
 22184 ;; Return value:  Size  Location     Type
 22185 ;;                  1    wreg      enum E12795
 22186 ;; Registers used:
 22187 ;;		wreg, status,2, status,0, pclath, cstack
 22188 ;; Tracked objects:
 22189 ;;		On entry : 0/0
 22190 ;;		On exit  : 0/0
 22191 ;;		Unchanged: 0/0
 22192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22197 ;;Total ram usage:        0 bytes
 22198 ;; Hardware stack levels used: 1
 22199 ;; Hardware stack levels required when called: 5
 22200 ;; This function calls:
 22201 ;;		_I2C1_MasterSendTxData
 22202 ;; This function is called by:
 22203 ;;		_I2C1_MasterFsm
 22204 ;; This function uses a non-reentrant model
 22205 ;;
 22206                           
 22207     1725                     _I2C1_DO_SEND_ADR_READ:	
 22208                           ;psect for function _I2C1_DO_SEND_ADR_READ
 22209                           
 22210     1725                     l8117:	
 22211                           ;incstack = 0
 22212                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 22213                           
 22214                           
 22215                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 22216     1725  0143               	movlb	3	; select bank3
 22217     1726  1443               	bsf	(_I2C1_Status^(0+384)+35),0
 22218     1727                     l8119:
 22219                           
 22220                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 22221     1727  1403               	setc
 22222     1728  0D3C               	rlf	(_I2C1_Status^(0+384)+28),w
 22223     1729  3196  265A  3197   	fcall	_I2C1_MasterSendTxData
 22224     172C                     l8121:
 22225                           
 22226                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 22227     172C  3005               	movlw	5
 22228     172D                     l1320:
 22229     172D  0008               	return
 22230     172E                     __end_of_I2C1_DO_SEND_ADR_READ:
 22231                           
 22232                           	psect	text110
 22233     165F                     __ptext110:	
 22234 ;; *************** function _I2C1_DO_IDLE *****************
 22235 ;; Defined at:
 22236 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 22237 ;; Parameters:    Size  Location     Type
 22238 ;;		None
 22239 ;; Auto vars:     Size  Location     Type
 22240 ;;		None
 22241 ;; Return value:  Size  Location     Type
 22242 ;;                  1    wreg      enum E12795
 22243 ;; Registers used:
 22244 ;;		wreg, status,2
 22245 ;; Tracked objects:
 22246 ;;		On entry : 0/0
 22247 ;;		On exit  : 0/0
 22248 ;;		Unchanged: 0/0
 22249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;Total ram usage:        0 bytes
 22255 ;; Hardware stack levels used: 1
 22256 ;; Hardware stack levels required when called: 4
 22257 ;; This function calls:
 22258 ;;		Nothing
 22259 ;; This function is called by:
 22260 ;;		_I2C1_MasterFsm
 22261 ;; This function uses a non-reentrant model
 22262 ;;
 22263                           
 22264     165F                     _I2C1_DO_IDLE:	
 22265                           ;psect for function _I2C1_DO_IDLE
 22266                           
 22267     165F                     l8109:	
 22268                           ;incstack = 0
 22269                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 22270                           
 22271                           
 22272                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 22273     165F  0143               	movlb	3	; select bank3
 22274     1660  10C3               	bcf	(_I2C1_Status^(0+384)+35),1
 22275     1661                     l8111:
 22276                           
 22277                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 22278     1661  01C2               	clrf	(_I2C1_Status^(0+384)+34)
 22279     1662                     l8113:
 22280                           
 22281                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 22282     1662  300E               	movlw	14
 22283     1663                     l1317:
 22284     1663  0008               	return
 22285     1664                     __end_of_I2C1_DO_IDLE:
 22286                           
 22287                           	psect	text111
 22288     0D9E                     __ptext111:	
 22289 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 22290 ;; Defined at:
 22291 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 22292 ;; Parameters:    Size  Location     Type
 22293 ;;		None
 22294 ;; Auto vars:     Size  Location     Type
 22295 ;;		None
 22296 ;; Return value:  Size  Location     Type
 22297 ;;                  1    wreg      enum E12795
 22298 ;; Registers used:
 22299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22300 ;; Tracked objects:
 22301 ;;		On entry : 0/0
 22302 ;;		On exit  : 0/0
 22303 ;;		Unchanged: 0/0
 22304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22309 ;;Total ram usage:        2 bytes
 22310 ;; Hardware stack levels used: 1
 22311 ;; Hardware stack levels required when called: 7
 22312 ;; This function calls:
 22313 ;;		NULL
 22314 ;;		_I2C1_CallbackReturnReset
 22315 ;;		_I2C1_CallbackReturnStop
 22316 ;;		_I2C1_DO_SEND_RESTART
 22317 ;;		_I2C1_DO_SEND_STOP
 22318 ;;		_I2C1_MasterSetIrq
 22319 ;;		_rd1RegCompleteHandler
 22320 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 22321 ;;		_rd2RegCompleteHandler
 22322 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 22323 ;;		_rdBlkRegCompleteHandler
 22324 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 22325 ;;		_wr1RegCompleteHandler
 22326 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 22327 ;;		_wr2RegCompleteHandler
 22328 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 22329 ;; This function is called by:
 22330 ;;		_I2C1_MasterFsm
 22331 ;; This function uses a non-reentrant model
 22332 ;;
 22333                           
 22334     0D9E                     _I2C1_DO_TX_EMPTY:	
 22335                           ;psect for function _I2C1_DO_TX_EMPTY
 22336                           
 22337     0D9E                     l8207:	
 22338                           ;incstack = 0
 22339                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22340                           
 22341                           
 22342                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 22343     0D9E  0143               	movlb	3	; select bank3
 22344     0D9F  15C3               	bsf	(_I2C1_Status^(0+384)+35),3
 22345                           
 22346                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 22347     0DA0  2DAE               	goto	l8225
 22348     0DA1                     l8209:
 22349                           
 22350                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 22351     0DA1  3196  266E  318D   	fcall	_I2C1_DO_SEND_RESTART
 22352     0DA4  2DCC               	goto	l1360
 22353     0DA5                     l8213:
 22354                           
 22355                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 22356     0DA5  3196  2631  318D   	fcall	_I2C1_MasterSetIrq
 22357     0DA8                     l8215:
 22358                           
 22359                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 22360     0DA8  3003               	movlw	3
 22361     0DA9  2DCC               	goto	l1360
 22362     0DAA                     l8219:
 22363                           
 22364                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 22365     0DAA  3196  2673  318D   	fcall	_I2C1_DO_SEND_STOP
 22366     0DAD  2DCC               	goto	l1360
 22367     0DAE                     l8225:
 22368     0DAE  082D               	movf	((_I2C1_Status+1)^(0+384)+12),w
 22369     0DAF  00FA               	movwf	I2C1_CallbackReturnReset@funPtr+1
 22370     0DB0  082C               	movf	(_I2C1_Status^(0+384)+12),w
 22371     0DB1  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 22372     0DB2  0821               	movf	(_I2C1_Status+1)^(0+384),w
 22373     0DB3  008A               	movwf	10
 22374     0DB4  0820               	movf	_I2C1_Status^(0+384),w
 22375     0DB5  000A               	callw
 22376     0DB6  318D               	pagesel	$
 22377     0DB7  00FB               	movwf	??_I2C1_DO_TX_EMPTY
 22378     0DB8  01FC               	clrf	??_I2C1_DO_TX_EMPTY+1
 22379                           
 22380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22381                           ; Switch size 1, requested type "simple"
 22382                           ; Number of cases is 1, Range of values is 0 to 0
 22383                           ; switch strategies available:
 22384                           ; Name         Instructions Cycles
 22385                           ; simple_byte            4     3 (average)
 22386                           ; direct_byte            8     6 (fixed)
 22387                           ; jumptable            260     6 (fixed)
 22388                           ;	Chosen strategy is simple_byte
 22389     0DB9  087C               	movf	??_I2C1_DO_TX_EMPTY+1,w
 22390     0DBA  3A00               	xorlw	0	; case 0
 22391     0DBB  1903               	skipnz
 22392     0DBC  2DBE               	goto	l8937
 22393     0DBD  2DAA               	goto	l8219
 22394     0DBE                     l8937:
 22395                           
 22396                           ; Switch size 1, requested type "simple"
 22397                           ; Number of cases is 4, Range of values is 1 to 4
 22398                           ; switch strategies available:
 22399                           ; Name         Instructions Cycles
 22400                           ; simple_byte           13     7 (average)
 22401                           ; direct_byte           17     9 (fixed)
 22402                           ; jumptable            263     9 (fixed)
 22403                           ;	Chosen strategy is simple_byte
 22404     0DBE  087B               	movf	??_I2C1_DO_TX_EMPTY,w
 22405     0DBF  3A01               	xorlw	1	; case 1
 22406     0DC0  1903               	skipnz
 22407     0DC1  2DAA               	goto	l8219
 22408     0DC2  3A03               	xorlw	3	; case 2
 22409     0DC3  1903               	skipnz
 22410     0DC4  2DA1               	goto	l8209
 22411     0DC5  3A01               	xorlw	1	; case 3
 22412     0DC6  1903               	skipnz
 22413     0DC7  2DA1               	goto	l8209
 22414     0DC8  3A07               	xorlw	7	; case 4
 22415     0DC9  1903               	skipnz
 22416     0DCA  2DA5               	goto	l8213
 22417     0DCB  2DAA               	goto	l8219
 22418     0DCC                     l1360:
 22419     0DCC  0008               	return
 22420     0DCD                     __end_of_I2C1_DO_TX_EMPTY:
 22421                           
 22422                           	psect	text112
 22423     1631                     __ptext112:	
 22424 ;; *************** function _I2C1_MasterSetIrq *****************
 22425 ;; Defined at:
 22426 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 22427 ;; Parameters:    Size  Location     Type
 22428 ;;		None
 22429 ;; Auto vars:     Size  Location     Type
 22430 ;;		None
 22431 ;; Return value:  Size  Location     Type
 22432 ;;                  1    wreg      void 
 22433 ;; Registers used:
 22434 ;;		None
 22435 ;; Tracked objects:
 22436 ;;		On entry : 0/0
 22437 ;;		On exit  : 0/0
 22438 ;;		Unchanged: 0/0
 22439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22444 ;;Total ram usage:        0 bytes
 22445 ;; Hardware stack levels used: 1
 22446 ;; Hardware stack levels required when called: 4
 22447 ;; This function calls:
 22448 ;;		Nothing
 22449 ;; This function is called by:
 22450 ;;		_I2C1_DO_TX_EMPTY
 22451 ;; This function uses a non-reentrant model
 22452 ;;
 22453                           
 22454     1631                     _I2C1_MasterSetIrq:	
 22455                           ;psect for function _I2C1_MasterSetIrq
 22456                           
 22457     1631                     l8097:	
 22458                           ;incstack = 0
 22459                           ; Regs used in _I2C1_MasterSetIrq: []
 22460                           
 22461                           
 22462                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 22463     1631  014E               	movlb	14	; select bank14
 22464     1632  140F               	bsf	15,0	;volatile
 22465     1633                     l1480:
 22466     1633  0008               	return
 22467     1634                     __end_of_I2C1_MasterSetIrq:
 22468                           
 22469                           	psect	text113
 22470     1696                     __ptext113:	
 22471 ;; *************** function _I2C1_MasterIsNack *****************
 22472 ;; Defined at:
 22473 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 22474 ;; Parameters:    Size  Location     Type
 22475 ;;		None
 22476 ;; Auto vars:     Size  Location     Type
 22477 ;;		None
 22478 ;; Return value:  Size  Location     Type
 22479 ;;                  1    wreg      _Bool 
 22480 ;; Registers used:
 22481 ;;		wreg, status,2, status,0
 22482 ;; Tracked objects:
 22483 ;;		On entry : 0/0
 22484 ;;		On exit  : 0/0
 22485 ;;		Unchanged: 0/0
 22486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22491 ;;Total ram usage:        0 bytes
 22492 ;; Hardware stack levels used: 1
 22493 ;; Hardware stack levels required when called: 4
 22494 ;; This function calls:
 22495 ;;		Nothing
 22496 ;; This function is called by:
 22497 ;;		_I2C1_MasterFsm
 22498 ;;		_I2C1_DO_TX
 22499 ;; This function uses a non-reentrant model
 22500 ;;
 22501                           
 22502     1696                     _I2C1_MasterIsNack:	
 22503                           ;psect for function _I2C1_MasterIsNack
 22504                           
 22505     1696                     l8047:	
 22506                           ;incstack = 0
 22507                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 22508                           
 22509                           
 22510                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 22511     1696  0143               	movlb	3	; select bank3
 22512     1697  0E11               	swapf	17,w	;volatile
 22513     1698  0C89               	rrf	9,f
 22514     1699  0C89               	rrf	9,f
 22515     169A  3901               	andlw	1
 22516     169B                     l1453:
 22517     169B  0008               	return
 22518     169C                     __end_of_I2C1_MasterIsNack:
 22519                           
 22520                           	psect	text114
 22521     165A                     __ptext114:	
 22522 ;; *************** function _I2C1_MasterSendTxData *****************
 22523 ;; Defined at:
 22524 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;  data            1    wreg     unsigned char 
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;  data            1    0[COMMON] unsigned char 
 22529 ;; Return value:  Size  Location     Type
 22530 ;;                  1    wreg      void 
 22531 ;; Registers used:
 22532 ;;		wreg
 22533 ;; Tracked objects:
 22534 ;;		On entry : 0/0
 22535 ;;		On exit  : 0/0
 22536 ;;		Unchanged: 0/0
 22537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22542 ;;Total ram usage:        1 bytes
 22543 ;; Hardware stack levels used: 1
 22544 ;; Hardware stack levels required when called: 4
 22545 ;; This function calls:
 22546 ;;		Nothing
 22547 ;; This function is called by:
 22548 ;;		_I2C1_DO_SEND_ADR_READ
 22549 ;;		_I2C1_DO_SEND_ADR_WRITE
 22550 ;;		_I2C1_DO_TX
 22551 ;; This function uses a non-reentrant model
 22552 ;;
 22553                           
 22554     165A                     _I2C1_MasterSendTxData:	
 22555                           ;psect for function _I2C1_MasterSendTxData
 22556                           
 22557                           
 22558                           ;incstack = 0
 22559                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 22560                           ;I2C1_MasterSendTxData@data stored from wreg
 22561     165A  00F0               	movwf	I2C1_MasterSendTxData@data
 22562     165B                     l8051:
 22563                           
 22564                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 22565     165B  0870               	movf	I2C1_MasterSendTxData@data,w
 22566     165C  0143               	movlb	3	; select bank3
 22567     165D  008C               	movwf	12	;volatile
 22568     165E                     l1435:
 22569     165E  0008               	return
 22570     165F                     __end_of_I2C1_MasterSendTxData:
 22571                           
 22572                           	psect	text115
 22573     1652                     __ptext115:	
 22574 ;; *************** function _I2C1_MasterSendAck *****************
 22575 ;; Defined at:
 22576 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;		None
 22579 ;; Auto vars:     Size  Location     Type
 22580 ;;		None
 22581 ;; Return value:  Size  Location     Type
 22582 ;;                  1    wreg      void 
 22583 ;; Registers used:
 22584 ;;		None
 22585 ;; Tracked objects:
 22586 ;;		On entry : 0/0
 22587 ;;		On exit  : 0/0
 22588 ;;		Unchanged: 0/0
 22589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22594 ;;Total ram usage:        0 bytes
 22595 ;; Hardware stack levels used: 1
 22596 ;; Hardware stack levels required when called: 4
 22597 ;; This function calls:
 22598 ;;		Nothing
 22599 ;; This function is called by:
 22600 ;;		_I2C1_DO_RX
 22601 ;;		_I2C1_DO_RX_ACK
 22602 ;; This function uses a non-reentrant model
 22603 ;;
 22604                           
 22605     1652                     _I2C1_MasterSendAck:	
 22606                           ;psect for function _I2C1_MasterSendAck
 22607                           
 22608     1652                     l8075:	
 22609                           ;incstack = 0
 22610                           ; Regs used in _I2C1_MasterSendAck: []
 22611                           
 22612                           
 22613                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 22614     1652  0143               	movlb	3	; select bank3
 22615     1653  1291               	bcf	17,5	;volatile
 22616                           
 22617                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 22618     1654  1611               	bsf	17,4	;volatile
 22619     1655                     l1456:
 22620     1655  0008               	return
 22621     1656                     __end_of_I2C1_MasterSendAck:
 22622                           
 22623                           	psect	text116
 22624     162E                     __ptext116:	
 22625 ;; *************** function _I2C1_MasterGetRxData *****************
 22626 ;; Defined at:
 22627 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 22628 ;; Parameters:    Size  Location     Type
 22629 ;;		None
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;		None
 22632 ;; Return value:  Size  Location     Type
 22633 ;;                  1    wreg      unsigned char 
 22634 ;; Registers used:
 22635 ;;		wreg
 22636 ;; Tracked objects:
 22637 ;;		On entry : 0/0
 22638 ;;		On exit  : 0/0
 22639 ;;		Unchanged: 0/0
 22640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22645 ;;Total ram usage:        0 bytes
 22646 ;; Hardware stack levels used: 1
 22647 ;; Hardware stack levels required when called: 4
 22648 ;; This function calls:
 22649 ;;		Nothing
 22650 ;; This function is called by:
 22651 ;;		_I2C1_DO_RX
 22652 ;; This function uses a non-reentrant model
 22653 ;;
 22654                           
 22655     162E                     _I2C1_MasterGetRxData:	
 22656                           ;psect for function _I2C1_MasterGetRxData
 22657                           
 22658     162E                     l8071:	
 22659                           ;incstack = 0
 22660                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 22661                           
 22662                           
 22663                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 22664     162E  0143               	movlb	3	; select bank3
 22665     162F  080C               	movf	12,w	;volatile
 22666     1630                     l1432:
 22667     1630  0008               	return
 22668     1631                     __end_of_I2C1_MasterGetRxData:
 22669                           
 22670                           	psect	text117
 22671     164E                     __ptext117:	
 22672 ;; *************** function _I2C1_MasterSendNack *****************
 22673 ;; Defined at:
 22674 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 22675 ;; Parameters:    Size  Location     Type
 22676 ;;		None
 22677 ;; Auto vars:     Size  Location     Type
 22678 ;;		None
 22679 ;; Return value:  Size  Location     Type
 22680 ;;                  1    wreg      void 
 22681 ;; Registers used:
 22682 ;;		None
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/0
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22692 ;;Total ram usage:        0 bytes
 22693 ;; Hardware stack levels used: 1
 22694 ;; Hardware stack levels required when called: 4
 22695 ;; This function calls:
 22696 ;;		Nothing
 22697 ;; This function is called by:
 22698 ;;		_I2C1_DO_RX_NACK_STOP
 22699 ;;		_I2C1_DO_RX_NACK_RESTART
 22700 ;; This function uses a non-reentrant model
 22701 ;;
 22702                           
 22703     164E                     _I2C1_MasterSendNack:	
 22704                           ;psect for function _I2C1_MasterSendNack
 22705                           
 22706     164E                     l7969:	
 22707                           ;incstack = 0
 22708                           ; Regs used in _I2C1_MasterSendNack: []
 22709                           
 22710                           
 22711                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 22712     164E  0143               	movlb	3	; select bank3
 22713     164F  1691               	bsf	17,5	;volatile
 22714                           
 22715                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 22716     1650  1611               	bsf	17,4	;volatile
 22717     1651                     l1459:
 22718     1651  0008               	return
 22719     1652                     __end_of_I2C1_MasterSendNack:
 22720                           
 22721                           	psect	text118
 22722     162B                     __ptext118:	
 22723 ;; *************** function _I2C1_MasterStartRx *****************
 22724 ;; Defined at:
 22725 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 22726 ;; Parameters:    Size  Location     Type
 22727 ;;		None
 22728 ;; Auto vars:     Size  Location     Type
 22729 ;;		None
 22730 ;; Return value:  Size  Location     Type
 22731 ;;                  1    wreg      void 
 22732 ;; Registers used:
 22733 ;;		None
 22734 ;; Tracked objects:
 22735 ;;		On entry : 0/0
 22736 ;;		On exit  : 0/0
 22737 ;;		Unchanged: 0/0
 22738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22743 ;;Total ram usage:        0 bytes
 22744 ;; Hardware stack levels used: 1
 22745 ;; Hardware stack levels required when called: 4
 22746 ;; This function calls:
 22747 ;;		Nothing
 22748 ;; This function is called by:
 22749 ;;		_I2C1_DO_RCEN
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753     162B                     _I2C1_MasterStartRx:	
 22754                           ;psect for function _I2C1_MasterStartRx
 22755                           
 22756     162B                     l8089:	
 22757                           ;incstack = 0
 22758                           ; Regs used in _I2C1_MasterStartRx: []
 22759                           
 22760                           
 22761                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 22762     162B  0143               	movlb	3	; select bank3
 22763     162C  1591               	bsf	17,3	;volatile
 22764     162D                     l1444:
 22765     162D  0008               	return
 22766     162E                     __end_of_I2C1_MasterStartRx:
 22767                           
 22768                           	psect	text119
 22769     1617                     __ptext119:	
 22770 ;; *************** function _I2C1_CallbackReturnReset *****************
 22771 ;; Defined at:
 22772 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 22773 ;; Parameters:    Size  Location     Type
 22774 ;;  funPtr          2    9[COMMON] PTR void 
 22775 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22776 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22777 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22778 ;; Auto vars:     Size  Location     Type
 22779 ;;		None
 22780 ;; Return value:  Size  Location     Type
 22781 ;;                  1    wreg      enum E363
 22782 ;; Registers used:
 22783 ;;		wreg
 22784 ;; Tracked objects:
 22785 ;;		On entry : 0/0
 22786 ;;		On exit  : 0/0
 22787 ;;		Unchanged: 0/0
 22788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22793 ;;Total ram usage:        2 bytes
 22794 ;; Hardware stack levels used: 1
 22795 ;; Hardware stack levels required when called: 4
 22796 ;; This function calls:
 22797 ;;		Nothing
 22798 ;; This function is called by:
 22799 ;;		_I2C1_Open
 22800 ;;		_I2C1_DO_TX
 22801 ;;		_I2C1_DO_RX
 22802 ;;		_I2C1_DO_TX_EMPTY
 22803 ;;		_I2C1_DO_ADDRESS_NACK
 22804 ;;		_I2C1_DO_RX_EMPTY
 22805 ;; This function uses a non-reentrant model
 22806 ;;
 22807                           
 22808     1617                     _I2C1_CallbackReturnReset:	
 22809                           ;psect for function _I2C1_CallbackReturnReset
 22810                           
 22811     1617                     l8103:	
 22812                           ;incstack = 0
 22813                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 22814                           
 22815                           
 22816                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 22817     1617  3005               	movlw	5
 22818     1618                     l1416:
 22819     1618  0008               	return
 22820     1619                     __end_of_I2C1_CallbackReturnReset:
 22821                           
 22822                           	psect	text120
 22823     1615                     __ptext120:	
 22824 ;; *************** function _I2C1_CallbackReturnStop *****************
 22825 ;; Defined at:
 22826 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 22827 ;; Parameters:    Size  Location     Type
 22828 ;;  funPtr          2    9[COMMON] PTR void 
 22829 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22830 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22831 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22832 ;; Auto vars:     Size  Location     Type
 22833 ;;		None
 22834 ;; Return value:  Size  Location     Type
 22835 ;;                  1    wreg      enum E363
 22836 ;; Registers used:
 22837 ;;		wreg
 22838 ;; Tracked objects:
 22839 ;;		On entry : 0/0
 22840 ;;		On exit  : 0/0
 22841 ;;		Unchanged: 0/0
 22842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22847 ;;Total ram usage:        2 bytes
 22848 ;; Hardware stack levels used: 1
 22849 ;; Hardware stack levels required when called: 4
 22850 ;; This function calls:
 22851 ;;		Nothing
 22852 ;; This function is called by:
 22853 ;;		_I2C1_Open
 22854 ;;		_I2C1_SetCallback
 22855 ;;		_I2C1_DO_TX
 22856 ;;		_I2C1_DO_RX
 22857 ;;		_I2C1_DO_TX_EMPTY
 22858 ;;		_I2C1_DO_ADDRESS_NACK
 22859 ;;		_I2C1_DO_RX_EMPTY
 22860 ;; This function uses a non-reentrant model
 22861 ;;
 22862                           
 22863     1615                     _I2C1_CallbackReturnStop:	
 22864                           ;psect for function _I2C1_CallbackReturnStop
 22865                           
 22866     1615                     l8099:	
 22867                           ;incstack = 0
 22868                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 22869                           
 22870                           
 22871                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 22872     1615  3001               	movlw	1
 22873     1616                     l1413:
 22874     1616  0008               	return
 22875     1617                     __end_of_I2C1_CallbackReturnStop:
 22876                           
 22877                           	psect	text121
 22878     0B19                     __ptext121:	
 22879 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1090 *****************
 22880 ;; Defined at:
 22881 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22882 ;; Parameters:    Size  Location     Type
 22883 ;;  ptr             2    9[COMMON] PTR void 
 22884 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22885 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22886 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22887 ;; Auto vars:     Size  Location     Type
 22888 ;;		None
 22889 ;; Return value:  Size  Location     Type
 22890 ;;                  1    wreg      enum E363
 22891 ;; Registers used:
 22892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22893 ;; Tracked objects:
 22894 ;;		On entry : 0/0
 22895 ;;		On exit  : 0/0
 22896 ;;		Unchanged: 0/0
 22897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;Total ram usage:        2 bytes
 22903 ;; Hardware stack levels used: 1
 22904 ;; Hardware stack levels required when called: 6
 22905 ;; This function calls:
 22906 ;;		_I2C1_SetBuffer
 22907 ;;		_I2C1_SetDataCompleteCallback
 22908 ;; This function is called by:
 22909 ;;		_I2C1_ReadDataBlock
 22910 ;;		_I2C1_DO_TX
 22911 ;;		_I2C1_DO_RX
 22912 ;;		_I2C1_DO_TX_EMPTY
 22913 ;;		_I2C1_DO_ADDRESS_NACK
 22914 ;;		_I2C1_DO_RX_EMPTY
 22915 ;; This function uses a non-reentrant model
 22916 ;;
 22917                           
 22918     0B19                     _rdBlkRegCompleteHandler@i2c1_master_example$F1090:	
 22919                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1090
 22920                           
 22921     0B19                     l8041:	
 22922                           ;incstack = 0
 22923                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1090: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 22924                           
 22925                           
 22926                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 22927     0B19  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr,w
 22928     0B1A  0086               	movwf	6
 22929     0B1B  0187               	clrf	7
 22930     0B1C  3142               	addfsr 1,2
 22931     0B1D  3F40               	moviw [0]fsr1
 22932     0B1E  00F0               	movwf	I2C1_SetBuffer@buffer
 22933     0B1F  3F41               	moviw [1]fsr1
 22934     0B20  00F1               	movwf	I2C1_SetBuffer@buffer+1
 22935     0B21  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr,w
 22936     0B22  0086               	movwf	6
 22937     0B23  087A               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr+1,w
 22938     0B24  0087               	movwf	7
 22939     0B25  3F40               	moviw [0]fsr1
 22940     0B26  00F2               	movwf	I2C1_SetBuffer@bufferSize
 22941     0B27  3F41               	moviw [1]fsr1
 22942     0B28  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 22943     0B29  3197  27F1  318B   	fcall	_I2C1_SetBuffer
 22944                           
 22945                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22946     0B2C  3000               	movlw	0
 22947     0B2D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22948     0B2E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22949     0B2F  3000               	movlw	0
 22950     0B30  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 22951     0B31  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 22952     0B32  3197  27AC  318B   	fcall	_I2C1_SetDataCompleteCallback
 22953     0B35                     l8043:
 22954                           
 22955                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 22956     0B35  3002               	movlw	2
 22957     0B36                     l686:
 22958     0B36  0008               	return
 22959     0B37                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1090:
 22960                           
 22961                           	psect	text122
 22962     09B5                     __ptext122:	
 22963 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1073 *****************
 22964 ;; Defined at:
 22965 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22966 ;; Parameters:    Size  Location     Type
 22967 ;;  ptr             2    9[COMMON] PTR void 
 22968 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22969 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22970 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22971 ;; Auto vars:     Size  Location     Type
 22972 ;;		None
 22973 ;; Return value:  Size  Location     Type
 22974 ;;                  1    wreg      enum E363
 22975 ;; Registers used:
 22976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22977 ;; Tracked objects:
 22978 ;;		On entry : 0/0
 22979 ;;		On exit  : 0/0
 22980 ;;		Unchanged: 0/0
 22981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22986 ;;Total ram usage:        2 bytes
 22987 ;; Hardware stack levels used: 1
 22988 ;; Hardware stack levels required when called: 6
 22989 ;; This function calls:
 22990 ;;		_I2C1_SetBuffer
 22991 ;;		_I2C1_SetDataCompleteCallback
 22992 ;; This function is called by:
 22993 ;;		_I2C1_Write1ByteRegister
 22994 ;;		_I2C1_DO_TX
 22995 ;;		_I2C1_DO_RX
 22996 ;;		_I2C1_DO_TX_EMPTY
 22997 ;;		_I2C1_DO_ADDRESS_NACK
 22998 ;;		_I2C1_DO_RX_EMPTY
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002     09B5                     _wr1RegCompleteHandler@i2c1_master_example$F1073:	
 23003                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1073
 23004                           
 23005     09B5                     l8025:	
 23006                           ;incstack = 0
 23007                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1073: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23008                           
 23009                           
 23010                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 23011     09B5  087A               	movf	wr1RegCompleteHandler@i2c1_master_example$F1073@ptr+1,w
 23012     09B6  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23013     09B7  0879               	movf	wr1RegCompleteHandler@i2c1_master_example$F1073@ptr,w
 23014     09B8  00F0               	movwf	I2C1_SetBuffer@buffer
 23015     09B9  3001               	movlw	1
 23016     09BA  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23017     09BB  3000               	movlw	0
 23018     09BC  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23019     09BD  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23020     09C0                     l8027:
 23021                           
 23022                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23023     09C0  3000               	movlw	0
 23024     09C1  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23025     09C2  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23026     09C3  3000               	movlw	0
 23027     09C4  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23028     09C5  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23029     09C6  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23030     09C9                     l8029:
 23031                           
 23032                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 23033     09C9  3004               	movlw	4
 23034     09CA                     l680:
 23035     09CA  0008               	return
 23036     09CB                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1073:
 23037                           
 23038                           	psect	text123
 23039     099F                     __ptext123:	
 23040 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1067 *****************
 23041 ;; Defined at:
 23042 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 23043 ;; Parameters:    Size  Location     Type
 23044 ;;  ptr             2    9[COMMON] PTR void 
 23045 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23046 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23047 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;		None
 23050 ;; Return value:  Size  Location     Type
 23051 ;;                  1    wreg      enum E363
 23052 ;; Registers used:
 23053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23063 ;;Total ram usage:        2 bytes
 23064 ;; Hardware stack levels used: 1
 23065 ;; Hardware stack levels required when called: 6
 23066 ;; This function calls:
 23067 ;;		_I2C1_SetBuffer
 23068 ;;		_I2C1_SetDataCompleteCallback
 23069 ;; This function is called by:
 23070 ;;		_I2C1_Read2ByteRegister
 23071 ;;		_I2C1_DO_TX
 23072 ;;		_I2C1_DO_RX
 23073 ;;		_I2C1_DO_TX_EMPTY
 23074 ;;		_I2C1_DO_ADDRESS_NACK
 23075 ;;		_I2C1_DO_RX_EMPTY
 23076 ;; This function uses a non-reentrant model
 23077 ;;
 23078                           
 23079     099F                     _rd2RegCompleteHandler@i2c1_master_example$F1067:	
 23080                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1067
 23081                           
 23082     099F                     l8017:	
 23083                           ;incstack = 0
 23084                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1067: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23085                           
 23086                           
 23087                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 23088     099F  087A               	movf	rd2RegCompleteHandler@i2c1_master_example$F1067@ptr+1,w
 23089     09A0  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23090     09A1  0879               	movf	rd2RegCompleteHandler@i2c1_master_example$F1067@ptr,w
 23091     09A2  00F0               	movwf	I2C1_SetBuffer@buffer
 23092     09A3  3002               	movlw	2
 23093     09A4  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23094     09A5  3000               	movlw	0
 23095     09A6  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23096     09A7  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23097     09AA                     l8019:
 23098                           
 23099                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23100     09AA  3000               	movlw	0
 23101     09AB  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23102     09AC  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23103     09AD  3000               	movlw	0
 23104     09AE  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23105     09AF  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23106     09B0  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23107     09B3                     l8021:
 23108                           
 23109                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 23110     09B3  3002               	movlw	2
 23111     09B4                     l677:
 23112     09B4  0008               	return
 23113     09B5                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1067:
 23114                           
 23115                           	psect	text124
 23116     0989                     __ptext124:	
 23117 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1056 *****************
 23118 ;; Defined at:
 23119 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 23120 ;; Parameters:    Size  Location     Type
 23121 ;;  ptr             2    9[COMMON] PTR void 
 23122 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23123 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23124 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23125 ;; Auto vars:     Size  Location     Type
 23126 ;;		None
 23127 ;; Return value:  Size  Location     Type
 23128 ;;                  1    wreg      enum E363
 23129 ;; Registers used:
 23130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23131 ;; Tracked objects:
 23132 ;;		On entry : 0/0
 23133 ;;		On exit  : 0/0
 23134 ;;		Unchanged: 0/0
 23135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23140 ;;Total ram usage:        2 bytes
 23141 ;; Hardware stack levels used: 1
 23142 ;; Hardware stack levels required when called: 6
 23143 ;; This function calls:
 23144 ;;		_I2C1_SetBuffer
 23145 ;;		_I2C1_SetDataCompleteCallback
 23146 ;; This function is called by:
 23147 ;;		_I2C1_Read1ByteRegister
 23148 ;;		_I2C1_DO_TX
 23149 ;;		_I2C1_DO_RX
 23150 ;;		_I2C1_DO_TX_EMPTY
 23151 ;;		_I2C1_DO_ADDRESS_NACK
 23152 ;;		_I2C1_DO_RX_EMPTY
 23153 ;; This function uses a non-reentrant model
 23154 ;;
 23155                           
 23156     0989                     _rd1RegCompleteHandler@i2c1_master_example$F1056:	
 23157                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1056
 23158                           
 23159     0989                     l8009:	
 23160                           ;incstack = 0
 23161                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1056: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23162                           
 23163                           
 23164                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 23165     0989  087A               	movf	rd1RegCompleteHandler@i2c1_master_example$F1056@ptr+1,w
 23166     098A  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23167     098B  0879               	movf	rd1RegCompleteHandler@i2c1_master_example$F1056@ptr,w
 23168     098C  00F0               	movwf	I2C1_SetBuffer@buffer
 23169     098D  3001               	movlw	1
 23170     098E  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23171     098F  3000               	movlw	0
 23172     0990  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23173     0991  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23174     0994                     l8011:
 23175                           
 23176                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23177     0994  3000               	movlw	0
 23178     0995  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23179     0996  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23180     0997  3000               	movlw	0
 23181     0998  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23182     0999  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23183     099A  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23184     099D                     l8013:
 23185                           
 23186                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 23187     099D  3002               	movlw	2
 23188     099E                     l674:
 23189     099E  0008               	return
 23190     099F                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1056:
 23191                           
 23192                           	psect	text125
 23193     0AFB                     __ptext125:	
 23194 ;; *************** function _rdBlkRegCompleteHandler *****************
 23195 ;; Defined at:
 23196 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;  p               2    9[COMMON] PTR void 
 23199 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23200 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23201 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;		None
 23204 ;; Return value:  Size  Location     Type
 23205 ;;                  1    wreg      enum E363
 23206 ;; Registers used:
 23207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23217 ;;Total ram usage:        2 bytes
 23218 ;; Hardware stack levels used: 1
 23219 ;; Hardware stack levels required when called: 6
 23220 ;; This function calls:
 23221 ;;		_I2C1_SetBuffer
 23222 ;;		_I2C1_SetDataCompleteCallback
 23223 ;; This function is called by:
 23224 ;;		_i2c_readDataBlock
 23225 ;;		_I2C1_DO_TX
 23226 ;;		_I2C1_DO_RX
 23227 ;;		_I2C1_DO_TX_EMPTY
 23228 ;;		_I2C1_DO_ADDRESS_NACK
 23229 ;;		_I2C1_DO_RX_EMPTY
 23230 ;; This function uses a non-reentrant model
 23231 ;;
 23232                           
 23233     0AFB                     _rdBlkRegCompleteHandler:	
 23234                           ;psect for function _rdBlkRegCompleteHandler
 23235                           
 23236     0AFB                     l8003:	
 23237                           ;incstack = 0
 23238                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 23239                           
 23240                           
 23241                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 23242     0AFB  0879               	movf	rdBlkRegCompleteHandler@p,w
 23243     0AFC  0086               	movwf	6
 23244     0AFD  0187               	clrf	7
 23245     0AFE  3142               	addfsr 1,2
 23246     0AFF  3F40               	moviw [0]fsr1
 23247     0B00  00F0               	movwf	I2C1_SetBuffer@buffer
 23248     0B01  3F41               	moviw [1]fsr1
 23249     0B02  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23250     0B03  0879               	movf	rdBlkRegCompleteHandler@p,w
 23251     0B04  0086               	movwf	6
 23252     0B05  087A               	movf	rdBlkRegCompleteHandler@p+1,w
 23253     0B06  0087               	movwf	7
 23254     0B07  3F40               	moviw [0]fsr1
 23255     0B08  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23256     0B09  3F41               	moviw [1]fsr1
 23257     0B0A  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23258     0B0B  3197  27F1  318A   	fcall	_I2C1_SetBuffer
 23259                           
 23260                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23261     0B0E  3000               	movlw	0
 23262     0B0F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23263     0B10  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23264     0B11  3000               	movlw	0
 23265     0B12  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23266     0B13  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23267     0B14  3197  27AC  318A   	fcall	_I2C1_SetDataCompleteCallback
 23268     0B17                     l8005:
 23269                           
 23270                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 23271     0B17  3002               	movlw	2
 23272     0B18                     l554:
 23273     0B18  0008               	return
 23274     0B19                     __end_of_rdBlkRegCompleteHandler:
 23275                           
 23276                           	psect	text126
 23277     0973                     __ptext126:	
 23278 ;; *************** function _wr2RegCompleteHandler *****************
 23279 ;; Defined at:
 23280 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;  p               2    9[COMMON] PTR void 
 23283 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23284 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23285 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23286 ;; Auto vars:     Size  Location     Type
 23287 ;;		None
 23288 ;; Return value:  Size  Location     Type
 23289 ;;                  1    wreg      enum E363
 23290 ;; Registers used:
 23291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23292 ;; Tracked objects:
 23293 ;;		On entry : 0/0
 23294 ;;		On exit  : 0/0
 23295 ;;		Unchanged: 0/0
 23296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23301 ;;Total ram usage:        2 bytes
 23302 ;; Hardware stack levels used: 1
 23303 ;; Hardware stack levels required when called: 6
 23304 ;; This function calls:
 23305 ;;		_I2C1_SetBuffer
 23306 ;;		_I2C1_SetDataCompleteCallback
 23307 ;; This function is called by:
 23308 ;;		_i2c_write2ByteRegister
 23309 ;;		_I2C1_DO_TX
 23310 ;;		_I2C1_DO_RX
 23311 ;;		_I2C1_DO_TX_EMPTY
 23312 ;;		_I2C1_DO_ADDRESS_NACK
 23313 ;;		_I2C1_DO_RX_EMPTY
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317     0973                     _wr2RegCompleteHandler:	
 23318                           ;psect for function _wr2RegCompleteHandler
 23319                           
 23320     0973                     l7995:	
 23321                           ;incstack = 0
 23322                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23323                           
 23324                           
 23325                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 23326     0973  087A               	movf	wr2RegCompleteHandler@p+1,w
 23327     0974  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23328     0975  0879               	movf	wr2RegCompleteHandler@p,w
 23329     0976  00F0               	movwf	I2C1_SetBuffer@buffer
 23330     0977  3002               	movlw	2
 23331     0978  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23332     0979  3000               	movlw	0
 23333     097A  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23334     097B  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23335     097E                     l7997:
 23336                           
 23337                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23338     097E  3000               	movlw	0
 23339     097F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23340     0980  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23341     0981  3000               	movlw	0
 23342     0982  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23343     0983  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23344     0984  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23345     0987                     l7999:
 23346                           
 23347                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 23348     0987  3004               	movlw	4
 23349     0988                     l542:
 23350     0988  0008               	return
 23351     0989                     __end_of_wr2RegCompleteHandler:
 23352                           
 23353                           	psect	text127
 23354     095D                     __ptext127:	
 23355 ;; *************** function _rd2RegCompleteHandler *****************
 23356 ;; Defined at:
 23357 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;  p               2    9[COMMON] PTR void 
 23360 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23361 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23362 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23363 ;; Auto vars:     Size  Location     Type
 23364 ;;		None
 23365 ;; Return value:  Size  Location     Type
 23366 ;;                  1    wreg      enum E363
 23367 ;; Registers used:
 23368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23369 ;; Tracked objects:
 23370 ;;		On entry : 0/0
 23371 ;;		On exit  : 0/0
 23372 ;;		Unchanged: 0/0
 23373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23378 ;;Total ram usage:        2 bytes
 23379 ;; Hardware stack levels used: 1
 23380 ;; Hardware stack levels required when called: 6
 23381 ;; This function calls:
 23382 ;;		_I2C1_SetBuffer
 23383 ;;		_I2C1_SetDataCompleteCallback
 23384 ;; This function is called by:
 23385 ;;		_i2c_read2ByteRegister
 23386 ;;		_I2C1_DO_TX
 23387 ;;		_I2C1_DO_RX
 23388 ;;		_I2C1_DO_TX_EMPTY
 23389 ;;		_I2C1_DO_ADDRESS_NACK
 23390 ;;		_I2C1_DO_RX_EMPTY
 23391 ;; This function uses a non-reentrant model
 23392 ;;
 23393                           
 23394     095D                     _rd2RegCompleteHandler:	
 23395                           ;psect for function _rd2RegCompleteHandler
 23396                           
 23397     095D                     l7987:	
 23398                           ;incstack = 0
 23399                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23400                           
 23401                           
 23402                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 23403     095D  087A               	movf	rd2RegCompleteHandler@p+1,w
 23404     095E  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23405     095F  0879               	movf	rd2RegCompleteHandler@p,w
 23406     0960  00F0               	movwf	I2C1_SetBuffer@buffer
 23407     0961  3002               	movlw	2
 23408     0962  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23409     0963  3000               	movlw	0
 23410     0964  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23411     0965  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23412     0968                     l7989:
 23413                           
 23414                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 23415     0968  3000               	movlw	0
 23416     0969  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23417     096A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23418     096B  3000               	movlw	0
 23419     096C  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23420     096D  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23421     096E  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23422     0971                     l7991:
 23423                           
 23424                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 23425     0971  3002               	movlw	2
 23426     0972                     l530:
 23427     0972  0008               	return
 23428     0973                     __end_of_rd2RegCompleteHandler:
 23429                           
 23430                           	psect	text128
 23431     0947                     __ptext128:	
 23432 ;; *************** function _rd1RegCompleteHandler *****************
 23433 ;; Defined at:
 23434 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23435 ;; Parameters:    Size  Location     Type
 23436 ;;  p               2    9[COMMON] PTR void 
 23437 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23438 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23439 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23440 ;; Auto vars:     Size  Location     Type
 23441 ;;		None
 23442 ;; Return value:  Size  Location     Type
 23443 ;;                  1    wreg      enum E363
 23444 ;; Registers used:
 23445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23446 ;; Tracked objects:
 23447 ;;		On entry : 0/0
 23448 ;;		On exit  : 0/0
 23449 ;;		Unchanged: 0/0
 23450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23455 ;;Total ram usage:        2 bytes
 23456 ;; Hardware stack levels used: 1
 23457 ;; Hardware stack levels required when called: 6
 23458 ;; This function calls:
 23459 ;;		_I2C1_SetBuffer
 23460 ;;		_I2C1_SetDataCompleteCallback
 23461 ;; This function is called by:
 23462 ;;		_i2c_read1ByteRegister
 23463 ;;		_I2C1_DO_TX
 23464 ;;		_I2C1_DO_RX
 23465 ;;		_I2C1_DO_TX_EMPTY
 23466 ;;		_I2C1_DO_ADDRESS_NACK
 23467 ;;		_I2C1_DO_RX_EMPTY
 23468 ;; This function uses a non-reentrant model
 23469 ;;
 23470                           
 23471     0947                     _rd1RegCompleteHandler:	
 23472                           ;psect for function _rd1RegCompleteHandler
 23473                           
 23474     0947                     l7979:	
 23475                           ;incstack = 0
 23476                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23477                           
 23478                           
 23479                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 23480     0947  087A               	movf	rd1RegCompleteHandler@p+1,w
 23481     0948  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23482     0949  0879               	movf	rd1RegCompleteHandler@p,w
 23483     094A  00F0               	movwf	I2C1_SetBuffer@buffer
 23484     094B  3001               	movlw	1
 23485     094C  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23486     094D  3000               	movlw	0
 23487     094E  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23488     094F  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23489     0952                     l7981:
 23490                           
 23491                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 23492     0952  3000               	movlw	0
 23493     0953  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23494     0954  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23495     0955  3000               	movlw	0
 23496     0956  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23497     0957  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23498     0958  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23499     095B                     l7983:
 23500                           
 23501                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 23502     095B  3002               	movlw	2
 23503     095C                     l515:
 23504     095C  0008               	return
 23505     095D                     __end_of_rd1RegCompleteHandler:
 23506                           
 23507                           	psect	text129
 23508     0931                     __ptext129:	
 23509 ;; *************** function _wr1RegCompleteHandler *****************
 23510 ;; Defined at:
 23511 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23512 ;; Parameters:    Size  Location     Type
 23513 ;;  p               2    9[COMMON] PTR void 
 23514 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23515 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23516 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;		None
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  1    wreg      enum E363
 23521 ;; Registers used:
 23522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23532 ;;Total ram usage:        2 bytes
 23533 ;; Hardware stack levels used: 1
 23534 ;; Hardware stack levels required when called: 6
 23535 ;; This function calls:
 23536 ;;		_I2C1_SetBuffer
 23537 ;;		_I2C1_SetDataCompleteCallback
 23538 ;; This function is called by:
 23539 ;;		_i2c_write1ByteRegister
 23540 ;;		_I2C1_DO_TX
 23541 ;;		_I2C1_DO_RX
 23542 ;;		_I2C1_DO_TX_EMPTY
 23543 ;;		_I2C1_DO_ADDRESS_NACK
 23544 ;;		_I2C1_DO_RX_EMPTY
 23545 ;; This function uses a non-reentrant model
 23546 ;;
 23547                           
 23548     0931                     _wr1RegCompleteHandler:	
 23549                           ;psect for function _wr1RegCompleteHandler
 23550                           
 23551     0931                     l7971:	
 23552                           ;incstack = 0
 23553                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 23554                           
 23555                           
 23556                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 23557     0931  087A               	movf	wr1RegCompleteHandler@p+1,w
 23558     0932  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23559     0933  0879               	movf	wr1RegCompleteHandler@p,w
 23560     0934  00F0               	movwf	I2C1_SetBuffer@buffer
 23561     0935  3001               	movlw	1
 23562     0936  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23563     0937  3000               	movlw	0
 23564     0938  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23565     0939  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23566     093C                     l7973:
 23567                           
 23568                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 23569     093C  3000               	movlw	0
 23570     093D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23571     093E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23572     093F  3000               	movlw	0
 23573     0940  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23574     0941  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23575     0942  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23576     0945                     l7975:
 23577                           
 23578                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 23579     0945  3004               	movlw	4
 23580     0946                     l494:
 23581     0946  0008               	return
 23582     0947                     __end_of_wr1RegCompleteHandler:
 23583                           
 23584                           	psect	text130
 23585     091B                     __ptext130:	
 23586 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1079 *****************
 23587 ;; Defined at:
 23588 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 23589 ;; Parameters:    Size  Location     Type
 23590 ;;  ptr             2    9[COMMON] PTR void 
 23591 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23592 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23593 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23594 ;; Auto vars:     Size  Location     Type
 23595 ;;		None
 23596 ;; Return value:  Size  Location     Type
 23597 ;;                  1    wreg      enum E363
 23598 ;; Registers used:
 23599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23600 ;; Tracked objects:
 23601 ;;		On entry : 0/0
 23602 ;;		On exit  : 0/0
 23603 ;;		Unchanged: 0/0
 23604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23609 ;;Total ram usage:        2 bytes
 23610 ;; Hardware stack levels used: 1
 23611 ;; Hardware stack levels required when called: 6
 23612 ;; This function calls:
 23613 ;;		_I2C1_SetBuffer
 23614 ;;		_I2C1_SetDataCompleteCallback
 23615 ;; This function is called by:
 23616 ;;		_I2C1_Write2ByteRegister
 23617 ;;		_I2C1_DO_TX
 23618 ;;		_I2C1_DO_RX
 23619 ;;		_I2C1_DO_TX_EMPTY
 23620 ;;		_I2C1_DO_ADDRESS_NACK
 23621 ;;		_I2C1_DO_RX_EMPTY
 23622 ;; This function uses a non-reentrant model
 23623 ;;
 23624                           
 23625     091B                     _wr2RegCompleteHandler@i2c1_master_example$F1079:	
 23626                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1079
 23627                           
 23628     091B                     l8033:	
 23629                           ;incstack = 0
 23630                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1079: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23631                           
 23632                           
 23633                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 23634     091B  087A               	movf	wr2RegCompleteHandler@i2c1_master_example$F1079@ptr+1,w
 23635     091C  00F1               	movwf	I2C1_SetBuffer@buffer+1
 23636     091D  0879               	movf	wr2RegCompleteHandler@i2c1_master_example$F1079@ptr,w
 23637     091E  00F0               	movwf	I2C1_SetBuffer@buffer
 23638     091F  3002               	movlw	2
 23639     0920  00F2               	movwf	I2C1_SetBuffer@bufferSize
 23640     0921  3000               	movlw	0
 23641     0922  00F3               	movwf	I2C1_SetBuffer@bufferSize+1
 23642     0923  3197  27F1  3189   	fcall	_I2C1_SetBuffer
 23643     0926                     l8035:
 23644                           
 23645                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23646     0926  3000               	movlw	0
 23647     0927  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23648     0928  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23649     0929  3000               	movlw	0
 23650     092A  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 23651     092B  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr+1
 23652     092C  3197  27AC  3189   	fcall	_I2C1_SetDataCompleteCallback
 23653     092F                     l8037:
 23654                           
 23655                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 23656     092F  3004               	movlw	4
 23657     0930                     l683:
 23658     0930  0008               	return
 23659     0931                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1079:
 23660                           
 23661                           	psect	text131
 23662     17AC                     __ptext131:	
 23663 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 23664 ;; Defined at:
 23665 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 23666 ;; Parameters:    Size  Location     Type
 23667 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 23668 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1090(1), wr2RegCompleteHandler@i2c1_master_example$F1079(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1073(1), rd2RegCompleteHandler@i2c1_master_example$F1067(1), 
 23669 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1056(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23670 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23671 ;;  ptr             2    7[COMMON] PTR void 
 23672 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23673 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23674 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23675 ;; Auto vars:     Size  Location     Type
 23676 ;;		None
 23677 ;; Return value:  Size  Location     Type
 23678 ;;                  1    wreg      void 
 23679 ;; Registers used:
 23680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23681 ;; Tracked objects:
 23682 ;;		On entry : 0/0
 23683 ;;		On exit  : 0/0
 23684 ;;		Unchanged: 0/0
 23685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23690 ;;Total ram usage:        4 bytes
 23691 ;; Hardware stack levels used: 1
 23692 ;; Hardware stack levels required when called: 5
 23693 ;; This function calls:
 23694 ;;		_I2C1_SetCallback
 23695 ;; This function is called by:
 23696 ;;		_wr1RegCompleteHandler
 23697 ;;		_rd1RegCompleteHandler
 23698 ;;		_i2c_read1ByteRegister
 23699 ;;		_rd2RegCompleteHandler
 23700 ;;		_i2c_read2ByteRegister
 23701 ;;		_wr2RegCompleteHandler
 23702 ;;		_rdBlkRegCompleteHandler
 23703 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 23704 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 23705 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 23706 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 23707 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 23708 ;;		_i2c_write1ByteRegister
 23709 ;;		_i2c_write2ByteRegister
 23710 ;;		_i2c_readDataBlock
 23711 ;;		_I2C1_Read1ByteRegister
 23712 ;;		_I2C1_Read2ByteRegister
 23713 ;;		_I2C1_Write1ByteRegister
 23714 ;;		_I2C1_Write2ByteRegister
 23715 ;;		_I2C1_ReadDataBlock
 23716 ;; This function uses a non-reentrant model
 23717 ;;
 23718                           
 23719     17AC                     _I2C1_SetDataCompleteCallback:	
 23720                           ;psect for function _I2C1_SetDataCompleteCallback
 23721                           
 23722     17AC                     l7963:	
 23723                           ;incstack = 0
 23724                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 23725                           
 23726                           
 23727                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 23728     17AC  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 23729     17AD  00F1               	movwf	I2C1_SetCallback@cb+1
 23730     17AE  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 23731     17AF  00F0               	movwf	I2C1_SetCallback@cb
 23732     17B0  0878               	movf	I2C1_SetDataCompleteCallback@ptr+1,w
 23733     17B1  00F3               	movwf	I2C1_SetCallback@ptr+1
 23734     17B2  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 23735     17B3  00F2               	movwf	I2C1_SetCallback@ptr
 23736     17B4  3000               	movlw	0
 23737     17B5  318E  2664  3197   	fcall	_I2C1_SetCallback
 23738     17B8                     l1287:
 23739     17B8  0008               	return
 23740     17B9                     __end_of_I2C1_SetDataCompleteCallback:
 23741                           
 23742                           	psect	text132
 23743     0E64                     __ptext132:	
 23744 ;; *************** function _I2C1_SetCallback *****************
 23745 ;; Defined at:
 23746 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 23747 ;; Parameters:    Size  Location     Type
 23748 ;;  idx             1    wreg     enum E12813
 23749 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 23750 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1090(1), wr2RegCompleteHandler@i2c1_master_example$F1079(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1073(1), rd2RegCompleteHandler@i2c1_master_example$F1067(1), 
 23751 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1056(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23752 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23753 ;;  ptr             2    2[COMMON] PTR void 
 23754 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23755 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23756 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23757 ;; Auto vars:     Size  Location     Type
 23758 ;;  idx             1    4[COMMON] enum E12813
 23759 ;; Return value:  Size  Location     Type
 23760 ;;                  1    wreg      void 
 23761 ;; Registers used:
 23762 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23763 ;; Tracked objects:
 23764 ;;		On entry : 0/0
 23765 ;;		On exit  : 0/0
 23766 ;;		Unchanged: 0/0
 23767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23771 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23772 ;;Total ram usage:        5 bytes
 23773 ;; Hardware stack levels used: 1
 23774 ;; Hardware stack levels required when called: 4
 23775 ;; This function calls:
 23776 ;;		Nothing
 23777 ;; This function is called by:
 23778 ;;		_I2C1_SetDataCompleteCallback
 23779 ;;		_I2C1_SetAddressNackCallback
 23780 ;;		_I2C1_SetWriteCollisionCallback
 23781 ;;		_I2C1_SetDataNackCallback
 23782 ;;		_I2C1_SetTimeoutCallback
 23783 ;; This function uses a non-reentrant model
 23784 ;;
 23785                           
 23786     0E64                     _I2C1_SetCallback:	
 23787                           ;psect for function _I2C1_SetCallback
 23788                           
 23789                           
 23790                           ;incstack = 0
 23791                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 23792                           ;I2C1_SetCallback@idx stored from wreg
 23793     0E64  00F4               	movwf	I2C1_SetCallback@idx
 23794     0E65                     l7951:
 23795                           
 23796                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 23797     0E65  0870               	movf	I2C1_SetCallback@cb,w
 23798     0E66  0471               	iorwf	I2C1_SetCallback@cb+1,w
 23799     0E67  1903               	btfsc	3,2
 23800     0E68  2E6A               	goto	u4121
 23801     0E69  2E6B               	goto	u4120
 23802     0E6A                     u4121:
 23803     0E6A  2E84               	goto	l7955
 23804     0E6B                     u4120:
 23805     0E6B                     l7953:
 23806                           
 23807                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 23808     0E6B  3574               	lslf	I2C1_SetCallback@idx,w
 23809     0E6C  3EA0               	addlw	low _I2C1_Status
 23810     0E6D  0086               	movwf	6
 23811     0E6E  3001               	movlw	high _I2C1_Status
 23812     0E6F  3D87               	addwfc	7,f
 23813     0E70  3574               	lslf	I2C1_SetCallback@idx,w
 23814     0E71  3000               	movlw	0
 23815     0E72  3D87               	addwfc	7,f
 23816     0E73  0870               	movf	I2C1_SetCallback@cb,w
 23817     0E74  3FC0               	movwi [0]fsr1
 23818     0E75  0871               	movf	I2C1_SetCallback@cb+1,w
 23819     0E76  3FC1               	movwi [1]fsr1
 23820                           
 23821                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 23822     0E77  3574               	lslf	I2C1_SetCallback@idx,w
 23823     0E78  3EAC               	addlw	low (_I2C1_Status+12)
 23824     0E79  0086               	movwf	6
 23825     0E7A  3001               	movlw	high (_I2C1_Status+12)
 23826     0E7B  3D87               	addwfc	7,f
 23827     0E7C  3574               	lslf	I2C1_SetCallback@idx,w
 23828     0E7D  3000               	movlw	0
 23829     0E7E  3D87               	addwfc	7,f
 23830     0E7F  0872               	movf	I2C1_SetCallback@ptr,w
 23831     0E80  3FC0               	movwi [0]fsr1
 23832     0E81  0873               	movf	I2C1_SetCallback@ptr+1,w
 23833     0E82  3FC1               	movwi [1]fsr1
 23834                           
 23835                           ;mcc_generated_files/i2c1_master.c: 304:     }
 23836     0E83  2E9B               	goto	l1304
 23837     0E84                     l7955:
 23838                           
 23839                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 23840     0E84  3574               	lslf	I2C1_SetCallback@idx,w
 23841     0E85  3EA0               	addlw	low _I2C1_Status
 23842     0E86  0086               	movwf	6
 23843     0E87  3001               	movlw	high _I2C1_Status
 23844     0E88  3D87               	addwfc	7,f
 23845     0E89  3574               	lslf	I2C1_SetCallback@idx,w
 23846     0E8A  3000               	movlw	0
 23847     0E8B  3D87               	addwfc	7,f
 23848     0E8C  3015               	movlw	low (low _I2C1_CallbackReturnStop)
 23849     0E8D  3FC0               	movwi [0]fsr1
 23850     0E8E  3000               	movlw	high (low _I2C1_CallbackReturnStop)
 23851     0E8F  3FC1               	movwi [1]fsr1
 23852                           
 23853                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 23854     0E90  3574               	lslf	I2C1_SetCallback@idx,w
 23855     0E91  3EAC               	addlw	low (_I2C1_Status+12)
 23856     0E92  0086               	movwf	6
 23857     0E93  3001               	movlw	high (_I2C1_Status+12)
 23858     0E94  3D87               	addwfc	7,f
 23859     0E95  3574               	lslf	I2C1_SetCallback@idx,w
 23860     0E96  3000               	movlw	0
 23861     0E97  3D87               	addwfc	7,f
 23862     0E98  3000               	movlw	0
 23863     0E99  3FC0               	movwi [0]fsr1
 23864     0E9A  3FC1               	movwi [1]fsr1
 23865     0E9B                     l1304:
 23866     0E9B  0008               	return
 23867     0E9C                     __end_of_I2C1_SetCallback:
 23868                           
 23869                           	psect	text133
 23870     17F1                     __ptext133:	
 23871 ;; *************** function _I2C1_SetBuffer *****************
 23872 ;; Defined at:
 23873 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 23874 ;; Parameters:    Size  Location     Type
 23875 ;;  buffer          2    0[COMMON] PTR void 
 23876 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 23877 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 23878 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1
      +), 
 23879 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 23880 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(1), 
 23881 ;;		 -> i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), 
 23882 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 23883 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23884 ;;  bufferSize      2    2[COMMON] unsigned int 
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1    wreg      void 
 23889 ;; Registers used:
 23890 ;;		wreg
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/0
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23900 ;;Total ram usage:        4 bytes
 23901 ;; Hardware stack levels used: 1
 23902 ;; Hardware stack levels required when called: 4
 23903 ;; This function calls:
 23904 ;;		Nothing
 23905 ;; This function is called by:
 23906 ;;		_wr1RegCompleteHandler
 23907 ;;		_rd1RegCompleteHandler
 23908 ;;		_i2c_read1ByteRegister
 23909 ;;		_rd2RegCompleteHandler
 23910 ;;		_i2c_read2ByteRegister
 23911 ;;		_wr2RegCompleteHandler
 23912 ;;		_rdBlkRegCompleteHandler
 23913 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1056
 23914 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1067
 23915 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1073
 23916 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1079
 23917 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1090
 23918 ;;		_i2c_write1ByteRegister
 23919 ;;		_i2c_writeNBytes
 23920 ;;		_i2c_write2ByteRegister
 23921 ;;		_i2c_readDataBlock
 23922 ;;		_i2c_readNBytes
 23923 ;;		_I2C1_Read1ByteRegister
 23924 ;;		_I2C1_Read2ByteRegister
 23925 ;;		_I2C1_Write1ByteRegister
 23926 ;;		_I2C1_Write2ByteRegister
 23927 ;;		_I2C1_WriteNBytes
 23928 ;;		_I2C1_ReadNBytes
 23929 ;;		_I2C1_ReadDataBlock
 23930 ;; This function uses a non-reentrant model
 23931 ;;
 23932                           
 23933     17F1                     _I2C1_SetBuffer:	
 23934                           ;psect for function _I2C1_SetBuffer
 23935                           
 23936     17F1                     l7957:	
 23937                           ;incstack = 0
 23938                           ; Regs used in _I2C1_SetBuffer: [wreg]
 23939                           
 23940                           
 23941                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 23942     17F1  0143               	movlb	3	; select bank3
 23943     17F2  1DC3               	btfss	(_I2C1_Status^(0+384)+35),3
 23944     17F3  2FF5               	goto	u4131
 23945     17F4  2FF6               	goto	u4130
 23946     17F5                     u4131:
 23947     17F5  2FFF               	goto	l1284
 23948     17F6                     u4130:
 23949     17F6                     l7959:
 23950                           
 23951                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 23952     17F6  0871               	movf	I2C1_SetBuffer@buffer+1,w
 23953     17F7  00BE               	movwf	((_I2C1_Status+1)^(0+384)+29)
 23954     17F8  0870               	movf	I2C1_SetBuffer@buffer,w
 23955     17F9  00BD               	movwf	(_I2C1_Status^(0+384)+29)
 23956                           
 23957                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 23958     17FA  0873               	movf	I2C1_SetBuffer@bufferSize+1,w
 23959     17FB  00C0               	movwf	((_I2C1_Status+1)^(0+384)+31)
 23960     17FC  0872               	movf	I2C1_SetBuffer@bufferSize,w
 23961     17FD  00BF               	movwf	(_I2C1_Status^(0+384)+31)
 23962     17FE                     l7961:
 23963                           
 23964                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 23965     17FE  11C3               	bcf	(_I2C1_Status^(0+384)+35),3
 23966     17FF                     l1284:
 23967     17FF  0008               	return
 23968     1800                     __end_of_I2C1_SetBuffer:
 23969                           
 23970                           	psect	text134
 23971     1628                     __ptext134:	
 23972 ;; *************** function _I2C1_MasterStop *****************
 23973 ;; Defined at:
 23974 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 23975 ;; Parameters:    Size  Location     Type
 23976 ;;		None
 23977 ;; Auto vars:     Size  Location     Type
 23978 ;;		None
 23979 ;; Return value:  Size  Location     Type
 23980 ;;                  1    wreg      void 
 23981 ;; Registers used:
 23982 ;;		None
 23983 ;; Tracked objects:
 23984 ;;		On entry : 0/0
 23985 ;;		On exit  : 0/0
 23986 ;;		Unchanged: 0/0
 23987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23992 ;;Total ram usage:        0 bytes
 23993 ;; Hardware stack levels used: 1
 23994 ;; Hardware stack levels required when called: 4
 23995 ;; This function calls:
 23996 ;;		Nothing
 23997 ;; This function is called by:
 23998 ;;		_I2C1_DO_SEND_STOP
 23999 ;; This function uses a non-reentrant model
 24000 ;;
 24001                           
 24002     1628                     _I2C1_MasterStop:	
 24003                           ;psect for function _I2C1_MasterStop
 24004                           
 24005     1628                     l7967:	
 24006                           ;incstack = 0
 24007                           ; Regs used in _I2C1_MasterStop: []
 24008                           
 24009                           
 24010                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 24011     1628  0143               	movlb	3	; select bank3
 24012     1629  1511               	bsf	17,2	;volatile
 24013     162A                     l1450:
 24014     162A  0008               	return
 24015     162B                     __end_of_I2C1_MasterStop:
 24016                           
 24017                           	psect	text135
 24018     1625                     __ptext135:	
 24019 ;; *************** function _I2C1_MasterEnableRestart *****************
 24020 ;; Defined at:
 24021 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 24022 ;; Parameters:    Size  Location     Type
 24023 ;;		None
 24024 ;; Auto vars:     Size  Location     Type
 24025 ;;		None
 24026 ;; Return value:  Size  Location     Type
 24027 ;;                  1    wreg      void 
 24028 ;; Registers used:
 24029 ;;		None
 24030 ;; Tracked objects:
 24031 ;;		On entry : 0/0
 24032 ;;		On exit  : 0/0
 24033 ;;		Unchanged: 0/0
 24034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24039 ;;Total ram usage:        0 bytes
 24040 ;; Hardware stack levels used: 1
 24041 ;; Hardware stack levels required when called: 4
 24042 ;; This function calls:
 24043 ;;		Nothing
 24044 ;; This function is called by:
 24045 ;;		_I2C1_DO_SEND_RESTART_READ
 24046 ;;		_I2C1_DO_SEND_RESTART_WRITE
 24047 ;;		_I2C1_DO_SEND_RESTART
 24048 ;;		_I2C1_DO_RX_EMPTY
 24049 ;; This function uses a non-reentrant model
 24050 ;;
 24051                           
 24052     1625                     _I2C1_MasterEnableRestart:	
 24053                           ;psect for function _I2C1_MasterEnableRestart
 24054                           
 24055     1625                     l7965:	
 24056                           ;incstack = 0
 24057                           ; Regs used in _I2C1_MasterEnableRestart: []
 24058                           
 24059                           
 24060                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 24061     1625  0143               	movlb	3	; select bank3
 24062     1626  1491               	bsf	17,1	;volatile
 24063     1627                     l1438:
 24064     1627  0008               	return
 24065     1628                     __end_of_I2C1_MasterEnableRestart:
 24066                           
 24067                           	psect	text136
 24068     1622                     __ptext136:	
 24069 ;; *************** function _I2C1_MasterStart *****************
 24070 ;; Defined at:
 24071 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 24072 ;; Parameters:    Size  Location     Type
 24073 ;;		None
 24074 ;; Auto vars:     Size  Location     Type
 24075 ;;		None
 24076 ;; Return value:  Size  Location     Type
 24077 ;;                  1    wreg      void 
 24078 ;; Registers used:
 24079 ;;		None
 24080 ;; Tracked objects:
 24081 ;;		On entry : 0/0
 24082 ;;		On exit  : 0/0
 24083 ;;		Unchanged: 0/0
 24084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24089 ;;Total ram usage:        0 bytes
 24090 ;; Hardware stack levels used: 1
 24091 ;; Hardware stack levels required when called: 4
 24092 ;; This function calls:
 24093 ;;		Nothing
 24094 ;; This function is called by:
 24095 ;;		_I2C1_MasterOperation
 24096 ;; This function uses a non-reentrant model
 24097 ;;
 24098                           
 24099     1622                     _I2C1_MasterStart:	
 24100                           ;psect for function _I2C1_MasterStart
 24101                           
 24102     1622                     l8279:	
 24103                           ;incstack = 0
 24104                           ; Regs used in _I2C1_MasterStart: []
 24105                           
 24106                           
 24107                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 24108     1622  0143               	movlb	3	; select bank3
 24109     1623  1411               	bsf	17,0	;volatile
 24110     1624                     l1447:
 24111     1624  0008               	return
 24112     1625                     __end_of_I2C1_MasterStart:
 24113                           
 24114                           	psect	text137
 24115     09F7                     __ptext137:	
 24116 ;; *************** function _I2C1_Close *****************
 24117 ;; Defined at:
 24118 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 24119 ;; Parameters:    Size  Location     Type
 24120 ;;		None
 24121 ;; Auto vars:     Size  Location     Type
 24122 ;;  returnValue     1    0[COMMON] enum E358
 24123 ;; Return value:  Size  Location     Type
 24124 ;;                  1    wreg      enum E358
 24125 ;; Registers used:
 24126 ;;		wreg, status,2, status,0, pclath, cstack
 24127 ;; Tracked objects:
 24128 ;;		On entry : 0/0
 24129 ;;		On exit  : 0/0
 24130 ;;		Unchanged: 0/0
 24131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24136 ;;Total ram usage:        1 bytes
 24137 ;; Hardware stack levels used: 1
 24138 ;; Hardware stack levels required when called: 5
 24139 ;; This function calls:
 24140 ;;		_I2C1_MasterClearIrq
 24141 ;;		_I2C1_MasterClose
 24142 ;;		_I2C1_MasterDisableIrq
 24143 ;; This function is called by:
 24144 ;;		_i2c_read1ByteRegister
 24145 ;;		_i2c_read2ByteRegister
 24146 ;;		_i2c_write1ByteRegister
 24147 ;;		_i2c_writeNBytes
 24148 ;;		_i2c_write2ByteRegister
 24149 ;;		_i2c_readDataBlock
 24150 ;;		_i2c_readNBytes
 24151 ;;		_I2C1_Read1ByteRegister
 24152 ;;		_I2C1_Read2ByteRegister
 24153 ;;		_I2C1_Write1ByteRegister
 24154 ;;		_I2C1_Write2ByteRegister
 24155 ;;		_I2C1_WriteNBytes
 24156 ;;		_I2C1_ReadNBytes
 24157 ;;		_I2C1_ReadDataBlock
 24158 ;; This function uses a non-reentrant model
 24159 ;;
 24160                           
 24161     09F7                     _I2C1_Close:	
 24162                           ;psect for function _I2C1_Close
 24163                           
 24164     09F7                     l8365:	
 24165                           ;incstack = 0
 24166                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 24167                           
 24168                           
 24169                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 24170     09F7  3001               	movlw	1
 24171     09F8  00F0               	movwf	I2C1_Close@returnValue
 24172                           
 24173                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 24174     09F9  0143               	movlb	3	; select bank3
 24175     09FA  18C3               	btfsc	(_I2C1_Status^(0+384)+35),1
 24176     09FB  29FD               	goto	u4251
 24177     09FC  29FE               	goto	u4250
 24178     09FD                     u4251:
 24179     09FD  2A0D               	goto	l8373
 24180     09FE                     u4250:
 24181     09FE                     l8367:
 24182                           
 24183                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 24184     09FE  1143               	bcf	(_I2C1_Status^(0+384)+35),2
 24185                           
 24186                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 24187     09FF  30FF               	movlw	255
 24188     0A00  00BC               	movwf	(_I2C1_Status^(0+384)+28)
 24189     0A01                     l8369:
 24190                           
 24191                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 24192     0A01  3196  2619  3189   	fcall	_I2C1_MasterClearIrq
 24193                           
 24194                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 24195     0A04  3196  261F  3189   	fcall	_I2C1_MasterDisableIrq
 24196                           
 24197                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 24198     0A07  3196  261C  3189   	fcall	_I2C1_MasterClose
 24199     0A0A                     l8371:
 24200                           
 24201                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 24202     0A0A  0143               	movlb	3	; select bank3
 24203     0A0B  0842               	movf	(_I2C1_Status^(0+384)+34),w
 24204     0A0C  00F0               	movwf	I2C1_Close@returnValue
 24205     0A0D                     l8373:
 24206                           
 24207                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 24208     0A0D  0870               	movf	I2C1_Close@returnValue,w
 24209     0A0E                     l1265:
 24210     0A0E  0008               	return
 24211     0A0F                     __end_of_I2C1_Close:
 24212                           
 24213                           	psect	text138
 24214     161F                     __ptext138:	
 24215 ;; *************** function _I2C1_MasterDisableIrq *****************
 24216 ;; Defined at:
 24217 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 24218 ;; Parameters:    Size  Location     Type
 24219 ;;		None
 24220 ;; Auto vars:     Size  Location     Type
 24221 ;;		None
 24222 ;; Return value:  Size  Location     Type
 24223 ;;                  1    wreg      void 
 24224 ;; Registers used:
 24225 ;;		None
 24226 ;; Tracked objects:
 24227 ;;		On entry : 0/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24235 ;;Total ram usage:        0 bytes
 24236 ;; Hardware stack levels used: 1
 24237 ;; Hardware stack levels required when called: 4
 24238 ;; This function calls:
 24239 ;;		Nothing
 24240 ;; This function is called by:
 24241 ;;		_I2C1_Close
 24242 ;;		_I2C1_SetTimeOut
 24243 ;; This function uses a non-reentrant model
 24244 ;;
 24245                           
 24246     161F                     _I2C1_MasterDisableIrq:	
 24247                           ;psect for function _I2C1_MasterDisableIrq
 24248                           
 24249     161F                     l8301:	
 24250                           ;incstack = 0
 24251                           ; Regs used in _I2C1_MasterDisableIrq: []
 24252                           
 24253                           
 24254                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 24255     161F  014E               	movlb	14	; select bank14
 24256     1620  1019               	bcf	25,0	;volatile
 24257     1621                     l1474:
 24258     1621  0008               	return
 24259     1622                     __end_of_I2C1_MasterDisableIrq:
 24260                           
 24261                           	psect	text139
 24262     161C                     __ptext139:	
 24263 ;; *************** function _I2C1_MasterClose *****************
 24264 ;; Defined at:
 24265 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 24266 ;; Parameters:    Size  Location     Type
 24267 ;;		None
 24268 ;; Auto vars:     Size  Location     Type
 24269 ;;		None
 24270 ;; Return value:  Size  Location     Type
 24271 ;;                  1    wreg      void 
 24272 ;; Registers used:
 24273 ;;		None
 24274 ;; Tracked objects:
 24275 ;;		On entry : 0/0
 24276 ;;		On exit  : 0/0
 24277 ;;		Unchanged: 0/0
 24278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24283 ;;Total ram usage:        0 bytes
 24284 ;; Hardware stack levels used: 1
 24285 ;; Hardware stack levels required when called: 4
 24286 ;; This function calls:
 24287 ;;		Nothing
 24288 ;; This function is called by:
 24289 ;;		_I2C1_Close
 24290 ;; This function uses a non-reentrant model
 24291 ;;
 24292                           
 24293     161C                     _I2C1_MasterClose:	
 24294                           ;psect for function _I2C1_MasterClose
 24295                           
 24296     161C                     l8303:	
 24297                           ;incstack = 0
 24298                           ; Regs used in _I2C1_MasterClose: []
 24299                           
 24300                           
 24301                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 24302     161C  0143               	movlb	3	; select bank3
 24303     161D  1290               	bcf	16,5	;volatile
 24304     161E                     l1429:
 24305     161E  0008               	return
 24306     161F                     __end_of_I2C1_MasterClose:
 24307                           
 24308                           	psect	text140
 24309     1619                     __ptext140:	
 24310 ;; *************** function _I2C1_MasterClearIrq *****************
 24311 ;; Defined at:
 24312 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 24313 ;; Parameters:    Size  Location     Type
 24314 ;;		None
 24315 ;; Auto vars:     Size  Location     Type
 24316 ;;		None
 24317 ;; Return value:  Size  Location     Type
 24318 ;;                  1    wreg      void 
 24319 ;; Registers used:
 24320 ;;		None
 24321 ;; Tracked objects:
 24322 ;;		On entry : 0/0
 24323 ;;		On exit  : 0/0
 24324 ;;		Unchanged: 0/0
 24325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;Total ram usage:        0 bytes
 24331 ;; Hardware stack levels used: 1
 24332 ;; Hardware stack levels required when called: 4
 24333 ;; This function calls:
 24334 ;;		Nothing
 24335 ;; This function is called by:
 24336 ;;		_I2C1_Open
 24337 ;;		_I2C1_Close
 24338 ;;		_I2C1_MasterFsm
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           
 24342     1619                     _I2C1_MasterClearIrq:	
 24343                           ;psect for function _I2C1_MasterClearIrq
 24344                           
 24345     1619                     l8107:	
 24346                           ;incstack = 0
 24347                           ; Regs used in _I2C1_MasterClearIrq: []
 24348                           
 24349                           
 24350                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 24351     1619  014E               	movlb	14	; select bank14
 24352     161A  100F               	bcf	15,0	;volatile
 24353     161B                     l1477:
 24354     161B  0008               	return
 24355     161C                     __end_of_I2C1_MasterClearIrq:
 24356                           
 24357                           	psect	intentry
 24358     0004                     __pintentry:	
 24359 ;; *************** function _INTERRUPT_InterruptManager *****************
 24360 ;; Defined at:
 24361 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24362 ;; Parameters:    Size  Location     Type
 24363 ;;		None
 24364 ;; Auto vars:     Size  Location     Type
 24365 ;;		None
 24366 ;; Return value:  Size  Location     Type
 24367 ;;                  1    wreg      void 
 24368 ;; Registers used:
 24369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24370 ;; Tracked objects:
 24371 ;;		On entry : 0/0
 24372 ;;		On exit  : 0/0
 24373 ;;		Unchanged: 0/0
 24374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24379 ;;Total ram usage:        0 bytes
 24380 ;; Hardware stack levels used: 1
 24381 ;; Hardware stack levels required when called: 3
 24382 ;; This function calls:
 24383 ;;		NULL
 24384 ;;		_EUSART1_Receive_ISR
 24385 ;;		_EUSART1_Transmit_ISR
 24386 ;;		_EUSART2_Receive_ISR
 24387 ;;		_EUSART2_Transmit_ISR
 24388 ;;		_PIN_MANAGER_IOC
 24389 ;;		_TMR0_ISR
 24390 ;; This function is called by:
 24391 ;;		Interrupt level 1
 24392 ;; This function uses a non-reentrant model
 24393 ;;
 24394                           
 24395     0004                     _INTERRUPT_InterruptManager:
 24396                           
 24397                           ;incstack = 0
 24398 ;; hardware stack exceeded
 24399     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 24400                           
 24401                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 24402     0005  3180               	pagesel	$
 24403     0006                     i1l7633:
 24404                           
 24405                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 24406     0006  014E               	movlb	14	; select bank14
 24407     0007  1E96               	btfss	22,5	;volatile
 24408     0008  280A               	goto	u382_21
 24409     0009  280B               	goto	u382_20
 24410     000A                     u382_21:
 24411     000A  2813               	goto	i1l1002
 24412     000B                     u382_20:
 24413     000B                     i1l7635:
 24414     000B  1E8C               	btfss	12,5	;volatile
 24415     000C  280E               	goto	u383_21
 24416     000D  280F               	goto	u383_20
 24417     000E                     u383_21:
 24418     000E  2813               	goto	i1l1002
 24419     000F                     u383_20:
 24420     000F                     i1l7637:
 24421                           
 24422                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 24423     000F  3197  27E2  3180   	fcall	_TMR0_ISR
 24424                           
 24425                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 24426     0012  285F               	goto	i1l1016
 24427     0013                     i1l1002:	
 24428                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
 24429                           
 24430     0013  1E16               	btfss	22,4	;volatile
 24431     0014  2816               	goto	u384_21
 24432     0015  2817               	goto	u384_20
 24433     0016                     u384_21:
 24434     0016  281F               	goto	i1l1004
 24435     0017                     u384_20:
 24436     0017                     i1l7639:
 24437     0017  1E0C               	btfss	12,4	;volatile
 24438     0018  281A               	goto	u385_21
 24439     0019  281B               	goto	u385_20
 24440     001A                     u385_21:
 24441     001A  281F               	goto	i1l1004
 24442     001B                     u385_20:
 24443     001B                     i1l7641:
 24444                           
 24445                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 24446     001B  3188  203C  3180   	fcall	_PIN_MANAGER_IOC
 24447                           
 24448                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 24449     001E  285F               	goto	i1l1016
 24450     001F                     i1l1004:	
 24451                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 24452                           
 24453     001F  1F0B               	btfss	11,6	;volatile
 24454     0020  2822               	goto	u386_21
 24455     0021  2823               	goto	u386_20
 24456     0022                     u386_21:
 24457     0022  285F               	goto	i1l1010
 24458     0023                     u386_20:
 24459     0023                     i1l7643:
 24460                           
 24461                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 24462     0023  1F19               	btfss	25,6	;volatile
 24463     0024  2826               	goto	u387_21
 24464     0025  2827               	goto	u387_20
 24465     0026                     u387_21:
 24466     0026  2832               	goto	i1l1007
 24467     0027                     u387_20:
 24468     0027                     i1l7645:
 24469     0027  1F0F               	btfss	15,6	;volatile
 24470     0028  282A               	goto	u388_21
 24471     0029  282B               	goto	u388_20
 24472     002A                     u388_21:
 24473     002A  2832               	goto	i1l1007
 24474     002B                     u388_20:
 24475     002B                     i1l7647:
 24476                           
 24477                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_TxDefaultInterruptHandler();
 24478     002B  0141               	movlb	1	; select bank1
 24479     002C  0851               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 24480     002D  008A               	movwf	10
 24481     002E  0850               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 24482     002F  000A               	callw
 24483     0030  3180               	pagesel	$
 24484                           
 24485                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 24486     0031  285F               	goto	i1l1016
 24487     0032                     i1l1007:	
 24488                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 24489                           
 24490     0032  1F99               	btfss	25,7	;volatile
 24491     0033  2835               	goto	u389_21
 24492     0034  2836               	goto	u389_20
 24493     0035                     u389_21:
 24494     0035  2841               	goto	i1l1009
 24495     0036                     u389_20:
 24496     0036                     i1l7649:
 24497     0036  1F8F               	btfss	15,7	;volatile
 24498     0037  2839               	goto	u390_21
 24499     0038  283A               	goto	u390_20
 24500     0039                     u390_21:
 24501     0039  2841               	goto	i1l1009
 24502     003A                     u390_20:
 24503     003A                     i1l7651:
 24504                           
 24505                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART2_RxDefaultInterruptHandler();
 24506     003A  0141               	movlb	1	; select bank1
 24507     003B  084F               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 24508     003C  008A               	movwf	10
 24509     003D  084E               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 24510     003E  000A               	callw
 24511     003F  3180               	pagesel	$
 24512                           
 24513                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 24514     0040  285F               	goto	i1l1016
 24515     0041                     i1l1009:	
 24516                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 24517                           
 24518     0041  1E19               	btfss	25,4	;volatile
 24519     0042  2844               	goto	u391_21
 24520     0043  2845               	goto	u391_20
 24521     0044                     u391_21:
 24522     0044  2850               	goto	i1l1011
 24523     0045                     u391_20:
 24524     0045                     i1l7653:
 24525     0045  1E0F               	btfss	15,4	;volatile
 24526     0046  2848               	goto	u392_21
 24527     0047  2849               	goto	u392_20
 24528     0048                     u392_21:
 24529     0048  2850               	goto	i1l1011
 24530     0049                     u392_20:
 24531     0049                     i1l7655:
 24532                           
 24533                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_TxDefaultInterruptHandler();
 24534     0049  0142               	movlb	2	; select bank2
 24535     004A  0863               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 24536     004B  008A               	movwf	10
 24537     004C  0862               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 24538     004D  000A               	callw
 24539     004E  3180               	pagesel	$
 24540                           
 24541                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 24542     004F  285F               	goto	i1l1016
 24543     0050                     i1l1011:	
 24544                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 24545                           
 24546     0050  1E99               	btfss	25,5	;volatile
 24547     0051  2853               	goto	u393_21
 24548     0052  2854               	goto	u393_20
 24549     0053                     u393_21:
 24550     0053  285F               	goto	i1l1010
 24551     0054                     u393_20:
 24552     0054                     i1l7657:
 24553     0054  1E8F               	btfss	15,5	;volatile
 24554     0055  2857               	goto	u394_21
 24555     0056  2858               	goto	u394_20
 24556     0057                     u394_21:
 24557     0057  285F               	goto	i1l1010
 24558     0058                     u394_20:
 24559     0058                     i1l7659:
 24560                           
 24561                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART1_RxDefaultInterruptHandler();
 24562     0058  0142               	movlb	2	; select bank2
 24563     0059  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 24564     005A  008A               	movwf	10
 24565     005B  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 24566     005C  000A               	callw
 24567     005D  3180               	pagesel	$
 24568                           
 24569                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 24570     005E  285F               	goto	i1l1016
 24571     005F                     i1l1010:
 24572     005F                     i1l1016:
 24573     005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 24574     0060  0009               	retfie
 24575     0061                     __end_of_INTERRUPT_InterruptManager:
 24576                           
 24577                           	psect	text142
 24578     17E2                     __ptext142:	
 24579 ;; *************** function _TMR0_ISR *****************
 24580 ;; Defined at:
 24581 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 24582 ;; Parameters:    Size  Location     Type
 24583 ;;		None
 24584 ;; Auto vars:     Size  Location     Type
 24585 ;;		None
 24586 ;; Return value:  Size  Location     Type
 24587 ;;                  1    wreg      void 
 24588 ;; Registers used:
 24589 ;;		wreg, status,2, status,0, pclath, cstack
 24590 ;; Tracked objects:
 24591 ;;		On entry : 0/0
 24592 ;;		On exit  : 0/0
 24593 ;;		Unchanged: 0/0
 24594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24599 ;;Total ram usage:        0 bytes
 24600 ;; Hardware stack levels used: 1
 24601 ;; Hardware stack levels required when called: 1
 24602 ;; This function calls:
 24603 ;;		NULL
 24604 ;;		_TMR0_DefaultInterruptHandler
 24605 ;; This function is called by:
 24606 ;;		_INTERRUPT_InterruptManager
 24607 ;; This function uses a non-reentrant model
 24608 ;;
 24609                           
 24610     17E2                     _TMR0_ISR:	
 24611                           ;psect for function _TMR0_ISR
 24612                           
 24613     17E2                     i1l7035:	
 24614                           ;incstack = 0
 24615                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 24616                           
 24617                           
 24618                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 24619     17E2  014E               	movlb	14	; select bank14
 24620     17E3  128C               	bcf	12,5	;volatile
 24621     17E4                     i1l7037:
 24622                           
 24623                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 24624     17E4  0141               	movlb	1	; select bank1
 24625     17E5  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 24626     17E6  0449               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 24627     17E7  1903               	btfsc	3,2
 24628     17E8  2FEA               	goto	u318_21
 24629     17E9  2FEB               	goto	u318_20
 24630     17EA                     u318_21:
 24631     17EA  2FF0               	goto	i1l1653
 24632     17EB                     u318_20:
 24633     17EB                     i1l7039:
 24634                           
 24635                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 24636     17EB  0849               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 24637     17EC  008A               	movwf	10
 24638     17ED  0848               	movf	_TMR0_InterruptHandler^(0+128),w
 24639     17EE  000A               	callw
 24640     17EF  3197               	pagesel	$
 24641     17F0                     i1l1653:
 24642     17F0  0008               	return
 24643     17F1                     __end_of_TMR0_ISR:
 24644                           
 24645                           	psect	text143
 24646     1614                     __ptext143:	
 24647 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 24648 ;; Defined at:
 24649 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 24650 ;; Parameters:    Size  Location     Type
 24651 ;;		None
 24652 ;; Auto vars:     Size  Location     Type
 24653 ;;		None
 24654 ;; Return value:  Size  Location     Type
 24655 ;;                  1    wreg      void 
 24656 ;; Registers used:
 24657 ;;		None
 24658 ;; Tracked objects:
 24659 ;;		On entry : 0/0
 24660 ;;		On exit  : 0/0
 24661 ;;		Unchanged: 0/0
 24662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24667 ;;Total ram usage:        0 bytes
 24668 ;; Hardware stack levels used: 1
 24669 ;; This function calls:
 24670 ;;		Nothing
 24671 ;; This function is called by:
 24672 ;;		_TMR0_Initialize
 24673 ;;		_TMR0_ISR
 24674 ;; This function uses a non-reentrant model
 24675 ;;
 24676                           
 24677     1614                     _TMR0_DefaultInterruptHandler:	
 24678                           ;psect for function _TMR0_DefaultInterruptHandler
 24679                           
 24680     1614                     i1l1659:	
 24681                           ;incstack = 0
 24682                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 24683                           
 24684     1614  0008               	return
 24685     1615                     __end_of_TMR0_DefaultInterruptHandler:
 24686                           
 24687                           	psect	text144
 24688     083C                     __ptext144:	
 24689 ;; *************** function _PIN_MANAGER_IOC *****************
 24690 ;; Defined at:
 24691 ;;		line 155 in file "mcc_generated_files/pin_manager.c"
 24692 ;; Parameters:    Size  Location     Type
 24693 ;;		None
 24694 ;; Auto vars:     Size  Location     Type
 24695 ;;		None
 24696 ;; Return value:  Size  Location     Type
 24697 ;;                  1    wreg      void 
 24698 ;; Registers used:
 24699 ;;		wreg, status,2, status,0, pclath, cstack
 24700 ;; Tracked objects:
 24701 ;;		On entry : 0/0
 24702 ;;		On exit  : 0/0
 24703 ;;		Unchanged: 0/0
 24704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24709 ;;Total ram usage:        0 bytes
 24710 ;; Hardware stack levels used: 1
 24711 ;; Hardware stack levels required when called: 2
 24712 ;; This function calls:
 24713 ;;		_IOCAF6_ISR
 24714 ;;		_IOCAF7_ISR
 24715 ;; This function is called by:
 24716 ;;		_INTERRUPT_InterruptManager
 24717 ;; This function uses a non-reentrant model
 24718 ;;
 24719                           
 24720     083C                     _PIN_MANAGER_IOC:	
 24721                           ;psect for function _PIN_MANAGER_IOC
 24722                           
 24723     083C                     i1l7041:	
 24724                           ;incstack = 0
 24725 ;; hardware stack exceeded
 24726                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 24727                           
 24728                           
 24729                           ;mcc_generated_files/pin_manager.c: 158:     if(IOCAFbits.IOCAF6 == 1)
 24730     083C  017E               	movlb	62	; select bank62
 24731     083D  1F3F               	btfss	63,6	;volatile
 24732     083E  2840               	goto	u319_21
 24733     083F  2841               	goto	u319_20
 24734     0840                     u319_21:
 24735     0840  2844               	goto	i1l7045
 24736     0841                     u319_20:
 24737     0841                     i1l7043:
 24738                           
 24739                           ;mcc_generated_files/pin_manager.c: 159:     {;mcc_generated_files/pin_manager.c: 160:  
      +                                 IOCAF6_ISR();
 24740     0841  3188  202B  3188   	fcall	_IOCAF6_ISR
 24741     0844                     i1l7045:
 24742                           
 24743                           ;mcc_generated_files/pin_manager.c: 163:     if(IOCAFbits.IOCAF7 == 1)
 24744     0844  017E               	movlb	62	; select bank62
 24745     0845  1FBF               	btfss	63,7	;volatile
 24746     0846  2848               	goto	u320_21
 24747     0847  2849               	goto	u320_20
 24748     0848                     u320_21:
 24749     0848  284C               	goto	i1l1132
 24750     0849                     u320_20:
 24751     0849                     i1l7047:
 24752                           
 24753                           ;mcc_generated_files/pin_manager.c: 164:     {;mcc_generated_files/pin_manager.c: 165:  
      +                                 IOCAF7_ISR();
 24754     0849  3197  27D3  3188   	fcall	_IOCAF7_ISR
 24755     084C                     i1l1132:
 24756     084C  0008               	return
 24757     084D                     __end_of_PIN_MANAGER_IOC:
 24758                           
 24759                           	psect	text145
 24760     17D3                     __ptext145:	
 24761 ;; *************** function _IOCAF7_ISR *****************
 24762 ;; Defined at:
 24763 ;;		line 203 in file "mcc_generated_files/pin_manager.c"
 24764 ;; Parameters:    Size  Location     Type
 24765 ;;		None
 24766 ;; Auto vars:     Size  Location     Type
 24767 ;;		None
 24768 ;; Return value:  Size  Location     Type
 24769 ;;                  1    wreg      void 
 24770 ;; Registers used:
 24771 ;;		wreg, status,2, status,0, pclath, cstack
 24772 ;; Tracked objects:
 24773 ;;		On entry : 0/0
 24774 ;;		On exit  : 0/0
 24775 ;;		Unchanged: 0/0
 24776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24781 ;;Total ram usage:        0 bytes
 24782 ;; Hardware stack levels used: 1
 24783 ;; Hardware stack levels required when called: 1
 24784 ;; This function calls:
 24785 ;;		NULL
 24786 ;;		_IOCAF7_DefaultInterruptHandler
 24787 ;; This function is called by:
 24788 ;;		_PIN_MANAGER_IOC
 24789 ;; This function uses a non-reentrant model
 24790 ;;
 24791                           
 24792     17D3                     _IOCAF7_ISR:	
 24793                           ;psect for function _IOCAF7_ISR
 24794                           
 24795     17D3                     i1l6589:	
 24796                           ;incstack = 0
 24797 ;; hardware stack exceeded
 24798                           ; Regs used in _IOCAF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 24799                           
 24800                           
 24801                           ;mcc_generated_files/pin_manager.c: 208:     if(IOCAF7_InterruptHandler)
 24802     17D3  0141               	movlb	1	; select bank1
 24803     17D4  084A               	movf	_IOCAF7_InterruptHandler^(0+128),w
 24804     17D5  044B               	iorwf	(_IOCAF7_InterruptHandler+1)^(0+128),w
 24805     17D6  1903               	btfsc	3,2
 24806     17D7  2FD9               	goto	u296_21
 24807     17D8  2FDA               	goto	u296_20
 24808     17D9                     u296_21:
 24809     17D9  2FDF               	goto	i1l6593
 24810     17DA                     u296_20:
 24811     17DA                     i1l6591:
 24812                           
 24813                           ;mcc_generated_files/pin_manager.c: 209:     {;mcc_generated_files/pin_manager.c: 210:  
      +                                 IOCAF7_InterruptHandler();
 24814     17DA  084B               	movf	(_IOCAF7_InterruptHandler+1)^(0+128),w
 24815     17DB  008A               	movwf	10
 24816     17DC  084A               	movf	_IOCAF7_InterruptHandler^(0+128),w
 24817     17DD  000A               	callw
 24818     17DE  3197               	pagesel	$
 24819     17DF                     i1l6593:
 24820                           
 24821                           ;mcc_generated_files/pin_manager.c: 212:     IOCAFbits.IOCAF7 = 0;
 24822     17DF  017E               	movlb	62	; select bank62
 24823     17E0  13BF               	bcf	63,7	;volatile
 24824     17E1                     i1l1146:
 24825     17E1  0008               	return
 24826     17E2                     __end_of_IOCAF7_ISR:
 24827                           
 24828                           	psect	text146
 24829     164A                     __ptext146:	
 24830 ;; *************** function _IOCAF7_DefaultInterruptHandler *****************
 24831 ;; Defined at:
 24832 ;;		line 225 in file "mcc_generated_files/pin_manager.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;		None
 24835 ;; Auto vars:     Size  Location     Type
 24836 ;;		None
 24837 ;; Return value:  Size  Location     Type
 24838 ;;                  1    wreg      void 
 24839 ;; Registers used:
 24840 ;;		None
 24841 ;; Tracked objects:
 24842 ;;		On entry : 0/0
 24843 ;;		On exit  : 0/0
 24844 ;;		Unchanged: 0/0
 24845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24850 ;;Total ram usage:        0 bytes
 24851 ;; Hardware stack levels used: 1
 24852 ;; This function calls:
 24853 ;;		Nothing
 24854 ;; This function is called by:
 24855 ;;		_PIN_MANAGER_Initialize
 24856 ;;		_IOCAF7_ISR
 24857 ;; This function uses a non-reentrant model
 24858 ;;
 24859                           
 24860     164A                     _IOCAF7_DefaultInterruptHandler:	
 24861                           ;psect for function _IOCAF7_DefaultInterruptHandler
 24862                           
 24863     164A                     i1l6351:	
 24864                           ;incstack = 0
 24865 ;; hardware stack exceeded
 24866                           ; Regs used in _IOCAF7_DefaultInterruptHandler: []
 24867                           
 24868                           
 24869                           ;mcc_generated_files/pin_manager.c: 228:     pushed = 1;
 24870     164A  3001               	movlw	1
 24871     164B  0140               	movlb	0	; select bank0
 24872     164C  00DE               	movwf	_pushed
 24873     164D                     i1l1152:
 24874     164D  0008               	return
 24875     164E                     __end_of_IOCAF7_DefaultInterruptHandler:
 24876                           
 24877                           	psect	text147
 24878     082B                     __ptext147:	
 24879 ;; *************** function _IOCAF6_ISR *****************
 24880 ;; Defined at:
 24881 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 24882 ;; Parameters:    Size  Location     Type
 24883 ;;		None
 24884 ;; Auto vars:     Size  Location     Type
 24885 ;;		None
 24886 ;; Return value:  Size  Location     Type
 24887 ;;                  1    wreg      void 
 24888 ;; Registers used:
 24889 ;;		wreg, status,2, status,0, pclath, cstack
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/0
 24892 ;;		On exit  : 0/0
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24899 ;;Total ram usage:        0 bytes
 24900 ;; Hardware stack levels used: 1
 24901 ;; Hardware stack levels required when called: 1
 24902 ;; This function calls:
 24903 ;;		NULL
 24904 ;;		_IOCAF6_DefaultInterruptHandler
 24905 ;; This function is called by:
 24906 ;;		_PIN_MANAGER_IOC
 24907 ;; This function uses a non-reentrant model
 24908 ;;
 24909                           
 24910     082B                     _IOCAF6_ISR:	
 24911                           ;psect for function _IOCAF6_ISR
 24912                           
 24913     082B                     i1l6581:	
 24914                           ;incstack = 0
 24915 ;; hardware stack exceeded
 24916                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 24917                           
 24918                           
 24919                           ;mcc_generated_files/pin_manager.c: 175:         (INTERRUPTbits.ACC = 1);
 24920     082B  0140               	movlb	0	; select bank0
 24921     082C  146B               	bsf	_INTERRUPTbits,0	;volatile
 24922     082D                     i1l6583:
 24923                           
 24924                           ;mcc_generated_files/pin_manager.c: 178:     if(IOCAF6_InterruptHandler)
 24925     082D  0141               	movlb	1	; select bank1
 24926     082E  084C               	movf	_IOCAF6_InterruptHandler^(0+128),w
 24927     082F  044D               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 24928     0830  1903               	btfsc	3,2
 24929     0831  2833               	goto	u295_21
 24930     0832  2834               	goto	u295_20
 24931     0833                     u295_21:
 24932     0833  2839               	goto	i1l6587
 24933     0834                     u295_20:
 24934     0834                     i1l6585:
 24935                           
 24936                           ;mcc_generated_files/pin_manager.c: 179:     {;mcc_generated_files/pin_manager.c: 180:  
      +                                 IOCAF6_InterruptHandler();
 24937     0834  084D               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 24938     0835  008A               	movwf	10
 24939     0836  084C               	movf	_IOCAF6_InterruptHandler^(0+128),w
 24940     0837  000A               	callw
 24941     0838  3188               	pagesel	$
 24942     0839                     i1l6587:
 24943                           
 24944                           ;mcc_generated_files/pin_manager.c: 182:     IOCAFbits.IOCAF6 = 0;
 24945     0839  017E               	movlb	62	; select bank62
 24946     083A  133F               	bcf	63,6	;volatile
 24947     083B                     i1l1136:
 24948     083B  0008               	return
 24949     083C                     __end_of_IOCAF6_ISR:
 24950                           
 24951                           	psect	text148
 24952     1613                     __ptext148:	
 24953 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 24954 ;; Defined at:
 24955 ;;		line 195 in file "mcc_generated_files/pin_manager.c"
 24956 ;; Parameters:    Size  Location     Type
 24957 ;;		None
 24958 ;; Auto vars:     Size  Location     Type
 24959 ;;		None
 24960 ;; Return value:  Size  Location     Type
 24961 ;;                  1    wreg      void 
 24962 ;; Registers used:
 24963 ;;		None
 24964 ;; Tracked objects:
 24965 ;;		On entry : 0/0
 24966 ;;		On exit  : 0/0
 24967 ;;		Unchanged: 0/0
 24968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24973 ;;Total ram usage:        0 bytes
 24974 ;; Hardware stack levels used: 1
 24975 ;; This function calls:
 24976 ;;		Nothing
 24977 ;; This function is called by:
 24978 ;;		_PIN_MANAGER_Initialize
 24979 ;;		_IOCAF6_ISR
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           
 24983     1613                     _IOCAF6_DefaultInterruptHandler:	
 24984                           ;psect for function _IOCAF6_DefaultInterruptHandler
 24985                           
 24986     1613                     i1l1142:	
 24987                           ;incstack = 0
 24988 ;; hardware stack exceeded
 24989                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 24990                           
 24991     1613  0008               	return
 24992     1614                     __end_of_IOCAF6_DefaultInterruptHandler:
 24993                           
 24994                           	psect	text149
 24995     0B37                     __ptext149:	
 24996 ;; *************** function _EUSART2_Transmit_ISR *****************
 24997 ;; Defined at:
 24998 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 24999 ;; Parameters:    Size  Location     Type
 25000 ;;		None
 25001 ;; Auto vars:     Size  Location     Type
 25002 ;;		None
 25003 ;; Return value:  Size  Location     Type
 25004 ;;                  1    wreg      void 
 25005 ;; Registers used:
 25006 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25007 ;; Tracked objects:
 25008 ;;		On entry : 0/0
 25009 ;;		On exit  : 0/0
 25010 ;;		Unchanged: 0/0
 25011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25016 ;;Total ram usage:        0 bytes
 25017 ;; Hardware stack levels used: 1
 25018 ;; This function calls:
 25019 ;;		Nothing
 25020 ;; This function is called by:
 25021 ;;		_EUSART2_Initialize
 25022 ;;		_INTERRUPT_InterruptManager
 25023 ;; This function uses a non-reentrant model
 25024 ;;
 25025                           
 25026     0B37                     _EUSART2_Transmit_ISR:	
 25027                           ;psect for function _EUSART2_Transmit_ISR
 25028                           
 25029     0B37                     i1l7117:	
 25030                           ;incstack = 0
 25031                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25032                           
 25033                           
 25034                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 25035     0B37  3008               	movlw	8
 25036     0B38  0140               	movlb	0	; select bank0
 25037     0B39  0251               	subwf	_eusart2TxBufferRemaining,w	;volatile
 25038     0B3A  1803               	skipnc
 25039     0B3B  2B3D               	goto	u328_21
 25040     0B3C  2B3E               	goto	u328_20
 25041     0B3D                     u328_21:
 25042     0B3D  2B53               	goto	i1l1926
 25043     0B3E                     u328_20:
 25044     0B3E                     i1l7119:
 25045                           
 25046                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 25047     0B3E  0852               	movf	_eusart2TxTail,w
 25048     0B3F  3E4C               	addlw	(low (_eusart2TxBuffer| (0+256)))& (0+255)
 25049     0B40  0086               	movwf	6
 25050     0B41  3001               	movlw	1	; select bank2/3
 25051     0B42  0087               	movwf	7
 25052     0B43  0801               	movf	1,w
 25053     0B44  0154               	movlb	20	; select bank20
 25054     0B45  009A               	movwf	26	;volatile
 25055     0B46                     i1l7121:
 25056     0B46  3001               	movlw	1
 25057     0B47  0140               	movlb	0	; select bank0
 25058     0B48  07D2               	addwf	_eusart2TxTail,f	;volatile
 25059     0B49                     i1l7123:
 25060                           
 25061                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 25062     0B49  3008               	movlw	8
 25063     0B4A  0252               	subwf	_eusart2TxTail,w	;volatile
 25064     0B4B  1C03               	skipc
 25065     0B4C  2B4E               	goto	u329_21
 25066     0B4D  2B4F               	goto	u329_20
 25067     0B4E                     u329_21:
 25068     0B4E  2B50               	goto	i1l7127
 25069     0B4F                     u329_20:
 25070     0B4F                     i1l7125:
 25071                           
 25072                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 25073     0B4F  01D2               	clrf	_eusart2TxTail	;volatile
 25074     0B50                     i1l7127:
 25075                           
 25076                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 25077     0B50  3001               	movlw	1
 25078     0B51  07D1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 25079                           
 25080                           ;mcc_generated_files/eusart2.c: 209:     }
 25081     0B52  2B55               	goto	i1l1929
 25082     0B53                     i1l1926:	
 25083                           ;mcc_generated_files/eusart2.c: 210:     else
 25084                           
 25085                           
 25086                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 25087     0B53  014E               	movlb	14	; select bank14
 25088     0B54  1319               	bcf	25,6	;volatile
 25089     0B55                     i1l1929:
 25090     0B55  0008               	return
 25091     0B56                     __end_of_EUSART2_Transmit_ISR:
 25092                           
 25093                           	psect	text150
 25094     0F86                     __ptext150:	
 25095 ;; *************** function _EUSART2_Receive_ISR *****************
 25096 ;; Defined at:
 25097 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 25098 ;; Parameters:    Size  Location     Type
 25099 ;;		None
 25100 ;; Auto vars:     Size  Location     Type
 25101 ;;		None
 25102 ;; Return value:  Size  Location     Type
 25103 ;;                  1    wreg      void 
 25104 ;; Registers used:
 25105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25106 ;; Tracked objects:
 25107 ;;		On entry : 0/0
 25108 ;;		On exit  : 0/0
 25109 ;;		Unchanged: 0/0
 25110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25115 ;;Total ram usage:        0 bytes
 25116 ;; Hardware stack levels used: 1
 25117 ;; Hardware stack levels required when called: 2
 25118 ;; This function calls:
 25119 ;;		NULL
 25120 ;;		_EUSART2_DefaultErrorHandler
 25121 ;;		_EUSART2_DefaultFramingErrorHandler
 25122 ;;		_EUSART2_DefaultOverrunErrorHandler
 25123 ;;		_EUSART2_RxDataHandler
 25124 ;; This function is called by:
 25125 ;;		_EUSART2_Initialize
 25126 ;;		_INTERRUPT_InterruptManager
 25127 ;; This function uses a non-reentrant model
 25128 ;;
 25129                           
 25130     0F86                     _EUSART2_Receive_ISR:	
 25131                           ;psect for function _EUSART2_Receive_ISR
 25132                           
 25133     0F86                     i1l7129:	
 25134                           ;incstack = 0
 25135 ;; hardware stack exceeded
 25136                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25137                           
 25138                           
 25139                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 25140     0F86  0140               	movlb	0	; select bank0
 25141     0F87  0850               	movf	_eusart2RxHead,w	;volatile
 25142     0F88  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25143     0F89  0086               	movwf	6
 25144     0F8A  0187               	clrf	7
 25145     0F8B  0181               	clrf	1
 25146     0F8C                     i1l7131:
 25147                           
 25148                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 25149     0F8C  0154               	movlb	20	; select bank20
 25150     0F8D  1D1D               	btfss	29,2	;volatile
 25151     0F8E  2F90               	goto	u330_21
 25152     0F8F  2F91               	goto	u330_20
 25153     0F90                     u330_21:
 25154     0F90  2F9D               	goto	i1l7137
 25155     0F91                     u330_20:
 25156     0F91                     i1l7133:
 25157                           
 25158                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 25159     0F91  0140               	movlb	0	; select bank0
 25160     0F92  0850               	movf	_eusart2RxHead,w	;volatile
 25161     0F93  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25162     0F94  0086               	movwf	6
 25163     0F95  0187               	clrf	7
 25164     0F96  1481               	bsf	1,1
 25165     0F97                     i1l7135:
 25166                           
 25167                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 25168     0F97  0142               	movlb	2	; select bank2
 25169     0F98  0859               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 25170     0F99  008A               	movwf	10
 25171     0F9A  0858               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 25172     0F9B  000A               	callw
 25173     0F9C  318F               	pagesel	$
 25174     0F9D                     i1l7137:
 25175                           
 25176                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 25177     0F9D  0154               	movlb	20	; select bank20
 25178     0F9E  1C9D               	btfss	29,1	;volatile
 25179     0F9F  2FA1               	goto	u331_21
 25180     0FA0  2FA2               	goto	u331_20
 25181     0FA1                     u331_21:
 25182     0FA1  2FAE               	goto	i1l7143
 25183     0FA2                     u331_20:
 25184     0FA2                     i1l7139:
 25185                           
 25186                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 25187     0FA2  0140               	movlb	0	; select bank0
 25188     0FA3  0850               	movf	_eusart2RxHead,w	;volatile
 25189     0FA4  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25190     0FA5  0086               	movwf	6
 25191     0FA6  0187               	clrf	7
 25192     0FA7  1501               	bsf	1,2
 25193     0FA8                     i1l7141:
 25194                           
 25195                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 25196     0FA8  0142               	movlb	2	; select bank2
 25197     0FA9  0857               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 25198     0FAA  008A               	movwf	10
 25199     0FAB  0856               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 25200     0FAC  000A               	callw
 25201     0FAD  318F               	pagesel	$
 25202     0FAE                     i1l7143:
 25203                           
 25204                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 25205     0FAE  0140               	movlb	0	; select bank0
 25206     0FAF  0850               	movf	_eusart2RxHead,w	;volatile
 25207     0FB0  3EA0               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 25208     0FB1  0086               	movwf	6
 25209     0FB2  0187               	clrf	7
 25210     0FB3  0801               	movf	1,w
 25211     0FB4  1903               	btfsc	3,2
 25212     0FB5  2FB7               	goto	u332_21
 25213     0FB6  2FB8               	goto	u332_20
 25214     0FB7                     u332_21:
 25215     0FB7  2FBF               	goto	i1l7147
 25216     0FB8                     u332_20:
 25217     0FB8                     i1l7145:
 25218                           
 25219                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 25220     0FB8  0142               	movlb	2	; select bank2
 25221     0FB9  0855               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 25222     0FBA  008A               	movwf	10
 25223     0FBB  0854               	movf	_EUSART2_ErrorHandler^(0+256),w
 25224     0FBC  000A               	callw
 25225     0FBD  318F               	pagesel	$
 25226                           
 25227                           ;mcc_generated_files/eusart2.c: 233:     } else {
 25228     0FBE  2FC2               	goto	i1l1936
 25229     0FBF                     i1l7147:
 25230                           
 25231                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 25232     0FBF  3189  2105  318F   	fcall	_EUSART2_RxDataHandler
 25233     0FC2                     i1l1936:
 25234     0FC2  0008               	return
 25235     0FC3                     __end_of_EUSART2_Receive_ISR:
 25236                           
 25237                           	psect	text151
 25238     1646                     __ptext151:	
 25239 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 25240 ;; Defined at:
 25241 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 25242 ;; Parameters:    Size  Location     Type
 25243 ;;		None
 25244 ;; Auto vars:     Size  Location     Type
 25245 ;;		None
 25246 ;; Return value:  Size  Location     Type
 25247 ;;                  1    wreg      void 
 25248 ;; Registers used:
 25249 ;;		None
 25250 ;; Tracked objects:
 25251 ;;		On entry : 0/0
 25252 ;;		On exit  : 0/0
 25253 ;;		Unchanged: 0/0
 25254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25259 ;;Total ram usage:        0 bytes
 25260 ;; Hardware stack levels used: 1
 25261 ;; This function calls:
 25262 ;;		Nothing
 25263 ;; This function is called by:
 25264 ;;		_EUSART2_Initialize
 25265 ;;		_EUSART2_Receive_ISR
 25266 ;; This function uses a non-reentrant model
 25267 ;;
 25268                           
 25269     1646                     _EUSART2_DefaultOverrunErrorHandler:	
 25270                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 25271                           
 25272     1646                     i1l6687:	
 25273                           ;incstack = 0
 25274                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 25275                           
 25276                           
 25277                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 25278     1646  0154               	movlb	20	; select bank20
 25279     1647  121D               	bcf	29,4	;volatile
 25280                           
 25281                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 25282     1648  161D               	bsf	29,4	;volatile
 25283     1649                     i1l1946:
 25284     1649  0008               	return
 25285     164A                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 25286                           
 25287                           	psect	text152
 25288     1612                     __ptext152:	
 25289 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 25290 ;; Defined at:
 25291 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 25292 ;; Parameters:    Size  Location     Type
 25293 ;;		None
 25294 ;; Auto vars:     Size  Location     Type
 25295 ;;		None
 25296 ;; Return value:  Size  Location     Type
 25297 ;;                  1    wreg      void 
 25298 ;; Registers used:
 25299 ;;		None
 25300 ;; Tracked objects:
 25301 ;;		On entry : 0/0
 25302 ;;		On exit  : 0/0
 25303 ;;		Unchanged: 0/0
 25304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25309 ;;Total ram usage:        0 bytes
 25310 ;; Hardware stack levels used: 1
 25311 ;; This function calls:
 25312 ;;		Nothing
 25313 ;; This function is called by:
 25314 ;;		_EUSART2_Initialize
 25315 ;;		_EUSART2_Receive_ISR
 25316 ;; This function uses a non-reentrant model
 25317 ;;
 25318                           
 25319     1612                     _EUSART2_DefaultFramingErrorHandler:	
 25320                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 25321                           
 25322     1612                     i1l1943:	
 25323                           ;incstack = 0
 25324                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 25325                           
 25326     1612  0008               	return
 25327     1613                     __end_of_EUSART2_DefaultFramingErrorHandler:
 25328                           
 25329                           	psect	text153
 25330     1642                     __ptext153:	
 25331 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 25332 ;; Defined at:
 25333 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 25334 ;; Parameters:    Size  Location     Type
 25335 ;;		None
 25336 ;; Auto vars:     Size  Location     Type
 25337 ;;		None
 25338 ;; Return value:  Size  Location     Type
 25339 ;;                  1    wreg      void 
 25340 ;; Registers used:
 25341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25342 ;; Tracked objects:
 25343 ;;		On entry : 0/0
 25344 ;;		On exit  : 0/0
 25345 ;;		Unchanged: 0/0
 25346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25351 ;;Total ram usage:        0 bytes
 25352 ;; Hardware stack levels used: 1
 25353 ;; Hardware stack levels required when called: 1
 25354 ;; This function calls:
 25355 ;;		_EUSART2_RxDataHandler
 25356 ;; This function is called by:
 25357 ;;		_EUSART2_Initialize
 25358 ;;		_EUSART2_Receive_ISR
 25359 ;; This function uses a non-reentrant model
 25360 ;;
 25361                           
 25362     1642                     _EUSART2_DefaultErrorHandler:	
 25363                           ;psect for function _EUSART2_DefaultErrorHandler
 25364                           
 25365     1642                     i1l6689:	
 25366                           ;incstack = 0
 25367 ;; hardware stack exceeded
 25368                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25369                           
 25370                           
 25371                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 25372     1642  3189  2105  3196   	fcall	_EUSART2_RxDataHandler
 25373     1645                     i1l1949:
 25374     1645  0008               	return
 25375     1646                     __end_of_EUSART2_DefaultErrorHandler:
 25376                           
 25377                           	psect	text154
 25378     0905                     __ptext154:	
 25379 ;; *************** function _EUSART2_RxDataHandler *****************
 25380 ;; Defined at:
 25381 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;		None
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;		None
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  1    wreg      void 
 25388 ;; Registers used:
 25389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used: 1
 25401 ;; This function calls:
 25402 ;;		Nothing
 25403 ;; This function is called by:
 25404 ;;		_EUSART2_Receive_ISR
 25405 ;;		_EUSART2_DefaultErrorHandler
 25406 ;; This function uses a non-reentrant model
 25407 ;;
 25408                           
 25409     0905                     _EUSART2_RxDataHandler:	
 25410                           ;psect for function _EUSART2_RxDataHandler
 25411                           
 25412     0905                     i1l6385:	
 25413                           ;incstack = 0
 25414                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25415                           
 25416                           
 25417                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 25418     0905  0140               	movlb	0	; select bank0
 25419     0906  0850               	movf	_eusart2RxHead,w
 25420     0907  3E44               	addlw	(low (_eusart2RxBuffer| (0+256)))& (0+255)
 25421     0908  0086               	movwf	6
 25422     0909  3001               	movlw	1	; select bank2/3
 25423     090A  0087               	movwf	7
 25424     090B  0154               	movlb	20	; select bank20
 25425     090C  0819               	movf	25,w	;volatile
 25426     090D  0081               	movwf	1
 25427     090E                     i1l6387:
 25428     090E  3001               	movlw	1
 25429     090F  0140               	movlb	0	; select bank0
 25430     0910  07D0               	addwf	_eusart2RxHead,f	;volatile
 25431     0911                     i1l6389:
 25432                           
 25433                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 25434     0911  3008               	movlw	8
 25435     0912  0250               	subwf	_eusart2RxHead,w	;volatile
 25436     0913  1C03               	skipc
 25437     0914  2916               	goto	u281_21
 25438     0915  2917               	goto	u281_20
 25439     0916                     u281_21:
 25440     0916  2918               	goto	i1l6393
 25441     0917                     u281_20:
 25442     0917                     i1l6391:
 25443                           
 25444                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 25445     0917  01D0               	clrf	_eusart2RxHead	;volatile
 25446     0918                     i1l6393:
 25447                           
 25448                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 25449     0918  3001               	movlw	1
 25450     0919  07CE               	addwf	_eusart2RxCount,f	;volatile
 25451     091A                     i1l1940:
 25452     091A  0008               	return
 25453     091B                     __end_of_EUSART2_RxDataHandler:
 25454                           
 25455                           	psect	text155
 25456     0ADD                     __ptext155:	
 25457 ;; *************** function _EUSART1_Transmit_ISR *****************
 25458 ;; Defined at:
 25459 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;		None
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;		None
 25464 ;; Return value:  Size  Location     Type
 25465 ;;                  1    wreg      void 
 25466 ;; Registers used:
 25467 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25468 ;; Tracked objects:
 25469 ;;		On entry : 0/0
 25470 ;;		On exit  : 0/0
 25471 ;;		Unchanged: 0/0
 25472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25477 ;;Total ram usage:        0 bytes
 25478 ;; Hardware stack levels used: 1
 25479 ;; This function calls:
 25480 ;;		Nothing
 25481 ;; This function is called by:
 25482 ;;		_EUSART1_Initialize
 25483 ;;		_INTERRUPT_InterruptManager
 25484 ;; This function uses a non-reentrant model
 25485 ;;
 25486                           
 25487     0ADD                     _EUSART1_Transmit_ISR:	
 25488                           ;psect for function _EUSART1_Transmit_ISR
 25489                           
 25490     0ADD                     i1l7085:	
 25491                           ;incstack = 0
 25492                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25493                           
 25494                           
 25495                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 25496     0ADD  3008               	movlw	8
 25497     0ADE  0140               	movlb	0	; select bank0
 25498     0ADF  0258               	subwf	_eusart1TxBufferRemaining,w	;volatile
 25499     0AE0  1803               	skipnc
 25500     0AE1  2AE3               	goto	u323_21
 25501     0AE2  2AE4               	goto	u323_20
 25502     0AE3                     u323_21:
 25503     0AE3  2AF8               	goto	i1l1782
 25504     0AE4                     u323_20:
 25505     0AE4                     i1l7087:
 25506                           
 25507                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 25508     0AE4  0859               	movf	_eusart1TxTail,w
 25509     0AE5  3EB8               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 25510     0AE6  0086               	movwf	6
 25511     0AE7  0187               	clrf	7
 25512     0AE8  0801               	movf	1,w
 25513     0AE9  0142               	movlb	2	; select bank2
 25514     0AEA  009A               	movwf	26	;volatile
 25515     0AEB                     i1l7089:
 25516     0AEB  3001               	movlw	1
 25517     0AEC  0140               	movlb	0	; select bank0
 25518     0AED  07D9               	addwf	_eusart1TxTail,f	;volatile
 25519     0AEE                     i1l7091:
 25520                           
 25521                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 25522     0AEE  3008               	movlw	8
 25523     0AEF  0259               	subwf	_eusart1TxTail,w	;volatile
 25524     0AF0  1C03               	skipc
 25525     0AF1  2AF3               	goto	u324_21
 25526     0AF2  2AF4               	goto	u324_20
 25527     0AF3                     u324_21:
 25528     0AF3  2AF5               	goto	i1l7095
 25529     0AF4                     u324_20:
 25530     0AF4                     i1l7093:
 25531                           
 25532                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 25533     0AF4  01D9               	clrf	_eusart1TxTail	;volatile
 25534     0AF5                     i1l7095:
 25535                           
 25536                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 25537     0AF5  3001               	movlw	1
 25538     0AF6  07D8               	addwf	_eusart1TxBufferRemaining,f	;volatile
 25539                           
 25540                           ;mcc_generated_files/eusart1.c: 209:     }
 25541     0AF7  2AFA               	goto	i1l1785
 25542     0AF8                     i1l1782:	
 25543                           ;mcc_generated_files/eusart1.c: 210:     else
 25544                           
 25545                           
 25546                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 25547     0AF8  014E               	movlb	14	; select bank14
 25548     0AF9  1219               	bcf	25,4	;volatile
 25549     0AFA                     i1l1785:
 25550     0AFA  0008               	return
 25551     0AFB                     __end_of_EUSART1_Transmit_ISR:
 25552                           
 25553                           	psect	text156
 25554     0F49                     __ptext156:	
 25555 ;; *************** function _EUSART1_Receive_ISR *****************
 25556 ;; Defined at:
 25557 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 25558 ;; Parameters:    Size  Location     Type
 25559 ;;		None
 25560 ;; Auto vars:     Size  Location     Type
 25561 ;;		None
 25562 ;; Return value:  Size  Location     Type
 25563 ;;                  1    wreg      void 
 25564 ;; Registers used:
 25565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25566 ;; Tracked objects:
 25567 ;;		On entry : 0/0
 25568 ;;		On exit  : 0/0
 25569 ;;		Unchanged: 0/0
 25570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25575 ;;Total ram usage:        0 bytes
 25576 ;; Hardware stack levels used: 1
 25577 ;; Hardware stack levels required when called: 2
 25578 ;; This function calls:
 25579 ;;		NULL
 25580 ;;		_EUSART1_DefaultErrorHandler
 25581 ;;		_EUSART1_DefaultFramingErrorHandler
 25582 ;;		_EUSART1_DefaultOverrunErrorHandler
 25583 ;;		_EUSART1_RxDataHandler
 25584 ;; This function is called by:
 25585 ;;		_EUSART1_Initialize
 25586 ;;		_INTERRUPT_InterruptManager
 25587 ;; This function uses a non-reentrant model
 25588 ;;
 25589                           
 25590     0F49                     _EUSART1_Receive_ISR:	
 25591                           ;psect for function _EUSART1_Receive_ISR
 25592                           
 25593     0F49                     i1l7097:	
 25594                           ;incstack = 0
 25595 ;; hardware stack exceeded
 25596                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25597                           
 25598                           
 25599                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 25600     0F49  0140               	movlb	0	; select bank0
 25601     0F4A  0857               	movf	_eusart1RxHead,w	;volatile
 25602     0F4B  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 25603     0F4C  0086               	movwf	6
 25604     0F4D  0187               	clrf	7
 25605     0F4E  0181               	clrf	1
 25606     0F4F                     i1l7099:
 25607                           
 25608                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 25609     0F4F  0142               	movlb	2	; select bank2
 25610     0F50  1D1D               	btfss	29,2	;volatile
 25611     0F51  2F53               	goto	u325_21
 25612     0F52  2F54               	goto	u325_20
 25613     0F53                     u325_21:
 25614     0F53  2F60               	goto	i1l7105
 25615     0F54                     u325_20:
 25616     0F54                     i1l7101:
 25617                           
 25618                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 25619     0F54  0140               	movlb	0	; select bank0
 25620     0F55  0857               	movf	_eusart1RxHead,w	;volatile
 25621     0F56  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 25622     0F57  0086               	movwf	6
 25623     0F58  0187               	clrf	7
 25624     0F59  1481               	bsf	1,1
 25625     0F5A                     i1l7103:
 25626                           
 25627                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 25628     0F5A  0142               	movlb	2	; select bank2
 25629     0F5B  085F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 25630     0F5C  008A               	movwf	10
 25631     0F5D  085E               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 25632     0F5E  000A               	callw
 25633     0F5F  318F               	pagesel	$
 25634     0F60                     i1l7105:
 25635                           
 25636                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 25637     0F60  0142               	movlb	2	; select bank2
 25638     0F61  1C9D               	btfss	29,1	;volatile
 25639     0F62  2F64               	goto	u326_21
 25640     0F63  2F65               	goto	u326_20
 25641     0F64                     u326_21:
 25642     0F64  2F71               	goto	i1l7111
 25643     0F65                     u326_20:
 25644     0F65                     i1l7107:
 25645                           
 25646                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 25647     0F65  0140               	movlb	0	; select bank0
 25648     0F66  0857               	movf	_eusart1RxHead,w	;volatile
 25649     0F67  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 25650     0F68  0086               	movwf	6
 25651     0F69  0187               	clrf	7
 25652     0F6A  1501               	bsf	1,2
 25653     0F6B                     i1l7109:
 25654                           
 25655                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 25656     0F6B  0142               	movlb	2	; select bank2
 25657     0F6C  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 25658     0F6D  008A               	movwf	10
 25659     0F6E  085C               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 25660     0F6F  000A               	callw
 25661     0F70  318F               	pagesel	$
 25662     0F71                     i1l7111:
 25663                           
 25664                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 25665     0F71  0140               	movlb	0	; select bank0
 25666     0F72  0857               	movf	_eusart1RxHead,w	;volatile
 25667     0F73  3EA8               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 25668     0F74  0086               	movwf	6
 25669     0F75  0187               	clrf	7
 25670     0F76  0801               	movf	1,w
 25671     0F77  1903               	btfsc	3,2
 25672     0F78  2F7A               	goto	u327_21
 25673     0F79  2F7B               	goto	u327_20
 25674     0F7A                     u327_21:
 25675     0F7A  2F82               	goto	i1l7115
 25676     0F7B                     u327_20:
 25677     0F7B                     i1l7113:
 25678                           
 25679                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 25680     0F7B  0142               	movlb	2	; select bank2
 25681     0F7C  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 25682     0F7D  008A               	movwf	10
 25683     0F7E  085A               	movf	_EUSART1_ErrorHandler^(0+256),w
 25684     0F7F  000A               	callw
 25685     0F80  318F               	pagesel	$
 25686                           
 25687                           ;mcc_generated_files/eusart1.c: 233:     } else {
 25688     0F81  2F85               	goto	i1l1792
 25689     0F82                     i1l7115:
 25690                           
 25691                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 25692     0F82  3188  20F0  318F   	fcall	_EUSART1_RxDataHandler
 25693     0F85                     i1l1792:
 25694     0F85  0008               	return
 25695     0F86                     __end_of_EUSART1_Receive_ISR:
 25696                           
 25697                           	psect	text157
 25698     163E                     __ptext157:	
 25699 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 25700 ;; Defined at:
 25701 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 25702 ;; Parameters:    Size  Location     Type
 25703 ;;		None
 25704 ;; Auto vars:     Size  Location     Type
 25705 ;;		None
 25706 ;; Return value:  Size  Location     Type
 25707 ;;                  1    wreg      void 
 25708 ;; Registers used:
 25709 ;;		None
 25710 ;; Tracked objects:
 25711 ;;		On entry : 0/0
 25712 ;;		On exit  : 0/0
 25713 ;;		Unchanged: 0/0
 25714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25719 ;;Total ram usage:        0 bytes
 25720 ;; Hardware stack levels used: 1
 25721 ;; This function calls:
 25722 ;;		Nothing
 25723 ;; This function is called by:
 25724 ;;		_EUSART1_Initialize
 25725 ;;		_EUSART1_Receive_ISR
 25726 ;; This function uses a non-reentrant model
 25727 ;;
 25728                           
 25729     163E                     _EUSART1_DefaultOverrunErrorHandler:	
 25730                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 25731                           
 25732     163E                     i1l6683:	
 25733                           ;incstack = 0
 25734                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 25735                           
 25736                           
 25737                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 25738     163E  0142               	movlb	2	; select bank2
 25739     163F  121D               	bcf	29,4	;volatile
 25740                           
 25741                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 25742     1640  161D               	bsf	29,4	;volatile
 25743     1641                     i1l1802:
 25744     1641  0008               	return
 25745     1642                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 25746                           
 25747                           	psect	text158
 25748     1611                     __ptext158:	
 25749 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 25750 ;; Defined at:
 25751 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 25752 ;; Parameters:    Size  Location     Type
 25753 ;;		None
 25754 ;; Auto vars:     Size  Location     Type
 25755 ;;		None
 25756 ;; Return value:  Size  Location     Type
 25757 ;;                  1    wreg      void 
 25758 ;; Registers used:
 25759 ;;		None
 25760 ;; Tracked objects:
 25761 ;;		On entry : 0/0
 25762 ;;		On exit  : 0/0
 25763 ;;		Unchanged: 0/0
 25764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25769 ;;Total ram usage:        0 bytes
 25770 ;; Hardware stack levels used: 1
 25771 ;; This function calls:
 25772 ;;		Nothing
 25773 ;; This function is called by:
 25774 ;;		_EUSART1_Initialize
 25775 ;;		_EUSART1_Receive_ISR
 25776 ;; This function uses a non-reentrant model
 25777 ;;
 25778                           
 25779     1611                     _EUSART1_DefaultFramingErrorHandler:	
 25780                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 25781                           
 25782     1611                     i1l1799:	
 25783                           ;incstack = 0
 25784                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 25785                           
 25786     1611  0008               	return
 25787     1612                     __end_of_EUSART1_DefaultFramingErrorHandler:
 25788                           
 25789                           	psect	text159
 25790     163A                     __ptext159:	
 25791 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 25792 ;; Defined at:
 25793 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 25794 ;; Parameters:    Size  Location     Type
 25795 ;;		None
 25796 ;; Auto vars:     Size  Location     Type
 25797 ;;		None
 25798 ;; Return value:  Size  Location     Type
 25799 ;;                  1    wreg      void 
 25800 ;; Registers used:
 25801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25802 ;; Tracked objects:
 25803 ;;		On entry : 0/0
 25804 ;;		On exit  : 0/0
 25805 ;;		Unchanged: 0/0
 25806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25811 ;;Total ram usage:        0 bytes
 25812 ;; Hardware stack levels used: 1
 25813 ;; Hardware stack levels required when called: 1
 25814 ;; This function calls:
 25815 ;;		_EUSART1_RxDataHandler
 25816 ;; This function is called by:
 25817 ;;		_EUSART1_Initialize
 25818 ;;		_EUSART1_Receive_ISR
 25819 ;; This function uses a non-reentrant model
 25820 ;;
 25821                           
 25822     163A                     _EUSART1_DefaultErrorHandler:	
 25823                           ;psect for function _EUSART1_DefaultErrorHandler
 25824                           
 25825     163A                     i1l6685:	
 25826                           ;incstack = 0
 25827 ;; hardware stack exceeded
 25828                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25829                           
 25830                           
 25831                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 25832     163A  3188  20F0  3196   	fcall	_EUSART1_RxDataHandler
 25833     163D                     i1l1805:
 25834     163D  0008               	return
 25835     163E                     __end_of_EUSART1_DefaultErrorHandler:
 25836                           
 25837                           	psect	text160
 25838     08F0                     __ptext160:	
 25839 ;; *************** function _EUSART1_RxDataHandler *****************
 25840 ;; Defined at:
 25841 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 25842 ;; Parameters:    Size  Location     Type
 25843 ;;		None
 25844 ;; Auto vars:     Size  Location     Type
 25845 ;;		None
 25846 ;; Return value:  Size  Location     Type
 25847 ;;                  1    wreg      void 
 25848 ;; Registers used:
 25849 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25850 ;; Tracked objects:
 25851 ;;		On entry : 0/0
 25852 ;;		On exit  : 0/0
 25853 ;;		Unchanged: 0/0
 25854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25859 ;;Total ram usage:        0 bytes
 25860 ;; Hardware stack levels used: 1
 25861 ;; This function calls:
 25862 ;;		Nothing
 25863 ;; This function is called by:
 25864 ;;		_EUSART1_Receive_ISR
 25865 ;;		_EUSART1_DefaultErrorHandler
 25866 ;; This function uses a non-reentrant model
 25867 ;;
 25868                           
 25869     08F0                     _EUSART1_RxDataHandler:	
 25870                           ;psect for function _EUSART1_RxDataHandler
 25871                           
 25872     08F0                     i1l6365:	
 25873                           ;incstack = 0
 25874                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25875                           
 25876                           
 25877                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 25878     08F0  0140               	movlb	0	; select bank0
 25879     08F1  0857               	movf	_eusart1RxHead,w
 25880     08F2  3EB0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 25881     08F3  0086               	movwf	6
 25882     08F4  0187               	clrf	7
 25883     08F5  0142               	movlb	2	; select bank2
 25884     08F6  0819               	movf	25,w	;volatile
 25885     08F7  0081               	movwf	1
 25886     08F8                     i1l6367:
 25887     08F8  3001               	movlw	1
 25888     08F9  0140               	movlb	0	; select bank0
 25889     08FA  07D7               	addwf	_eusart1RxHead,f	;volatile
 25890     08FB                     i1l6369:
 25891                           
 25892                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 25893     08FB  3008               	movlw	8
 25894     08FC  0257               	subwf	_eusart1RxHead,w	;volatile
 25895     08FD  1C03               	skipc
 25896     08FE  2900               	goto	u280_21
 25897     08FF  2901               	goto	u280_20
 25898     0900                     u280_21:
 25899     0900  2902               	goto	i1l6373
 25900     0901                     u280_20:
 25901     0901                     i1l6371:
 25902                           
 25903                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 25904     0901  01D7               	clrf	_eusart1RxHead	;volatile
 25905     0902                     i1l6373:
 25906                           
 25907                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 25908     0902  3001               	movlw	1
 25909     0903  07D5               	addwf	_eusart1RxCount,f	;volatile
 25910     0904                     i1l1796:
 25911     0904  0008               	return
 25912     0905                     __end_of_EUSART1_RxDataHandler:
 25913     0003                     ___latbits      equ	3
 25914     007E                     btemp           set	126	;btemp
 25915     007E                     int$flags       set	126
 25916     007E                     wtemp0          set	126
 25917                           
 25918                           	psect	config
 25919                           
 25920                           ;Config register CONFIG1 @ 0x8007
 25921                           ;	External Oscillator mode selection bits
 25922                           ;	FEXTOSC = OFF, Oscillator not enabled
 25923                           ;	Power-up default value for COSC bits
 25924                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 25925                           ;	Clock Out Enable bit
 25926                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 25927                           ;	Clock Switch Enable bit
 25928                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 25929                           ;	Fail-Safe Clock Monitor Enable bit
 25930                           ;	FCMEN = ON, FSCM timer enabled
 25931     8007                     	org	32775
 25932     8007  3FEC               	dw	16364
 25933                           
 25934                           ;Config register CONFIG2 @ 0x8008
 25935                           ;	Master Clear Enable bit
 25936                           ;	MCLRE = ON, MCLR pin is Master Clear function
 25937                           ;	Power-up Timer Enable bit
 25938                           ;	PWRTS = OFF, PWRT disabled
 25939                           ;	Low-Power BOR enable bit
 25940                           ;	LPBOREN = OFF, ULPBOR disabled
 25941                           ;	Brown-out reset enable bits
 25942                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 25943                           ;	Brown-out Reset Voltage Selection
 25944                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 25945                           ;	Zero-cross detect disable
 25946                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 25947                           ;	Peripheral Pin Select one-way control
 25948                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 25949                           ;	Stack Overflow/Underflow Reset Enable bit
 25950                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 25951     8008                     	org	32776
 25952     8008  3FFF               	dw	16383
 25953                           
 25954                           ;Config register CONFIG3 @ 0x8009
 25955                           ;	WDT Period Select bits
 25956                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 25957                           ;	WDT operating mode
 25958                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 25959                           ;	WDT Window Select bits
 25960                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 25961                           ;	WDT input clock selector
 25962                           ;	WDTCCS = SC, Software Control
 25963     8009                     	org	32777
 25964     8009  3F9F               	dw	16287
 25965                           
 25966                           ;Config register CONFIG4 @ 0x800A
 25967                           ;	Boot Block Size Selection bits
 25968                           ;	BBSIZE = BB512, 512 words boot block size
 25969                           ;	Boot Block Enable bit
 25970                           ;	BBEN = OFF, Boot Block disabled
 25971                           ;	SAF Enable bit
 25972                           ;	SAFEN = OFF, SAF disabled
 25973                           ;	Application Block Write Protection bit
 25974                           ;	WRTAPP = OFF, Application Block not write protected
 25975                           ;	Boot Block Write Protection bit
 25976                           ;	WRTB = OFF, Boot Block not write protected
 25977                           ;	Configuration Register Write Protection bit
 25978                           ;	WRTC = OFF, Configuration Register not write protected
 25979                           ;	Data EEPROM write protection bit
 25980                           ;	WRTD = OFF, Data EEPROM NOT write protected
 25981                           ;	Storage Area Flash Write Protection bit
 25982                           ;	WRTSAF = OFF, SAF not write protected
 25983                           ;	Low Voltage Programming Enable bit
 25984                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 25985     800A                     	org	32778
 25986     800A  3FFF               	dw	16383
 25987                           
 25988                           ;Config register CONFIG5 @ 0x800B
 25989                           ;	UserNVM Program memory code protection bit
 25990                           ;	CP = OFF, UserNVM code protection disabled
 25991     800B                     	org	32779
 25992     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    151
    Data        19
    BSS         629
    Persistent  58
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      79
    BANK1            80      0      50
    BANK2            80      0      68
    BANK3            80      0      53
    BANK4            80      0      64
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0      80
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    BMA253_GetAccelDataX@xAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(2) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12882[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5035	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1056(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1067(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1090(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1073(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1079(), 
		 -> NULL(), 

    I2C1_DO_TX$5035$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5040	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12795[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5034	const PTR FTN()enum E12795 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1056(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1067(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1090(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1073(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1079(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1056(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1067(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1090(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1073(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1079(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1056(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1067(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1090(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1073(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1079(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12728[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    IOCAF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF7_DefaultInterruptHandler(), NULL(), 

    IOCAF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF7_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial@main$F4020(BANK5[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    MCP9844_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    NULL$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1056@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1067@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1569(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E272,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK4[64]), 

    S135$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    S135$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S135$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S135$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S135$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S135$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1569(), 

    S135$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S135$SetSystemMode	PTR FTN(enum E272,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S135$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S135$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S2212$0$0	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S2212$callbackPayload	PTR void [6] size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S2212$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1056(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1067(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1090(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1073(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1079(), 
		 -> NULL(), 

    S2212$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S264$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S264$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S264$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    S264$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S264$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S264$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S264$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S264$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    S264$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S264$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S264$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S264$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S628$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S628$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S628$callbackTable	PTR FTN(PTR void ,)enum E12728[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S628$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S974$data	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial@main$F4020(BANK5[80]), statusBuffer(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_4(CODE[11]), STR_6(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_AccState@payload(COMMON[3]), LIGHTBLUE_LedState@payload(COMMON[3]), LIGHTBLUE_PushButton@payload(COMMON[3]), 
		 -> LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial@main$F4020(BANK5[80]), statusBuffer(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_4(CODE[11]), STR_6(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[11]), STR_6(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[11]), STR_6(CODE[12]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1073@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1079@ptr	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_LIGHTBLUE_LedState
    _main->_LIGHTBLUE_PushButton
    _service_acceleremoterInterrupt->_LIGHTBLUE_AccState
    _LIGHTBLUE_AccState->_LIGHTBLUE_SendPacket
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF7_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1569->_EUSART1_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1056
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1067
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1090
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1073
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1079
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1056
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1067
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1090
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1073
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1079
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1056
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1067
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1090
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1073
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1079
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1056
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1067
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1090
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1073
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1079
    _wr2RegCompleteHandler@i2c1_master_example$F1079->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1073->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1090->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1067->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1056->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_MCP9844_GetTemperatureValue
    _MCP9844_GetTemperatureValue->_MCP9844_CalcTemperature
    _MCP9844_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataX
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_BMA253_NewAccelDataRdyX
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  324516
                                             38 BANK0      2     2      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
                       _RN487X_Write *
                  _SYSTEM_Initialize
     _service_acceleremoterInterrupt
 ---------------------------------------------------------------------------------
 (1) _service_acceleremoterInterrupt                       0     0      0     649
                 _LIGHTBLUE_AccState
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_AccState                                   4     4      0     649
                                             10 COMMON     4     4      0
              _LIGHTBLUE_GetAccState
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_GetAccState                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     299
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      23
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      46
         _IOCAF6_SetInterruptHandler
         _IOCAF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF7_SetInterruptHandler                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     115
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     115
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0    1420
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0    1420
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    1     1      0    1420
                                             34 BANK0      1     1      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1569 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1    1307
                                             13 COMMON     1     0      1
                                             33 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     4      3     595
                                              6 COMMON     7     4      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     1      5     182
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     0      3      90
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0      63
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0      63
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 35    34      1     373
                                              5 COMMON     2     1      1
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     1      2      75
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0     121
                                              1 COMMON     1     1      0
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     142
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1569 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1      24
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0   32237
                                             25 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
        _MCP9844_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _MCP9844_GetTemperatureValue                          1     0      1   31409
                                             24 BANK0      1     0      1
            _MCP9844_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _MCP9844_CalcTemperature                             11     9      2   31375
                                             13 BANK0     11     9      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2   31208
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     2      1     336
                                              6 COMMON     3     2      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       22    22      0     792
                                             10 COMMON     1     1      0
                                              0 BANK0     21    21      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0     649
                                             10 COMMON     4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0    2096
                                              7 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1    1618
                                             13 COMMON     1     1      0
                                              4 BANK0      3     2      1
                      _EUSART1_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0    1414
                                             11 COMMON     2     2      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0    1385
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2     631
                                              9 COMMON     2     0      2
                                              0 BANK0      4     4      0
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     234
                                              1 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1569 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0     353
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0     353
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       3     1      2     208
                                              6 COMMON     3     1      2
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       5     2      3     145
                                              1 COMMON     5     2      3
 _RN487X_Read@rn487x_interface$F1569 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1569                   0     0      0      24
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2      48
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0     717
                                             10 COMMON     4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0  283534
                                             19 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     0      3     342
                                              8 COMMON     3     0      3
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     1      2     246
                                              5 COMMON     3     1      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SendPacket                                 4     3      1     326
                                              6 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2      97
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RN487X_Write                                         1     0      1     104
                                              5 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     0      1      63
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               4     2      2  282564
                                             15 BANK0      4     2      2
               _BMA253_GetAccelDataX
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyX
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataX                                 5     4      1   62748
                                             10 BANK0      5     4      1
            _BMA253_NewAccelDataRdyX
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyX                              1     1      0   31340
                                              9 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1   31306
                                             13 COMMON     1     0      1
                                              4 BANK0      5     5      0
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4     445
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      84
                                              0 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0   29733
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0   29733
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0   29649
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0   29649
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0    7424
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      47
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      47
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      47
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0    7377
                                             11 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1079     2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1073     2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1090   2     0      2     761
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2     761
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1067     2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1056     2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2     730
                                              9 COMMON     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         4     0      4     493
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4     206
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             2     0      2       0
                                              9 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            2     0      2      15
                                              9 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              0 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
                         _IOCAF7_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCAF7_ISR                                          0     0      0       0
                                NULL *
     _IOCAF7_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataX
         _BMA253_NewAccelDataRdyX
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1056 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1067 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1090 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1073 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1079 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1056 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1067 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1090 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1073 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1079 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1056 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1067 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1090 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1073 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1079 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1056 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1067 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1090 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1073 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1079 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyX
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1569 *
                 _EUSART1_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1569 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _MCP9844_GetTemperatureValue
       _MCP9844_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1569 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1569 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
       _IOCAF7_SetInterruptHandler
     _PMD_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _service_acceleremoterInterrupt *
     _LIGHTBLUE_AccState
       _LIGHTBLUE_GetAccState
       _LIGHTBLUE_SendPacket
       _LIGHTBLUE_SplitByte

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *
     _IOCAF7_ISR
       NULL(Fake) *
       _IOCAF7_DefaultInterruptHandler *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     40      79     98.8%
BANK1               80      0      50     62.5%
BANK2               80      0      68     85.0%
BANK3               80      0      53     66.2%
BANK4               80      0      64     80.0%
BANK5               80      0      80    100.0%
BANK6               80      0      80    100.0%
BANK7               80      0      80    100.0%
BANK8               80      0      80    100.0%
BANK9               80      0      80    100.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              80      0       0      0.0%
BANK23              80      0       0      0.0%
BANK24              80      0       0      0.0%
BANK25              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     728      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Feb 15 18:33:11 2025

                                 _eusart1TxBufferRemaining 0058  
                                   ?_EUSART2_RxDataHandler 0070  
                         ??_IOCAF7_DefaultInterruptHandler 0070  
                          ?_IOCAF7_DefaultInterruptHandler 0070  
                                                       l53 16A7  
                                                       l62 08B5  
                                                       l80 02FE  
                                                       l56 0A3E  
                                                       l65 08DB  
                                                       l74 0DFD  
                                                       l59 0E63  
                                                       l68 0C52  
                                                       l92 00CE  
                                                       l99 00EC  
                                      _do_I2C_SEND_RESTART 0000  
                                                      l110 0132  
                                                      l122 0195  
                                                      l203 0CC7  
                                                      l131 081B  
                                                      l140 1639  
                                                      l221 085D  
                                                      l134 0D70  
                                                      l215 0770  
                                                      l143 16AD  
                                                      l224 086E  
                                                      l128 040E  
                                                      l152 0AC0  
                                                      l240 179F  
                                                      l137 16B3  
                                                      l146 1695  
                                                      l162 0EB3  
                                                      l227 087F  
                                                      l243 0C2C  
                                                      l149 082A  
                                                      l191 0C79  
                                                      l159 0EB1  
                                                      l168 0ED3  
                                                      l530 0972  
                                                      l515 095C  
                                                      l197 0CA0  
                                                      l542 0988  
                                                      l527 05B8  
                                                      l554 0B18  
                                                      l803 0A26  
                                                      l811 06A8  
                                                      l539 072A  
                                                      l813 06B5  
                                                      l901 1636  
                                                      l494 0946  
                                                      l910 1753  
                                                      l815 06E2  
                                                      l680 09CA  
                                                      l904 1793  
                                                      l808 0AA4  
                                                      l920 1782  
                                                      l913 175D  
                                                      l761 046C  
                                                      l674 099E  
                                                      l683 0930  
                                                      l907 1749  
                                                      l923 1785  
                                                      l916 1724  
                                                      l932 177A  
                                                      l940 17A7  
                                                      l677 09B4  
                                                      l925 1787  
                                                      l686 0B36  
                                                      l790 0386  
                                                      l934 177C  
                                                      l950 0D9D  
                                                      l846 07FF  
                                                      l943 17A9  
                                                      l855 064E  
                                                      l839 0ADC  
                                                      l768 0D19  
                                                      l960 0B99  
                                                      l856 064A  
                                                      l929 1777  
                                                      l945 17AA  
                                                      l937 17A0  
                                                      l953 0606  
                                                      l858 0650  
                                                      l779 0C07  
                                                      l947 17AB  
                                                      l971 0EFD  
                                                      l973 0F0D  
                                                      l966 0E2F  
                                             ?_RN487X_Init 0070  
                          BMA253_NewAccelDataRdyX@xNewData 0029  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 08A3  
                             LIGHTBLUE_SendPacket@packetID 0079  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 16DE  
                           _EUSART2_SetFramingErrorHandler 16D8  
                                                      _rad 0066  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 167D  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 0029  
                                     I2C1_SetBuffer@buffer 0070  
                                  ??_rd2RegCompleteHandler 007B  
                                                     l1310 17C5  
                                                     l1127 04C3  
                                                     l1304 0E9B  
                                                     l1320 172D  
                                                     l1314 0CF0  
                                                     l1323 171C  
                                                     l1139 16F5  
                                                     l2204 09F6  
                                                     l1413 1616  
                                                     l1317 1663  
                                                     l1405 0D44  
                                                     l1261 0F48  
                                                     l1149 16FB  
                                                     l1326 04FD  
                                                     l1342 078E  
                                                     l1343 07B6  
                                                     l1271 0B76  
                                            ?_RN487X_Delay 0072  
                                                     l1416 1618  
                                                     l1432 1630  
                                                     l1360 0DCC  
                                                     l1265 0A0E  
                                                     l1329 0518  
                                                     l1257 173F  
                                                     l1450 162A  
                                                     l1354 1714  
                                                     l1426 17D2  
                                                     l1435 165E  
                                                     l1284 17FF  
                                                     l1444 162D  
                                                     l2180 01C8  
                                                     l1429 161E  
                                                     l1453 169B  
                                                     l1381 166D  
                                                     l1269 0B6B  
                                                     l1277 1690  
                                                     l1293 080C  
                                                     l1438 1627  
                                                     l1390 167C  
                                                     l1542 1771  
                                                     l1447 1624  
                                                     l1287 17B8  
                                                     l2191 022E  
                                                     l1456 1655  
                                                     l1480 1633  
                                                     l1384 1672  
                                                     l1536 0A88  
                                                     l1393 1681  
                                                     l1474 1621  
                                                     l1378 1668  
                                                     l1634 08EF  
                                                     l1459 1651  
                                                     l1387 1677  
                                                     l1483 169C  
                                                     l1811 16C5  
                                                     l1539 1767  
                                                     l1571 09E0  
                                                     l1396 1686  
                                                     l1820 16CB  
                                                     l1477 161B  
                                                     l1814 16B9  
                                                     l1399 168B  
                                                     l1487 16A1  
                                                     l1751 0FFF  
                                                     l1760 1659  
                                                     l1808 16BF  
                                                     l1656 1701  
                                                     l1817 16D1  
                                                     l1770 0BBD  
                                                     l1667 08A2  
                                                     l6011 0891  
                                                     l6003 033E  
                                                     l6013 0892  
                                                     l6101 0A89  
                                                     l6005 0346  
                                                     l1757 1736  
                                                     l6021 0519  
                                                     l1775 0BC4  
                                                     l6015 0896  
                                                     l6103 0A94  
                                                     l6007 0385  
                                                     l6031 052E  
                                                     l6023 0525  
                                                     l1776 0BCD  
                                                     l1952 16DD  
                                                     l6017 08B6  
                                                     l6041 055A  
                                                     l6033 0532  
                                                     l1961 16EF  
                                                     l2834 0A6F  
                                                     l1779 0BE2  
                                                     l6019 08B8  
                                                     l6051 0A4B  
                                                     l6035 053B  
                                                     l6027 0528  
                                                     l1955 16E3  
                                                     l2828 08C8  
                                                     l2860 0568  
                                                     l1964 16E9  
                                                     l6141 0D71  
                                                     l6053 0A55  
                                                     l6045 0A3F  
                                                     l2853 0A3F  
                                                     l6037 0544  
                                                     l6029 052A  
                                                     l7021 07F4  
                                                     l1958 16D7  
                                                     l6071 06B2  
                                                     l6063 069A  
                                                     l7031 0455  
                                                     l7015 1634  
                                                     l6151 0B8E  
                                                     l6143 05B9  
                                                     l2855 0A56  
                                                     l6047 0A49  
                                                     l6039 054A  
                                                     l2847 0699  
                                                     l6231 0EE9  
                                                     l7023 07FC  
                                                     l1895 07F3  
                                                     l6241 0388  
                                                     l6137 171D  
                                                     l6057 0A0F  
                                                     l6081 06C2  
                                                     l6073 06B7  
                                                     l6065 06A5  
                                                     l7033 045E  
                                                     l6145 0B78  
                                                     l6161 0E1A  
                                                     l6153 0DFE  
                                                     l6233 0EF7  
                                                     l6321 061D  
                                                     l7025 07FE  
                                                     l8003 0AFB  
                                                     l8011 0994  
                                                     l6251 03EB  
                                                     l6243 03A5  
                                                     l6059 0A16  
                                                     l6091 06D4  
                                                     l6083 06C6  
                                                     l6075 06BB  
                                                     l6067 06AA  
                                                     l6147 0B7D  
                                                     l6155 0E05  
                                                     l6163 0651  
                                                     l6235 0F00  
                                                     l6227 0ED4  
                                                     l6331 063C  
                                                     l6323 061E  
                                                     l6315 0607  
                                                     l7019 07F4  
                                                     l7051 0A79  
                                                     l8005 0B17  
                                                     l8013 099D  
                                                     l8021 09B3  
                                                     l6253 03F9  
                                                     l6245 03A8  
                                                     l6261 0D4D  
                                                     l6093 06D6  
                                                     l6085 06CA  
                                                     l6077 06BE  
                                                     l6069 06AE  
                                                     l6237 172E  
                                                     l7029 040F  
                                                     l6149 0B89  
                                                     l6157 0E08  
                                                     l6173 0678  
                                                     l6165 0657  
                                                     l6229 0EE5  
                                                     l6325 0623  
                                                     l6333 063F  
                                                     l6317 0612  
                                                     l6501 0ADB  
                                                     l7053 0A7C  
                                                     l8103 1617  
                                                     l8111 1661  
                                                     l6255 03FB  
                                                     l6247 03B3  
                                                     l6263 0D5D  
                                                     l6431 16A8  
                                                     l6095 06D8  
                                                     l6087 06CC  
                                                     l6079 06C0  
                                                     l6183 0AA5  
                                                     l6343 1754  
                                                     l6159 0E17  
                                                     l6167 0663  
                                                     l6175 068A  
                                                     l6335 0645  
                                                     l6327 062F  
                                                     l6319 0617  
                                                     l6511 046D  
                                                     l6271 1637  
                                                     l6423 08C9  
                                                     l7151 09E6  
                                                     l8033 091B  
                                                     l8009 0989  
                                                     l8017 099F  
                                                     l8025 09B5  
                                                     l8041 0B19  
                                                     l8113 1662  
                                                     l8121 172C  
                                                     l8201 1710  
                                                     l6257 0403  
                                                     l6249 03D3  
                                                     l6265 0D5F  
                                                     l5801 0B9A  
                                                     l6097 06DF  
                                                     l6089 06D0  
                                                     l6185 0AA8  
                                                     l6441 0E9F  
                                                     l6505 177D  
                                                     l6177 068F  
                                                     l6169 0676  
                                                     l6337 0647  
                                                     l6329 0636  
                                                     l6361 16C0  
                                                     l6601 173E  
                                                     l6521 0478  
                                                     l6513 0470  
                                                     l6353 16FC  
                                                     l7049 0A70  
                                                     l6425 08CD  
                                                     l7161 09F5  
                                                     l7153 09E8  
                                                     l8107 1619  
                                                     l8035 0926  
                                                     l8019 09AA  
                                                     l8027 09C0  
                                                     l8043 0B35  
                                                     l8051 165B  
                                                     l8203 1713  
                                                     l6267 0D6A  
                                                     l6259 0D45  
                                                     l6435 1691  
                                                     l5811 0BB4  
                                                     l5803 0B9A  
                                                     l6187 0AB5  
                                                     l6275 081D  
                                                     l6443 0EAD  
                                                     l6451 0ECB  
                                                     l6419 16AE  
                                                     l6507 1772  
                                                     l6179 0698  
                                                     l6339 064C  
                                                     l6363 16B4  
                                                     l6355 16C6  
                                                     l6611 1763  
                                                     l6347 16F0  
                                                     l6531 048A  
                                                     l6523 047A  
                                                     l6515 0472  
                                                     l6603 1768  
                                                     l6427 08CE  
                                                     l7155 09EA  
                                                     l8301 161F  
                                                     l8037 092F  
                                                     l8029 09C9  
                                                     l8213 0DA5  
                                                     l8109 165F  
                                                     l8117 1725  
                                                     l8125 1715  
                                                     l8141 04D1  
                                                     l8133 04C4  
                                                     l8053 1664  
                                                     l8061 166C  
                                                     l6269 0D6C  
                                                     l5813 0BB5  
                                                     l5805 0BA0  
                                                     l6189 0ABD  
                                                     l6277 0827  
                                                     l6445 0EB5  
                                                     l6509 17A2  
                                                     l6357 16CC  
                                                     l6381 16DE  
                                                     l6349 16F6  
                                                     l6541 0494  
                                                     l6533 048C  
                                                     l6525 047D  
                                                     l6517 0474  
                                                     l6605 09CB  
                                                     l6621 08E5  
                                                     l6613 08DC  
                                                     l6429 08D5  
                                                     l7157 09F0  
                                                     l7149 09E1  
                                                     l8303 161C  
                                                     l8071 162E  
                                                     l8047 1696  
                                                     l8215 0DA8  
                                                     l8207 0D9E  
                                                     l8119 1727  
                                                     l8127 1717  
                                                     l8151 04D9  
                                                     l8055 1667  
                                                     l8311 0B62  
                                                     l5831 0BD5  
                                                     l5823 0BBE  
                                                     l5815 0BB7  
                                                     l5807 0BAC  
                                                     l6447 0EBF  
                                                     l6439 0E9E  
                                                     l6359 16BA  
                                                     l6631 0FD5  
                                                     l6383 16D2  
                                                     l6375 16E4  
                                                     l6607 175E  
                                                     l6551 049A  
                                                     l6543 0496  
                                                     l6535 048E  
                                                     l6527 047F  
                                                     l6519 0476  
                                                     l6623 08EC  
                                                     l6615 08E1  
                                                     l7159 09F3  
                                                     l8209 0DA1  
                                                     l8225 0DAE  
                                                     l8129 171B  
                                                     l8153 04FF  
                                                     l8145 04D5  
                                                     l8137 04CD  
                                                     l8065 1673  
                                                     l8233 1678  
                                                     l8241 1689  
                                                     l8313 0B67  
                                                     l8305 0B58  
                                                     l8401 05B1  
                                                     l5833 0BD7  
                                                     l5825 0BBE  
                                                     l5841 1788  
                                                     l6721 0C2D  
                                                     l5817 0BBA  
                                                     l5809 0BAE  
                                                     l6801 012B  
                                                     l6713 08A3  
                                                     l6641 0FDF  
                                                     l6633 0FD8  
                                                     l6625 0FC3  
                                                     l6377 16EA  
                                                     l6609 1761  
                                                     l6561 04AC  
                                                     l6553 049B  
                                                     l6545 0497  
                                                     l6537 0490  
                                                     l6529 0484  
                                                     l6617 08E2  
                                                     l8075 1652  
                                                     l8219 0DAA  
                                                     l8155 050A  
                                                     l8171 077F  
                                                     l8059 1669  
                                                     l8091 166E  
                                                     l8067 1676  
                                                     l8235 167B  
                                                     l8083 167D  
                                                     l8243 168A  
                                                     l8315 0B6E  
                                                     l8307 0B5F  
                                                     l8331 0F1A  
                                                     l8323 0F0F  
                                                     l8403 05B7  
                                                     l5835 0BDD  
                                                     l5827 0BC9  
                                                     l6731 0C45  
                                                     l6723 0C31  
                                                     l5819 0BBC  
                                                     l5843 1740  
                                                     l6811 014B  
                                                     l6803 0130  
                                                     l6715 08A7  
                                                     l6491 0AC7  
                                                     l6643 0FE6  
                                                     l6635 0FDA  
                                                     l6627 0FC5  
                                                     l6379 16D8  
                                                     l6651 07B7  
                                                     l6571 04B8  
                                                     l6563 04AF  
                                                     l6555 049C  
                                                     l6547 0498  
                                                     l6539 0492  
                                                     l6619 08E4  
                                                     l8157 0515  
                                                     l8181 0790  
                                                     l8173 0789  
                                                     l8093 1671  
                                                     l8085 1680  
                                                     l8077 1682  
                                                     l8253 0D23  
                                                     l8317 0B71  
                                                     l8309 0B60  
                                                     l8341 0F28  
                                                     l8333 0F1B  
                                                     l8325 0F16  
                                                     l8413 085E  
                                                     l8421 087E  
                                                     l5837 0BDE  
                                                     l5829 0BCE  
                                                     l6397 080D  
                                                     l6733 0C4C  
                                                     l6725 0C32  
                                                     l6821 016D  
                                                     l6813 015E  
                                                     l6805 0135  
                                                     l6717 08A8  
                                                     l6741 0DE1  
                                                     l8501 0A27  
                                                     l6645 0FED  
                                                     l6637 0FDC  
                                                     l6629 0FCC  
                                                     l6661 07CE  
                                                     l6653 07B9  
                                                     l6573 04BA  
                                                     l6565 04B1  
                                                     l6557 04A3  
                                                     l6549 0499  
                                                     l8159 0517  
                                                     l8191 0798  
                                                     l8175 078C  
                                                     l8167 0771  
                                                     l8079 1685  
                                                     l8239 1687  
                                                     l8247 0D1A  
                                                     l8271 0CCB  
                                                     l8319 0B74  
                                                     l8351 0F40  
                                                     l8343 0F2E  
                                                     l8335 0F1D  
                                                     l8327 0F18  
                                                     l8407 084D  
                                                     l8415 086D  
                                                     l5839 0BE0  
                                                     l8511 0E32  
                                                     l6727 0C39  
                                                     l5847 174A  
                                                     l5951 0CF3  
                                                     l6823 0173  
                                                     l6815 0164  
                                                     l6807 013B  
                                                     l6719 08AF  
                                                     l6743 0DE4  
                                                     l6735 0DCD  
                                                     l6751 026F  
                                                     l8431 06FA  
                                                     l8503 0A29  
                                                     l6495 0AC9  
                                                     l6647 0FF8  
                                                     l6639 0FDE  
                                                     l6671 07E1  
                                                     l6663 07D0  
                                                     l6655 07C0  
                                                     l6575 04BC  
                                                     l6567 04B4  
                                                     l6559 04AA  
                                                     l8089 162B  
                                                     l8097 1631  
                                                     l8185 0794  
                                                     l8169 077A  
                                                     l8249 0D1F  
                                                     l8273 0CD0  
                                                     l8281 17B9  
                                                     l8361 168C  
                                                     l8353 0F43  
                                                     l8345 0F32  
                                                     l8337 0F21  
                                                     l8329 0F19  
                                                     l8409 085C  
                                                     l8513 0E39  
                                                     l6729 0C3F  
                                                     l5961 0BE5  
                                                     l5953 0D01  
                                                     l6817 0167  
                                                     l6809 0144  
                                                     l6745 0DF7  
                                                     l6737 0DD1  
                                                     l6761 02B8  
                                                     l6753 0281  
                                                     l8433 0705  
                                                     l8425 06E5  
                                                     l8505 0A2E  
                                                     l6497 0AD7  
                                                     l6489 0AC1  
                                                     l6649 0FFD  
                                                     l6673 07EC  
                                                     l6665 07D2  
                                                     l6657 07C9  
                                                     l6577 04BE  
                                                     l6569 04B6  
                                                     l8371 0A0A  
                                                     l8099 1615  
                                                     l8259 0D27  
                                                     l8275 0CD8  
                                                     l8283 17BA  
                                                     l8291 17CB  
                                                     l8347 0F38  
                                                     l8339 0F26  
                                                     l8355 0F47  
                                                     l8443 0C53  
                                                     l8451 0C7A  
                                                     l8419 086F  
                                                     l5891 0A69  
                                                     l8515 0E45  
                                                     l6691 16A2  
                                                     l5963 0BEF  
                                                     l5971 0C00  
                                                     l5955 0D11  
                                                     l6771 00D1  
                                                     l6827 0176  
                                                     l6739 0DDA  
                                                     l6763 02E8  
                                                     l6755 0284  
                                                     l6747 025B  
                                                     l8435 070E  
                                                     l8427 06E5  
                                                     l8507 0A38  
                                                     l6675 07F1  
                                                     l6667 07D3  
                                                     l6659 07CC  
                                                     l6595 1737  
                                                     l6579 04C1  
                                                     l8373 0A0D  
                                                     l8365 09F7  
                                                     l8277 0CDB  
                                                     l8269 0CC8  
                                                     l8285 17BD  
                                                     l8293 17CC  
                                                     l8349 0F3A  
                                                     l8445 0C53  
                                                     l8453 0C7A  
                                                     l8461 0CA1  
                                                     l5885 0A57  
                                                     l8517 0E51  
                                                     l8509 0E30  
                                                     l5973 0C06  
                                                     l5965 0BFC  
                                                     l5797 1656  
                                                     l5957 0D13  
                                                     l5949 0CF1  
                                                     l5981 030A  
                                                     l6781 00EE  
                                                     l6773 00D3  
                                                     l6765 02EA  
                                                     l6757 028F  
                                                     l6749 0264  
                                                     l8437 0711  
                                                     l8429 06EF  
                                                     l6669 07DA  
                                                     l6597 1739  
                                                     l8367 09FE  
                                                     l8279 1622  
                                                     l8199 170E  
                                                     l8287 17C0  
                                                     l8295 17CF  
                                                     l8359 0800  
                                                     l8391 059A  
                                                     l8383 0571  
                                                     l8447 0C5B  
                                                     l8455 0C82  
                                                     l8463 0CA9  
                                                     l5887 0A5C  
                                                     l8519 0E5D  
                                                     l5959 0BE3  
                                                     l5991 032E  
                                                     l5983 0314  
                                                     l6791 0110  
                                                     l6783 00F1  
                                                     l6775 00D6  
                                                     l6767 02F3  
                                                     l6759 02A6  
                                                     l8439 0719  
                                                     l8471 0C17  
                                                     l6599 173C  
                                                     l8369 0A01  
                                                     l8297 17D1  
                                                     l8289 17C6  
                                                     l8393 059D  
                                                     l8385 057B  
                                                     l8377 056B  
                                                     l8449 0C6B  
                                                     l8457 0C92  
                                                     l8465 0CB9  
                                                     l8481 072B  
                                                     l5889 0A60  
                                                     l5969 0BFE  
                                                     l5993 0334  
                                                     l5985 031F  
                                                     l5977 02FF  
                                                     l6793 0113  
                                                     l6785 00F7  
                                                     l6777 00DC  
                                                     l6769 00CD  
                                                     l8473 0C19  
                                                     l8395 05A7  
                                                     l8387 0586  
                                                     l8459 0CA1  
                                                     l8491 074A  
                                                     l8483 072B  
                                                     l5995 033A  
                                                     l5987 0325  
                                                     l5979 0300  
                                                     l6795 0119  
                                                     l6787 0100  
                                                     l6779 00E5  
                                                     l8475 0C28  
                                                     l8467 0C08  
                                                     l8389 0591  
                                                     l8493 0750  
                                                     l8485 0733  
                                                     l5997 033C  
                                                     l5989 032B  
                                                     l6797 0122  
                                                     l6789 0107  
                                                     l8469 0C14  
                          BMA253_NewAccelDataRdyZ@zNewData 0029  
                                                     l7951 0E65  
                                                     l8399 05AD  
                                                     l8495 0759  
                                                     l8487 0739  
                                                     l6799 0129  
                                                     l8479 1794  
                                                     l8751 019E  
                                                     l8743 0196  
                                                     l7961 17FE  
                                                     l7953 0E6B  
                                                     l8497 0761  
                                                     l8489 0742  
                                                     l8761 01B2  
                                                     l8753 01A1  
                                                     l8745 0199  
                                                     l7955 0E84  
                                                     l7963 17AC  
                                                     l7971 0931  
                                                     l8931 0D3C  
                                                     l8499 0767  
                                                     l8771 01F9  
                                                     l8763 01C2  
                                                     l8755 01A9  
                                                     l8747 019A  
                                                     l7965 1625  
                                                     l7957 17F1  
                                                     l7973 093C  
                                                     l7981 0952  
                                                     l8933 07A8  
                                                     l8773 01FF  
                                                     l8765 01D1  
                                                     l8781 020F  
                                                     l8757 01AC  
                                                     l8749 019B  
                                                     l7967 1628  
                                                     l7959 17F6  
                                                     l7975 0945  
                                                     l7983 095B  
                                                     l7991 0971  
                                                     l8935 04EF  
                                                     l8783 021E  
                                                     l8775 0205  
                                                     l8767 01E3  
                                                     l8759 01B1  
                                                     l7969 164E  
                                                     l8937 0DBE  
                                                     l8929 017E  
                                                     l8785 0237  
                                                     l8777 020A  
                                                     l8769 01EE  
                                                     l7979 0947  
                                                     l7987 095D  
                                                     l7995 0973  
                                                     l8787 024A  
                                                     l8779 020D  
                                                     l7989 0968  
                                                     l7997 097E  
                                                     l7999 0987  
                                                     STR_1 1822  
                                                     STR_2 1822  
                                                     STR_3 1817  
                                                     STR_4 1817  
                                                     STR_5 1800  
                                                     STR_6 1800  
                                                     u2200 0BC4  
                                                     u2201 0BC3  
                                                     u2210 0BC9  
                                                     u3010 02F3  
                                                     u2211 0BC8  
                                                     u3011 02F2  
                                                     u2220 0BDD  
                                                     u2300 0D19  
                                                     u3020 00DC  
                                                     u2221 0BDC  
                                                     u2301 0D18  
                                                     u3021 00DB  
                                                     u3005 02BF  
                                                     _LATA 0018  
                                                     u2310 0BFC  
                                                     u3030 00F7  
                                                     _LATB 0019  
                                                     u2311 0BFB  
                                                     u3031 00F6  
                                                     _LATC 001A  
                                                     u2320 0C06  
                                                     u2400 053B  
                                                     u2321 0C05  
                                                     u2401 053A  
                                                     u2330 0325  
                                                     u3050 0119  
                                                     u2410 0544  
                                                     u2331 0324  
                                                     u3051 0118  
                                                     u2411 0543  
                                                     u2260 0A69  
                                                     u2180 0BA0  
                                                     u2340 032B  
                                                     u3060 0130  
                                                     u2420 054A  
                                                     u2261 0A68  
                                                     u2181 0B9F  
                                                     u2341 032A  
                                                     u3061 012F  
                                                     u3045 010A  
                                                     u2421 0549  
                                                     u2190 0BB4  
                                                     u2350 0334  
                                                     u3070 013B  
                                                     u2430 055A  
                                                     u2191 0BB3  
                                                     u2351 0333  
                                                     u3071 013A  
                                                     u2431 0559  
                                                     u4120 0E6B  
                                                     u4200 17C5  
                                                     u2360 033A  
                                                     u3080 016C  
                                                     u2520 0B7D  
                                                     u2440 0A49  
                                                     u3160 07FC  
                                                     u4121 0E6A  
                                                     u4201 17C4  
                                                     u2361 0339  
                                                     u3081 016B  
                                                     u2521 0B7C  
                                                     u2441 0A48  
                                                     u3161 07FB  
                                                     u4130 17F6  
                                                     u4210 17CB  
                                                     u2370 08A2  
                                                     u2290 0D01  
                                                     u3090 0173  
                                                     u3170 046C  
                                                     u2530 0B8E  
                                                     u2450 0A55  
                                                     u3330 09E6  
                                                     u4131 17F5  
                                                     u4211 17CA  
                                                     u2371 08A1  
                                                     u2291 0D00  
                                                     u3091 0172  
                                                     u3171 046B  
                                                     u2531 0B8D  
                                                     u2451 0A54  
                                                     u3331 09E5  
                                                     u4140 04CC  
                                                     u4220 0B5F  
                                                     u4300 0859  
                                                     u2460 06A5  
                                                     u2700 1736  
                                                     u2380 08C8  
                                                     u2540 0E2F  
                                                     u3340 09F0  
                                                     u4141 04CB  
                                                     u4221 0B5E  
                                                     u4301 0857  
                                                     u2461 06A4  
                                                     u2381 08C7  
                                                     u2541 0E2E  
                                                     u3341 09EF  
                                                     u4150 0515  
                                                     u4230 0B67  
                                                     u4310 085A  
                                                     u2470 06B2  
                                                     u2390 0525  
                                                     u2550 0657  
                                                     u4151 0514  
                                                     u4231 0B66  
                                                     u2471 06B1  
                                                     u2391 0524  
                                                     u2551 0656  
                                                     u4160 0789  
                                                     u4240 0F16  
                                                     u4320 086A  
                                                     u4400 0CA9  
                                                     u2720 0403  
                                                     u2560 0676  
                                                     u4161 0788  
                                                     u4241 0F15  
                                                     u4321 0868  
                                                     u4401 0CA8  
                                                     u2721 0402  
                                                     u2545 0E2B  
                                                     u2561 0675  
                                                     u4250 09FE  
                                                     u4170 16A1  
                                                     u4330 086B  
                                                     u4410 0733  
                                                     u2570 068F  
                                                     u4251 09FD  
                                                     u4171 16A0  
                                                     u4411 0732  
                                                     u2715 03BE  
                                                     u2571 068E  
                                                     u4180 0CD0  
                                                     u4260 057B  
                                                     u4340 087B  
                                                     u4420 074A  
                                                     u2580 0698  
                                                     u2900 0AC7  
                                                     u4181 0CCF  
                                                     u4261 057A  
                                                     u4341 0879  
                                                     u4421 0749  
                                                     u2581 0697  
                                                     u2901 0AC6  
                                                     u4190 0CD8  
                                                     u4270 05A7  
                                                     u4350 087C  
                                                     u4430 0761  
                                                     u2670 0EE5  
                                                     u2910 0AD7  
                                                     u4191 0CD7  
                                                     u4271 05A6  
                                                     u4431 0760  
                                                     u2671 0EE4  
                                                     u2911 0AD6  
                                                     u4280 05AC  
                                                     u4360 06EF  
                                                     u2920 1782  
                                                     u2680 0EF7  
                                                     u2760 0617  
                                                     u4281 05AB  
                                                     u4361 06EE  
                                                     u2921 1781  
                                                     u2681 0EF6  
                                                     u2761 0616  
                               LIGHTBLUE_PushButton@button 007D  
                                                     u4290 05B7  
                                                     u4370 0719  
                                                     u2930 1777  
                                                     u2690 1735  
                                                     u2770 061D  
                                                     u4291 05B6  
                                                     u4371 0718  
                                                     u2931 1776  
                                                     u2691 1733  
                                                     u2771 061C  
                                                     u4380 0C5B  
                                                     u2860 0EAD  
                                                     u2940 17A7  
                                                     u2780 0636  
                                                     u4700 01B1  
                                                     _PMD0 0796  
                                                     u4381 0C5A  
                                                     u2861 0EAC  
                                                     u2941 17A6  
                                                     u2781 0635  
                                                     u4701 01B0  
                                                     _PMD1 0797  
                                                     u4390 0C82  
                                                     u2870 0EB1  
                                                     u2790 0645  
                                                     u4710 01D0  
                                                     _PMD2 0798  
                                                     u4391 0C81  
                                                     u2871 0EB0  
                                                     u2855 0EA2  
                                                     u2791 0644  
                                                     u4711 01CF  
                                                     _PMD3 0799  
                                                     u2880 0EBA  
                                                     u4720 01EE  
                                                     _PMD4 079A  
                                                     u2881 0EB8  
                                                     u4721 01ED  
                                                     _PMD5 079B  
                                                     u2890 0EBB  
                                                     u4730 01F9  
                                                     _PMD6 079C  
                                                     u4731 01F8  
                                                     _PMD7 079D  
                                                     u2980 0DF7  
                                                     u4740 01FF  
                                                     u2981 0DF6  
                                                     u4741 01FE  
                                                     u4750 021D  
                                                     u4751 021C  
                                                     u4760 0236  
                                                     u2985 0DF3  
                                                     u4761 0235  
                                                     u4770 0258  
                                                     u4690 01A9  
                                                     u2995 0292  
                                                     u4771 0257  
                                                     u4691 01A8  
                                                     u4787 0893  
                                            ?_RN487X_Reset 0070  
                          BMA253_GetAccelDataXYZ@accelData 002F  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0070  
                                  ??_wr2RegCompleteHandler 007B  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 0BBE  
                                            ?_RN487X_Write 0075  
                                ??_I2C1_CallbackReturnStop 007B  
                                                     __hex 01C4  
                                                     _main 0196  
                                                     _peek 0062  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1000  
                                           _RN487X_ReadMsg 0BE3  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007D  
                                           _RN487X_SendCmd 0CF1  
                         RN487X_SetOutputs@stateHighNibble 0023  
                                                     start 0061  
                                         ??_I2C1_SetBuffer 0074  
                             __end_of_EUSART2_Transmit_ISR 0B56  
                              __end_of_RN487X_EnterCmdMode 0A27  
                                             _statusBuffer 0320  
                           BMA253_GetAccelDataX@xAccelData 002A  
                                  ??_LIGHTBLUE_AccelSensor 007E  
                            I2C1_CallbackReturnStop@funPtr 0079  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0196  
                            _LIGHTBLUE_ParseIncomingPacket 00CB  
                                  __end_of_TMR0_Initialize 08F0  
                                             _do_I2C_RESET 0000  
                           ??_TMR0_DefaultInterruptHandler 0070  
                            __end_of_OSCILLATOR_Initialize 1768  
                                    _eusart1RxStatusBuffer 00A8  
                                        __end_of_I2C1_Open 0F49  
                                                    ?_main 0070  
                            __end_of_rn487x_driver_version 1838  
                               __end_of_i2c1_fsmStateTable 1048  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0070  
                              LIGHTBLUE_PushButton@payload 007A  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                ?_TMR0_SetInterruptHandler 0070  
                               ??_I2C1_CallbackReturnReset 007B  
                                        ??_I2C1_MasterOpen 0070  
                                     _EUSART1_Transmit_ISR 0ADD  
                                        ??_I2C1_MasterStop 0070  
                                        ??_I2C1_Initialize 0070  
                                         __end_of_TMR0_ISR 17F1  
                                                    _pHead 0063  
                                  __end_of_PIN_MANAGER_IOC 084D  
                                                    _flats 005B  
                                           ??_RN487X_Delay 0074  
                           BMA253_GetAccelDataY@yAccelData 002A  
                                           ??_RN487X_Reset 0071  
                                    _i2c_read1ByteRegister 0569  
                                           ?_EUSART1_Write 0070  
                                           ??_RN487X_Write 0076  
                                   __end_of_RN487X_ReadMsg 0C08  
                                                    pclath 000A  
                                   __end_of_RN487X_SendCmd 0D1A  
                                           ??_EUSART1_Read 0070  
                                LIGHTBLUE_PerformAction@id 0025  
                                                    status 0003  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 007B  
                                             ??_I2C1_DO_TX 007B  
                                          __end_of_strncmp 0569  
                                   ??_RN487X_SetSystemMode 0071  
               __end_of_EUSART1_DefaultFramingErrorHandler 1612  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1611  
                                   ??_I2C1_DO_ADDRESS_NACK 007B  
                             __end_of_RN487X_EnterDataMode 0AA5  
                                             ??_I2C1_Close 0070  
                    __end_of_EUSART2_SetTxInterruptHandler 16F0  
                            _EUSART2_SetTxInterruptHandler 16EA  
                                            _fsmStateTable 1048  
                                          __initialization 0063  
                                   _rn487x_PrintMessageEnd 05B9  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 1000  
                                             __end_of_main 025B  
                                             __end_of_uart 1028  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                 _LIGHTBLUE_UpdateErrorLed 0AA5  
                               __end_of_RN487X_is_rx_ready 175E  
                              ?_INTERRUPT_InterruptManager 0070  
                                LIGHTBLUE_AccState@payload 007A  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002A  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007D  
                                                   ??_main 0046  
                                ?_rn487x_PrintMessageStart 0070  
                                            _INTERRUPTbits 006B  
                      __end_of_EUSART2_DefaultErrorHandler 1646  
                              _EUSART2_DefaultErrorHandler 1642  
                                  _LIGHTBLUE_PerformAction 0E9C  
                         RN487X_MessageHandler@messageType 0041  
                         __end_of_LIGHTBLUE_SendSerialData 02FF  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 07B7  
                                       __end_of_I2C1_DO_TX 0519  
                                   _serialIndex@main$F4021 004C  
                                         _RN487X_DataReady 0AC1  
                                       __end_of_I2C1_Close 0A0F  
                               __end_of_EUSART2_Initialize 07F4  
                             ??_IOCAF6_SetInterruptHandler 0072  
                                 _eusart2TxBufferRemaining 0051  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 06E3  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1PPS 1F21  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2PPS 1F22  
                                                   _RC2STA 0A1D  
                                                   i1l1010 005F  
                                                   i1l1002 0013  
                                                   i1l1011 0050  
                                                   i1l1004 001F  
                                                   i1l1007 0032  
                                                   i1l1016 005F  
                                                   i1l1009 0041  
                                                   _RC4PPS 1F24  
                                                   i1l1132 084C  
                                                   i1l1142 1613  
                                                   i1l1136 083B  
                                                   i1l1152 164D  
                                                   i1l1146 17E1  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1802 1641  
                                                   i1l1805 163D  
                                                   i1l1653 17F0  
                                  ??_LIGHTBLUE_GetAccState 0070  
                                                   i1l1659 1614  
                                                   i1l1940 091A  
                                                   i1l1782 0AF8  
                                                   i1l1926 0B53  
                                                   _RN487X 1068  
                                                   i1l1943 1612  
                                                   i1l1792 0F85  
                                                   i1l1936 0FC2  
                                                   i1l1785 0AFA  
                                                   i1l1929 0B55  
                                                   i1l1946 1649  
                                                   i1l1796 0904  
                                                   i1l7101 0F54  
                                                   i1l1949 1645  
                                                   i1l1799 1611  
                                                   i1l7111 0F71  
                                                   i1l7103 0F5A  
                                                   i1l7113 0F7B  
                                                   i1l7105 0F60  
                                                   i1l7121 0B46  
                                                   i1l7041 083C  
                                                   i1l7115 0F82  
                                                   i1l7107 0F65  
                                                   i1l7131 0F8C  
                                                   i1l7123 0B49  
                                                   i1l7043 0841  
                                                   i1l7035 17E2  
                                                   i1l7109 0F6B  
                                                   i1l7141 0FA8  
                                                   i1l7133 0F91  
                                                   i1l7125 0B4F  
                                                   i1l7117 0B37  
                                                   i1l7045 0844  
                                                   i1l7037 17E4  
                                                   i1l7143 0FAE  
                                                   i1l7135 0F97  
                                                   i1l7127 0B50  
                                                   i1l7119 0B3E  
                                                   i1l6351 164A  
                                                   i1l7047 0849  
                                                   i1l7039 17EB  
                                                   i1l7145 0FB8  
                                                   i1l7137 0F9D  
                                                   i1l7129 0F86  
                                                   i1l6371 0901  
                                                   i1l7091 0AEE  
                                                   i1l7147 0FBF  
                                                   i1l7139 0FA2  
                                                   i1l6373 0902  
                                                   i1l6365 08F0  
                                                   i1l7093 0AF4  
                                                   i1l7085 0ADD  
                                                   i1l6367 08F8  
                                                   i1l7095 0AF5  
                                                   i1l7087 0AE4  
                                                   i1l6391 0917  
                                                   i1l6369 08FB  
                                                   i1l7097 0F49  
                                                   i1l7089 0AEB  
                                                   i1l6393 0918  
                                                   i1l6385 0905  
                                          ?_RN487X_ReadMsg 0071  
                                                   i1l7099 0F4F  
                                                   i1l6387 090E  
                                                   i1l6389 0911  
                                                   i1l6581 082B  
                                                   i1l6583 082D  
                                                   i1l6591 17DA  
                                                   i1l6585 0834  
                                                   i1l6593 17DF  
                                                   i1l7641 001B  
                                                   i1l7633 0006  
                                                   i1l6683 163E  
                                                   i1l6587 0839  
                                                   i1l7651 003A  
                                                   i1l7643 0023  
                                                   i1l7635 000B  
                                                   i1l6685 163A  
                                                   i1l6589 17D3  
                                                   i1l7653 0045  
                                                   i1l7645 0027  
                                                   i1l7637 000F  
                                                   i1l6687 1646  
                                                   i1l7655 0049  
                                                   i1l7647 002B  
                                                   i1l7639 0017  
                                                   u320_20 0849  
                                                   i1l6689 1642  
                                                   u320_21 0848  
                                                   i1l7657 0054  
                                                   i1l7649 0036  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   i1l7659 0058  
                                                   _INLVLC 1F52  
                                                   u330_20 0F91  
                                                   u330_21 0F90  
                                                   u323_20 0AE4  
                                                   u331_20 0FA2  
                                                   u323_21 0AE3  
                                                   u331_21 0FA1  
                                                   u324_20 0AF4  
                                                   u332_20 0FB8  
                                                   u324_21 0AF3  
                                                   u332_21 0FB7  
                                                   u325_20 0F54  
                                                   u325_21 0F53  
                                                   u326_20 0F65  
                                                   u318_20 17EB  
                                                   u326_21 0F64  
                                                   u318_21 17EA  
                                                   u327_20 0F7B  
                                                   u319_20 0841  
                                                   u327_21 0F7A  
                                                   u319_21 0840  
                                                   u280_20 0901  
                                                   u328_20 0B3E  
                                                   u280_21 0900  
                                                   u328_21 0B3D  
                                                   u281_20 0917  
                                                   u329_20 0B4F  
                                                   u281_21 0916  
                                                   u329_21 0B4E  
                                                   u390_20 003A  
                                                   u382_20 000B  
                                                   u390_21 0039  
                                                   u382_21 000A  
                                                   u295_20 0834  
                                                   u391_20 0045  
                                                   u383_20 000F  
                                                   u295_21 0833  
                                                   u391_21 0044  
                                                   u383_21 000E  
                                                   u296_20 17DA  
                                                   u392_20 0049  
                                                   u384_20 0017  
                                                   u296_21 17D9  
                                                   u392_21 0048  
                                                   u384_21 0016  
                                                   u393_20 0054  
                                                   u385_20 001B  
                                                   u393_21 0053  
                                                   u385_21 001A  
                       __end_of_RN487X_ReadDefaultResponse 0387  
                               _RN487X_ReadDefaultResponse 02FF  
                                                   u394_20 0058  
                                                   u386_20 0023  
                                                   u394_21 0057  
                                                   u386_21 0022  
                                                   u387_20 0027  
                                        send_spi_read@data 00C4  
                                                   u387_21 0026  
                                                   u388_20 002B  
                                                   u388_21 002A  
                                                   _OSCFRQ 0893  
                                                   u389_20 0036  
                                                   u389_21 0035  
                                          ?_RN487X_SendCmd 0076  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                             ?_MCP9844_GetTemperatureValue 0038  
                                 rdBlkRegCompleteHandler@p 0079  
                                  ??_I2C1_MasterDisableIrq 0070  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0070  
                                         _I2C1_DO_TX_EMPTY 0D9E  
                              BMA253_GetAccelDataX@lsbData 002D  
                              BMA253_GetAccelDataX@msbData 002E  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 182D  
                            RN487X_EnterDataMode@cmdPrompt 1828  
                                       ??_I2C1_MasterStart 0070  
                              BMA253_GetAccelDataY@lsbData 002D  
                        BMA253_GetAccelDataXYZ@sensorValue 0031  
                                       ??_I2C1_MasterWrite 007D  
                              BMA253_GetAccelDataY@msbData 002E  
                   LIGHTBLUE_TemperatureSensor@temperature 003E  
                              BMA253_GetAccelDataZ@lsbData 002D  
                              BMA253_GetAccelDataZ@msbData 002E  
                                                   _cmdBuf 0220  
                               _lightBlueSerial@main$F4020 02A0  
                                                   _bitMap 004A  
                             __end_of_BMA253_GetAccelDataX 0C7A  
                             __end_of_BMA253_GetAccelDataY 0CA1  
                             __end_of_BMA253_GetAccelDataZ 0CC8  
                                RN487X_FilterData@readChar 0042  
                                 ?_EUSART1_SetErrorHandler 0070  
                                         ?_TMR0_Initialize 0070  
                              _EUSART2_FramingErrorHandler 0158  
                         ??_EUSART1_SetOverrunErrorHandler 0072  
                          ?_EUSART1_SetOverrunErrorHandler 0070  
                                                   _pushed 005E  
                        __end_of_LIGHTBLUE_GetDataLedValue 16AE  
                                                   _strchr 0A3F  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                                   _strcpy 08B6  
                                                   _strlen 0A57  
                                                   _strstr 0651  
                                        ?_I2C1_SetCallback 0070  
                                   ??_I2C1_DO_RX_NACK_STOP 0070  
                              LIGHTBLUE_SendPacket@payload 0076  
                                    _I2C1_DO_SEND_ADR_READ 1725  
                                           _PMD_Initialize 1768  
                                  _BMA253_NewAccelDataRdyX 084D  
                                  _BMA253_NewAccelDataRdyY 085E  
                                  _BMA253_NewAccelDataRdyZ 086F  
                            ?_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0074  
                                     _EUSART2_Transmit_ISR 0B37  
                               LIGHTBLUE_PerformAction@led 0026  
                           __end_ofRN487X_RebootCmd@reboot 1817  
                                   ?_i2c_read1ByteRegister 007D  
                                          ??_EUSART1_Write 0071  
                 TMR0_SetInterruptHandler@InterruptHandler 0070  
               IOCAF7_SetInterruptHandler@InterruptHandler 0070  
               IOCAF6_SetInterruptHandler@InterruptHandler 0070  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 00B0  
                                                ??_strncmp 0075  
                                  _I2C1_DO_RX_NACK_RESTART 1682  
                                             ??_IOCAF6_ISR 0070  
                                             ??_IOCAF7_ISR 0070  
                                    _RN487X_MessageHandler 0ED4  
                                        RN487X_SendCmd@cmd 0076  
                                          _eusart2RxBuffer 0144  
                                          _eusart1TxBuffer 00B8  
                                        _SYSTEM_Initialize 0A70  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 014C  
                                  __end_of__initialization 00C7  
                                  _protocol_version_number 1838  
                                         _do_I2C_SEND_STOP 0000  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007D  
                            ??_MCP9844_GetTemperatureValue 007D  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 1832  
                             RN487X_EnterCmdMode@cmdPrompt 182D  
                            __end_of_EUSART1_RxDataHandler 0905  
                                  _rdBlkRegCompleteHandler 0AFB  
                               __end_of_spi2_configuration 1836  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK3 0880  
                                      ??_SYSTEM_Initialize 0072  
                         __end_of_I2C1_MasterEnableRestart 1628  
                                                ?_TMR0_ISR 0070  
                                     __end_of_RN487X_Delay 1725  
                           ?_EUSART2_SetTxInterruptHandler 0070  
                                 ??_BMA253_GetAccelDataXYZ 007E  
                                     __end_of_RN487X_Reset 1788  
                                  _MCP9844_CalcTemperature 0C08  
                                     __end_of_RN487X_Write 1794  
                                ??_LIGHTBLUE_PerformAction 007D  
                                   __end_of_PMD_Initialize 1772  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0070  
                                       __end_of_IOCAF6_ISR 083C  
                                       __end_of_IOCAF7_ISR 17E2  
                                     __end_of_EUSART1_Read 0BBE  
                                      _LIGHTBLUE_SplitByte 0D45  
                                        RN487X_Reset@value 0070  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 080D  
                               __end_of_LIGHTBLUE_AccState 08DC  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0070  
                                     _RN487X_EnterDataMode 0A89  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 0F86  
                                    __end_of_I2C1_DO_RESET 168C  
                   __end_of_IOCAF7_DefaultInterruptHandler 164E  
                           _IOCAF7_DefaultInterruptHandler 164A  
                                   ?_i2c_read2ByteRegister 0024  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 0A89  
                                 _LIGHTBLUE_SendSerialData 025B  
                                            _eusart1RxHead 0057  
                                            _eusart1TxHead 005A  
                                            _eusart2RxHead 0050  
                                        ??_SPI2_Initialize 0070  
                                            _eusart1RxTail 0056  
                                            _eusart2TxHead 0053  
                                               __pbssBANK0 0048  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                               __pbssBANK7 03A0  
                                               __pbssBANK8 0420  
                                               __pbssBANK9 04A0  
                                            _eusart1TxTail 0059  
                                            _eusart2RxTail 004F  
                          __end_of_I2C1_MasterWaitForEvent 16A2  
                        _EUSART1_TxDefaultInterruptHandler 0162  
                                            _eusart2TxTail 0052  
                          ??_EUSART1_SetRxInterruptHandler 0072  
                               __end_of_LIGHTBLUE_LedState 0C53  
                            __end_of_rd2RegCompleteHandler 0973  
                                       _DELAY_milliseconds 0891  
                             __end_of_LIGHTBLUE_Initialize 16A8  
                                     I2C1_Open@returnValue 0071  
                         ??_EUSART2_SetFramingErrorHandler 0072  
                          ?_EUSART2_SetFramingErrorHandler 0070  
                                     ?_LIGHTBLUE_SplitByte 0075  
                                     ?_LIGHTBLUE_SplitWord 0078  
                            __end_of_wr2RegCompleteHandler 0989  
                                    _rd1RegCompleteHandler 0947  
                                        _I2C1_DO_SEND_STOP 1673  
                                    _wr1RegCompleteHandler 0931  
                          __end_of_EUSART1_SetErrorHandler 16BA  
                                      ?_DELAY_milliseconds 0070  
                                               __pmaintext 0196  
                           LIGHTBLUE_SendSerialData@length 0078  
                         __end_of_TMR0_SetInterruptHandler 1702  
                                       ?_I2C1_DO_SEND_STOP 0070  
                         rn487x_PrintMessage@passedMessage 0075  
                          rn487x_PrintMessage@messageIndex 0040  
                                               ??_TMR0_ISR 0070  
                                          _I2C1_MasterOpen 17C6  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1628  
                                          _I2C1_Initialize 1737  
                             __end_of_LIGHTBLUE_SendPacket 040F  
                                      __end_of_I2C1_Poller 17C6  
                            __end_of_LIGHTBLUE_AccelSensor 0E64  
                                ??_BMA253_NewAccelDataRdyX 007E  
                                ??_BMA253_NewAccelDataRdyY 007E  
                                ??_BMA253_NewAccelDataRdyZ 007E  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0070  
                                      ??_I2C1_DO_SEND_STOP 0070  
                                                  ?_strcpy 0070  
                                                  ?_strlen 0070  
                   __end_of_EUSART1_SetFramingErrorHandler 16C0  
                           _EUSART1_SetFramingErrorHandler 16BA  
                                                  ?_strstr 0076  
                                    _eusart2RxStatusBuffer 00A0  
                                    ?_RN487X_EnterDataMode 0070  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1696  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0072  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 0F0E  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1056 099F  
          _rd1RegCompleteHandler@i2c1_master_example$F1056 0989  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1073 09CB  
          _wr1RegCompleteHandler@i2c1_master_example$F1073 09B5  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1090 0B37  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1090 0B19  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1067 09B5  
          _rd2RegCompleteHandler@i2c1_master_example$F1067 099F  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1079 0931  
          _wr2RegCompleteHandler@i2c1_master_example$F1079 091B  
                              __end_of_EUSART2_Receive_ISR 0FC3  
                       __end_of_IOCAF6_SetInterruptHandler 16F6  
                               _IOCAF6_SetInterruptHandler 16F0  
                                ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1631  
                                                  _SSP1ADD 018D  
                                                  _SSP2ADD 0197  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP2BUF 0196  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 082B  
                               _LIGHTBLUE_SetErrorLedValue 081C  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 007D  
                               _accelerometerInterruptBits 006C  
                           ??_I2C1_SetDataCompleteCallback 0079  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataX 0C53  
                                     _BMA253_GetAccelDataY 0C7A  
                                     _BMA253_GetAccelDataZ 0CA1  
                                       RN487X_ReadMsg@resp 0074  
                                          _asyncBufferSize 0064  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1028  
                                       _sendSpiReadRequest 005D  
                                       _i2c1_driver_i2cISR 00C0  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0070  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1678  
                                ??_rdBlkRegCompleteHandler 007B  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0070  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 0DFE  
                                      ??_I2C1_MasterSetIrq 0070  
                                        _RN487X_FilterData 0607  
                                 __end_of_RN487X_DataReady 0ADD  
                             __end_of_LIGHTBLUE_PushButton 08B6  
                                ??_MCP9844_CalcTemperature 002F  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 172E  
                               __end_of_EUSART1_is_tx_done 165A  
                          __end_of_EUSART2_SetErrorHandler 16D8  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 002F  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1772  
                              ??_LIGHTBLUE_GetDataLedValue 0070  
                                                  __ptext1 09E1  
                                                  __ptext2 08C9  
                                                  __ptext3 1637  
                                                  __ptext4 0A70  
                                                  __ptext5 08DC  
                                                  __ptext6 16FC  
                                                  __ptext7 09CB  
                                                  __ptext8 1768  
                                                  __ptext9 046D  
                                 _I2C1_MasterEnableRestart 1625  
                         MCP9844_CalcTemperature@lowerByte 0035  
                                __end_of_I2C1_MasterIsNack 169C  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 007E  
                                     ?_rn487x_PrintMessage 0075  
               __end_of_EUSART2_DefaultOverrunErrorHandler 164A  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1646  
                                    _OSCILLATOR_Initialize 175E  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0070  
                                __end_of_I2C1_MasterSetIrq 1634  
                                 __end_of_I2C1_DO_TX_EMPTY 0DCD  
                                       _EUSART1_Initialize 0FC3  
                                 ??_PIN_MANAGER_Initialize 0072  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 1836  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0074  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0070  
                                 ?_I2C1_CallbackReturnStop 0079  
                                       _RN487X_is_rx_ready 1754  
                   MCP9844_GetTemperatureValue@temperature 0038  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0028  
                                                  clrloop0 1703  
                                      ??_RN487X_IndicateRx 0071  
                                    ?_BMA253_GetAccelDataX 002A  
                                    ?_BMA253_GetAccelDataY 002A  
                                    ?_BMA253_GetAccelDataZ 002A  
                                                  _strncmp 0519  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1669  
                                     end_of_initialization 00C7  
                               __end_of_I2C1_MasterSendAck 1656  
                      ?_RN487X_Read@rn487x_interface$F1570 0070  
                     ??_RN487X_Read@rn487x_interface$F1572 0071  
               __end_of_RN487X_Read@rn487x_interface$F1569 174A  
                       _RN487X_Read@rn487x_interface$F1569 1740  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 0A3F  
                              _LIGHTBLUE_TemperatureSensor 0A27  
                                      _I2C1_MasterClearIrq 1619  
                                      ?_EUSART1_Initialize 0070  
                           __end_of_rn487x_PrintMessageEnd 0607  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1708  
                               __end_of_I2C1_MasterStartRx 162E  
                              _EUSART1_OverrunErrorHandler 015C  
                                   ?_rd1RegCompleteHandler 0079  
                                                  initloop 1709  
                                   _I2C1_DO_SEND_ADR_WRITE 1715  
                         MCP9844_CalcTemperature@upperByte 0034  
                            __end_of_LIGHTBLUE_GetAccState 163A  
                                      ?_RN487X_is_rx_ready 0070  
                         ??_service_acceleremoterInterrupt 007E  
                          ?_service_acceleremoterInterrupt 0070  
                                __end_of_RN487X_FilterData 0651  
                             __end_of_I2C1_DO_SEND_RESTART 1673  
                                  __end_of_I2C1_MasterOpen 17D3  
                                   ?_wr1RegCompleteHandler 0079  
                                  __end_of_I2C1_MasterStop 162B  
                                  __end_of_I2C1_Initialize 1740  
                    __end_of_EUSART1_SetRxInterruptHandler 16CC  
                            _EUSART1_SetRxInterruptHandler 16C6  
                                              _I2C1_Poller 17B9  
                                ?_I2C1_CallbackReturnReset 0079  
                                       _EUSART2_Initialize 07B7  
                            __end_of_I2C1_MasterDisableIrq 1622  
                                              _I2C1_Status 01A0  
                              LIGHTBLUE_PerformAction@data 0024  
                                    LIGHTBLUE_AccState@acc 007D  
                          __end_of_protocol_version_number 183A  
                               __end_of_RN487X_IsConnected 1637  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 164E  
                      __end_of_I2C1_SetAddressNackCallback 080D  
                              _I2C1_SetAddressNackCallback 0800  
                                __end_of_RN487X_IndicateRx 177D  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0070  
                                     ??_EUSART1_Initialize 0072  
                                                  strchr@c 0071  
                                                  strchr@s 0070  
                                           ??_I2C1_DO_RCEN 0070  
                               LIGHTBLUE_SplitByte@payload 0075  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 166E  
                               _I2C1_DO_SEND_RESTART_WRITE 1669  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0072  
                                                  strlen@a 0073  
                                                  strlen@s 0070  
                                               _returnStop 0000  
                                                  strstr@h 0076  
                                 _TMR0_SetInterruptHandler 16FC  
                                                  strstr@n 0077  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0070  
                                        _RN487X_SetOutputs 069A  
                          __end_of_rdBlkRegCompleteHandler 0B19  
                                    ??_rn487x_PrintMessage 0076  
                                   ??_RN487X_EnterDataMode 0079  
                                     _LIGHTBLUE_Initialize 16A2  
                                  _statusBuffer@main$F2075 03A0  
                                  _statusBuffer@main$F4019 04A0  
                                  ??_i2c_read1ByteRegister 007E  
                                       ?_RN487X_SetOutputs 0079  
                                  _IOCAF6_InterruptHandler 00CC  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0072  
                                                _TRISAbits 0012  
                                                _TRISCbits 0014  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           I2C1_CallbackReturnReset@funPtr 0079  
                             ??_IOCAF7_SetInterruptHandler 0072  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0070  
                                    ??_EUSART1_is_rx_ready 0070  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 171D  
                                     RN487X_ReadMsg@msgLen 0073  
                                     ??_EUSART2_Initialize 0072  
                                   _BMA253_GetAccelDataXYZ 072B  
                                     _LIGHTBLUE_SendPacket 0387  
                                             _RN487X_Reset 177D  
                                _LIGHTBLUE_GetDataLedValue 16A8  
                                             _RN487X_Write 1788  
                                           __end_of_RN487X 107A  
                                             _EUSART1_Read 0B9A  
                         __end_of_LIGHTBLUE_GetButtonValue 16B4  
                            RN487X_SetOutputs@ioHighNibble 0022  
                            __end_of_EUSART2_RxDataHandler 091B  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0070  
                                 _rn487x_PrintMessageStart 0D71  
                                __end_of_RN487X_SetOutputs 06E3  
                                           _I2C1_DO_RX_ACK 1678  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0074  
                                            ??_RN487X_Read 007E  
                               ??_LIGHTBLUE_SendSerialData 0077  
                                          _SPI2_Initialize 09CB  
                          RN487X_FilterData@asyncBuffering 0060  
                          __end_of_I2C1_CallbackReturnStop 1617  
                            __end_of_I2C1_MasterSendTxData 165F  
                                           __end_of_strchr 0A57  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 08C9  
                                           __end_of_strlen 0A70  
                                       _spi2_configuration 1832  
                                           __end_of_strstr 069A  
                                      start_initialization 0063  
                             LIGHTBLUE_AccelSensor@payload 0033  
                                              ??_I2C1_Open 0070  
                                      _i2c_busCollisionISR 0000  
                          RN487X_SetOutputs@stateLowNibble 0021  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0034  
                                   ??_BMA253_GetAccelDataX 002B  
                                   ??_BMA253_GetAccelDataY 002B  
                                   ??_BMA253_GetAccelDataZ 002B  
                                    ??_I2C1_MasterSendNack 0070  
            EUSART2_SetRxInterruptHandler@interruptHandler 0070  
            EUSART2_SetTxInterruptHandler@interruptHandler 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0070  
            EUSART1_SetTxInterruptHandler@interruptHandler 0070  
                                     _LIGHTBLUE_PushButton 08A3  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    __end_of_EUSART1_Write 0BE3  
                                    ?_LIGHTBLUE_SendPacket 0076  
                          ??_LIGHTBLUE_SendProtocolVersion 007A  
                                   rd1RegCompleteHandler@p 0079  
                                       _LIGHTBLUE_AccState 08C9  
                                 I2C1_SetBuffer@bufferSize 0072  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 16E4  
                           _EUSART2_SetOverrunErrorHandler 16DE  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      ?_LIGHTBLUE_AccState 0070  
                   MCP9844_CalcTemperature@temperatureData 0036  
                                         ??_PMD_Initialize 0070  
                             i2c_read1ByteRegister@address 0024  
                                   __end_of_I2C1_DO_RX_ACK 167D  
                                   wr1RegCompleteHandler@p 0079  
                                    _EUSART1_RxDataHandler 08F0  
                                  ??_I2C1_DO_SEND_ADR_READ 0070  
                           ?_EUSART1_SetRxInterruptHandler 0070  
                                       _LIGHTBLUE_LedState 0C2D  
                                              __pdataBANK0 006D  
                                              __pdataBANK3 01C4  
                                                 ??_strchr 0073  
                                                 ??_strcpy 0072  
                                                 ??_strlen 0072  
                                         I2C1_Open@address 0070  
                                           _eusart1RxCount 0055  
                                                 ??_strstr 0079  
                                           _eusart2RxCount 004E  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007E  
                                     _I2C1_DO_SEND_RESTART 166E  
                        _EUSART1_RxDefaultInterruptHandler 0160  
                                                ___latbits 0003  
                                     ??_LIGHTBLUE_AccState 007A  
                                            __pcstackBANK0 0020  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0070  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                      __end_of_RN487X_Init 046D  
                                      __end_of_RN487X_Read 0800  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0070  
                          ??_EUSART1_SetTxInterruptHandler 0072  
                                      _RN487X_EnterCmdMode 0A0F  
                                     __end_of_I2C1_DO_IDLE 1664  
                         ??_EUSART1_SetFramingErrorHandler 0072  
                          ?_EUSART1_SetFramingErrorHandler 0070  
                          ??_EUSART2_SetRxInterruptHandler 0072  
                                     __end_of_I2C1_DO_RCEN 1715  
                      __end_of_MCP9844_GetTemperatureValue 17A0  
                              _MCP9844_GetTemperatureValue 1794  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0061  
                                          _do_I2C_TX_EMPTY 0000  
                                    _TMR0_InterruptHandler 00C8  
                                     ??_LIGHTBLUE_LedState 007A  
                                                __pnvBANK1 00C8  
                                                __pnvBANK2 0154  
                                    _rd2RegCompleteHandler 095D  
                                  _IOCAF7_InterruptHandler 00CA  
                                    __end_of_fsmStateTable 1068  
                                                _main$5041 0047  
                                   _PIN_MANAGER_Initialize 046D  
                                    _wr2RegCompleteHandler 0973  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0070  
                                 ?_LIGHTBLUE_PerformAction 0024  
                                           _I2C1_MasterFsm 0CC8  
                                        ?_RN487X_DataReady 0070  
                                  __end_of_SPI2_Initialize 09E1  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 1678  
                                                __ptext101 1673  
                                                __ptext110 165F  
                                                __ptext102 166E  
                                                __ptext111 0D9E  
                                                __ptext103 1669  
                                                __ptext120 1615  
                                                __ptext112 1631  
                                                __ptext104 1664  
                                                __ptext121 0B19  
                                                __ptext113 1696  
                                                __ptext105 170E  
                                                __ptext130 091B  
                                                __ptext122 09B5  
                                                __ptext114 165A  
                                                __ptext106 0771  
                                                __ptext131 17AC  
                                                __ptext123 099F  
                                                __ptext115 1652  
                                                __ptext107 04C4  
                                                __ptext140 1619  
                                                __ptext132 0E64  
                                                __ptext124 0989  
                                                __ptext116 162E  
                                                __ptext108 1715  
                                                __ptext133 17F1  
                                                __ptext125 0AFB  
                                                __ptext117 164E  
                                                __ptext109 1725  
                                                __ptext150 0F86  
                                                __ptext142 17E2  
                                                __ptext134 1628  
                                                __ptext126 0973  
                                                __ptext118 162B  
                                                __ptext151 1646  
                                                __ptext143 1614  
                                                __ptext135 1625  
                                                __ptext127 095D  
                                                __ptext119 1617  
                                                __ptext160 08F0  
                                                __ptext152 1612  
                                                __ptext144 083C  
                                                __ptext136 1622  
                                                __ptext128 0947  
                                                __ptext153 1642  
                                                __ptext145 17D3  
                                                __ptext137 09F7  
                                                __ptext129 0931  
                                                __ptext154 0905  
                                                __ptext146 164A  
                                                __ptext138 161F  
                                                __ptext155 0ADD  
                                                __ptext147 082B  
                                                __ptext139 161C  
                                                __ptext156 0F49  
                                                __ptext148 1613  
                                                __ptext157 163E  
                                                __ptext149 0B37  
                                                __ptext158 1611  
                                                __ptext159 163A  
                             ??_LIGHTBLUE_GetErrorLedValue 0070  
                              _i2c1_driver_busCollisionISR 00C2  
                                 _LIGHTBLUE_GetButtonValue 16AE  
                        _EUSART2_TxDefaultInterruptHandler 00D0  
                                       ??_RN487X_DataReady 007E  
                       LIGHTBLUE_SendProtocolVersion@value 0033  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0070  
                                  _I2C1_MasterWaitForEvent 169C  
                                         _I2C1_MasterClose 161C  
                                           _I2C1_SetBuffer 17F1  
                             ??_INTERRUPT_InterruptManager 0070  
                                           _sequenceNumber 006A  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1622  
                                                _connected 005F  
                                         _I2C1_MasterWrite 168C  
                                    _LIGHTBLUE_AccelSensor 0E30  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_wr1RegCompleteHandler@strncmp$F4631 0079  
                     ?_rd2RegCompleteHandler@strncmp$F4640 0079  
                    ??_wr1RegCompleteHandler@strncmp$F4633 007B  
                    ??_rd2RegCompleteHandler@strncmp$F4642 007B  
                  ??_rdBlkRegCompleteHandler@strncmp$F4651 007B  
                     ?_wr2RegCompleteHandler@strncmp$F4643 0079  
                    ??_wr2RegCompleteHandler@strncmp$F4645 007B  
                     ?_rd1RegCompleteHandler@strncmp$F4637 0079  
                    ??_rd1RegCompleteHandler@strncmp$F4639 007B  
                   ?_rdBlkRegCompleteHandler@strncmp$F4649 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1642  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 163E  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015A  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                       __end_of_IOCAF7_SetInterruptHandler 16FC  
                               _IOCAF7_SetInterruptHandler 16F6  
                                  _EUSART1_SetErrorHandler 16B4  
                              __end_of_LIGHTBLUE_SplitByte 0D71  
                         __end_of_I2C1_CallbackReturnReset 1619  
                              __end_of_LIGHTBLUE_SplitWord 081C  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 007B  
                                   ??_LIGHTBLUE_SendPacket 0077  
                                       _EUSART1_is_tx_done 1656  
                                  ??_rd1RegCompleteHandler 007B  
                                                 ?_strncmp 0070  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0070  
                                  ??_wr1RegCompleteHandler 007B  
                     LIGHTBLUE_SendProtocolVersion@payload 0020  
                                        ??_TMR0_Initialize 0072  
                                         _I2C1_SetCallback 0E64  
                                        _RN487X_is_tx_done 174A  
                                   i2c_read1ByteRegister@e 0025  
                                                 _LATAbits 0018  
                  EUSART2_SetErrorHandler@interruptHandler 0070  
                  EUSART1_SetErrorHandler@interruptHandler 0070  
                                   i2c_read1ByteRegister@x 0026  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0771  
                                               _I2C1_DO_TX 04C4  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1702  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 0069  
                                               _I2C1_Close 09F7  
                    __end_of_LIGHTBLUE_SendProtocolVersion 0DFE  
                            _LIGHTBLUE_SendProtocolVersion 0DCD  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 0CF1  
                             __end_of_I2C1_MasterGetRxData 1631  
                               ??_TMR0_SetInterruptHandler 0072  
                                                 _PIR0bits 070C  
                                                 _PIR3bits 070F  
                                   ?_EUSART1_RxDataHandler 0070  
                                       _I2C1_MasterSendAck 1652  
                                 ?_BMA253_NewAccelDataRdyX 0070  
                           DELAY_milliseconds@milliseconds 0070  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 0B9A  
                        ??_rn487x_PrintIndicatorCharacters 0071  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 0B77  
                                _I2C1_DO_SEND_RESTART_READ 1664  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                                 _SSP2CON1 019A  
                                                 _SSP2CON2 019B  
                                                 _TMR0_ISR 17E2  
                                   __end_of_I2C1_SetBuffer 1800  
                                                 _SSP1STAT 018F  
                                                 _SSP2STAT 0199  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0070  
                                    ??_RN487X_EnterCmdMode 0079  
                     __end_of_I2C1_SetDataCompleteCallback 17B9  
                             _I2C1_SetDataCompleteCallback 17AC  
                                       _I2C1_MasterStartRx 162B  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                   __end_of_service_acceleremoterInterrupt 09F7  
                           _service_acceleremoterInterrupt 09E1  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0040  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0075  
               rn487x_PrintIndicatorCharacters@messageType 0071  
                                     ??_EUSART1_is_tx_done 0070  
                                              _RN487X_Init 040F  
                                              _RN487X_Read 07F4  
                             __end_of_RN487X_SetSystemMode 17AC  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 0D45  
                                   ??_LIGHTBLUE_PushButton 007A  
                                       _RN487X_IsConnected 1634  
                            __end_of_i2c_read1ByteRegister 05B9  
                                  ?_BMA253_GetAccelDataXYZ 002F  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 171D  
                            ??_EUSART2_DefaultErrorHandler 0070  
                                            _I2C1_DO_RESET 1687  
                                              _asyncBuffer 0065  
                                    I2C1_Close@returnValue 0070  
                                 ?_rdBlkRegCompleteHandler 0079  
                                __end_of_RN487X_is_tx_done 1754  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0072  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 007A  
                                  _EUSART2_SetErrorHandler 16D2  
                                     ??_I2C1_MasterSendAck 0070  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0067  
                                    EUSART1_Read@readValue 0070  
                                   ?_rd2RegCompleteHandler 0079  
                              _EUSART2_OverrunErrorHandler 0156  
                                      _do_I2C_DO_NACK_STOP 0000  
                             __end_of_I2C1_MasterOperation 0B77  
                               ??_rn487x_PrintMessageStart 0071  
                          __end_of_LIGHTBLUE_PerformAction 0ED4  
                                 ?_MCP9844_CalcTemperature 002D  
                                   ?_wr2RegCompleteHandler 0079  
                                     ??_I2C1_MasterStartRx 0070  
                       LIGHTBLUE_SendSerialData@serialData 0076  
                    __end_of_EUSART1_SetTxInterruptHandler 16D2  
                            _EUSART1_SetTxInterruptHandler 16CC  
                                    _LIGHTBLUE_GetAccState 1637  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 16EA  
                            _EUSART2_SetRxInterruptHandler 16E4  
                      LIGHTBLUE_ParseIncomingPacket@length 0068  
       rd1RegCompleteHandler@i2c1_master_example$F1056@ptr 0079  
       wr1RegCompleteHandler@i2c1_master_example$F1073@ptr 0079  
     rdBlkRegCompleteHandler@i2c1_master_example$F1090@ptr 0079  
       rd2RegCompleteHandler@i2c1_master_example$F1067@ptr 0079  
       wr2RegCompleteHandler@i2c1_master_example$F1079@ptr 0079  
                                ??_I2C1_MasterWaitForEvent 0070  
                             RN487X_SetOutputs@ioLowNibble 0020  
                              __end_of_rn487x_PrintMessage 0E30  
                                    _I2C1_MasterDisableIrq 161F  
                                         ?_SPI2_Initialize 0070  
                                  ??_OSCILLATOR_Initialize 0070  
                                          ?_I2C1_SetBuffer 0070  
                                     ??_RN487X_IsConnected 0070  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0070  
                                ??_EUSART1_SetErrorHandler 0072  
                      __end_of_EUSART1_DefaultErrorHandler 163E  
                              _EUSART1_DefaultErrorHandler 163A  
                                  RN487X_SetOutputs@bitMap 0079  
                              __end_of_EUSART1_is_rx_ready 1737  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0771  
                                     _EUSART2_ErrorHandler 0154  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0039  
                            __end_of_i2c_read2ByteRegister 072B  
                                                 __ptext10 16F6  
                                                 __ptext11 16F0  
                                                 __ptext20 0FC3  
                                                 __ptext12 175E  
                                                 __ptext21 16CC  
                                                 __ptext13 1737  
                                                 __ptext30 0651  
                                                 __ptext22 16C6  
                                                 __ptext14 07B7  
                                                 __ptext31 0519  
                                                 __ptext23 16C0  
                                                 __ptext15 16EA  
                                                 __ptext40 1754  
                                                 __ptext32 0A3F  
                                                 __ptext24 16BA  
                                                 __ptext16 16E4  
                                                 __ptext41 172E  
                                                 __ptext33 0D71  
                                                 __ptext25 16B4  
                                                 __ptext17 16DE  
                                                 __ptext50 0DCD  
                                                 __ptext42 17A0  
                                                 __ptext34 05B9  
                                                 __ptext26 07F4  
                                                 __ptext18 16D8  
                                                 __ptext51 08A3  
                                                 __ptext43 177D  
                                                 __ptext35 0DFE  
                                                 __ptext27 0AC1  
                                                 __ptext19 16D2  
                                                 __ptext60 0A0F  
                                                 __ptext52 16AE  
                                                 __ptext44 1772  
                                                 __ptext36 08B6  
                                                 __ptext28 0607  
                                                 __ptext61 0CF1  
                                                 __ptext53 00CB  
                                                 __ptext45 0A27  
                                                 __ptext37 0B77  
                                                 __ptext29 0ED4  
                                                 __ptext70 1691  
                                                 __ptext62 174A  
                                                 __ptext54 0E9C  
                                                 __ptext46 1794  
                                                 __ptext38 1634  
                                                 __ptext71 16A8  
                                                 __ptext63 1656  
                                                 __ptext55 081C  
                                                 __ptext47 0C08  
                                                 __ptext39 040F  
                                                 __ptext80 072B  
                                                 __ptext72 16A2  
                                                 __ptext64 0BE3  
                                                 __ptext56 0AA5  
                                                 __ptext48 06E3  
                                                 __ptext81 0CA1  
                                                 __ptext73 0E30  
                                                 __ptext65 1740  
                                                 __ptext57 069A  
                                                 __ptext49 025B  
                                                 __ptext90 17C6  
                                                 __ptext82 086F  
                                                 __ptext74 080D  
                                                 __ptext66 0B9A  
                                                 __ptext58 02FF  
                                                 __ptext91 168C  
                                                 __ptext83 0C7A  
                                                 __ptext75 0D45  
                                                 __ptext67 171D  
                                                 __ptext59 0A89  
                                                 __ptext92 0B56  
                                                 __ptext84 085E  
                                                 __ptext76 0387  
                                                 __ptext68 0891  
                                                 __ptext93 17B9  
                                                 __ptext85 0C53  
                                                 __ptext77 0A57  
                                                 __ptext69 0C2D  
                                                 __ptext94 169C  
                                                 __ptext86 084D  
                                                 __ptext78 1788  
                                                 __ptext95 0CC8  
                                                 __ptext87 0569  
                                                 __ptext79 0BBE  
                                                 __ptext96 0D1A  
                                                 __ptext88 0800  
                                                 __ptext97 1687  
                                                 __ptext89 0F0E  
                                                 __ptext98 1682  
                                                 __ptext99 167D  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                             _SSP2CON1bits 019A  
                                               _IOCAF6_ISR 082B  
                                               _IOCAF7_ISR 17D3  
                                               strcpy@dest 0070  
                                 _I2C1_CallbackReturnReset 1617  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1613  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1612  
                          __end_of_BMA253_NewAccelDataRdyX 085E  
                          __end_of_BMA253_NewAccelDataRdyY 086F  
                          __end_of_BMA253_NewAccelDataRdyZ 0880  
                                          _lightBlueSerial 0420  
                     __end_of_TMR0_DefaultInterruptHandler 1615  
                             _TMR0_DefaultInterruptHandler 1614  
                              __end_of_I2C1_MasterClearIrq 161C  
                             __end_of_I2C1_DO_RX_NACK_STOP 1682  
                                              ?_I2C1_Close 0070  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0070  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1696  
                               _LIGHTBLUE_GetErrorLedValue 1691  
                                                 int$flags 007E  
                             RN487X_GetInputsValues@F13149 006D  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1687  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0061  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 0905  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 007D  
                            __end_of_I2C1_DO_SEND_ADR_READ 172E  
                              _EUSART1_FramingErrorHandler 015E  
                                             _I2C1_DO_IDLE 165F  
                                      _EUSART1_Receive_ISR 0F49  
                                             _I2C1_DO_RCEN 170E  
                                    LIGHTBLUE_LedState@led 007D  
                              __end_of_I2C1_MasterSendNack 1652  
                         ??_EUSART2_SetOverrunErrorHandler 0072  
                          ?_EUSART2_SetOverrunErrorHandler 0070  
                                               _INTCONbits 000B  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0071  
                                           __pstringtext10 182D  
                                           __pstringtext11 1800  
                                           __pstringtext12 1817  
                                           __pstringtext13 1822  
                                           __pstringtext14 0000  
                                     _I2C1_MasterGetRxData 162E  
                                    _I2C1_MasterSendTxData 165A  
                            __end_of_RN487X_MessageHandler 0F0E  
                                ??_EUSART2_SetErrorHandler 0072  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                          __end_of_MCP9844_CalcTemperature 0C2D  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 007D  
                                       RN487X_Write@txData 0075  
                                 __end_of_I2C1_MasterClose 161F  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0079  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1625  
                                ?_LIGHTBLUE_SendSerialData 0076  
                                 __end_of_I2C1_MasterWrite 1691  
                                   RN487X_RebootCmd@reboot 180C  
                   __end_of_EUSART1_SetOverrunErrorHandler 16C6  
                           _EUSART1_SetOverrunErrorHandler 16C0  
                                   ?_LIGHTBLUE_GetAccState 0070  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0070  
                               ??_LIGHTBLUE_GetButtonValue 0070  
                                  _I2C1_CallbackReturnStop 1615  
                             __end_of_EUSART1_Transmit_ISR 0AFB  
                          ??_LIGHTBLUE_ParseIncomingPacket 0027  
                                              _serialIndex 005C  
                                     _RN487X_SetSystemMode 17A0  
                            ?_TMR0_DefaultInterruptHandler 0070  
                                     _I2C1_DO_ADDRESS_NACK 0D1A  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                                   wr2RegCompleteHandler@p 0079  
           EUSART2_SetFramingErrorHandler@interruptHandler 0070  
           EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                           ?_EUSART1_SetTxInterruptHandler 0070  
                                 RN487X_SetSystemMode@mode 0070  
                           ?_EUSART2_SetRxInterruptHandler 0070  
                        LIGHTBLUE_ParseIncomingPacket@data 0048  
                                       _eusart1RxLastError 0054  
                           RN487X_ReadDefaultResponse@resp 0071  
                                            __pstringtext1 1000  
                                            __pstringtext2 1028  
                                            __pstringtext3 1048  
                                            __pstringtext4 1068  
                                            __pstringtext5 1832  
                                            __pstringtext6 1836  
                                            __pstringtext7 1838  
                                            __pstringtext8 180C  
                                            __pstringtext9 1828  
                                      _EUSART2_Receive_ISR 0F86  
                          LIGHTBLUE_SetErrorLedValue@value 007C  
                                 __end_of_I2C1_SetCallback 0E9C  
                                               _SSP1DATPPS 1EC6  
                                               _SSP2DATPPS 1EC9  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0070  
                                               _SSP2CLKPPS 1EC8  
                   __end_of_IOCAF6_DefaultInterruptHandler 1614  
                           _IOCAF6_DefaultInterruptHandler 1613  
                                     _I2C1_MasterOperation 0B56  
                                          _TMR0_Initialize 08DC  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0070  
                                                 strncmp@n 0073  
                                                 strncmp@r 0071  
                        _LIGHTBLUE_ParseIncomingPacket$377 0029  
                        _LIGHTBLUE_ParseIncomingPacket$378 002B  
                        _LIGHTBLUE_ParseIncomingPacket$379 002D  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                              ?_IOCAF7_SetInterruptHandler 0070  
                                                 strstr@nl 007B  
                                               _TX1STAbits 011E  
                                RN487X_ReadMsg@expectedMsg 0071  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                              ?_IOCAF7_ISR 0070  
                                    ??_EUSART1_Receive_ISR 0070  
                           __end_of_PIN_MANAGER_Initialize 04C4  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0072  
                            __end_of_rd1RegCompleteHandler 095D  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 004D  
                                      RN487X_SendCmd@index 0078  
                         __end_of_rn487x_PrintMessageStart 0D9E  
                                          _PIN_MANAGER_IOC 083C  
                         RN487X_ReadDefaultResponse@status 0074  
                             ??_RN487X_ReadDefaultResponse 0071  
                            __end_of_wr1RegCompleteHandler 0947  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 0AC1  
                                    ?_RN487X_SetSystemMode 0070  
                        _EUSART2_RxDefaultInterruptHandler 00CE  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 0078  
                                   RN487X_IndicateRx@value 0070  
